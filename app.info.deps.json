{ "name": "insights-advisor-frontend", "version": "0.2.0", "problems": [ "peer dep missing: stylelint@^8.3.0 || ^9.0.0, required by stylelint-config-recommended-scss@3.2.0", "peer dep missing: stylelint@^8.0.0 || ^9.0.0, required by stylelint-scss@3.5.4" ], "dependencies": { "@babel/core": { "version": "7.4.3", "from": "@babel/core@7.4.3", "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.4.3.tgz" }, "@babel/plugin-proposal-class-properties": { "version": "7.4.0", "from": "@babel/plugin-proposal-class-properties@7.4.0", "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.4.0.tgz" }, "@babel/plugin-proposal-decorators": { "version": "7.4.0", "from": "@babel/plugin-proposal-decorators@7.4.0", "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.4.0.tgz" }, "@babel/plugin-proposal-object-rest-spread": { "version": "7.4.3", "from": "@babel/plugin-proposal-object-rest-spread@7.4.3", "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.4.3.tgz" }, "@babel/plugin-syntax-dynamic-import": { "version": "7.2.0", "from": "@babel/plugin-syntax-dynamic-import@7.2.0", "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.2.0.tgz" }, "@babel/plugin-transform-async-to-generator": { "version": "7.4.0", "from": "@babel/plugin-transform-async-to-generator@7.4.0", "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.4.0.tgz" }, "@babel/plugin-transform-runtime": { "version": "7.4.3", "from": "@babel/plugin-transform-runtime@7.4.3", "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.4.3.tgz" }, "@babel/preset-env": { "version": "7.4.3", "from": "@babel/preset-env@7.4.3", "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.4.3.tgz" }, "@babel/preset-flow": { "version": "7.0.0", "from": "@babel/preset-flow@7.0.0", "resolved": "https://registry.npmjs.org/@babel/preset-flow/-/preset-flow-7.0.0.tgz" }, "@babel/preset-react": { "version": "7.0.0", "from": "@babel/preset-react@7.0.0", "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.0.0.tgz" }, "@babel/runtime": { "version": "7.4.3", "from": "@babel/runtime@7.4.3", "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.4.3.tgz" }, "@patternfly/patternfly": { "version": "2.3.1", "from": "@patternfly/patternfly@2.3.1", "resolved": "https://registry.npmjs.org/@patternfly/patternfly/-/patternfly-2.3.1.tgz" }, "@patternfly/react-charts": { "version": "3.0.2", "from": "@patternfly/react-charts@3.0.2", "resolved": "https://registry.npmjs.org/@patternfly/react-charts/-/react-charts-3.0.2.tgz" }, "@patternfly/react-core": { "version": "3.1.3", "from": "@patternfly/react-core@3.1.3", "resolved": "https://registry.npmjs.org/@patternfly/react-core/-/react-core-3.1.3.tgz" }, "@patternfly/react-icons": { "version": "3.7.3", "from": "@patternfly/react-icons@3.7.3", "resolved": "https://registry.npmjs.org/@patternfly/react-icons/-/react-icons-3.7.3.tgz" }, "@patternfly/react-table": { "version": "1.4.10", "from": "@patternfly/react-table@1.4.10", "resolved": "https://registry.npmjs.org/@patternfly/react-table/-/react-table-1.4.10.tgz" }, "@patternfly/react-tokens": { "version": "2.3.2", "from": "@patternfly/react-tokens@2.3.2", "resolved": "https://registry.npmjs.org/@patternfly/react-tokens/-/react-tokens-2.3.2.tgz" }, "@red-hat-insights/insights-frontend-components": { "version": "3.41.22", "from": "@red-hat-insights/insights-frontend-components@3.41.22", "resolved": "https://registry.npmjs.org/@red-hat-insights/insights-frontend-components/-/insights-frontend-components-3.41.22.tgz" }, "acorn": { "version": "6.1.1", "from": "acorn@6.1.1", "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.1.1.tgz" }, "axios": { "version": "0.18.0", "from": "axios@0.18.0", "resolved": "https://registry.npmjs.org/axios/-/axios-0.18.0.tgz" }, "babel-core": { "version": "7.0.0-bridge.0", "from": "babel-core@7.0.0-bridge.0", "resolved": "https://registry.npmjs.org/babel-core/-/babel-core-7.0.0-bridge.0.tgz" }, "babel-eslint": { "version": "10.0.1", "from": "babel-eslint@10.0.1", "resolved": "https://registry.npmjs.org/babel-eslint/-/babel-eslint-10.0.1.tgz" }, "babel-jest": { "version": "24.7.1", "from": "babel-jest@24.7.1", "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-24.7.1.tgz" }, "babel-loader": { "version": "8.0.5", "from": "babel-loader@8.0.5", "resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-8.0.5.tgz" }, "babel-plugin-dual-import": { "version": "1.2.1", "from": "babel-plugin-dual-import@1.2.1", "resolved": "https://registry.npmjs.org/babel-plugin-dual-import/-/babel-plugin-dual-import-1.2.1.tgz" }, "babel-plugin-lodash": { "version": "3.3.4", "from": "babel-plugin-lodash@3.3.4", "resolved": "https://registry.npmjs.org/babel-plugin-lodash/-/babel-plugin-lodash-3.3.4.tgz" }, "classnames": { "version": "2.2.6", "from": "classnames@2.2.6", "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.2.6.tgz" }, "clean-webpack-plugin": { "version": "2.0.1", "from": "clean-webpack-plugin@2.0.1", "resolved": "https://registry.npmjs.org/clean-webpack-plugin/-/clean-webpack-plugin-2.0.1.tgz" }, "copy-webpack-plugin": { "version": "5.0.2", "from": "copy-webpack-plugin@5.0.2", "resolved": "https://registry.npmjs.org/copy-webpack-plugin/-/copy-webpack-plugin-5.0.2.tgz" }, "create-react-class": { "version": "15.6.3", "from": "create-react-class@15.6.3", "resolved": "https://registry.npmjs.org/create-react-class/-/create-react-class-15.6.3.tgz" }, "cross-fetch": { "version": "3.0.2", "from": "cross-fetch@3.0.2", "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.0.2.tgz" }, "css-loader": { "version": "2.1.1", "from": "css-loader@2.1.1", "resolved": "https://registry.npmjs.org/css-loader/-/css-loader-2.1.1.tgz" }, "d3": { "version": "5.9.2", "from": "d3@5.9.2", "resolved": "https://registry.npmjs.org/d3/-/d3-5.9.2.tgz" }, "enzyme": { "version": "3.9.0", "from": "enzyme@3.9.0", "resolved": "https://registry.npmjs.org/enzyme/-/enzyme-3.9.0.tgz" }, "enzyme-adapter-react-16": { "version": "1.12.1", "from": "enzyme-adapter-react-16@1.12.1", "resolved": "https://registry.npmjs.org/enzyme-adapter-react-16/-/enzyme-adapter-react-16-1.12.1.tgz" }, "enzyme-to-json": { "version": "3.3.5", "from": "enzyme-to-json@3.3.5", "resolved": "https://registry.npmjs.org/enzyme-to-json/-/enzyme-to-json-3.3.5.tgz" }, "eslint": { "version": "5.16.0", "from": "eslint@5.16.0", "resolved": "https://registry.npmjs.org/eslint/-/eslint-5.16.0.tgz" }, "eslint-config-prettier": { "version": "4.1.0", "from": "eslint-config-prettier@4.1.0", "resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-4.1.0.tgz" }, "eslint-loader": { "version": "2.1.2", "from": "eslint-loader@2.1.2", "resolved": "https://registry.npmjs.org/eslint-loader/-/eslint-loader-2.1.2.tgz" }, "eslint-plugin-react": { "version": "7.12.4", "from": "eslint-plugin-react@7.12.4", "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.12.4.tgz" }, "file-loader": { "version": "3.0.1", "from": "file-loader@3.0.1", "resolved": "https://registry.npmjs.org/file-loader/-/file-loader-3.0.1.tgz" }, "git-revision-webpack-plugin": { "version": "3.0.3", "from": "git-revision-webpack-plugin@3.0.3", "resolved": "https://registry.npmjs.org/git-revision-webpack-plugin/-/git-revision-webpack-plugin-3.0.3.tgz" }, "glob": { "version": "7.1.3", "from": "glob@7.1.3", "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz" }, "html-replace-webpack-plugin": { "version": "2.5.5", "from": "html-replace-webpack-plugin@2.5.5", "resolved": "https://registry.npmjs.org/html-replace-webpack-plugin/-/html-replace-webpack-plugin-2.5.5.tgz" }, "html-webpack-plugin": { "version": "3.2.0", "from": "html-webpack-plugin@3.2.0", "resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-3.2.0.tgz" }, "identity-obj-proxy": { "version": "3.0.0", "from": "identity-obj-proxy@3.0.0", "resolved": "https://registry.npmjs.org/identity-obj-proxy/-/identity-obj-proxy-3.0.0.tgz" }, "jest": { "version": "24.7.1", "from": "jest@24.7.1", "resolved": "https://registry.npmjs.org/jest/-/jest-24.7.1.tgz" }, "lodash": { "version": "4.17.11", "from": "lodash@4.17.11", "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz" }, "lodash-webpack-plugin": { "version": "0.11.5", "from": "lodash-webpack-plugin@0.11.5", "resolved": "https://registry.npmjs.org/lodash-webpack-plugin/-/lodash-webpack-plugin-0.11.5.tgz" }, "material-ui": { "version": "0.20.2", "from": "material-ui@0.20.2", "resolved": "https://registry.npmjs.org/material-ui/-/material-ui-0.20.2.tgz" }, "mini-css-extract-plugin": { "version": "0.6.0", "from": "mini-css-extract-plugin@0.6.0", "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.6.0.tgz" }, "moment": { "version": "2.24.0", "from": "moment@2.24.0", "resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz" }, "node-sass": { "version": "4.11.0", "from": "node-sass@4.11.0", "resolved": "https://registry.npmjs.org/node-sass/-/node-sass-4.11.0.tgz" }, "npm-run-all": { "version": "4.1.5", "from": "npm-run-all@4.1.5", "resolved": "https://registry.npmjs.org/npm-run-all/-/npm-run-all-4.1.5.tgz" }, "prop-types": { "version": "15.7.2", "from": "prop-types@15.7.2", "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.7.2.tgz" }, "react": { "version": "16.8.6", "from": "react@16.8.6", "resolved": "https://registry.npmjs.org/react/-/react-16.8.6.tgz" }, "react-content-loader": { "version": "4.2.1", "from": "react-content-loader@4.2.1", "resolved": "https://registry.npmjs.org/react-content-loader/-/react-content-loader-4.2.1.tgz" }, "react-dom": { "version": "16.8.6", "from": "react-dom@16.8.6", "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-16.8.6.tgz" }, "react-markdown": { "version": "4.0.8", "from": "react-markdown@4.0.8", "resolved": "https://registry.npmjs.org/react-markdown/-/react-markdown-4.0.8.tgz" }, "react-redux": { "version": "5.1.0", "from": "react-redux@5.1.0", "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-5.1.0.tgz" }, "react-router-dom": { "version": "4.3.1", "from": "react-router-dom@4.3.1", "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-4.3.1.tgz" }, "react-test-renderer": { "version": "16.8.6", "from": "react-test-renderer@16.8.6", "resolved": "https://registry.npmjs.org/react-test-renderer/-/react-test-renderer-16.8.6.tgz" }, "react-timeago": { "version": "4.4.0", "from": "react-timeago@4.4.0", "resolved": "https://registry.npmjs.org/react-timeago/-/react-timeago-4.4.0.tgz" }, "redux": { "version": "4.0.1", "from": "redux@4.0.1", "resolved": "https://registry.npmjs.org/redux/-/redux-4.0.1.tgz" }, "redux-logger": { "version": "3.0.6", "from": "redux-logger@3.0.6", "resolved": "https://registry.npmjs.org/redux-logger/-/redux-logger-3.0.6.tgz" }, "redux-promise-middleware": { "version": "6.1.0", "from": "redux-promise-middleware@6.1.0", "resolved": "https://registry.npmjs.org/redux-promise-middleware/-/redux-promise-middleware-6.1.0.tgz" }, "regenerator-runtime": { "version": "0.13.2", "from": "regenerator-runtime@0.13.2", "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.2.tgz" }, "sass-loader": { "version": "7.1.0", "from": "sass-loader@7.1.0", "resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-7.1.0.tgz" }, "seamless-immutable": { "version": "7.1.4", "from": "seamless-immutable@7.1.4", "resolved": "https://registry.npmjs.org/seamless-immutable/-/seamless-immutable-7.1.4.tgz" }, "source-map-loader": { "version": "0.2.4", "from": "source-map-loader@0.2.4", "resolved": "https://registry.npmjs.org/source-map-loader/-/source-map-loader-0.2.4.tgz" }, "style-loader": { "version": "0.23.1", "from": "style-loader@0.23.1", "resolved": "https://registry.npmjs.org/style-loader/-/style-loader-0.23.1.tgz" }, "stylelint": { "required": { "name": "stylelint", "version": "10.0.1", "description": "A mighty, modern CSS linter.", "keywords": [ "css", "less", "sass", "scss", "sugarss", "lint", "linter", "stylelint" ], "authors": [ "David Clark", "Maxime Thirouin", "Richard Hallows" ], "license": "MIT", "homepage": "https://stylelint.io", "repository": { "type": "git", "url": "git+https://github.com/stylelint/stylelint.git" }, "main": "lib/index.js", "bin": { "stylelint": "bin/stylelint.js" }, "files": [ "bin", "CONTRIBUTING.md", "docs", "lib", "VISION.md", "!**/__tests__", "flow-typed", "!flow-typed/npm" ], "engines": { "node": ">=8.7.0" }, "dependencies": { "autoprefixer": { "name": "autoprefixer", "version": "9.5.1", "description": "Parse CSS and add vendor prefixes to CSS rules using values from the Can I Use website", "keywords": [ "autoprefixer", "css", "prefix", "postcss", "postcss-plugin" ], "author": { "name": "Andrey Sitnik", "email": "andrey@sitnik.ru" }, "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/postcss/autoprefixer.git" }, "engines": { "node": ">=6.0.0" }, "dependencies": { "browserslist": { "name": "browserslist", "version": "4.5.4", "description": "Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-env-preset", "keywords": [ "caniuse", "browsers", "target" ], "author": { "name": "Andrey Sitnik", "email": "andrey@sitnik.ru" }, "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/browserslist/browserslist.git" }, "dependencies": {}, "bin": { "browserslist": "./cli.js" }, "browser": { "./node.js": "./browser.js", "path": false }, "_resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.5.4.tgz", "_integrity": "sha512-rAjx494LMjqKnMPhFkuLmLp8JWEX0o8ADTGeAbOqaF+XCvYLreZrG5uVjnPBlAQ8REZK4pzXGvp0bWgrFtKaag==", "_from": "browserslist@4.5.4", "readme": "# Browserslist [![Cult Of Martians][cult-img]][cult]\n\n<img width=\"120\" height=\"120\" alt=\"Browserslist logo by Anton Lovchikov\"\n src=\"https://browserslist.github.io/browserslist/logo.svg\" align=\"right\">\n\nThe config to share target browsers and Node.js versions between different\nfront-end tools. It is used in:\n\n* index.html [Babel]\n* [postcss-preset-env]\n* index.html index.html index.html [obsolete-webpack-plugin]\n\n[Browserslist Example] shows how every tool uses Browserslist.\nAll tools will find target browsers automatically,\nwhen you add the following to `package.json`:\n\n```json\n{\n \"browserslist\": [\n \"last 1 version\",\n \"> 1%\",\n \"maintained node versions\",\n \"not dead\"\n ]\n}\n```\n\nOr in `.browserslistrc` config:\n\n```yaml\n# Browsers that we support\n\nlast 1 version\n> 1%\nmaintained node versions\nnot dead\n```\n\nDevelopers set versions list in queries like `last 2 version`\nto be free from updating versions manually.\nBrowserslist will use [Can I Use] data for this queries.\n\nBrowserslist will take queries from tool option,\n`browserslist` config, `.browserslistrc` config,\n`browserslist` section in `package.json` or environment variables.\n\nYou can test Browserslist queries in [online demo].\n\n[cult-img]: https://cultofmartians.com/assets/badges/badge.svg\n[cult]: https://cultofmartians.com/done.html\n\n<a href=\"https://evilmartians.com/?utm_source=browserslist\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[stylelint-no-unsupported-browser-features]: https://github.com/ismay/stylelint-no-unsupported-browser-features\n[eslint-plugin-compat]: https://github.com/amilajack/eslint-plugin-compat\n[Browserslist Example]: https://github.com/browserslist/browserslist-example\n[postcss-preset-env]: https://github.com/jonathantneal/postcss-preset-env\n[postcss-normalize]: https://github.com/jonathantneal/postcss-normalize\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[online demo]: https://browserl.ist/\n[Can I Use]: https://caniuse.com/\n[Babel]: https://github.com/babel/babel/tree/master/packages/babel-preset-env\n[obsolete-webpack-plugin]: https://github.com/ElemeFE/obsolete-webpack-plugin\n\n## Tools\n\n* [`browserslist-ga`] downloads your website browsers statistics\n to use it in `> 0.5% in my stats` query.\n* [`browserslist-useragent`] checks browser by user agent string\n to match Browserslist target browsers query.\n* [`browserslist-useragent-ruby`] is a Ruby library to checks browser\n by user agent string to match Browserslist.\n* [`browserslist-useragent-regexp`] compiles Browserslist query to a RegExp\n to test browser useragent.\n* [`browserslist-browserstack`] runs BrowserStack tests for all browsers in Browserslist config.\n* [`caniuse-api`] returns browsers which support some specific feature.\n* Run `npx browserslist` in your project directory to see project’s\n target browsers. This CLI tool is built-in and available in any project\n with Autoprefixer.\n\n[`browserslist-useragent-ruby`]: https://github.com/browserslist/browserslist-useragent-ruby\n[`browserslist-useragent`]: https://github.com/pastelsky/browserslist-useragent\n[`browserslist-useragent-regexp`]: https://github.com/browserslist/browserslist-useragent-regexp\n[`browserslist-ga`]: https://github.com/browserslist/browserslist-ga\n[`caniuse-api`]: https://github.com/Nyalab/caniuse-api\n[`browserslist-browserstack`]: https://github.com/xeroxinteractive/browserslist-browserstack\n\n\n## Queries\n\nBrowserslist will use browsers and Node.js versions query\nfrom one of this sources:\n\n1. `browserslist` key in `package.json` file in current or parent directories.\n **We recommend this way.**\n2. Tool options. For example `browsers` option in Autoprefixer.\n3. `BROWSERSLIST` environment variable.\n4. `browserslist` config file in current or parent directories.\n5. `.browserslistrc` config file in current or parent directories.\n6. If the above methods did not produce a valid result\n Browserslist will use defaults:\n `> 0.5%, last 2 versions, Firefox ESR, not dead`.\n\n\n### Query Composition\n\nAn `or` combiner can use the keyword `or` as well as `,`.\n`last 1 version or > 1%` is equal to `last 1 version, > 1%`.\n\n`and` query combinations are also supported to perform an\nintersection of the previous query: `last 1 version and > 1%`.\n\nThere is 3 different ways to combine queries as depicted below. First you start\nwith a single query and then we combine the queries to get our final list.\n\nObviously you can *not* start with a `not` combiner, since the is no left-hand\nside query to combine it with.\n\n| Query combiner type | Illustration | Example |\n| ------------------- | :----------: | ------- |\n|`or`/ `,` combiner <br> (union) | ![Union of queries](img/union.svg) | `'> .5% or last 2 versions'` <br> `'> .5%, last 2 versions'` |\n| `and` combiner <br> (intersection) | ![intersection of queries](img/intersection.svg) | `'> .5% and last 2 versions'` |\n| `not` combiner <br> (relative complement) | ![Relative complement of queries](img/complement.svg) | `'> .5% and not last 2 versions'` <br> `'> .5% or not last 2 versions'` <br> `'> .5%, not last 2 versions'` |\n\n_A quick way to test your query is to do `npx browserslist '> 0.5%, not IE 11'`\nin your terminal._\n\n\n### Best Practices\n\n* Select browsers directly (`last 2 Chrome versions`) only if you are making\n a web app for a kiosk with one browser. There are a lot of browsers\n on the market. If you are making general web app you should respect\n browsers diversity.\n* If you want to change the default set of browsers we recommend to combine\n `last 1 version`, `not dead` with `> 0.2%` (or `> 1% in US`,\n `> 1% in my stats`). `last n versions` adds too many dead browsers\n and does not add popular old versions. Choosing a percentage above `0.2%`\n will in the long run make popular browsers even more popular. We might run\n into a monopoly and stagnation situation, as we had with Internet Explorer 6.\n Please use this setting with caution.\n* Don’t remove browsers just because you don’t know them. Opera Mini has\n 100 million users in Africa and it is more popular in the global market\n than Microsoft Edge. Chinese QQ Browsers has more market share than Firefox\n and desktop Safari altogether.\n\n\n### Full List\n\nYou can specify the browser and Node.js versions by queries (case insensitive):\n\n* `> 5%`: browsers versions selected by global usage statistics.\n `>=`, `<` and `<=` work too.\n* `> 5% in US`: uses USA usage statistics. It accepts [two-letter country code].\n* `> 5% in alt-AS`: uses Asia region usage statistics. List of all region codes\n can be found at [`caniuse-lite/data/regions`].\n* `> 5% in my stats`: uses [custom usage data].\n* `cover 99.5%`: most popular browsers that provide coverage.\n* `cover 99.5% in US`: same as above, with [two-letter country code].\n* `cover 99.5% in my stats`: uses [custom usage data].\n* `maintained node versions`: all Node.js versions, which are [still maintained]\n by Node.js Foundation.\n* `node 10` and `node 10.4`: selects latest Node.js `10.x.x`\n or `10.4.x` release.\n* `current node`: Node.js version used by Browserslist right now.\n* `extends browserslist-config-mycompany`: take queries from\n `browserslist-config-mycompany` npm package.\n* `ie 6-8`: selects an inclusive range of versions.\n* `Firefox > 20`: versions of Firefox newer than 20.\n `>=`, `<` and `<=` work too. It also works with Node.js.\n* `iOS 7`: the iOS browser version 7 directly.\n* `Firefox ESR`: the latest [Firefox ESR] version.\n* `unreleased versions` or `unreleased Chrome versions`:\n alpha and beta versions.\n* `last 2 major versions` or `last 2 iOS major versions`:\n all minor/patch releases of last 2 major versions.\n* `since 2015` or `last 2 years`: all versions released since year 2015\n (also `since 2015-03` and `since 2015-03-10`).\n* `dead`: browsers from `last 2 version` query, but with less than 0.5%\n in global usage statistics and without official support or updates\n for 24 months. Right now it is `IE 10`, `IE_Mob 10`, `BlackBerry 10`,\n `BlackBerry 7`, and `OperaMobile 12.1`.\n* `last 2 versions`: the last 2 versions for *each* browser.\n* `last 2 Chrome versions`: the last 2 versions of Chrome browser.\n* `defaults`: Browserslist’s default browsers\n (`> 0.5%, last 2 versions, Firefox ESR, not dead`).\n* `not ie <= 8`: exclude browsers selected by previous queries.\n\nYou can add `not ` to any query.\n\n\n### Debug\n\nRun `npx browserslist` in project directory to see what browsers was selected\nby your queries.\n\n```sh\n$ npx browserslist\nand_chr 61\nand_ff 56\nand_qq 1.2\nand_uc 11.4\nandroid 56\nbaidu 7.12\nbb 10\nchrome 62\nedge 16\nfirefox 56\nios_saf 11\nopera 48\nsafari 11\nsamsung 5\n```\n\n\n### Notes\n\nBrowserslist works with separated versions of browsers.\nYou should avoid queries like `Firefox > 0`.\nThe list of the specified browsers acts as a white list which means other browsers are ignored.\n\nAll queries are based on the [Can I Use] support table,\ne.g. `last 3 iOS versions` might select `8.4, 9.2, 9.3` (mixed major and minor),\nwhereas `last 3 Chrome versions` might select `50, 49, 48` (major only).\n\n[`caniuse-lite/data/regions`]: https://github.com/ben-eb/caniuse-lite/tree/master/data/regions\n[two-letter country code]: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements\n[custom usage data]: #custom-usage-data\n[still maintained]: https://github.com/nodejs/Release\n[Can I Use]: https://caniuse.com/\n\n\n### Browsers\n\nNames are case insensitive:\n\n* `Android` for Android WebView.\n* `Baidu` for Baidu Browser.\n* `BlackBerry` or `bb` for Blackberry browser.\n* `Chrome` for Google Chrome.\n* `ChromeAndroid` or `and_chr` for Chrome for Android\n* `Edge` for Microsoft Edge.\n* `Electron` for Electron framework. It will be converted to Chrome version.\n* `Explorer` or `ie` for Internet Explorer.\n* `ExplorerMobile` or `ie_mob` for Internet Explorer Mobile.\n* `Firefox` or `ff` for Mozilla Firefox.\n* `FirefoxAndroid` or `and_ff` for Firefox for Android.\n* `iOS` or `ios_saf` for iOS Safari.\n* `Node` for Node.js.\n* `Opera` for Opera.\n* `OperaMini` or `op_mini` for Opera Mini.\n* `OperaMobile` or `op_mob` for Opera Mobile.\n* `QQAndroid` or `and_qq` for QQ Browser for Android.\n* `Safari` for desktop Safari.\n* `Samsung` for Samsung Internet.\n* `UCAndroid` or `and_uc` for UC Browser for Android.\n\n\n## `package.json`\n\nIf you want to reduce config files in project root, you can specify\nbrowsers in `package.json` with `browserslist` key:\n\n```json\n{\n \"private\": true,\n \"dependencies\": {\n \"autoprefixer\": \"^6.5.4\"\n },\n \"browserslist\": [\n \"last 1 version\",\n \"> 1%\",\n \"IE 10\"\n ]\n}\n```\n\n\n## Config File\n\nBrowserslist config should be named `.browserslistrc` or `browserslist`\nand have browsers queries split by a new line. Comments starts with `#` symbol:\n\n```yaml\n# Browsers that we support\n\nlast 1 version\n> 1%\nIE 10 # sorry\n```\n\nBrowserslist will check config in every directory in `path`.\nSo, if tool process `app/styles/main.css`, you can put config to root,\n`app/` or `app/styles`.\n\nYou can specify direct path in `BROWSERSLIST_CONFIG` environment variables.\n\n\n## Shareable Configs\n\nYou can use the following query to reference an exported Browserslist config\nfrom another package:\n\n```json\n \"browserslist\": [\n \"extends browserslist-config-mycompany\"\n ]\n```\n\nFor security reasons, external configuration only supports packages that have\nthe `browserslist-config-` prefix. npm scoped packages are also supported, by\nnaming or prefixing the module with `@scope/browserslist-config`, such as\n`@scope/browserslist-config` or `@scope/browserslist-config-mycompany`.\n\nIf you don’t accept Browserslist queries from users, you can disable the\nvalidation by using the `dangerousExtend` option:\n\n```js\nbrowserslist(queries, { path, dangerousExtend: true })\n```\n\nBecause this uses `npm`'s resolution, you can also reference specific files\nin a package:\n\n```json\n \"browserslist\": [\n \"extends browserslist-config-mycompany/desktop\",\n \"extends browserslist-config-mycompany/mobile\"\n ]\n```\n\nWhen writing a shared Browserslist package, just export an array.\n`browserslist-config-mycompany/index.js`:\n\n```js\nmodule.exports = [\n 'last 1 version',\n '> 1%',\n 'ie 10'\n]\n```\n\n\n## Environment Variables\n\nIf some tool use Browserslist inside, you can change browsers settings\nby [environment variables]:\n\n* `BROWSERSLIST` with browsers queries.\n\n ```sh\n BROWSERSLIST=\"> 5%\" gulp css\n ```\n\n* `BROWSERSLIST_CONFIG` with path to config file.\n\n ```sh\n BROWSERSLIST_CONFIG=./config/browserslist gulp css\n ```\n\n* `BROWSERSLIST_ENV` with environments string.\n\n ```sh\n BROWSERSLIST_ENV=\"development\" gulp css\n ```\n\n* `BROWSERSLIST_STATS` with path to the custom usage data\n for `> 1% in my stats` query.\n\n ```sh\n BROWSERSLIST_STATS=./config/usage_data.json gulp css\n ```\n\n* `BROWSERSLIST_DISABLE_CACHE` if you want to disable config reading cache.\n\n ```sh\n BROWSERSLIST_DISABLE_CACHE=1 gulp css\n ```\n\n[environment variables]: https://en.wikipedia.org/wiki/Environment_variable\n\n\n## Environments\n\nYou can also specify different browser queries for various environments.\nBrowserslist will choose query according to `BROWSERSLIST_ENV` or `NODE_ENV`\nvariables. If none of them is declared, Browserslist will firstly look\nfor `production` queries and then use defaults.\n\nIn `package.json`:\n\n```js\n \"browserslist\": {\n \"production\": [\n \"> 1%\",\n \"ie 10\"\n ],\n \"development\": [\n \"last 1 chrome version\",\n \"last 1 firefox version\"\n ]\n }\n```\n\nIn `.browserslistrc` config:\n\n```ini\n[production staging]\n> 1%\nie 10\n\n[development]\nlast 1 chrome version\nlast 1 firefox version\n```\n\n\n## Custom Usage Data\n\nIf you have a website, you can query against the usage statistics of your site.\n[`browserslist-ga`] will ask access to Google Analytics and then generate\n`browserslist-stats.json`:\n\n```\nnpx browserslist-ga\n```\n\nOf course, you can generate usage statistics file by any other method.\nFile format should be like:\n\n```js\n{\n \"ie\": {\n \"6\": 0.01,\n \"7\": 0.4,\n \"8\": 1.5\n },\n \"chrome\": {\n …\n },\n …\n}\n```\n\nNote that you can query against your custom usage data\nwhile also querying against global or regional data.\nFor example, the query `> 1% in my stats, > 5% in US, 10%` is permitted.\n\n[`browserslist-ga`]: https://github.com/browserslist/browserslist-ga\n[Can I Use]: https://caniuse.com/\n\n\n## JS API\n\n```js\nvar browserslist = require('browserslist');\n\n// Your CSS/JS build tool code\nvar process = function (source, opts) {\n var browsers = browserslist(opts.browsers, {\n stats: opts.stats,\n path: opts.file,\n env: opts.env\n });\n // Your code to add features for selected browsers\n}\n```\n\nQueries can be a string `\"> 1%, IE 10\"`\nor an array `['> 1%', 'IE 10']`.\n\nIf a query is missing, Browserslist will look for a config file.\nYou can provide a `path` option (that can be a file) to find the config file\nrelatively to it.\n\nOptions:\n\n* `path`: file or a directory path to look for config file. Default is `.`.\n* `env`: what environment section use from config. Default is `production`.\n* `stats`: custom usage statistics data.\n* `config`: path to config if you want to set it manually.\n* `ignoreUnknownVersions`: do not throw on direct query (like `ie 12`).\n Default is `false.`\n* `dangerousExtend`: Disable security checks for `extend` query.\n Default is `false.`\n\nFor non-JS environment and debug purpose you can use CLI tool:\n\n```sh\nbrowserslist \"> 1%, IE 10\"\n```\n\n\n## Coverage\n\nYou can get total users coverage for selected browsers by JS API:\n\n```js\nbrowserslist.coverage(browserslist('> 1%'))\n//=> 81.4\n```\n\n```js\nbrowserslist.coverage(browserslist('> 1% in US'), 'US')\n//=> 83.1\n```\n\n```js\nbrowserslist.coverage(browserslist('> 1% in my stats'), 'my stats')\n//=> 83.1\n```\n\n```js\nbrowserslist.coverage(browserslist('> 1% in my stats', { stats }), stats)\n//=> 82.2\n```\n\nOr by CLI:\n\n```sh\n$ browserslist --coverage \"> 1%\"\nThese browsers account for 81.4% of all users globally\n```\n\n```sh\n$ browserslist --coverage=US \"> 1% in US\"\nThese browsers account for 83.1% of all users in the US\n```\n\n```sh\n$ browserslist --coverage \"> 1% in my stats\"\nThese browsers account for 83.1% of all users in custom statistics\n```\n\n```sh\n$ browserslist --coverage \"> 1% in my stats\" --stats=./stats.json\nThese browsers account for 83.1% of all users in custom statistics\n```\n\n\n## Cache\n\nBrowserslist caches the configuration it reads from `package.json` and\n`browserslist` files, as well as knowledge about the existence of files,\nfor the duration of the hosting process.\n\nTo clear these caches, use:\n\n```js\nbrowserslist.clearCaches();\n```\n\nTo disable the caching altogether, set the `BROWSERSLIST_DISABLE_CACHE`\nenvironment variable.\n\n\n## Security Contact\n\nTo report a security vulnerability, please use the [Tidelift security contact].\nTidelift will coordinate the fix and disclosure.\n\n[Tidelift security contact]: https://tidelift.com/security\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/browserslist/browserslist/issues" }, "homepage": "https://github.com/browserslist/browserslist#readme", "_id": "browserslist@4.5.4", "_requested": { "type": "version", "registry": true, "raw": "browserslist@4.5.4", "name": "browserslist", "escapedName": "browserslist", "rawSpec": "4.5.4", "saveSpec": null, "fetchSpec": "4.5.4" }, "_spec": "4.5.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "browserslist@4.5.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "caniuse-lite": "^1.0.30000955", "electron-to-chromium": "^1.3.122", "node-releases": "^1.1.13" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/browserslist", "error": "[Circular]", "extraneous": false, "_deduped": "browserslist" }, "caniuse-lite": { "name": "caniuse-lite", "version": "1.0.30000957", "description": "A smaller version of caniuse-db, with only the essentials!", "main": "dist/unpacker/index.js", "scripts": { "prepublish": "del-cli dist && babel src/unpacker -d dist/unpacker && mkdir dist/lib && babel src/lib/statuses.js -o dist/lib/statuses.js && babel src/lib/supported.js -o dist/lib/supported.js" }, "files": [ "data", "dist" ], "keywords": [ "support", "css", "js", "html5", "svg" ], "author": { "name": "Ben Briggs", "email": "beneb.info@gmail.com", "url": "http://beneb.info" }, "repository": { "type": "git", "url": "git+https://github.com/ben-eb/caniuse-lite.git" }, "license": "CC-BY-4.0", "_resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30000957.tgz", "_integrity": "sha512-8wxNrjAzyiHcLXN/iunskqQnJquQQ6VX8JHfW5kLgAPRSiSuKZiNfmIkP5j7jgyXqAQBSoXyJxfnbCFS0ThSiQ==", "_from": "caniuse-lite@1.0.30000957", "readme": "# caniuse-lite\n\n> A smaller version of caniuse-db, with only the essentials!\n\n## Why?\n\nThe full data behind [Can I use][1] is incredibly useful for any front end\ndeveloper, and on the website all of the details from the database are displayed\nto the user. However in automated tools, [many of these fields go unused][2];\nit's not a problem for server side consumption but client side, the less\nJavaScript that we send to the end user the better.\n\ncaniuse-lite then, is a smaller dataset that keeps essential parts of the data\nin a compact format. It does this in multiple ways, such as converting `null`\narray entries into empty strings, representing support data as an integer rather\nthan a string, and using base62 references instead of longer human-readable\nkeys.\n\nThis packed data is then reassembled (via functions exposed by this module) into\na larger format which is mostly compatible with caniuse-db, and so it can be\nused as an almost drop-in replacement for caniuse-db for contexts where size on\ndisk is important; for example, usage in web browsers. The API differences are\nvery small and are detailed in the section below.\n\n\n## API\n\n```js\nimport 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps as lite from 'caniuse-lite';\n```\n\n### `lite.agents`\n\ncaniuse-db provides a full `data.json` file which contains all of the features\ndata. Instead of this large file, caniuse-lite provides this data subset\ninstead, which has the `browser`, `prefix`, `prefix_exceptions`, `usage_global`\nand `versions` keys from the original.\n\nIn addition, the subset contains the `release_date` key with release dates (as timestamps) for each version:\n```json\n{\n \"release_date\": {\n \"6\": 998870400,\n \"7\": 1161129600,\n \"8\": 1237420800,\n \"9\": 1300060800,\n \"10\": 1346716800,\n \"11\": 1381968000,\n \"5.5\": 962323200\n }\n}\n```\n\n### `lite.feature(js)`\n\nThe `feature` method takes a file from `data/features` and converts it into\nsomething that more closely represents the `caniuse-db` format. Note that only\nthe `title`, `stats` and `status` keys are kept from the original data.\n\n### `lite.features`\n\nThe `features` index is provided as a way to query all of the features that\nare listed in the `caniuse-db` dataset. Note that you will need to use the\n`feature` method on values from this index to get a human-readable format.\n\n### `lite.region(js)`\n\nThe `region` method takes a file from `data/regions` and converts it into\nsomething that more closely represents the `caniuse-db` format. Note that *only*\nthe usage data is exposed here (the `data` key in the original files).\n\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n| [<img src=\"https://avatars.githubusercontent.com/u/1282980?v=3\" width=\"100px;\"/><br /><sub><b>Ben Briggs</b></sub>](http://beneb.info)<br />[💻](https://github.com/ben-eb/caniuse-lite/commits?author=ben-eb \"Code\") [📖](https://github.com/ben-eb/caniuse-lite/commits?author=ben-eb \"Documentation\") [👀](#review-ben-eb \"Reviewed Pull Requests\") [⚠️](https://github.com/ben-eb/caniuse-lite/commits?author=ben-eb \"Tests\") | [<img src=\"https://avatars.githubusercontent.com/u/1737375?v=3\" width=\"100px;\"/><br /><sub><b>Andy Jansson</b></sub>](https://github.com/andyjansson)<br />[💻](https://github.com/ben-eb/caniuse-lite/commits?author=andyjansson \"Code\") | [<img src=\"https://avatars1.githubusercontent.com/u/19343?v=4\" width=\"100px;\"/><br /><sub><b>Andrey Sitnik</b></sub>](http://twitter.com/sitnikcode)<br />[💻](https://github.com/ben-eb/caniuse-lite/commits?author=ai \"Code\") | [<img src=\"https://avatars2.githubusercontent.com/u/947326?v=4\" width=\"100px;\"/><br /><sub><b>Igor Deryabin</b></sub>](http://rodweb.ru)<br />[💻](https://github.com/ben-eb/caniuse-lite/commits?author=rodweb \"Code\") |\n| :---: | :---: | :---: | :---: |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification. Contributions of any kind welcome!\n\n<img src=\"https://opensource.nyc3.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_icon_blue.svg\" alt=\"Digital Ocean logo\" width=\"40\" align=\"left\">\n\nBig thanks to [DigitalOcean](https://www.digitalocean.com/?utm_source=opensource&utm_campaign=caniuse-lite) for supporting this project by providing their great infrastructure for us.\n\n## License\n\nThe data in this repo is available for use under a CC BY 4.0 license\n(http://creativecommons.org/licenses/by/4.0/). For attribution just mention\nsomewhere that the source is caniuse.com. If you have any questions about using\nthe data for your project please contact me here: http://a.deveria.com/contact\n\n[1]: http://caniuse.com/\n[2]: https://github.com/Fyrd/caniuse/issues/1827\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/ben-eb/caniuse-lite/issues" }, "homepage": "https://github.com/ben-eb/caniuse-lite#readme", "_id": "caniuse-lite@1.0.30000957", "_requested": { "type": "version", "registry": true, "raw": "caniuse-lite@1.0.30000957", "name": "caniuse-lite", "escapedName": "caniuse-lite", "rawSpec": "1.0.30000957", "saveSpec": "[Circular]", "fetchSpec": "1.0.30000957" }, "_spec": "1.0.30000957", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "caniuse-lite@1.0.30000957", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/caniuse-lite", "error": "[Circular]", "extraneous": false, "_deduped": "caniuse-lite" }, "normalize-range": { "name": "normalize-range", "version": "0.1.2", "description": "Utility for normalizing a numeric range, with a wrapping function useful for polar coordinates", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/jamestalmage/normalize-range.git" }, "author": { "name": "James Talmage", "email": "james@talmage.io", "url": "github.com/jamestalmage" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "npm run cover && npm run lint && npm run style", "cover": "istanbul cover ./node_modules/.bin/_mocha", "lint": "jshint --reporter=node_modules/jshint-stylish *.js test/*.js", "debug": "mocha", "watch": "mocha -w", "style": "jscs *.js ./js/0.js ./js/13.js ./js/14.js ./js/15.js ./js/App.js ./js/Details~InventoryDetails~ListRules~Lists.js ./js/Details~InventoryDetails~Lists.js ./js/Details.js ./js/Details~ListRules~Lists.js ./js/InventoryDetails.js ./js/ListRules.js ./js/ListRules~Overview.js ./js/Lists.js ./js/Overview.js ./js/Rules.js ./js/vendor.js && jscs ./test/** --config=./test/.jscsrc" }, "files": [ "index.js" ], "keywords": [ "range", "normalize", "utility", "angle", "degrees", "polar" ], "dependencies": {}, "devDependencies": { "almost-equal": "^1.0.0", "codeclimate-test-reporter": "^0.1.0", "coveralls": "^2.11.2", "istanbul": "^0.3.17", "jscs": "^2.1.1", "jshint": "^2.8.0", "jshint-stylish": "^2.0.1", "mocha": "^2.2.5", "stringify-pi": "0.0.3" }, "_resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz", "_integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=", "_from": "normalize-range@0.1.2", "readme": "# normalize-range \n\nUtility for normalizing a numeric range, with a wrapping function useful for polar coordinates.\n\n[![Build Status](https://travis-ci.org/jamestalmage/normalize-range.svg?branch=master)](https://travis-ci.org/jamestalmage/normalize-range)\n[![Coverage Status](https://coveralls.io/repos/jamestalmage/normalize-range/badge.svg?branch=master&service=github)](https://coveralls.io/github/jamestalmage/normalize-range?branch=master)\n[![Code Climate](https://codeclimate.com/github/jamestalmage/normalize-range/badges/gpa.svg)](https://codeclimate.com/github/jamestalmage/normalize-range)\n[![Dependency Status](https://david-dm.org/jamestalmage/normalize-range.svg)](https://david-dm.org/jamestalmage/normalize-range)\n[![devDependency Status](https://david-dm.org/jamestalmage/normalize-range/dev-status.svg)](https://david-dm.org/jamestalmage/normalize-range#info=devDependencies)\n\n[![NPM](https://nodei.co/npm/normalize-range.png)](https://nodei.co/npm/normalize-range/)\n\n## Usage\n\n```js\nvar nr = require('normalize-range');\n\nnr.wrap(0, 360, 400);\n//=> 40\n\nnr.wrap(0, 360, -90);\n//=> 270\n\nnr.limit(0, 100, 500);\n//=> 100\n\nnr.limit(0, 100, -20);\n//=> 0\n\n// There is a convenient currying function\nvar wrapAngle = nr.curry(0, 360).wrap;\nvar limitTo10 = nr.curry(0, 10).limit;\n\nwrapAngle(-30);\n//=> 330\n```\n## API\n\n### wrap(min, max, value)\n\nNormalizes a values that \"wraps around\". For example, in a polar coordinate system, 270˚ can also be\nrepresented as -90˚. \nFor wrapping purposes we assume `max` is functionally equivalent to `min`, and that `wrap(max + 1) === wrap(min + 1)`.\nWrap always assumes that `min` is *inclusive*, and `max` is *exclusive*.\nIn other words, if `value === max` the function will wrap it, and return `min`, but `min` will not be wrapped.\n\n```js\nnr.wrap(0, 360, 0) === 0;\nnr.wrap(0, 360, 360) === 0;\nnr.wrap(0, 360, 361) === 1;\nnr.wrap(0, 360, -1) === 359;\n```\n\nYou are not restricted to whole numbers, and ranges can be negative.\n\n```js\nvar π = Math.PI;\nvar radianRange = nr.curry(-π, π);\n\nredianRange.wrap(0) === 0;\nnr.wrap(π) === -π;\nnr.wrap(4 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps π / 3) === -2 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps π / 3;\n```\n\n### limit(min, max, value)\n\nNormalize the value by bringing it within the range.\nIf `value` is greater than `max`, `max` will be returned.\nIf `value` is less than `min`, `min` will be returned.\nOtherwise, `value` is returned unaltered.\nBoth ends of this range are *inclusive*.\n\n### test(min, max, value, [minExclusive], [maxExclusive])\n\nReturns `true` if `value` is within the range, `false` otherwise.\nIt defaults to `inclusive` on both ends of the range, but that can be\nchanged by setting `minExclusive` and/or `maxExclusive` to a truthy value.\n\n### validate(min, max, value, [minExclusive], [maxExclusive])\n\nReturns `value` or throws an error if `value` is outside the specified range.\n\n### name(min, max, value, [minExclusive], [maxExclusive])\n\nReturns a string representing this range in \n[range notation](https://en.wikipedia.org/wiki/Interval_(mathematics)#Classification_of_intervals).\n\n### curry(min, max, [minExclusive], [maxExclusive])\n\nConvenience method for currying all method arguments except `value`.\n\n```js\nvar angle = require('normalize-range').curry(-180, 180, false, true);\n\nangle.wrap(270)\n//=> -90\n\nangle.limit(200)\n//=> 180\n\nangle.test(0)\n//=> true\n\nangle.validate(300)\n//=> throws an Error\n\nangle.toString() // or angle.name()\n//=> \"[-180,180)\"\n```\n\n#### min\n\n*Required* \nType: `number`\n\nThe minimum value (inclusive) of the range.\n\n#### max\n\n*Required* \nType: `number`\n\nThe maximum value (exclusive) of the range.\n\n#### value\n\n*Required* \nType: `number`\n\nThe value to be normalized.\n\n#### returns\n\nType: `number`\n\nThe normalized value.\n\n## Building and Releasing\n\n- `npm test`: tests, linting, coverage and style checks.\n- `npm run watch`: autotest mode for active development.\n- `npm run debug`: run tests without coverage (istanbul can obscure line #'s) \n\nRelease via `cut-release` tool.\n\n## License\n\nMIT © [James Talmage](http://github.com/jamestalmage)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/jamestalmage/normalize-range/issues" }, "homepage": "https://github.com/jamestalmage/normalize-range#readme", "_id": "normalize-range@0.1.2", "_requested": { "type": "version", "registry": true, "raw": "normalize-range@0.1.2", "name": "normalize-range", "escapedName": "normalize-range", "rawSpec": "0.1.2", "saveSpec": "[Circular]", "fetchSpec": "0.1.2" }, "_spec": "0.1.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "normalize-range@0.1.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/normalize-range", "error": "[Circular]", "extraneous": false }, "num2fraction": { "name": "num2fraction", "version": "1.2.2", "description": "Convert number to fraction", "main": "index.js", "author": { "name": "yisi", "email": "yiorsi@gmail.com", "url": "http://iyunlu.com/view" }, "license": "MIT", "repository": { "type": "git", "url": "git+ssh://git@github.com/yisibl/num2fraction.git" }, "keywords": [ "fraction", "number", "math", "maths", "arithmetic", "gcd", "rational" ], "devDependencies": { "tape": "^3.0.0" }, "scripts": { "test": "tape test/*.js" }, "_resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz", "_integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4=", "_from": "num2fraction@1.2.2", "readme": "# num2fraction\n\n[![Build Status](https://travis-ci.org/yisibl/num2fraction.svg)](https://travis-ci.org/yisibl/num2fraction) \n[![NPM Downloads](https://img.shields.io/npm/dm/num2fraction.svg?style=flat)](https://www.npmjs.com/package/num2fraction) \n[![NPM Version](http://img.shields.io/npm/v/num2fraction.svg?style=flat)](https://www.npmjs.com/package/num2fraction) \n[![License](https://img.shields.io/npm/l/num2fraction.svg?style=flat)](http://opensource.org/licenses/MIT) \n\n> Converting Number to Fraction with Node.js.\n\n## Installation\n\n```console\nnpm install num2fraction\n```\n\n## Usage\n\n```js\nvar π = Math.PI\nvar n2f = require('num2fraction')\n console.log(n2f(0)) // => 0\n console.log(n2f(.2)) // => 1/5\n console.log(n2f(1.1)) // => 11/10\n console.log(n2f(1.2)) // => 6/5\n console.log(n2f(1.3)) // => 13/10\n console.log(n2f(1.4)) // => 7/5\n console.log(n2f(1.5)) // => 3/2\n console.log(n2f(2)) // => 2/1\n console.log(n2f(2.1)) // => 21/10\n console.log(n2f(3)) // => 3/1\n console.log(n2f(2.555)) // => 511/200\n console.log(n2f(8.36)) // => 209/25\n console.log(n2f('3em')) // => 3/1\n console.log(n2f('1.5px')) // => 3/2\n console.log(n2f(7 / 9) // => 7/9\n console.log(n2f(8 / 9) // => 8/9\n console.log(n2f(512 / 999) // => 512/999\n console.log(n2f((2 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps π / 3) / π) // => 2/3\n console.log(n2f((8 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 5) / (4 / 2)) // => 20/1\n```\n\n## Example\n\nOpera [old versions](http://www.opera.com/docs/specs/presto28/css/o-vendor/) support the non-standard `-o-min-device-pixel-ratio` or `-o-max-device-pixel-ratio` in CSS media queries.\n\n```css\n@media\n only screen and (-webkit-min-device-pixel-ratio: 2),\n only screen and ( min--moz-device-pixel-ratio: 2),\n only screen and ( -o-min-device-pixel-ratio: 2/1), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old Opera */\n only screen and ( min-device-pixel-ratio: 2),\n only screen and ( min-resolution: 192dpi), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old fallback */\n only screen and ( min-resolution: 2dppx) { \n\n}\n```\n\n## Changelog\n\n### v1.2.2\n\n* \\+ Remove: Debug log message.\n\n### v1.2.1\n\n* \\+ Fix: 0 must be converted to a string.\n\n### v1.2.0\n\n* \\+ Fix: Accomodate rounding errors. (by @jamestalmage)\n* \\+ Fix: The negative sign should be on numerator. (by @jamestalmage)\n\n### v1.1.0\n\n* \\+ Use more precise (not fixed) precision factor for the calculation\n\n### v1.0.1\n\n* \\- Remove \"ci.testling.com\"\n\n### V1.0.0\n\n> First release.\n\n## License\n\n[MIT](LICENSE)\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/yisibl/num2fraction/issues" }, "homepage": "https://github.com/yisibl/num2fraction#readme", "_id": "num2fraction@1.2.2", "_requested": { "type": "version", "registry": true, "raw": "num2fraction@1.2.2", "name": "num2fraction", "escapedName": "num2fraction", "rawSpec": "1.2.2", "saveSpec": "[Circular]", "fetchSpec": "1.2.2" }, "_spec": "1.2.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "num2fraction@1.2.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/num2fraction", "error": "[Circular]", "extraneous": false }, "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": { "node": ">=6.0.0" }, "keywords": [ "css", "postcss", "rework", "preprocessor", "parser", "source map", "transform", "manipulation", "transpiler" ], "author": { "name": "Andrey Sitnik", "email": "andrey@sitnik.ru" }, "license": "MIT", "homepage": "https://postcss.org/", "repository": { "type": "git", "url": "git+https://github.com/postcss/postcss.git" }, "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": { "hooks": { "pre-commit": "lint-staged" } }, "browser": { "./lib/terminal-highlight": false, "supports-color": false, "chalk": false, "fs": false }, "browserslist": [ "last 2 version", "not dead", "not Explorer 11", "not ExplorerMobile 11", "node 6" ], "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/postcss/postcss/issues" }, "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss@7.0.14", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "chalk": "^2.4.2", "source-map": "^0.6.1", "supports-color": "^6.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" }, "postcss-value-parser": { "name": "postcss-value-parser", "version": "3.3.1", "description": "Transforms css values and at-rule params into the tree", "main": "lib/index.js", "files": [ "lib" ], "devDependencies": { "eslint": "^5.6.1", "husky": "^1.0.0", "lint-staged": "^7.3.0", "prettier": "^1.4.4", "tap-spec": "^5.0.0", "tape": "^4.2.0" }, "scripts": { "lint:prettier": "prettier '**/*.js' --list-different", "lint:js": "eslint . --cache", "lint": "yarn lint:js && yarn lint:prettier", "pretest": "yarn lint", "test": "tape test/*.js | tap-spec" }, "eslintConfig": { "env": { "es6": true, "node": true }, "extends": "eslint:recommended" }, "lint-staged": { "*.js": [ "eslint", "prettier --write", "git add" ] }, "husky": { "hooks": { "pre-commit": "lint-staged" } }, "author": { "name": "Bogdan Chadkin", "email": "trysound@yandex.ru" }, "license": "MIT", "homepage": "https://github.com/TrySound/postcss-value-parser", "repository": { "type": "git", "url": "git+https://github.com/TrySound/postcss-value-parser.git" }, "keywords": [ "postcss", "value", "parser" ], "bugs": { "url": "https://github.com/TrySound/postcss-value-parser/issues" }, "_resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz", "_integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==", "_from": "postcss-value-parser@3.3.1", "readme": "# postcss-value-parser\n\n[![Travis CI](https://travis-ci.org/TrySound/postcss-value-parser.svg)](https://travis-ci.org/TrySound/postcss-value-parser)\n\nTransforms CSS declaration values and at-rule parameters into a tree of nodes, and provides a simple traversal API.\n\n## Usage\n\n```js\nvar valueParser = require('postcss-value-parser');\nvar cssBackgroundValue = 'url(foo.png) no-repeat 40px 73%';\nvar parsedValue = valueParser(cssBackgroundValue);\n// parsedValue exposes an API described below,\n// e.g. parsedValue.walk(..), parsedValue.toString(), etc.\n```\n\nFor example, parsing the value `rgba(233, 45, 66, .5)` will return the following:\n\n```js\n{\n nodes: [\n {\n type: 'function',\n value: 'rgba',\n before: '',\n after: '',\n nodes: [\n { type: 'word', value: '233' },\n { type: 'div', value: ',', before: '', after: ' ' },\n { type: 'word', value: '45' },\n { type: 'div', value: ',', before: '', after: ' ' },\n { type: 'word', value: '66' },\n { type: 'div', value: ',', before: ' ', after: '' },\n { type: 'word', value: '.5' }\n ]\n }\n ]\n}\n```\n\nIf you wanted to convert each `rgba()` value in `sourceCSS` to a hex value, you could do so like this:\n\n```js\nvar valueParser = require('postcss-value-parser');\n\nvar parsed = valueParser(sourceCSS);\n\n// walk() will visit all the of the nodes in the tree,\n// invoking the callback for each.\nparsed.walk(function (node) {\n\n // Since we only want to transform rgba() values,\n // we can ignore anything else.\n if (node.type !== 'function' && node.value !== 'rgba') return;\n\n // We can make an array of the rgba() arguments to feed to a\n // convertToHex() function\n var color = node.nodes.filter(function (node) {\n return node.type === 'word';\n }).map(function (node) {\n return Number(node.value);\n }); // [233, 45, 66, .5]\n\n // Now we will transform the existing rgba() function node\n // into a word node with the hex value\n node.type = 'word';\n node.value = convertToHex(color);\n})\n\nparsed.toString(); // #E92D42\n```\n\n## Nodes\n\nEach node is an object with these common properties:\n\n- **type**: The type of node (`word`, `string`, `div`, `space`, `comment`, or `function`).\n Each type is documented below.\n- **value**: Each node has a `value` property; but what exactly `value` means\n is specific to the node type. Details are documented for each type below.\n- **sourceIndex**: The starting index of the node within the original source\n string. For example, given the source string `10px 20px`, the `word` node\n whose value is `20px` will have a `sourceIndex` of `5`.\n\n### word\n\nThe catch-all node type that includes keywords (e.g. `no-repeat`),\nquantities (e.g. `20px`, `75%`, `1.5`), and hex colors (e.g. `#e6e6e6`).\n\nNode-specific properties:\n\n- **value**: The \"word\" itself.\n\n### string\n\nA quoted string value, e.g. `\"something\"` in `content: \"something\";`.\n\nNode-specific properties:\n\n- **value**: The text content of the string.\n- **quote**: The quotation mark surrounding the string, either `\"` or `'`.\n- **unclosed**: `true` if the string was not closed properly. e.g. `\"unclosed string `.\n\n### div\n\nA divider, for example\n\n- `,` in `animation-duration: 1s, 2s, 3s`\n- `/` in `border-radius: 10px / 23px`\n- `:` in `(min-width: 700px)`\n\nNode-specific properties:\n\n- **value**: The divider character. Either `,`, `/`, or `:` (see examples above).\n- **before**: Whitespace before the divider.\n- **after**: Whitespace after the divider.\n\n### space\n\nWhitespace used as a separator, e.g. ` ` occurring twice in `border: 1px solid black;`.\n\nNode-specific properties:\n\n- **value**: The whitespace itself.\n\n### comment\n\nA CSS comment starts with `/*` and ends with `*/`\n\nNode-specific properties:\n\n- **value**: The comment value without `/*` and `*/`\n- **unclosed**: `true` if the comment was not closed properly. e.g. `/* comment without an end `.\n\n### function\n\nA CSS function, e.g. `rgb(0,0,0)` or `url(foo.bar)`.\n\nFunction nodes have nodes nested within them: the function arguments.\n\nAdditional properties:\n\n- **value**: The name of the function, e.g. `rgb` in `rgb(0,0,0)`.\n- **before**: Whitespace after the opening parenthesis and before the first argument,\n e.g. ` ` in `rgb( 0,0,0)`.\n- **after**: Whitespace before the closing parenthesis and after the last argument,\n e.g. ` ` in `rgb(0,0,0 )`.\n- **nodes**: More nodes representing the arguments to the function.\n- **unclosed**: `true` if the parentheses was not closed properly. e.g. `( unclosed-function `.\n\nMedia features surrounded by parentheses are considered functions with an\nempty value. For example, `(min-width: 700px)` parses to these nodes:\n\n```js\n[\n {\n type: 'function', value: '', before: '', after: '',\n nodes: [\n { type: 'word', value: 'min-width' },\n { type: 'div', value: ':', before: '', after: ' ' },\n { type: 'word', value: '700px' }\n ]\n }\n]\n```\n\n`url()` functions can be parsed a little bit differently depending on\nwhether the first character in the argument is a quotation mark.\n\n`url( /gfx/img/bg.jpg )` parses to:\n\n```js\n{ type: 'function', sourceIndex: 0, value: 'url', before: ' ', after: ' ', nodes: [\n { type: 'word', sourceIndex: 5, value: '/gfx/img/bg.jpg' }\n] }\n```\n\n`url( \"/gfx/img/bg.jpg\" )`, on the other hand, parses to:\n\n```js\n{ type: 'function', sourceIndex: 0, value: 'url', before: ' ', after: ' ', nodes: [\n type: 'string', sourceIndex: 5, quote: '\"', value: '/gfx/img/bg.jpg' },\n] }\n```\n\n## API\n\n```\nvar valueParser = require('postcss-value-parser');\n```\n\n### valueParser.unit(quantity)\n\nParses `quantity`, distinguishing the number from the unit. Returns an object like the following:\n\n```js\n// Given 2rem\n{\n number: '2',\n unit: 'rem'\n}\n```\n\nIf the `quantity` argument cannot be parsed as a number, returns `false`.\n\n*This function does not parse complete values*: you cannot pass it `1px solid black` and expect `px` as\nthe unit. Instead, you should pass it single quantities only. Parse `1px solid black`, then pass it\nthe stringified `1px` node (a `word` node) to parse the number and unit.\n\n### valueParser.stringify(nodes[, custom])\n\nStringifies a node or array of nodes.\n\nThe `custom` function is called for each `node`; return a string to override the default behaviour.\n\n### valueParser.walk(nodes, callback[, bubble])\n\nWalks each provided node, recursively walking all descendent nodes within functions.\n\nReturning `false` in the `callback` will prevent traversal of descendent nodes (within functions).\nYou can use this feature to for shallow iteration, walking over only the *immediate* children.\n*Note: This only applies if `bubble` is `false` (which is the default).*\n\nBy default, the tree is walked from the outermost node inwards.\nTo reverse the direction, pass `true` for the `bubble` argument.\n\nThe `callback` is invoked with three arguments: `callback(node, index, nodes)`.\n\n- `node`: The current node.\n- `index`: The index of the current node.\n- `nodes`: The complete nodes array passed to `walk()`.\n\nReturns the `valueParser` instance.\n\n### var parsed = valueParser(value)\n\nReturns the parsed node tree.\n\n### parsed.nodes\n\nThe array of nodes.\n\n### parsed.toString()\n\nStringifies the node tree.\n\n### parsed.walk(callback[, bubble])\n\nWalks each node inside `parsed.nodes`. See the documentation for `valueParser.walk()` above.\n\n# License\n\nMIT © [Bogdan Chadkin](mailto:trysound@yandex.ru)\n", "readmeFilename": "README.md", "_id": "postcss-value-parser@3.3.1", "_requested": { "type": "version", "registry": true, "raw": "postcss-value-parser@3.3.1", "name": "postcss-value-parser", "escapedName": "postcss-value-parser", "rawSpec": "3.3.1", "saveSpec": "[Circular]", "fetchSpec": "3.3.1" }, "_spec": "3.3.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-value-parser@3.3.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-value-parser", "error": "[Circular]", "extraneous": false, "_deduped": "postcss-value-parser" } }, "bin": { "autoprefixer": "./bin/autoprefixer" }, "main": "lib/autoprefixer", "_resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-9.5.1.tgz", "_integrity": "sha512-KJSzkStUl3wP0D5sdMlP82Q52JLy5+atf2MHAre48+ckWkXgixmfHyWmA77wFDy6jTHU6mIgXv6hAQ2mf1PjJQ==", "_from": "autoprefixer@9.5.1", "readme": "# Autoprefixer [![Cult Of Martians][cult-img]][cult]\n\n<img align=\"right\" width=\"94\" height=\"71\"\n src=\"http://postcss.github.io/autoprefixer/logo.svg\"\n title=\"Autoprefixer logo by Anton Lovchikov\">\n\n[PostCSS] plugin to parse CSS and add vendor prefixes to CSS rules using values\nfrom [Can I Use]. It is [recommended] by Google and used in Twitter and Alibaba.\n\nWrite your CSS rules without vendor prefixes (in fact, forget about them\nentirely):\n\n```css\n::placeholder {\n color: gray;\n}\n```\n\nAutoprefixer will use the data based on current browser popularity and property\nsupport to apply prefixes for you. You can try the [interactive demo]\nof Autoprefixer.\n\n```css\n::-webkit-input-placeholder {\n color: gray;\n}\n:-ms-input-placeholder {\n color: gray;\n}\n::-ms-input-placeholder {\n color: gray;\n}\n::placeholder {\n color: gray;\n}\n```\n\nTwitter account for news and releases: [@autoprefixer].\n\n<a href=\"https://evilmartians.com/?utm_source=autoprefixer\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[interactive demo]: https://autoprefixer.github.io/\n[@autoprefixer]: https://twitter.com/autoprefixer\n[recommended]: https://developers.google.com/web/tools/setup/setup-buildtools#dont_trip_up_with_vendor_prefixes\n[Can I Use]: https://caniuse.com/\n[cult-img]: http://cultofmartians.com/assets/badges/badge.svg\n[PostCSS]: https://github.com/postcss/postcss\n[cult]: http://cultofmartians.com/tasks/autoprefixer-grid.html\n\n\n## Contents\n\n- [Browsers](#browsers)\n- [FAQ](#faq)\n - [Does Autoprefixer polyfill Grid Layout for IE?](#does-autoprefixer-polyfill-grid-layout-for-ie)\n - [No prefixes in production](#no-prefixes-in-production)\n - [What is the unprefixed version of `-webkit-min-device-pixel-ratio`?](#what-is-the-unprefixed-version-of--webkit-min-device-pixel-ratio)\n - [Does it add polyfills?](#does-it-add-polyfills)\n - [Why doesn’t Autoprefixer add prefixes to `border-radius`?](#why-doesnt-autoprefixer-add-prefixes-to-border-radius)\n - [Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?](#why-does-autoprefixer-use-unprefixed-properties-in--webkit-keyframes)\n - [How to work with legacy `-webkit-` only code?](#how-to-work-with-legacy--webkit--only-code)\n - [Does Autoprefixer add `-epub-` prefix?](#does-autoprefixer-add--epub--prefix)\n - [Why doesn’t Autoprefixer transform generic font-family `system-ui`?](#why-doesnt-autoprefixer-transform-generic-font-family-system-ui)\n- [Usage](#usage)\n - [Gulp](#gulp)\n - [Webpack](#webpack)\n - [CSS-in-JS](#css-in-js)\n - [CLI](#cli)\n - [Other Build Tools](#other-build-tools)\n - [JavaScript](#javascript)\n - [Text Editors and IDE](#text-editors-and-ide)\n- [Warnings](#warnings)\n- [Disabling](#disabling)\n- [Options](#options)\n- [Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie)\n- [Debug](#debug)\n\n## Browsers\n\nAutoprefixer uses [Browserslist], so you can specify the browsers\nyou want to target in your project with queries like `> 5%`\n(see [Best Practices]).\n\nThe best way to provide browsers is a `.browserslistrc` file in your project\nroot, or by adding a `browserslist` key to your `package.json`.\n\nWe recommend the use of these options over passing options to Autoprefixer so\nthat the config can be shared with other tools such as [babel-preset-env] and\n[Stylelint].\n\nSee [Browserslist docs] for queries, browser names, config format, and defaults.\n\n[Browserslist docs]: https://github.com/ai/browserslist#queries\n[babel-preset-env]: https://github.com/babel/babel/tree/master/packages/babel-preset-env\n[Best Practices]: https://github.com/browserslist/browserslist#best-practices\n[Browserslist]: https://github.com/ai/browserslist\n[Stylelint]: https://stylelint.io/\n\n\n## FAQ\n\n### Does Autoprefixer polyfill Grid Layout for IE?\n\nAutoprefixer can be used to translate modern CSS Grid syntax into IE 10\nand IE 11 syntax, but this polyfill will not work in 100% of cases.\nThis is why it is disabled by default.\n\nFirst, you need to enable Grid prefixes by using either the `grid: \"autoplace\"`\noption or the `/* autoprefixer grid: autoplace */` control comment.\n\nSecond, you need to test every fix with Grid in IE. It is not an enable and\nforget feature, but it is still very useful.\nFinancial Times and Yandex use it in production.\n\nThird, there is only very limited auto placement support. Read the\n[Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie) section\nfor more details.\n\nFourth, if you are not using the autoplacement feature, the best way\nto use Autoprefixer is by using `grid-template` or `grid-template-areas`.\n\n```css\n.page {\n display: grid;\n grid-gap: 33px;\n grid-template:\n \"head head head\" 1fr\n \"nav main main\" minmax(100px, 1fr)\n \"nav foot foot\" 2fr /\n 1fr 100px 1fr;\n}\n.page__head {\n grid-area: head;\n}\n.page__nav {\n grid-area: nav;\n}\n.page__main {\n grid-area: main;\n}\n.page__footer {\n grid-area: foot;\n}\n```\n\nSee also:\n\n* [The guide about Grids in IE and Autoprefixer].\n* [`postcss-gap-properties`] to use new `gap` property\n instead of old `grid-gap`.\n* [`postcss-grid-kiss`] has alternate “everything in one property” syntax,\n which makes using Autoprefixer’s Grid translations safer.\n\n[The guide about Grids in IE and Autoprefixer]: https://css-tricks.com/css-grid-in-ie-css-grid-and-the-new-autoprefixer/\n[`postcss-gap-properties`]: https://github.com/jonathantneal/postcss-gap-properties\n[`postcss-grid-kiss`]: https://github.com/sylvainpolletvillard/postcss-grid-kiss\n\n### No prefixes in production\n\nMany other tools contain Autoprefixer. For example, webpack uses Autoprefixer\nto minify CSS by cleaning unnecessary prefixes.\n\nIf you pass your browsers to Autoprefixer using its `browsers` option, the other\ntools will use their own config, leading webpack to remove the prefixes that\nthe first Autoprefixer added.\n\nTo avoid this, ensure you use either the [browserslist config file] or\n`browsers` key in your `package.json`, so that all tools (Autoprefixer,\ncssnano, doiuse, cssnext, etc) use the same browsers list.\n\n[browserslist config file]: https://github.com/ai/browserslist#config-file\n\n\n### What is the unprefixed version of `-webkit-min-device-pixel-ratio`?\n\n```css\n@media (min-resolution: 2dppx) {\n .image {\n background-image: url(image@2x.png);\n }\n}\n```\n\nWill be compiled to:\n\n```css\n@media (-webkit-min-device-pixel-ratio: 2),\n (-o-min-device-pixel-ratio: 2/1),\n (min-resolution: 2dppx) {\n .image {\n background-image: url(image@2x.png);\n }\n}\n```\n\n\n### Does it add polyfills?\n\nNo. Autoprefixer only adds prefixes.\n\nMost new CSS features will require client side JavaScript to handle a new\nbehavior correctly.\n\nDepending on what you consider to be a “polyfill”, you can take a look at some\nother tools and libraries. If you are just looking for syntax sugar,\nyou might take a look at:\n\n- [postcss-preset-env] is a plugins preset with polyfills and Autoprefixer\n to write future CSS today.\n- [Oldie], a PostCSS plugin that handles some IE hacks (opacity, rgba, etc).\n- [postcss-flexbugs-fixes], a PostCSS plugin to fix flexbox issues.\n\n[postcss-flexbugs-fixes]: https://github.com/luisrudge/postcss-flexbugs-fixes\n[postcss-preset-env]: https://github.com/jonathantneal/postcss-preset-env\n[Oldie]: https://github.com/jonathantneal/oldie\n\n\n### Why doesn’t Autoprefixer add prefixes to `border-radius`?\n\nDevelopers are often surprised by how few prefixes are required today.\nIf Autoprefixer doesn’t add prefixes to your CSS, check if they’re still\nrequired on [Can I Use].\n\n[Can I Use]: https://caniuse.com/\n\n\n### Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?\n\nBrowser teams can remove some prefixes before others, so we try to use all\ncombinations of prefixed/unprefixed values.\n\n\n### How to work with legacy `-webkit-` only code?\n\nAutoprefixer needs unprefixed property to add prefixes. So if you only\nwrote `-webkit-gradient` without W3C’s `gradient`,\nAutoprefixer will not add other prefixes.\n\nBut [PostCSS] has plugins to convert CSS to unprefixed state.\nUse [postcss-unprefix] before Autoprefixer.\n\n[postcss-unprefix]: https://github.com/gucong3000/postcss-unprefix\n\n\n### Does Autoprefixer add `-epub-` prefix?\n\nNo, Autoprefixer works only with browsers prefixes from Can I Use.\nBut you can use [postcss-epub]\nfor prefixing ePub3 properties.\n\n[postcss-epub]: https://github.com/Rycochet/postcss-epub\n\n\n### Why doesn’t Autoprefixer transform generic font-family `system-ui`?\n\n`system-ui` is technically not a prefix and the transformation is not\nfuture-proof. You can use [postcss-font-family-system-ui] to transform\n`system-ui` to a practical font-family list.\n\n[postcss-font-family-system-ui]: https://github.com/JLHwung/postcss-font-family-system-ui\n\n\n## Usage\n\n### Gulp\n\nIn Gulp you can use [gulp-postcss] with `autoprefixer` npm package.\n\n```js\ngulp.task('autoprefixer', function () {\n var postcss = require('gulp-postcss');\n var sourcemaps = require('gulp-sourcemaps');\n var autoprefixer = require('autoprefixer');\n\n return gulp.src('./src/*.css')\n .pipe(sourcemaps.init())\n .pipe(postcss([ autoprefixer() ]))\n .pipe(sourcemaps.write('.'))\n .pipe(gulp.dest('./dest'));\n});\n```\n\nWith `gulp-postcss` you also can combine Autoprefixer\nwith [other PostCSS plugins].\n\n[gulp-postcss]: https://github.com/postcss/gulp-postcss\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\n\n\n### Webpack\n\nIn [webpack] you can use [postcss-loader] with `autoprefixer`\nand [other PostCSS plugins].\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: [\"style-loader\", \"css-loader\", \"postcss-loader\"]\n }\n ]\n }\n}\n```\n\nAnd create a `postcss.config.js` with:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer')\n ]\n}\n```\n\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\n[postcss-loader]: https://github.com/postcss/postcss-loader\n[webpack]: https://webpack.js.org/\n\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd it’s loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n\n### CLI\n\nYou can use the [postcss-cli] to run Autoprefixer from CLI:\n\n```sh\nnpm install postcss-cli autoprefixer\nnpx postcss *.css --use autoprefixer -d build/\n```\n\nSee `postcss -h` for help.\n\n[postcss-cli]: https://github.com/postcss/postcss-cli\n\n\n### Other Build Tools\n\n* **Grunt:** [grunt-postcss]\n* **Ruby on Rails**: index.html **Neutrino**: index.html **Jekyll**: add `autoprefixer-rails` and `jekyll-assets` to `Gemfile`\n* **Brunch**: [postcss-brunch]\n* **Broccoli**: index.html **Middleman**: index.html **Mincer**: add `autoprefixer` npm package and enable it:\n `environment.enable('autoprefixer')`\n\n[neutrino-middleware-postcss]: https://www.npmjs.com/package/neutrino-middleware-postcss\n[middleman-autoprefixer]: https://github.com/middleman/middleman-autoprefixer\n[autoprefixer-rails]: https://github.com/ai/autoprefixer-rails\n[broccoli-postcss]: https://github.com/jeffjewiss/broccoli-postcss\n[postcss-brunch]: https://github.com/iamvdo/postcss-brunch\n[grunt-postcss]: https://github.com/nDmitry/grunt-postcss\n\n\n#### Preprocessors\n\n* **Less**: index.html **Stylus**: index.html **Compass**: [autoprefixer-rails#compass]\n\n[less-plugin-autoprefix]: https://github.com/less/less-plugin-autoprefix\n[autoprefixer-stylus]: https://github.com/jenius/autoprefixer-stylus\n[autoprefixer-rails#compass]: https://github.com/ai/autoprefixer-rails#compass\n\n\n#### GUI Tools\n\n* [CodeKit](https://codekitapp.com/help/autoprefixer/)\n* [Prepros](https://prepros.io)\n\n\n### JavaScript\n\nYou can use Autoprefixer with [PostCSS] in your Node.js application\nor if you want to develop an Autoprefixer plugin for a new environment.\n\n```js\nvar autoprefixer = require('autoprefixer');\nvar postcss = require('postcss');\n\npostcss([ autoprefixer ]).process(css).then(function (result) {\n result.warnings().forEach(function (warn) {\n console.warn(warn.toString());\n });\n console.log(result.css);\n});\n```\n\nThere is also a [standalone build] for the browser or for a non-Node.js runtime.\n\nYou can use [html-autoprefixer] to process HTML with inlined CSS.\n\n[html-autoprefixer]: https://github.com/RebelMail/html-autoprefixer\n[standalone build]: https://raw.github.com/ai/autoprefixer-rails/master/vendor/autoprefixer.js\n[PostCSS]: https://github.com/postcss/postcss\n\n\n### Text Editors and IDE\n\nAutoprefixer should be used in assets build tools. Text editor plugins are not\na good solution, because prefixes decrease code readability and you will need\nto change values in all prefixed properties.\n\nI recommend you to learn how to use build tools like [Parcel].\nThey work much better and will open you a whole new world of useful plugins\nand automation.\n\nIf you can’t move to a build tool, you can use text editor plugins:\n\n* [Sublime Text](https://github.com/sindresorhus/sublime-autoprefixer)\n* [Brackets](https://github.com/mikaeljorhult/brackets-autoprefixer)\n* [Atom Editor](https://github.com/sindresorhus/atom-autoprefixer)\n* [Visual Studio](https://github.com/madskristensen/WebCompiler)\n ([how to](https://stackoverflow.com/a/54908636/2440))\n\n[Parcel]: https://parceljs.org/\n\n\n## Warnings\n\nAutoprefixer uses the [PostCSS warning API] to warn about really important\nproblems in your CSS:\n\n* Old direction syntax in gradients.\n* Old unprefixed `display: box` instead of `display: flex`\n by latest specification version.\n\nYou can get warnings from `result.warnings()`:\n\n```js\nresult.warnings().forEach(function (warn) {\n console.warn(warn.toString());\n});\n```\n\nEvery Autoprefixer runner should display these warnings.\n\n[PostCSS warning API]: https://github.com/postcss/postcss/blob/master/docs/api.md#warning-class\n\n\n## Disabling\n\n### Prefixes\n\nAutoprefixer was designed to have no interface – it just works.\nIf you need some browser specific hack just write a prefixed property\nafter the unprefixed one.\n\n```css\na {\n transform: scale(0.5);\n -moz-transform: scale(0.6);\n}\n```\n\nIf some prefixes were generated incorrectly, please create an [issue on GitHub].\n\n[issue on GitHub]: https://github.com/postcss/autoprefixer/issues\n\n\n### Features\n\nYou can use these plugin options to control some of Autoprefixer’s features.\n\n* `grid: \"autoplace\"` will enable `-ms-` prefixes for Grid Layout including some\n [limited autoplacement support](#grid-autoplacement-support-in-ie).\n* `supports: false` will disable `@supports` parameters prefixing.\n* `flexbox: false` will disable flexbox properties prefixing.\n Or `flexbox: \"no-2009\"` will add prefixes only for final and IE\n versions of specification.\n* `remove: false` will disable cleaning outdated prefixes.\n\nYou should set them inside the plugin like so:\n\n```js\nautoprefixer({ grid: \"autoplace\" });\n```\n\n\n### Control Comments\n\nIf you do not need Autoprefixer in some part of your CSS,\nyou can use control comments to disable Autoprefixer.\n\n```css\n.a {\n transition: 1s; /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old will be prefixed */\n}\n\n.b {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer: off */\n transition: 1s; /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old will not be prefixed */\n}\n\n.c {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer: ignore next */\n transition: 1s; /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old will not be prefixed */\n mask: url(image.png); /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old will be prefixed */\n}\n```\n\nThere are three types of control comments:\n\n* `/* autoprefixer: (on|off) */`: enable/disable all Autoprefixer translations for the\n whole block both *before* and *after* the comment.\n* `/* autoprefixer: ignore next */`: disable Autoprefixer only for the next property\n or next rule selector or at-rule parameters (but not rule/at‑rule body).\n* `/* autoprefixer grid: (autoplace|no-autoplace|off) */`: control how Autoprefixer handles\n grid translations for the whole block:\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `autoplace`: enable grid translations with autoplacement support.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `no-autoplace`: enable grid translations with autoplacement support *disabled*.\n (alias for deprecated value `on`)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `off`: disable all grid translations.\n\nYou can also use comments recursively:\n\n```css\n/* autoprefixer: off */\n@supports (transition: all) {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer: on */\n a {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer: off */\n }\n}\n```\n\nNote that comments that disable the whole block should not be featured in the same\nblock twice:\n\n```css\n/* How not to use block level control comments */\n\n.do-not-do-this {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer: off */\n transition: 1s;\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer: on */\n transform: rotate(20deg);\n}\n```\n\n\n## Options\n\nFunction `autoprefixer(options)` returns a new PostCSS plugin.\nSee [PostCSS API] for plugin usage documentation.\n\n```js\nautoprefixer({ cascade: false })\n```\n\nAvailable options are:\n\n* `env` (string): environment for Browserslist.\n* `cascade` (boolean): should Autoprefixer use Visual Cascade,\n if CSS is uncompressed. Default: `true`\n* `add` (boolean): should Autoprefixer add prefixes. Default is `true`.\n* `remove` (boolean): should Autoprefixer [remove outdated] prefixes.\n Default is `true`.\n* `supports` (boolean): should Autoprefixer add prefixes for `@supports`\n parameters. Default is `true`.\n* `flexbox` (boolean|string): should Autoprefixer add prefixes for flexbox\n properties. With `\"no-2009\"` value Autoprefixer will add prefixes only\n for final and IE 10 versions of specification. Default is `true`.\n* `grid` (false|\"autoplace\"|\"no-autoplace\"): should Autoprefixer\n add IE 10-11 prefixes for Grid Layout properties?\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `false` (default): prevent Autoprefixer from outputting\n CSS Grid translations.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `\"autoplace\"`: enable Autoprefixer grid translations\n and *include* autoplacement support. You can also use\n `/* autoprefixer grid: autoplace */` in your CSS.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `\"no-autoplace\"`: enable Autoprefixer grid translations\n but *exclude* autoplacement support. You can also use\n `/* autoprefixer grid: no-autoplace */` in your CSS.\n (alias for the deprecated `true` value)\n* `stats` (object): custom [usage statistics] for `> 10% in my stats`\n browsers query.\n* `browsers` (array): list of queries for target browsers. Try to not use it.\n  The best practice is to use `.browserslistrc` config\n or `browserslist` key in `package.json` to share target browsers\n with Babel, ESLint and Stylelint. See [Browserslist docs]\n for available queries and default value.\n* `ignoreUnknownVersions` (boolean): do not raise error on unknown browser\n version in Browserslist config or `browsers` option. Default is `false`.\n\nPlugin object has `info()` method for debugging purpose.\n\nYou can use PostCSS processor to process several CSS files\nto increase performance.\n\n[usage statistics]: https://github.com/ai/browserslist#custom-usage-data\n[PostCSS API]: http://api.postcss.org\n\n## Grid Autoplacement support in IE\n\nIf the `grid` option is set to `\"autoplace\"`, limited autoplacement support is added to Autoprefixers grid translations. You can also use the `/* autoprefixer grid: autoplace */` control comment to enable autoplacement\n\nAutoprefixer will only autoplace grid cells if both `grid-template-rows` and `grid-template-columns` has been set. If `grid-template` or `grid-template-areas` has been set, Autoprefixer will use area based cell placement instead.\n\nAutoprefixer supports autoplacement by using `nth-child` CSS selectors. It creates [number of columns] x [number of rows] `nth-child` selectors. For this reason Autoplacement is only supported within the explicit grid.\n\n```css\n/* Input CSS */\n\n/* autoprefixer grid: autoplace */\n\n.autoplacement-example {\n display: grid;\n grid-template-columns: 1fr 1fr;\n grid-template-rows: auto auto;\n grid-gap: 20px;\n}\n```\n\n```css\n/* Output CSS */\n\n/* autoprefixer grid: autoplace */\n\n.autoplacement-example {\n display: -ms-grid;\n display: grid;\n -ms-grid-columns: 1fr 20px 1fr;\n grid-template-columns: 1fr 1fr;\n -ms-grid-rows: auto 20px auto;\n grid-template-rows: auto auto;\n grid-gap: 20px;\n}\n\n.autoplacement-example > *:nth-child(1) {\n -ms-grid-row: 1;\n -ms-grid-column: 1;\n}\n\n.autoplacement-example > *:nth-child(2) {\n -ms-grid-row: 1;\n -ms-grid-column: 3;\n}\n\n.autoplacement-example > *:nth-child(3) {\n -ms-grid-row: 3;\n -ms-grid-column: 1;\n}\n\n.autoplacement-example > *:nth-child(4) {\n -ms-grid-row: 3;\n -ms-grid-column: 3;\n}\n```\n\n### Beware of enabling autoplacement in old projects\n\nBe careful about enabling autoplacement in any already established projects that have\npreviously not used Autoprefixer's grid autoplacement feature before.\n\nIf this was your html:\n\n```html\n<div class=\"grid\">\n <div class=\"grid-cell\"></div>\n</div>\n```\n\nThe following CSS will not work as expected with the autoplacement feature enabled:\n\n```css\n/* Unsafe CSS when Autoplacement is enabled */\n\n.grid-cell {\n grid-column: 2;\n grid-row: 2;\n}\n\n.grid {\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n grid-template-rows: repeat(3, 1fr);\n}\n```\n\nSwapping the rules around will not fix the issue either:\n\n```css\n/* Also unsafe to use this CSS */\n\n.grid {\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n grid-template-rows: repeat(3, 1fr);\n}\n\n.grid-cell {\n grid-column: 2;\n grid-row: 2;\n}\n```\n\nOne way to deal with this issue is to disable autoplacement in the\ngrid-declaration rule:\n\n```css\n/* Disable autoplacement to fix the issue */\n\n.grid {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer grid: no-autoplace */\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n grid-template-rows: repeat(3, 1fr);\n}\n\n.grid-cell {\n grid-column: 2;\n grid-row: 2;\n}\n```\n\nThe absolute best way to integrate autoplacement into already existing projects though is\nto leave autoplacement turned off by default and then use a control comment to enable it\nwhen needed. This method is far less likely to cause something on the site to break.\n\n```css\n/* Disable autoplacement by default in old projects */\n/* autoprefixer grid: no-autoplace */\n\n/* Old code will function the same way it always has */\n.old-grid {\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n grid-template-rows: repeat(3, 1fr);\n}\n.old-grid-cell {\n grid-column: 2;\n grid-row: 2;\n}\n\n/* Enable autoplacement when you want to use it in new code */\n.new-autoplace-friendly-grid {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old autoprefixer grid: autoplace */\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n grid-template-rows: repeat(3, auto);\n}\n```\n\nNote that the `grid: \"no-autoplace\"` setting and the\n`/* autoprefixer grid: no-autoplace */` control comment share identical functionality\nto the `grid: true` setting and the `/* autoprefixer grid: on */` control comment.\nThere is no need to refactor old code to use `no-autoplace` in place of the old\n`true` and `on` statements.\n\n### Autoplacement limitations\n\n#### Both columns and rows must be defined\n\nAutoplacement only works inside the explicit grid. The columns and rows need to be defined\nso that Autoprefixer knows how many `nth-child` selectors to generate.\n\n```css\n.not-allowed {\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n}\n\n.is-allowed {\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n grid-template-rows: repeat(10, auto);\n}\n```\n\n#### Repeat auto-fit and auto-fill are not supported\n\nThe `repeat(auto-fit, ...)` and `repeat(auto-fill, ...)` grid functionality relies on\nknowledge from the browser about screen dimensions and the number of available grid\nitems for it to work properly. Autoprefixer does not have access to this information\nso unfortunately this little snippet will _never_ be IE friendly.\n\n```css\n.grid {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old This will never be IE friendly */\n grid-template-columns: repeat(auto-fit, min-max(200px, 1fr))\n}\n```\n\n#### No manual cell placement or column/row spans allowed inside an autoplacement grid\n\nElements must not be manually placed or given column/row spans inside\nan autoplacement grid. Only the most basic of autoplacement grids are supported.\nGrid cells can still be placed manually outside the the explicit grid though.\nSupport for manually placing individual grid cells inside an explicit\nautoplacement grid is planned for a future release.\n\n```css\n.autoplacement-grid {\n display: grid;\n grid-template-columns: repeat(3, 1fr);\n grid-template-rows: repeat(3, auto);\n}\n\n/*\n grid cells placed inside the explicit grid\n will break the layout in IE\n*/\n.not-permitted-grid-cell {\n grid-column: 1;\n grid-row: 1;\n}\n\n/*\n grid cells placed outside the\n explicit grid will work in IE\n*/\n.permitted-grid-cell {\n grid-column: 1 / span 2;\n grid-row: 4;\n}\n```\n\nIf manual cell placement is required, we recommend using `grid-template` or\n`grid-template-areas` instead:\n\n```css\n.page {\n display: grid;\n grid-gap: 30px;\n grid-template:\n \"head head\"\n \"nav main\" minmax(100px, 1fr)\n \"foot foot\" /\n 200px 1fr;\n}\n.page__head {\n grid-area: head;\n}\n.page__nav {\n grid-area: nav;\n}\n.page__main {\n grid-area: main;\n}\n.page__footer {\n grid-area: foot;\n}\n```\n\n#### Do not create `::before` and `::after` pseudo elements\n\nLet's say you have this HTML:\n\n```html\n<div class=\"grid\">\n <div class=\"grid-cell\"></div>\n</div>\n```\n\nAnd you write this CSS:\n\n```css\n.grid {\n display: grid;\n grid-template-columns: 1fr 1fr;\n grid-template-rows: auto;\n}\n\n.grid::before {\n content: 'before';\n}\n\n.grid::after {\n content: 'after';\n}\n```\n\nThis will be the output:\n\n```css\n.grid {\n display: -ms-grid;\n display: grid;\n -ms-grid-columns: 1fr 1fr;\n grid-template-columns: 1fr 1fr;\n -ms-grid-rows: auto;\n grid-template-rows: auto;\n}\n\n.grid > *:nth-child(1) {\n -ms-grid-row: 1;\n -ms-grid-column: 1;\n}\n\n\n.grid > *:nth-child(2) {\n -ms-grid-row: 1;\n -ms-grid-column: 2;\n}\n\n.grid::before {\n content: 'before';\n}\n\n.grid::after {\n content: 'after';\n}\n```\n\nIE will place `.grid-cell`, `::before` and `::after` in row 1 column 1.\nModern browsers on the other hand will place `::before` in row 1 column 1,\n`.grid-cell` in row 1 column 2, and `::after` in row 2 column 1.\n\nSee this [Code Pen](https://codepen.io/daniel-tonon/pen/gBymVw) to see a visualization\nof the issue. View the Code Pen in both a modern browser and IE to see the difference.\n\nNote that you can still create `::before` and `::after` elements as long as you manually\nplace them outside the explicit grid.\n\n#### When changing the `grid gap` value, columns and rows must be re-declared\n\nIf you wish to change the size of a `grid-gap`, you will need to redeclare the grid columns and rows.\n\n```css\n.grid {\n display: grid;\n grid-template-columns: 1fr 1fr;\n grid-template-rows: auto;\n grid-gap: 50px;\n}\n\n/* This will *NOT* work in IE */\n@media (max-width: 600px) {\n .grid {\n grid-gap: 20px;\n }\n}\n\n/* This will *NOT* work in IE */\n.grid.small-gap {\n grid-gap: 20px;\n}\n```\n\n```css\n.grid {\n display: grid;\n grid-template-columns: 1fr 1fr;\n grid-template-rows: auto;\n grid-gap: 50px;\n}\n\n/* This *WILL* work in IE */\n@media (max-width: 600px) {\n .grid {\n grid-template-columns: 1fr 1fr;\n grid-template-rows: auto;\n grid-gap: 20px;\n }\n}\n\n/* This *WILL* work in IE */\n.grid.small-gap {\n grid-template-columns: 1fr 1fr;\n grid-template-rows: auto;\n grid-gap: 20px;\n}\n```\n\n## Debug\n\nRun `npx autoprefixer --info` in your project directory to check\nwhich browsers are selected and which properties will be prefixed:\n\n```\n$ npx autoprefixer --info\nBrowsers:\n Edge: 16\n\nThese browsers account for 0.26% of all users globally\n\nAt-Rules:\n @viewport: ms\n\nSelectors:\n ::placeholder: ms\n\nProperties:\n appearance: webkit\n flow-from: ms\n flow-into: ms\n hyphens: ms\n overscroll-behavior: ms\n region-fragment: ms\n scroll-snap-coordinate: ms\n scroll-snap-destination: ms\n scroll-snap-points-x: ms\n scroll-snap-points-y: ms\n scroll-snap-type: ms\n text-size-adjust: ms\n text-spacing: ms\n user-select: ms\n```\n\nJS API is also available:\n\n```js\nvar info = autoprefixer().info();\nconsole.log(info);\n```\n\n\n## Security Contact\n\nTo report a security vulnerability, please use the [Tidelift security contact].\nTidelift will coordinate the fix and disclosure.\n\n[Tidelift security contact]: https://tidelift.com/security\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/postcss/autoprefixer/issues" }, "homepage": "https://github.com/postcss/autoprefixer#readme", "_id": "autoprefixer@9.5.1", "_requested": { "type": "version", "registry": true, "raw": "autoprefixer@9.5.1", "name": "autoprefixer", "escapedName": "autoprefixer", "rawSpec": "9.5.1", "saveSpec": "[Circular]", "fetchSpec": "9.5.1" }, "_spec": "9.5.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "autoprefixer@9.5.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "browserslist": "^4.5.4", "caniuse-lite": "^1.0.30000957", "normalize-range": "^0.1.2", "num2fraction": "^1.2.2", "postcss": "^7.0.14", "postcss-value-parser": "^3.3.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/autoprefixer", "error": "[Circular]", "extraneous": false }, "balanced-match": { "name": "balanced-match", "description": "Match balanced character pairs, like \"{\" and \"}\"", "version": "1.0.0", "repository": { "type": "git", "url": "git://github.com/juliangruber/balanced-match.git" }, "homepage": "https://github.com/juliangruber/balanced-match", "main": "index.js", "scripts": { "test": "make test", "bench": "make bench" }, "dependencies": {}, "devDependencies": { "matcha": "^0.7.0", "tape": "^4.6.0" }, "keywords": [ "match", "regexp", "test", "balanced", "parse" ], "author": { "name": "Julian Gruber", "email": "mail@juliangruber.com", "url": "http://juliangruber.com" }, "license": "MIT", "testling": { "files": "test/*.js", "browsers": [ "ie/8..latest", "firefox/20..latest", "firefox/nightly", "chrome/25..latest", "chrome/canary", "opera/12..latest", "opera/next", "safari/5.1..latest", "ipad/6.0..latest", "iphone/6.0..latest", "android-browser/4.2..latest" ] }, "_resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz", "_integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=", "_from": "balanced-match@1.0.0", "readme": "# balanced-match\n\nMatch balanced string pairs, like `{` and `}` or `<b>` and `</b>`. Supports regular expressions as well!\n\n[![build status](https://secure.travis-ci.org/juliangruber/balanced-match.svg)](http://travis-ci.org/juliangruber/balanced-match)\n[![downloads](https://img.shields.io/npm/dm/balanced-match.svg)](https://www.npmjs.org/package/balanced-match)\n\n[![testling badge](https://ci.testling.com/juliangruber/balanced-match.png)](https://ci.testling.com/juliangruber/balanced-match)\n\n## Example\n\nGet the first matching pair of braces:\n\n```js\nvar balanced = require('balanced-match');\n\nconsole.log(balanced('{', '}', 'pre{in{nested}}post'));\nconsole.log(balanced('{', '}', 'pre{first}between{second}post'));\nconsole.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, 'pre { in{nest} } post'));\n```\n\nThe matches are:\n\n```bash\n$ node example.js\n{ start: 3, end: 14, pre: 'pre', body: 'in{nested}', post: 'post' }\n{ start: 3,\n end: 9,\n pre: 'pre',\n body: 'first',\n post: 'between{second}post' }\n{ start: 3, end: 17, pre: 'pre', body: 'in{nest}', post: 'post' }\n```\n\n## API\n\n### var m = balanced(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\nobject with those keys:\n\n* **start** the index of the first match of `a`\n* **end** the index of the matching `b`\n* **pre** the preamble, `a` and `b` not included\n* **body** the match, `a` and `b` not included\n* **post** the postscript, `a` and `b` not included\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `['{', 'a', '']` and `{a}}` will match `['', 'a', '}']`.\n\n### var r = balanced.range(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\narray with indexes: `[ <a index>, <b index> ]`.\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `[ 1, 3 ]` and `{a}}` will match `[0, 2]`.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install balanced-match\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/juliangruber/balanced-match/issues" }, "_id": "balanced-match@1.0.0", "_requested": { "type": "version", "registry": true, "raw": "balanced-match@1.0.0", "name": "balanced-match", "escapedName": "balanced-match", "rawSpec": "1.0.0", "saveSpec": "[Circular]", "fetchSpec": "1.0.0" }, "_spec": "1.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "balanced-match@1.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/balanced-match", "error": "[Circular]", "extraneous": false }, "cosmiconfig": { "name": "cosmiconfig", "version": "5.2.0", "description": "Find and load configuration from a package.json property, rc file, or CommonJS module", "main": "dist/index.js", "files": [ "dist" ], "scripts": { "precommit": "lint-staged && jest && flow check", "lint:md-partial": "remark -u remark-preset-davidtheclark --frail --quiet --no-stdout --output --", "lint:md": "npm run lint:md-partial -- *.md", "lint:fix": "eslint . --fix", "lint": "eslint . && npm run lint:md", "format": "prettier --write \"{src/*.js,test/*.js}\"", "pretest": "npm run lint && flow check", "test": "jest --coverage", "test:watch": "jest --watch", "coverage": "jest --coverage --coverageReporters=html --coverageReporters=text", "build": "flow-remove-types src --out-dir dist --quiet", "prepublishOnly": "npm run build" }, "lint-staged": { "*.js": [ "eslint --fix", "prettier --write", "git add" ], "*.md": [ "npm run lint:md-partial", "git add" ] }, "repository": { "type": "git", "url": "git+https://github.com/davidtheclark/cosmiconfig.git" }, "keywords": [ "load", "configuration", "config" ], "author": { "name": "David Clark", "email": "david.dave.clark@gmail.com" }, "contributors": [ { "name": "Bogdan Chadkin", "email": "trysound@yandex.ru" }, { "name": "Suhas Karanth", "email": "sudo.suhas@gmail.com" } ], "license": "MIT", "bugs": { "url": "https://github.com/davidtheclark/cosmiconfig/issues" }, "homepage": "https://github.com/davidtheclark/cosmiconfig#readme", "prettier": { "trailingComma": "es5", "singleQuote": true, "printWidth": 80, "tabWidth": 2 }, "jest": { "testEnvironment": "node", "collectCoverageFrom": [ "src/*.js" ], "coverageReporters": [ "text", "html", "lcov" ], "coverageThreshold": { "global": { "branches": 100, "functions": 100, "lines": 100, "statements": 100 } }, "resetModules": true, "resetMocks": true }, "babel": { "plugins": [ "transform-flow-strip-types" ] }, "dependencies": { "import-fresh": { "name": "import-fresh", "version": "2.0.0", "description": "Import a module while bypassing the cache", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/import-fresh.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava", "heapdump": "optional-dev-dependency && node heapdump.js" }, "files": [ "index.js" ], "keywords": [ "require", "cache", "uncache", "uncached", "module", "fresh", "bypass" ], "dependencies": { "caller-path": { "name": "caller-path", "version": "2.0.0", "description": "Get the path of the caller function", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/caller-path.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "caller", "calling", "module", "path", "parent", "callsites", "callsite", "stacktrace", "stack", "trace", "function", "file" ], "dependencies": { "caller-callsite": { "name": "caller-callsite", "version": "2.0.0", "description": "Get the callsite of the caller function", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/caller-callsite.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "caller", "calling", "module", "parent", "callsites", "callsite", "stacktrace", "stack", "trace", "function", "file" ], "dependencies": { "callsites": { "name": "callsites", "version": "2.0.0", "description": "Get callsites from the V8 stack trace API", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/callsites.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "stacktrace", "v8", "callsite", "callsites", "stack", "trace", "function", "file", "line", "debug" ], "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/callsites/-/callsites-2.0.0.tgz", "_integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA=", "_from": "callsites@2.0.0", "readme": "# callsites [![Build Status](https://travis-ci.org/sindresorhus/callsites.svg?branch=master)](https://travis-ci.org/sindresorhus/callsites)\n\n> Get callsites from the [V8 stack trace API](https://github.com/v8/v8/wiki/Stack-Trace-API)\n\n\n## Install\n\n```\n$ npm install --save callsites\n```\n\n\n## Usage\n\n```js\nconst callsites = require('callsites');\n\nfunction unicorn() {\n\tconsole.log(callsites()[0].getFileName());\n\t//=> '/Users/sindresorhus/dev/callsites/test.js'\n}\n\nunicorn();\n```\n\n\n## API\n\nReturns an array of callsite objects with the following methods:\n\n- `getTypeName`: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\n- `getFunctionName`: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n- `getMethodName`: returns the name of the property of this or one of its prototypes that holds the current function\n- `getFileName`: if this function was defined in a script returns the name of the script\n- `getLineNumber`: if this function was defined in a script returns the current line number\n- `getColumnNumber`: if this function was defined in a script returns the current column number\n- `getEvalOrigin`: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n- `isToplevel`: is this a top-level invocation, that is, is this the global object?\n- `isEval`: does this call take place in code defined by a call to eval?\n- `isNative`: is this call in native V8 code?\n- `isConstructor`: is this a constructor call?\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/callsites/issues" }, "homepage": "https://github.com/sindresorhus/callsites#readme", "_id": "callsites@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "callsites@2.0.0", "name": "callsites", "escapedName": "callsites", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "callsites@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/callsites", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/caller-callsite/-/caller-callsite-2.0.0.tgz", "_integrity": "sha1-hH4PzgoiN1CpoCfFSzNzGtMVQTQ=", "_from": "caller-callsite@2.0.0", "readme": "# caller-callsite [![Build Status](https://travis-ci.org/sindresorhus/caller-callsite.svg?branch=master)](https://travis-ci.org/sindresorhus/caller-callsite)\n\n> Get the [callsite](https://github.com/sindresorhus/callsites#api) of the caller function\n\n\n## Install\n\n```\n$ npm install --save caller-callsite\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst callerCallsite = require('caller-callsite');\n\nmodule.exports = () => {\n\tconsole.log(callerCallsite().getFileName());\n\t//=> '/Users/sindresorhus/dev/unicorn/bar.js'\n}\n```\n\n```js\n// bar.js\nconst foo = require('./foo');\nfoo();\n```\n\n\n## API\n\n### callerCallsite()\n\nReturns a [`callsite`](https://github.com/sindresorhus/callsites#api) object.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/caller-callsite/issues" }, "homepage": "https://github.com/sindresorhus/caller-callsite#readme", "_id": "caller-callsite@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "caller-callsite@2.0.0", "name": "caller-callsite", "escapedName": "caller-callsite", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "caller-callsite@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "callsites": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/caller-callsite", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/caller-path/-/caller-path-2.0.0.tgz", "_integrity": "sha1-Ro+DBE42mrIBD6xfBs7uFbsssfQ=", "_from": "caller-path@2.0.0", "readme": "# caller-path [![Build Status](https://travis-ci.org/sindresorhus/caller-path.svg?branch=master)](https://travis-ci.org/sindresorhus/caller-path)\n\n> Get the path of the caller function\n\n\n## Install\n\n```\n$ npm install --save caller-path\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst callerPath = require('caller-path');\n\nmodule.exports = () => {\n\tconsole.log(callerPath());\n\t//=> '/Users/sindresorhus/dev/unicorn/bar.js'\n}\n```\n\n```js\n// bar.js\nconst foo = require('./foo');\nfoo();\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/caller-path/issues" }, "homepage": "https://github.com/sindresorhus/caller-path#readme", "_id": "caller-path@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "caller-path@2.0.0", "name": "caller-path", "escapedName": "caller-path", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "caller-path@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "caller-callsite": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/caller-path", "error": "[Circular]", "extraneous": false }, "resolve-from": { "name": "resolve-from", "version": "3.0.0", "description": "Resolve the path of a module like `require.resolve()` but from a given path", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/resolve-from.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "require", "resolve", "path", "module", "from", "like", "import", "path" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz", "_integrity": "sha1-six699nWiBvItuZTM17rywoYh0g=", "_from": "resolve-from@3.0.0", "readme": "# resolve-from [![Build Status](https://travis-ci.org/sindresorhus/resolve-from.svg?branch=master)](https://travis-ci.org/sindresorhus/resolve-from)\n\n> Resolve the path of a module like [`require.resolve()`](https://nodejs.org/api/globals.html#globals_require_resolve) but from a given path\n\n\n## Install\n\n```\n$ npm install --save resolve-from\n```\n\n\n## Usage\n\n```js\nconst resolveFrom = require('resolve-from');\n\n// There is a file at `./foo/bar.js`\n\nresolveFrom('foo', './bar');\n//=> '/Users/sindresorhus/dev/test/foo/bar.js'\n```\n\n\n## API\n\n### resolveFrom(fromDir, moduleId)\n\nLike `require()`, throws when the module can't be found.\n\n### resolveFrom.silent(fromDir, moduleId)\n\nReturns `null` instead of throwing when the module can't be found.\n\n#### fromDir\n\nType: `string`\n\nDirectory to resolve from.\n\n#### moduleId\n\nType: `string`\n\nWhat you would use in `require()`.\n\n\n## Tip\n\nCreate a partial using a bound function if you want to resolve from the same `fromDir` multiple times:\n\n```js\nconst resolveFromFoo = resolveFrom.bind(null, 'foo');\n\nresolveFromFoo('./bar');\nresolveFromFoo('./baz');\n```\n\n\n## Related\n\n- [resolve-cwd](https://github.com/sindresorhus/resolve-cwd) - Resolve the path of a module from the current working directory\n- [req-from](https://github.com/sindresorhus/req-from) - Require a module from a given path\n- [req-cwd](https://github.com/sindresorhus/req-cwd) - Require a module from the current working directory\n- [resolve-pkg](https://github.com/sindresorhus/resolve-pkg) - Resolve the path of a package regardless of it having an entry point\n- [lazy-req](https://github.com/sindresorhus/lazy-req) - Require modules lazily\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/resolve-from/issues" }, "homepage": "https://github.com/sindresorhus/resolve-from#readme", "_id": "resolve-from@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "resolve-from@3.0.0", "name": "resolve-from", "escapedName": "resolve-from", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "resolve-from@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/import-fresh/node_modules/resolve-from", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "optional-dev-dependency": "^2.0.1", "xo": "^0.18.2" }, "optionalDevDependencies": { "heapdump": "^0.3.7" }, "xo": { "rules": { "import/no-extraneous-dependencies": "off" } }, "_resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-2.0.0.tgz", "_integrity": "sha1-2BNVwVYS04bGH53dOSLUMEgipUY=", "_from": "import-fresh@2.0.0", "readme": "# import-fresh [![Build Status](https://travis-ci.org/sindresorhus/import-fresh.svg?branch=master)](https://travis-ci.org/sindresorhus/import-fresh)\n\n> Import a module while bypassing the [cache](https://nodejs.org/api/modules.html#modules_caching)\n\nUseful for testing purposes when you need to freshly import a module.\n\n\n## Install\n\n```\n$ npm install --save import-fresh\n```\n\n\n## Usage\n\n```js\n// foo.js\nlet i = 0;\nmodule.exports = () => ++i;\n```\n\n```js\nconst importFresh = require('import-fresh');\n\nrequire('./foo')();\n//=> 1\n\nrequire('./foo')();\n//=> 2\n\nimportFresh('./foo')();\n//=> 1\n\nimportFresh('./foo')();\n//=> 1\n```\n\n\n## Related\n\n- [clear-module](https://github.com/sindresorhus/clear-module) - Clear a module from the import cache\n- [import-from](https://github.com/sindresorhus/import-from) - Import a module from a given path\n- [import-cwd](https://github.com/sindresorhus/import-cwd) - Import a module from the current working directory\n- [import-lazy](https://github.com/sindresorhus/import-lazy) - Import modules lazily\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/import-fresh/issues" }, "homepage": "https://github.com/sindresorhus/import-fresh#readme", "_id": "import-fresh@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "import-fresh@2.0.0", "name": "import-fresh", "escapedName": "import-fresh", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "import-fresh@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "caller-path": "^2.0.0", "resolve-from": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/import-fresh", "error": "[Circular]", "extraneous": false }, "is-directory": { "name": "is-directory", "description": "Returns true if a filepath exists on the file system and it's directory.", "version": "0.3.1", "homepage": "https://github.com/jonschlinkert/is-directory", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "repository": { "type": "git", "url": "git+https://github.com/jonschlinkert/is-directory.git" }, "bugs": { "url": "https://github.com/jonschlinkert/is-directory/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha" }, "devDependencies": { "gulp-format-md": "^0.1.9", "mocha": "^2.4.5" }, "keywords": [ "dir", "directories", "directory", "dirs", "file", "filepath", "files", "fp", "fs", "node", "node.js", "path", "paths", "system" ], "verb": { "toc": false, "layout": "default", "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "related": { "list": [ "is-glob", "is-relative", "is-absolute" ] }, "lint": { "reflinks": true }, "reflinks": [ "verb" ] }, "_resolved": "https://registry.npmjs.org/is-directory/-/is-directory-0.3.1.tgz", "_integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE=", "_from": "is-directory@0.3.1", "readme": "# is-directory [![NPM version](https://img.shields.io/npm/v/is-directory.svg?style=flat)](https://www.npmjs.com/package/is-directory) [![NPM downloads](https://img.shields.io/npm/dm/is-directory.svg?style=flat)](https://npmjs.org/package/is-directory) [![Build Status](https://img.shields.io/travis/jonschlinkert/is-directory.svg?style=flat)](https://travis-ci.org/jonschlinkert/is-directory)\n\nReturns true if a filepath exists on the file system and it's directory.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install is-directory --save\n```\n\n## Usage\n\n```js\nvar isDirectory = require('is-directory');\n\nisDirectory('node_modules', function(err, dir) {\n if (err) throw err;\n console.log(dir);\n //=> true\n});\n\nisDirectory.sync('README.md');\n//=> false\n```\n\n## Related projects\n\nYou might also be interested in these projects:\n\n* [is-absolute](https://www.npmjs.com/package/is-absolute): Polyfill for node.js `path.isAbolute`. Returns true if a file path is absolute. | [homepage](https://github.com/jonschlinkert/is-absolute)\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern.… [more](https://www.npmjs.com/package/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob)\n* [is-relative](https://www.npmjs.com/package/is-relative): Returns `true` if the path appears to be relative. | [homepage](https://github.com/jonschlinkert/is-relative)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/is-directory/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/is-directory/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on May 21, 2016._", "readmeFilename": "README.md", "_id": "is-directory@0.3.1", "_requested": { "type": "version", "registry": true, "raw": "is-directory@0.3.1", "name": "is-directory", "escapedName": "is-directory", "rawSpec": "0.3.1", "saveSpec": "[Circular]", "fetchSpec": "0.3.1" }, "_spec": "0.3.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "is-directory@0.3.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-directory", "error": "[Circular]", "extraneous": false }, "js-yaml": { "name": "js-yaml", "version": "3.13.0", "description": "YAML 1.2 parser and serializer", "keywords": [ "yaml", "parser", "serializer", "pyyaml" ], "homepage": "https://github.com/nodeca/js-yaml", "author": { "name": "Vladimir Zapparov", "email": "dervus.grim@gmail.com" }, "contributors": [ { "name": "Aleksey V Zapparov", "email": "ixti@member.fsf.org", "url": "http://www.ixti.net/" }, { "name": "Vitaly Puzrin", "email": "vitaly@rcdesign.ru", "url": "https://github.com/puzrin" }, { "name": "Martin Grenfell", "email": "martin.grenfell@gmail.com", "url": "http://got-ravings.blogspot.com" } ], "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/nodeca/js-yaml.git" }, "files": [ "index.js", "lib/", "bin/", "dist/" ], "bin": { "js-yaml": "bin/js-yaml.js" }, "dependencies": {}, "devDependencies": { "ansi": "^0.3.1", "benchmark": "^2.1.4", "browserify": "^16.2.2", "codemirror": "^5.13.4", "eslint": "^4.1.1", "fast-check": "1.1.3", "istanbul": "^0.4.5", "mocha": "^5.2.0", "uglify-js": "^3.0.1" }, "scripts": { "test": "make test" }, "_resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.0.tgz", "_integrity": "sha512-pZZoSxcCYco+DIKBTimr67J6Hy+EYGZDY/HCWC+iAEA9h1ByhMXAIVUXMcMFpOCxQ/xjXmPI2MkDL5HRm5eFrQ==", "_from": "js-yaml@3.13.0", "readme": "JS-YAML - YAML 1.2 parser / writer for JavaScript\n=================================================\n\n[![Build Status](https://travis-ci.org/nodeca/js-yaml.svg?branch=master)](https://travis-ci.org/nodeca/js-yaml)\n[![NPM version](https://img.shields.io/npm/v/js-yaml.svg)](https://www.npmjs.org/package/js-yaml)\n\n__[Online Demo](http://nodeca.github.com/js-yaml/)__\n\n\nThis is an implementation of [YAML](http://yaml.org/), a human-friendly data\nserialization language. Started as [PyYAML](http://pyyaml.org/) port, it was\ncompletely rewritten from scratch. Now it's very fast, and supports 1.2 spec.\n\n\nInstallation\n------------\n\n### YAML module for node.js\n\n```\nnpm install js-yaml\n```\n\n\n### CLI executable\n\nIf you want to inspect your YAML files from CLI, install js-yaml globally:\n\n```\nnpm install -g js-yaml\n```\n\n#### Usage\n\n```\nusage: js-yaml [-h] [-v] [-c] [-t] file\n\nPositional arguments:\n file File with YAML document(s)\n\nOptional arguments:\n -h, --help Show this help message and exit.\n -v, --version Show program's version number and exit.\n -c, --compact Display errors in compact mode\n -t, --trace Show stack trace on error\n```\n\n\n### Bundled YAML library for browsers\n\n``` html\n<!-- esprima required only for !!js/function -->\n<script src=\"esprima.js\"></script>\n<script src=\"js-yaml.min.js\"></script>\n<script type=\"text/javascript\">\nvar doc = jsyaml.load('greeting: hello\\nname: world');\n</script>\n```\n\nBrowser support was done mostly for the online demo. If you find any errors - feel\nfree to send pull requests with fixes. Also note, that IE and other old browsers\nneeds [es5-shims](https://github.com/kriskowal/es5-shim) to operate.\n\nNotes:\n\n1. We have no resources to support browserified version. Don't expect it to be\n well tested. Don't expect fast fixes if something goes wrong there.\n2. `!!js/function` in browser bundle will not work by default. If you really need\n it - load `esprima` parser first (via amd or directly).\n3. `!!bin` in browser will return `Array`, because browsers do not support\n node.js `Buffer` and adding Buffer shims is completely useless on practice.\n\n\nAPI\n---\n\nHere we cover the most 'useful' methods. If you need advanced details (creating\nyour own tags), see [wiki](https://github.com/nodeca/js-yaml/wiki) and\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) for more\ninfo.\n\n``` javascript\nyaml = require('js-yaml');\nfs = require('fs');\n\n// Get document, or throw exception on error\ntry {\n var doc = yaml.safeLoad(fs.readFileSync('/home/ixti/example.yml', 'utf8'));\n console.log(doc);\n} catch (e) {\n console.log(e);\n}\n```\n\n\n### safeLoad (string [ , options ])\n\n**Recommended loading way.** Parses `string` as single YAML document. Returns a JavaScript\nobject or throws `YAMLException` on error. By default, does not support regexps,\nfunctions and undefined. This method is safe for untrusted data.\n\noptions:\n\n- `filename` _(default: null)_ - string to be used as a file path in\n error/warning messages.\n- `onWarning` _(default: null)_ - function to call on warning messages.\n Loader will call this function with an instance of `YAMLException` for each warning.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ - specifies a schema to use.\n - `FAILSAFE_SCHEMA` - only strings, arrays and plain objects:\n http://www.yaml.org/spec/1.2/spec.html#id2802346\n - `JSON_SCHEMA` - all JSON-supported types:\n http://www.yaml.org/spec/1.2/spec.html#id2803231\n - `CORE_SCHEMA` - same as `JSON_SCHEMA`:\n http://www.yaml.org/spec/1.2/spec.html#id2804923\n - `DEFAULT_SAFE_SCHEMA` - all supported YAML types, without unsafe ones\n (`!!js/undefined`, `!!js/regexp` and `!!js/function`):\n http://yaml.org/type/\n - `DEFAULT_FULL_SCHEMA` - all supported YAML types.\n- `json` _(default: false)_ - compatibility with JSON.parse behaviour. If true, then duplicate keys in a mapping will override values rather than throwing an error.\n\nNOTE: This function **does not** understand multi-document sources, it throws\nexception on those.\n\nNOTE: JS-YAML **does not** support schema-specific tag resolution restrictions.\nSo, the JSON schema is not as strictly defined in the YAML specification.\nIt allows numbers in any notation, use `Null` and `NULL` as `null`, etc.\nThe core schema also has no such restrictions. It allows binary notation for integers.\n\n\n### load (string [ , options ])\n\n**Use with care with untrusted sources**. The same as `safeLoad()` but uses\n`DEFAULT_FULL_SCHEMA` by default - adds some JavaScript-specific types:\n`!!js/function`, `!!js/regexp` and `!!js/undefined`. For untrusted sources, you\nmust additionally validate object structure to avoid injections:\n\n``` javascript\nvar untrusted_code = '\"toString\": !<tag:yaml.org,2002:js/function> \"function (){very_evil_thing();}\"';\n\n// I'm just converting that string, what could possibly go wrong?\nrequire('js-yaml').load(untrusted_code) + ''\n```\n\n\n### safeLoadAll (string [, iterator] [, options ])\n\nSame as `safeLoad()`, but understands multi-document sources. Applies\n`iterator` to each document if specified, or returns array of documents.\n\n``` javascript\nvar yaml = require('js-yaml');\n\nyaml.safeLoadAll(data, function (doc) {\n console.log(doc);\n});\n```\n\n\n### loadAll (string [, iterator] [ , options ])\n\nSame as `safeLoadAll()` but uses `DEFAULT_FULL_SCHEMA` by default.\n\n\n### safeDump (object [ , options ])\n\nSerializes `object` as a YAML document. Uses `DEFAULT_SAFE_SCHEMA`, so it will\nthrow an exception if you try to dump regexps or functions. However, you can\ndisable exceptions by setting the `skipInvalid` option to `true`.\n\noptions:\n\n- `indent` _(default: 2)_ - indentation width to use (in spaces).\n- `noArrayIndent` _(default: false)_ - when true, will not add an indentation level to array elements\n- `skipInvalid` _(default: false)_ - do not throw on invalid types (like function\n in the safe schema) and skip pairs and single values with such types.\n- `flowLevel` (default: -1) - specifies level of nesting, when to switch from\n block to flow style for collections. -1 means block style everwhere\n- `styles` - \"tag\" => \"style\" map. Each tag may have own set of styles.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ specifies a schema to use.\n- `sortKeys` _(default: `false`)_ - if `true`, sort keys when dumping YAML. If a\n function, use the function to sort the keys.\n- `lineWidth` _(default: `80`)_ - set max line width.\n- `noRefs` _(default: `false`)_ - if `true`, don't convert duplicate objects into references\n- `noCompatMode` _(default: `false`)_ - if `true` don't try to be compatible with older\n yaml versions. Currently: don't quote \"yes\", \"no\" and so on, as required for YAML 1.1\n- `condenseFlow` _(default: `false`)_ - if `true` flow sequences will be condensed, omitting the space between `a, b`. Eg. `'[a,b]'`, and omitting the space between `key: value` and quoting the key. Eg. `'{\"a\":b}'` Can be useful when using yaml for pretty URL query params as spaces are %-encoded.\n\nThe following table show availlable styles (e.g. \"canonical\",\n\"binary\"...) available for each tag (.e.g. !!null, !!int ...). Yaml\noutput is shown on the right side after `=>` (default setting) or `->`:\n\n``` none\n!!null\n \"canonical\" -> \"~\"\n \"lowercase\" => \"null\"\n \"uppercase\" -> \"NULL\"\n \"camelcase\" -> \"Null\"\n\n!!int\n \"binary\" -> \"0b1\", \"0b101010\", \"0b1110001111010\"\n \"octal\" -> \"01\", \"052\", \"016172\"\n \"decimal\" => \"1\", \"42\", \"7290\"\n \"hexadecimal\" -> \"0x1\", \"0x2A\", \"0x1C7A\"\n\n!!bool\n \"lowercase\" => \"true\", \"false\"\n \"uppercase\" -> \"TRUE\", \"FALSE\"\n \"camelcase\" -> \"True\", \"False\"\n\n!!float\n \"lowercase\" => \".nan\", '.inf'\n \"uppercase\" -> \".NAN\", '.INF'\n \"camelcase\" -> \".NaN\", '.Inf'\n```\n\nExample:\n\n``` javascript\nsafeDump (object, {\n 'styles': {\n '!!null': 'canonical' // dump null as ~\n },\n 'sortKeys': true // sort object keys\n});\n```\n\n### dump (object [ , options ])\n\nSame as `safeDump()` but without limits (uses `DEFAULT_FULL_SCHEMA` by default).\n\n\nSupported YAML types\n--------------------\n\nThe list of standard YAML tags and corresponding JavaScipt types. See also\n[YAML tag discussion](http://pyyaml.org/wiki/YAMLTagDiscussion) and\n[YAML types repository](http://yaml.org/type/).\n\n```\n!!null '' # null\n!!bool 'yes' # bool\n!!int '3...' # number\n!!float '3.14...' # number\n!!binary '...base64...' # buffer\n!!timestamp 'YYYY-...' # date\n!!omap [ ... ] # array of key-value pairs\n!!pairs [ ... ] # array or array pairs\n!!set { ... } # array of objects with given keys and null values\n!!str '...' # string\n!!seq [ ... ] # array\n!!map { ... } # object\n```\n\n**JavaScript-specific tags**\n\n```\n!!js/regexp /pattern/gim # RegExp\n!!js/undefined '' # Undefined\n!!js/function 'function () {...}' # Function\n```\n\nCaveats\n-------\n\nNote, that you use arrays or objects as key in JS-YAML. JS does not allow objects\nor arrays as keys, and stringifies (by calling `toString()` method) them at the\nmoment of adding them.\n\n``` yaml\n---\n? [ foo, bar ]\n: - baz\n? { foo: bar }\n: - baz\n - baz\n```\n\n``` javascript\n{ \"foo,bar\": [\"baz\"], \"[object Object]\": [\"baz\", \"baz\"] }\n```\n\nAlso, reading of properties on implicit block mapping keys is not supported yet.\nSo, the following YAML document cannot be loaded.\n\n``` yaml\n&anchor foo:\n foo: bar\n *anchor: duplicate key\n baz: bat\n *anchor: duplicate key\n```\n\n\nBreaking changes in 2.x.x -> 3.x.x\n----------------------------------\n\nIf you have not used __custom__ tags or loader classes and not loaded yaml\nfiles via `require()`, no changes are needed. Just upgrade the library.\n\nOtherwise, you should:\n\n1. Replace all occurrences of `require('xxxx.yml')` by `fs.readFileSync()` +\n `yaml.safeLoad()`.\n2. rewrite your custom tags constructors and custom loader\n classes, to conform the new API. See\n [examples](https://github.com/nodeca/js-yaml/tree/master/examples) and\n [wiki](https://github.com/nodeca/js-yaml/wiki) for details.\n\n\nLicense\n-------\n\nView the [LICENSE](https://github.com/nodeca/js-yaml/blob/master/LICENSE) file\n(MIT).\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/nodeca/js-yaml/issues" }, "_id": "js-yaml@3.13.0", "_requested": { "type": "version", "registry": true, "raw": "js-yaml@3.13.0", "name": "js-yaml", "escapedName": "js-yaml", "rawSpec": "3.13.0", "saveSpec": "[Circular]", "fetchSpec": "3.13.0" }, "_spec": "3.13.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "js-yaml@3.13.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "argparse": "^1.0.7", "esprima": "^4.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/js-yaml", "error": "[Circular]", "extraneous": false, "_deduped": "js-yaml" }, "parse-json": { "name": "parse-json", "version": "4.0.0", "description": "Parse JSON with more helpful errors", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/parse-json.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && nyc ava" }, "files": [ "index.js", "vendor" ], "keywords": [ "parse", "json", "graceful", "error", "message", "humanize", "friendly", "helpful", "string", "str" ], "dependencies": { "error-ex": { "name": "error-ex", "description": "Easy error subclassing and stack customization", "version": "1.3.2", "maintainers": [ { "name": "Josh Junon", "email": "i.am.qix@gmail.com", "url": "github.com/qix-" }, { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" } ], "keywords": [ "error", "errors", "extend", "extending", "extension", "subclass", "stack", "custom" ], "license": "MIT", "scripts": { "pretest": "xo", "test": "mocha --compilers coffee:coffee-script/register" }, "xo": { "rules": { "operator-linebreak": [ 0 ] } }, "repository": { "type": "git", "url": "git+https://github.com/qix-/node-error-ex.git" }, "files": [ "index.js" ], "devDependencies": { "coffee-script": "^1.9.3", "coveralls": "^2.11.2", "istanbul": "^0.3.17", "mocha": "^2.2.5", "should": "^7.0.1", "xo": "^0.7.1" }, "dependencies": { "is-arrayish": { "name": "is-arrayish", "description": "Determines if an object can be used as an array", "version": "0.2.1", "author": { "name": "Qix", "url": "http://github.com/qix-" }, "keywords": [ "is", "array", "duck", "type", "arrayish", "similar", "proto", "prototype", "type" ], "license": "MIT", "scripts": { "pretest": "xo", "test": "mocha --compilers coffee:coffee-script/register" }, "repository": { "type": "git", "url": "git+https://github.com/qix-/node-is-arrayish.git" }, "devDependencies": { "coffee-script": "^1.9.3", "coveralls": "^2.11.2", "istanbul": "^0.3.17", "mocha": "^2.2.5", "should": "^7.0.1", "xo": "^0.6.1" }, "_resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz", "_integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=", "_from": "is-arrayish@0.2.1", "readme": "# node-is-arrayish [![Travis-CI.org Build Status](https://img.shields.io/travis/Qix-/node-is-arrayish.svg?style=flat-square)](https://travis-ci.org/Qix-/node-is-arrayish) [![Coveralls.io Coverage Rating](https://img.shields.io/coveralls/Qix-/node-is-arrayish.svg?style=flat-square)](https://coveralls.io/r/Qix-/node-is-arrayish)\n> Determines if an object can be used like an Array\n\n## Example\n```javascript\nvar isArrayish = require('is-arrayish');\n\nisArrayish([]); // true\nisArrayish({__proto__: []}); // true\nisArrayish({}); // false\nisArrayish({length:10}); // false\n```\n\n## License\nLicensed under the [MIT License](http://opensource.org/licenses/MIT).\nYou can find a copy of it in [LICENSE](LICENSE).\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/qix-/node-is-arrayish/issues" }, "homepage": "https://github.com/qix-/node-is-arrayish#readme", "_id": "is-arrayish@0.2.1", "_requested": { "type": "version", "registry": true, "raw": "is-arrayish@0.2.1", "name": "is-arrayish", "escapedName": "is-arrayish", "rawSpec": "0.2.1", "saveSpec": "[Circular]", "fetchSpec": "0.2.1" }, "_spec": "0.2.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "is-arrayish@0.2.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-arrayish", "error": "[Circular]", "extraneous": false } }, "_resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz", "_integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==", "_from": "error-ex@1.3.2", "readme": "# node-error-ex [![Travis-CI.org Build Status](https://img.shields.io/travis/Qix-/node-error-ex.svg?style=flat-square)](https://travis-ci.org/Qix-/node-error-ex) [![Coveralls.io Coverage Rating](https://img.shields.io/coveralls/Qix-/node-error-ex.svg?style=flat-square)](https://coveralls.io/r/Qix-/node-error-ex)\n> Easily subclass and customize new Error types\n\n## Examples\nTo include in your project:\n```javascript\nvar errorEx = require('error-ex');\n```\n\nTo create an error message type with a specific name (note, that `ErrorFn.name`\nwill not reflect this):\n```javascript\nvar JSONError = errorEx('JSONError');\n\nvar err = new JSONError('error');\nerr.name; //-> JSONError\nthrow err; //-> JSONError: error\n```\n\nTo add a stack line:\n```javascript\nvar JSONError = errorEx('JSONError', {fileName: errorEx.line('in %s')});\n\nvar err = new JSONError('error')\nerr.fileName = '/a/b/c/foo.json';\nthrow err; //-> (line 2)-> in /a/b/c/foo.json\n```\n\nTo append to the error message:\n```javascript\nvar JSONError = errorEx('JSONError', {fileName: errorEx.append('in %s')});\n\nvar err = new JSONError('error');\nerr.fileName = '/a/b/c/foo.json';\nthrow err; //-> JSONError: error in /a/b/c/foo.json\n```\n\n## API\n\n#### `errorEx([name], [properties])`\nCreates a new ErrorEx error type\n\n- `name`: the name of the new type (appears in the error message upon throw;\n defaults to `Error.name`)\n- `properties`: if supplied, used as a key/value dictionary of properties to\n use when building up the stack message. Keys are property names that are\n looked up on the error message, and then passed to function values.\n\t- `line`: if specified and is a function, return value is added as a stack\n entry (error-ex will indent for you). Passed the property value given\n the key.\n - `stack`: if specified and is a function, passed the value of the property\n using the key, and the raw stack lines as a second argument. Takes no\n return value (but the stack can be modified directly).\n - `message`: if specified and is a function, return value is used as new\n `.message` value upon get. Passed the property value of the property named\n by key, and the existing message is passed as the second argument as an\n array of lines (suitable for multi-line messages).\n\nReturns a constructor (Function) that can be used just like the regular Error\nconstructor.\n\n```javascript\nvar errorEx = require('error-ex');\n\nvar BasicError = errorEx();\n\nvar NamedError = errorEx('NamedError');\n\n// --\n\nvar AdvancedError = errorEx('AdvancedError', {\n\tfoo: {\n\t\tline: function (value, stack) {\n\t\t\tif (value) {\n\t\t\t\treturn 'bar ' + value;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nvar err = new AdvancedError('hello, world');\nerr.foo = 'baz';\nthrow err;\n\n/*\n\tAdvancedError: hello, world\n\t bar baz\n\t at tryReadme() (readme.js:20:1)\n*/\n```\n\n#### `errorEx.line(str)`\nCreates a stack line using a delimiter\n\n> This is a helper function. It is to be used in lieu of writing a value object\n> for `properties` values.\n\n- `str`: The string to create\n - Use the delimiter `%s` to specify where in the string the value should go\n\n```javascript\nvar errorEx = require('error-ex');\n\nvar FileError = errorEx('FileError', {fileName: errorEx.line('in %s')});\n\nvar err = new FileError('problem reading file');\nerr.fileName = '/a/b/c/d/foo.js';\nthrow err;\n\n/*\n\tFileError: problem reading file\n\t in /a/b/c/d/foo.js\n\t at tryReadme() (readme.js:7:1)\n*/\n```\n\n#### `errorEx.append(str)`\nAppends to the `error.message` string\n\n> This is a helper function. It is to be used in lieu of writing a value object\n> for `properties` values.\n\n- `str`: The string to append\n - Use the delimiter `%s` to specify where in the string the value should go\n\n```javascript\nvar errorEx = require('error-ex');\n\nvar SyntaxError = errorEx('SyntaxError', {fileName: errorEx.append('in %s')});\n\nvar err = new SyntaxError('improper indentation');\nerr.fileName = '/a/b/c/d/foo.js';\nthrow err;\n\n/*\n\tSyntaxError: improper indentation in /a/b/c/d/foo.js\n\t at tryReadme() (readme.js:7:1)\n*/\n```\n\n## License\nLicensed under the [MIT License](http://opensource.org/licenses/MIT).\nYou can find a copy of it in [LICENSE](LICENSE).\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/qix-/node-error-ex/issues" }, "homepage": "https://github.com/qix-/node-error-ex#readme", "_id": "error-ex@1.3.2", "_requested": { "type": "version", "registry": true, "raw": "error-ex@1.3.2", "name": "error-ex", "escapedName": "error-ex", "rawSpec": "1.3.2", "saveSpec": "[Circular]", "fetchSpec": "1.3.2" }, "_spec": "1.3.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "error-ex@1.3.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-arrayish": "^0.2.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/error-ex", "error": "[Circular]", "extraneous": false }, "json-parse-better-errors": { "name": "json-parse-better-errors", "version": "1.0.2", "description": "JSON.parse with context information on error", "main": "index.js", "files": [ "*.js" ], "scripts": { "prerelease": "npm t", "postrelease": "npm publish && git push --follow-tags", "pretest": "standard", "release": "standard-version -s", "test": "tap -J --coverage test/*.js", "update-coc": "weallbehave -o . && git add CODE_OF_CONDUCT.md && git commit -m 'docs(coc): updated CODE_OF_CONDUCT.md'", "update-contrib": "weallcontribute -o . && git add CONTRIBUTING.md && git commit -m 'docs(contributing): updated CONTRIBUTING.md'" }, "repository": { "type": "git", "url": "git+https://github.com/zkat/json-parse-better-errors.git" }, "keywords": [ "JSON", "parser" ], "author": { "name": "Kat Marchán", "email": "kzm@zkat.tech" }, "license": "MIT", "devDependencies": { "nyc": "^10.3.2", "standard": "^9.0.2", "standard-version": "^4.1.0", "tap": "^10.3.3", "weallbehave": "^1.2.0", "weallcontribute": "^1.0.8" }, "config": { "nyc": { "exclude": [ "node_modules/**", "test/**" ] } }, "_resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz", "_integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==", "_from": "json-parse-better-errors@1.0.2", "readme": "# json-parse-better-errors [![npm version](https://img.shields.io/npm/v/json-parse-better-errors.svg)](https://npm.im/json-parse-better-errors) [![license](https://img.shields.io/npm/l/json-parse-better-errors.svg)](https://npm.im/json-parse-better-errors) [![Travis](https://img.shields.io/travis/zkat/json-parse-better-errors.svg)](https://travis-ci.org/zkat/json-parse-better-errors) [![AppVeyor](https://ci.appveyor.com/api/projects/status/github/zkat/json-parse-better-errors?svg=true)](https://ci.appveyor.com/project/zkat/json-parse-better-errors) [![Coverage Status](https://coveralls.io/repos/github/zkat/json-parse-better-errors/badge.svg?branch=latest)](https://coveralls.io/github/zkat/json-parse-better-errors?branch=latest)\n\n[`json-parse-better-errors`](https://github.com/zkat/json-parse-better-errors) is a Node.js library for\ngetting nicer errors out of `JSON.parse()`, including context and position of the parse errors.\n\n## Install\n\n`$ npm install --save json-parse-better-errors`\n\n## Table of Contents\n\n* [Example](#example)\n* [Features](#features)\n* [Contributing](#contributing)\n* [API](#api)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [`parse`](#parse)\n\n### Example\n\n```javascript\nconst parseJson = require('json-parse-better-errors')\n\nparseJson('\"foo\"')\nparseJson('garbage') // more useful error message\n```\n\n### Features\n\n* Like JSON.parse, but the errors are better.\n\n### Contributing\n\nThe npm team enthusiastically welcomes contributions and project participation! There's a bunch of things you can do if you want to contribute! The [Contributor Guide](CONTRIBUTING.md) has all the information you need for everything from reporting bugs to contributing entire new features. Please don't hesitate to jump in if you'd like to, or even ask us questions if something isn't clear.\n\nAll participants and maintainers in this project are expected to follow [Code of Conduct](CODE_OF_CONDUCT.md), and just generally be excellent to each other.\n\nPlease refer to the [Changelog](CHANGELOG.md) for project history details, too.\n\nHappy hacking!\n\n### API\n\n#### <a name=\"parse\"></a> `> parse(txt, ?reviver, ?context=20)`\n\nWorks just like `JSON.parse`, but will include a bit more information when an\nerror happens.\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/zkat/json-parse-better-errors/issues" }, "homepage": "https://github.com/zkat/json-parse-better-errors#readme", "_id": "json-parse-better-errors@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "json-parse-better-errors@1.0.2", "name": "json-parse-better-errors", "escapedName": "json-parse-better-errors", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "json-parse-better-errors@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/json-parse-better-errors", "error": "[Circular]", "extraneous": false, "_deduped": "json-parse-better-errors" } }, "devDependencies": { "ava": "*", "nyc": "^11.2.1", "xo": "*" }, "_resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz", "_integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=", "_from": "parse-json@4.0.0", "readme": "# parse-json [![Build Status](https://travis-ci.org/sindresorhus/parse-json.svg?branch=master)](https://travis-ci.org/sindresorhus/parse-json)\n\n> Parse JSON with more helpful errors\n\n\n## Install\n\n```\n$ npm install parse-json\n```\n\n\n## Usage\n\n```js\nconst parseJson = require('parse-json');\nconst json = '{\\n\\t\"foo\": true,\\n}';\n\n\nJSON.parse(json);\n/*\nundefined:3\n}\n^\nSyntaxError: Unexpected token }\n*/\n\n\nparseJson(json);\n/*\nJSONError: Trailing comma in object at 3:1\n}\n^\n*/\n\n\nparseJson(json, 'foo.json');\n/*\nJSONError: Trailing comma in object in foo.json:3:1\n}\n^\n*/\n\n\n// You can also add the filename at a later point\ntry {\n\tparseJson(json);\n} catch (err) {\n\terr.fileName = 'foo.json';\n\tthrow err;\n}\n/*\nJSONError: Trailing comma in object in foo.json:3:1\n}\n^\n*/\n```\n\n## API\n\n### parseJson(input, [reviver], [filename])\n\n#### input\n\nType: `string`\n\n#### reviver\n\nType: `Function`\n\nPrescribes how the value originally produced by parsing is transformed, before being returned. See [`JSON.parse` docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter\n) for more.\n\n#### filename\n\nType: `string`\n\nFilename displayed in the error message.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/parse-json/issues" }, "homepage": "https://github.com/sindresorhus/parse-json#readme", "_id": "parse-json@4.0.0", "_requested": { "type": "version", "registry": true, "raw": "parse-json@4.0.0", "name": "parse-json", "escapedName": "parse-json", "rawSpec": "4.0.0", "saveSpec": "[Circular]", "fetchSpec": "4.0.0" }, "_spec": "4.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "parse-json@4.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "error-ex": "^1.3.1", "json-parse-better-errors": "^1.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/parse-json", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "babel-eslint": "^8.0.3", "babel-plugin-transform-flow-strip-types": "^6.22.0", "del": "^3.0.0", "eslint": "^4.12.1", "eslint-config-davidtheclark-node": "^0.2.2", "eslint-config-prettier": "^2.9.0", "eslint-plugin-flowtype": "^2.39.1", "eslint-plugin-node": "^5.2.1", "flow-bin": "^0.68.0", "flow-remove-types": "^1.2.3", "husky": "^0.14.3", "jest": "^21.2.1", "lint-staged": "^6.0.0", "make-dir": "^1.2.0", "parent-module": "^0.1.0", "prettier": "^1.8.2", "remark-cli": "^5.0.0", "remark-preset-davidtheclark": "^0.7.0" }, "engines": { "node": ">=4" }, "_resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-5.2.0.tgz", "_integrity": "sha512-nxt+Nfc3JAqf4WIWd0jXLjTJZmsPLrA9DDc4nRw2KFJQJK7DNooqSXrNI7tzLG50CF8axczly5UV929tBmh/7g==", "_from": "cosmiconfig@5.2.0", "readme": "# cosmiconfig\n\n[![Build Status](https://img.shields.io/travis/davidtheclark/cosmiconfig/master.svg?label=unix%20build)](https://travis-ci.org/davidtheclark/cosmiconfig) [![Build status](https://img.shields.io/appveyor/ci/davidtheclark/cosmiconfig/master.svg?label=windows%20build)](https://ci.appveyor.com/project/davidtheclark/cosmiconfig/branch/master)\n[![codecov](https://codecov.io/gh/davidtheclark/cosmiconfig/branch/master/graph/badge.svg)](https://codecov.io/gh/davidtheclark/cosmiconfig)\n\nCosmiconfig searches for and loads configuration for your program.\n\nIt features smart defaults based on conventional expectations in the JavaScript ecosystem.\nBut it's also flexible enough to search wherever you'd like to search, and load whatever you'd like to load.\n\nBy default, Cosmiconfig will start where you tell it to start and search up the directory tree for the following:\n\n- a `package.json` property\n- a JSON or YAML, extensionless \"rc file\"\n- an \"rc file\" with the extensions `.json`, `.yaml`, `.yml`, or `.js`.\n- a `.config.js` CommonJS module\n\nFor example, if your module's name is \"soursocks\", cosmiconfig will search up the directory tree for configuration in the following places:\n\n- a `soursocks` property in `package.json`\n- a `.soursocksrc` file in JSON or YAML format\n- a `.soursocksrc.json` file\n- a `.soursocksrc.yaml`, `.soursocksrc.yml`, or `.soursocksrc.js` file\n- a `soursocks.config.js` file exporting a JS object\n\nCosmiconfig continues to search up the directory tree, checking each of these places in each directory, until it finds some acceptable configuration (or hits the home directory).\n\n👀 **Looking for the v4 docs?**\nv5 involves significant revisions to Cosmiconfig's API, allowing for much greater flexibility and clarifying some things.\nIf you have trouble switching from v4 to v5, please file an issue.\nIf you are still using v4, those v4 docs are available [in the `4.0.0` tag](https://github.com/davidtheclark/cosmiconfig/tree/4.0.0).\n\n## Table of contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Result](#result)\n- [cosmiconfig()](#cosmiconfig-1)\n - [moduleName](#modulename)\n- [explorer.search()](#explorersearch)\n - [searchFrom](#searchfrom)\n- [explorer.searchSync()](#explorersearchsync)\n- [explorer.load()](#explorerload)\n- [explorer.loadSync()](#explorerloadsync)\n- [explorer.clearLoadCache()](#explorerclearloadcache)\n- [explorer.clearSearchCache()](#explorerclearsearchcache)\n- [explorer.clearCaches()](#explorerclearcaches)\n- [cosmiconfigOptions](#cosmiconfigoptions)\n - [searchPlaces](#searchplaces)\n - [loaders](#loaders)\n - [packageProp](#packageprop)\n - [stopDir](#stopdir)\n - [cache](#cache)\n - [transform](#transform)\n - [ignoreEmptySearchPlaces](#ignoreemptysearchplaces)\n- [Caching](#caching)\n- [Differences from rc](#differences-from-rc)\n- [Contributing & Development](#contributing--development)\n\n## Installation\n\n```\nnpm install cosmiconfig\n```\n\nTested in Node 4+.\n\n## Usage\n\nCreate a Cosmiconfig explorer, then either `search` for or directly `load` a configuration file.\n\n```js\nconst cosmiconfig = require('cosmiconfig');\n// ...\nconst explorer = cosmiconfig(moduleName);\n\n// Search for a configuration by walking up directories.\n// See documentation for search, below.\nexplorer.search()\n .then((result) => {\n // result.config is the parsed configuration object.\n // result.filepath is the path to the config file that was found.\n // result.isEmpty is true if there was nothing to parse in the config file.\n })\n .catch((error) => {\n // Do something constructive.\n });\n\n// Load a configuration directly when you know where it should be.\n// The result object is the same as for search.\n// See documentation for load, below.\nexplorer.load(pathToConfig).then(..);\n\n// You can also search and load synchronously.\nconst searchedFor = explorer.searchSync();\nconst loaded = explorer.loadSync(pathToConfig);\n```\n\n## Result\n\nThe result object you get from `search` or `load` has the following properties:\n\n- **config:** The parsed configuration object. `undefined` if the file is empty.\n- **filepath:** The path to the configuration file that was found.\n- **isEmpty:** `true` if the configuration file is empty. This property will not be present if the configuration file is not empty.\n\n## cosmiconfig()\n\n```js\nconst explorer = cosmiconfig(moduleName[, cosmiconfigOptions])\n```\n\nCreates a cosmiconfig instance (\"explorer\") configured according to the arguments, and initializes its caches.\n\n### moduleName\n\nType: `string`. **Required.**\n\nYour module name. This is used to create the default [`searchPlaces`] and [`packageProp`].\n\n**[`cosmiconfigOptions`] are documented below.**\nYou may not need them, and should first read about the functions you'll use.\n\n## explorer.search()\n\n```js\nexplorer.search([searchFrom]).then(result => {..})\n```\n\nSearches for a configuration file. Returns a Promise that resolves with a [result] or with `null`, if no configuration file is found.\n\nYou can do the same thing synchronously with [`searchSync()`].\n\nLet's say your module name is `goldengrahams` so you initialized with `const explorer = cosmiconfig('goldengrahams');`.\nHere's how your default [`search()`] will work:\n\n- Starting from `process.cwd()` (or some other directory defined by the `searchFrom` argument to [`search()`]), look for configuration objects in the following places:\n 1. A `goldengrahams` property in a `package.json` file.\n 2. A `.goldengrahamsrc` file with JSON or YAML syntax.\n 3. A `.goldengrahamsrc.json` file.\n 4. A `.goldengrahamsrc.yaml`, `.goldengrahamsrc.yml`, or `.goldengrahamsrc.js` file.\n 5. A `goldengrahams.config.js` JS file exporting the object.\n- If none of those searches reveal a configuration object, move up one directory level and try again.\n So the search continues in `./`, `../`, `../../`, `../../../`, etc., checking the same places in each directory.\n- Continue searching until arriving at your home directory (or some other directory defined by the cosmiconfig option [`stopDir`]).\n- If at any point a parseable configuration is found, the [`search()`] Promise resolves with its [result] \\(or, with [`searchSync()`], the [result] is returned).\n- If no configuration object is found, the [`search()`] Promise resolves with `null` (or, with [`searchSync()`], `null` is returned).\n- If a configuration object is found *but is malformed* (causing a parsing error), the [`search()`] Promise rejects with that error (so you should `.catch()` it). (Or, with [`searchSync()`], the error is thrown.)\n\n**If you know exactly where your configuration file should be, you can use [`load()`], instead.**\n\n**The search process is highly customizable.**\nUse the cosmiconfig options [`searchPlaces`] and [`loaders`] to precisely define where you want to look for configurations and how you want to load them.\n\n### searchFrom\n\nType: `string`.\nDefault: `process.cwd()`.\n\nA filename.\n[`search()`] will start its search here.\n\nIf the value is a directory, that's where the search starts.\nIf it's a file, the search starts in that file's directory.\n\n## explorer.searchSync()\n\n```js\nconst result = explorer.searchSync([searchFrom]);\n```\n\nSynchronous version of [`search()`].\n\nReturns a [result] or `null`.\n\n## explorer.load()\n\n```js\nexplorer.load(loadPath).then(result => {..})\n```\n\nLoads a configuration file. Returns a Promise that resolves with a [result] or rejects with an error (if the file does not exist or cannot be loaded).\n\nUse `load` if you already know where the configuration file is and you just need to load it.\n\n```js\nexplorer.load('load/this/file.json'); // Tries to load load/this/file.json.\n```\n\nIf you load a `package.json` file, the result will be derived from whatever property is specified as your [`packageProp`].\n\n## explorer.loadSync()\n\n```js\nconst result = explorer.loadSync(loadPath);\n```\n\nSynchronous version of [`load()`].\n\nReturns a [result].\n\n## explorer.clearLoadCache()\n\nClears the cache used in [`load()`].\n\n## explorer.clearSearchCache()\n\nClears the cache used in [`search()`].\n\n## explorer.clearCaches()\n\nPerforms both [`clearLoadCache()`] and [`clearSearchCache()`].\n\n## cosmiconfigOptions\n\nType: `Object`.\n\nPossible options are documented below.\n\n### searchPlaces\n\nType: `Array<string>`.\nDefault: See below.\n\nAn array of places that [`search()`] will check in each directory as it moves up the directory tree.\nEach place is relative to the directory being searched, and the places are checked in the specified order.\n\n**Default `searchPlaces`:**\n\n```js\n[\n 'package.json',\n `.${moduleName}rc`,\n `.${moduleName}rc.json`,\n `.${moduleName}rc.yaml`,\n `.${moduleName}rc.yml`,\n `.${moduleName}rc.js`,\n `${moduleName}.config.js`,\n]\n```\n\nCreate your own array to search more, fewer, or altogether different places.\n\nEvery item in `searchPlaces` needs to have a loader in [`loaders`] that corresponds to its extension.\n(Common extensions are covered by default loaders.)\nRead more about [`loaders`] below.\n\n`package.json` is a special value: When it is included in `searchPlaces`, Cosmiconfig will always parse it as JSON and load a property within it, not the whole file.\nThat property is defined with the [`packageProp`] option, and defaults to your module name.\n\nExamples, with a module named `porgy`:\n\n```js\n// Disallow extensions on rc files:\n[\n 'package.json',\n '.porgyrc',\n 'porgy.config.js'\n]\n\n// ESLint searches for configuration in these places:\n[\n '.eslintrc.js',\n '.eslintrc.yaml',\n '.eslintrc.yml',\n '.eslintrc.json',\n '.eslintrc',\n 'package.json'\n]\n\n// Babel looks in fewer places:\n[\n 'package.json',\n '.babelrc'\n]\n\n// Maybe you want to look for a wide variety of JS flavors:\n[\n 'porgy.config.js',\n 'porgy.config.mjs',\n 'porgy.config.ts',\n 'porgy.config.coffee'\n]\n// ^^ You will need to designate custom loaders to tell\n// Cosmiconfig how to handle these special JS flavors.\n\n// Look within a .config/ subdirectory of every searched directory:\n[\n 'package.json',\n '.porgyrc',\n '.config/.porgyrc',\n '.porgyrc.json',\n '.config/.porgyrc.json'\n]\n```\n\n### loaders\n\nType: `Object`.\nDefault: See below.\n\nAn object that maps extensions to the loader functions responsible for loading and parsing files with those extensions.\n\nCosmiconfig exposes its default loaders for `.js`, `.json`, and `.yaml` as `cosmiconfig.loadJs`, `cosmiconfig.loadJson`, and `cosmiconfig.loadYaml`, respectively.\n\n**Default `loaders`:**\n\n```js\n{\n '.json': cosmiconfig.loadJson,\n '.yaml': cosmiconfig.loadYaml,\n '.yml': cosmiconfig.loadYaml,\n '.js': cosmiconfig.loadJs,\n noExt: cosmiconfig.loadYaml\n}\n```\n\n(YAML is a superset of JSON; which means YAML parsers can parse JSON; which is how extensionless files can be either YAML *or* JSON with only one parser.)\n\n**If you provide a `loaders` object, your object will be *merged* with the defaults.**\nSo you can override one or two without having to override them all.\n\n**Keys in `loaders`** are extensions (starting with a period), or `noExt` to specify the loader for files *without* extensions, like `.soursocksrc`.\n\n**Values in `loaders`** are either a loader function (described below) or an object with `sync` and/or `async` properties, whose values are loader functions.\n\n**The most common use case for custom loaders value is to load extensionless `rc` files as strict JSON**, instead of JSON *or* YAML (the default).\nTo accomplish that, provide the following `loaders` value:\n\n```js\n{\n noExt: cosmiconfig.loadJson\n}\n```\n\nIf you want to load files that are not handled by the loader functions Cosmiconfig exposes, you can write a custom loader function or use one from NPM if it exists.\n\n**Third-party loaders:**\n\n- [@endemolshinegroup/cosmiconfig-typescript-loader](https://github.com/EndemolShineGroup/cosmiconfig-typescript-loader)\n\n**Use cases for custom loader function:**\n\n- Allow configuration syntaxes that aren't handled by Cosmiconfig's defaults, like JSON5, INI, or XML.\n- Allow ES2015 modules from `.mjs` configuration files.\n- Parse JS files with Babel before deriving the configuration.\n\n**Custom loader functions** have the following signature:\n\n```js\n// Sync\n(filepath: string, content: string) => Object | null\n\n// Async\n(filepath: string, content: string) => Object | null | Promise<Object | null>\n```\n\nCosmiconfig reads the file when it checks whether the file exists, so it will provide you with both the file's path and its content.\nDo whatever you need to, and return either a configuration object or `null` (or, for async-only loaders, a Promise that resolves with one of those).\n`null` indicates that no real configuration was found and the search should continue.\n\nIt's easiest if you make your custom loader function synchronous.\nThen it can be used regardless of whether you end up calling [`search()`] or [`searchSync()`], [`load()`] or [`loadSync()`].\nIf you want or need to provide an async-only loader, you can do so by making the value of `loaders` an object with an `async` property whose value is the async loader.\nYou can also add a `sync` property to designate a sync loader, if you want to use both async and sync search and load functions.\n\nA few things to note:\n\n- If you use a custom loader, be aware of whether it's sync or async and how that aligned with your usage of sync or async search and load functions.\n- **Special JS syntax can also be handled by using a `require` hook**, because `cosmiconfig.loadJs` just uses `require`.\n Whether you use custom loaders or a `require` hook is up to you.\n\nExamples:\n\n```js\n// Allow JSON5 syntax:\n{\n '.json': json5Loader\n}\n\n// Allow XML, and treat sync and async separately:\n{\n '.xml': { async: asyncXmlLoader, sync: syncXmlLoader }\n}\n\n// Allow a special configuration syntax of your own creation:\n{\n '.special': specialLoader\n}\n\n// Allow many flavors of JS, using custom loaders:\n{\n '.mjs': esmLoader,\n '.ts': typeScriptLoader,\n '.coffee': coffeeScriptLoader\n}\n\n// Allow many flavors of JS but rely on require hooks:\n{\n '.mjs': cosmiconfig.loadJs,\n '.ts': cosmiconfig.loadJs,\n '.coffee': cosmiconfig.loadJs\n}\n```\n\n### packageProp\n\nType: `string | Array<string>`.\nDefault: `` `${moduleName}` ``.\n\nName of the property in `package.json` to look for.\n\nUse a period-delimited string or an array of strings to describe a path to nested properties.\n\nFor example, the value `'configs.myPackage'` or `['configs', 'myPackage']` will get you the `\"myPackage\"` value in a `package.json` like this:\n\n```json\n{\n \"configs\": {\n \"myPackage\": {..}\n }\n}\n```\n\nIf nested property names within the path include periods, you need to use an array of strings. For example, the value `['configs', 'foo.bar', 'baz']` will get you the `\"baz\"` value in a `package.json` like this:\n\n```json\n{\n \"configs\": {\n \"foo.bar\": {\n \"baz\": {..}\n }\n }\n}\n```\n\nIf a string includes period but corresponds to a top-level property name, it will not be interpreted as a period-delimited path. For example, the value `'one.two'` will get you the `\"three\"` value in a `package.json` like this:\n\n```json\n{\n \"one.two\": \"three\",\n \"one\": {\n \"two\": \"four\"\n }\n}\n```\n\n### stopDir\n\nType: `string`.\nDefault: Absolute path to your home directory.\n\nDirectory where the search will stop.\n\n### cache\n\nType: `boolean`.\nDefault: `true`.\n\nIf `false`, no caches will be used.\nRead more about [\"Caching\"](#caching) below.\n\n### transform\n\nType: `(Result) => Promise<Result> | Result`.\n\nA function that transforms the parsed configuration. Receives the [result].\n\nIf using [`search()`] or [`load()`] \\(which are async), the transform function can return the transformed result or return a Promise that resolves with the transformed result.\nIf using [`searchSync()`] or [`loadSync()`], the function must be synchronous and return the transformed result.\n\nThe reason you might use this option — instead of simply applying your transform function some other way — is that *the transformed result will be cached*. If your transformation involves additional filesystem I/O or other potentially slow processing, you can use this option to avoid repeating those steps every time a given configuration is searched or loaded.\n\n### ignoreEmptySearchPlaces\n\nType: `boolean`.\nDefault: `true`.\n\nBy default, if [`search()`] encounters an empty file (containing nothing but whitespace) in one of the [`searchPlaces`], it will ignore the empty file and move on.\nIf you'd like to load empty configuration files, instead, set this option to `false`.\n\nWhy might you want to load empty configuration files?\nIf you want to throw an error, or if an empty configuration file means something to your program.\n\n## Caching\n\nAs of v2, cosmiconfig uses caching to reduce the need for repetitious reading of the filesystem or expensive transforms. Every new cosmiconfig instance (created with `cosmiconfig()`) has its own caches.\n\nTo avoid or work around caching, you can do the following:\n\n- Set the `cosmiconfig` option [`cache`] to `false`.\n- Use the cache-clearing methods [`clearLoadCache()`], [`clearSearchCache()`], and [`clearCaches()`].\n- Create separate instances of cosmiconfig (separate \"explorers\").\n\n## Differences from [rc](https://github.com/dominictarr/rc)\n\n[rc](https://github.com/dominictarr/rc) serves its focused purpose well. cosmiconfig differs in a few key ways — making it more useful for some projects, less useful for others:\n\n- Looks for configuration in some different places: in a `package.json` property, an rc file, a `.config.js` file, and rc files with extensions.\n- Built-in support for JSON, YAML, and CommonJS formats.\n- Stops at the first configuration found, instead of finding all that can be found up the directory tree and merging them automatically.\n- Options.\n- Asynchronous by default (though can be run synchronously).\n\n## Contributing & Development\n\nPlease note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms.\n\nAnd please do participate!\n\n[result]: #result\n\n[`load()`]: #explorerload\n\n[`loadsync()`]: #explorerloadsync\n\n[`search()`]: #explorersearch\n\n[`searchsync()`]: #explorersearchsync\n\n[`clearloadcache()`]: #explorerclearloadcache\n\n[`clearsearchcache()`]: #explorerclearsearchcache\n\n[`clearcaches()`]: #explorerclearcaches\n\n[`packageprop`]: #packageprop\n\n[`cache`]: #cache\n\n[`stopdir`]: #stopdir\n\n[`searchplaces`]: #searchplaces\n\n[`loaders`]: #loaders\n\n[`cosmiconfigoptions`]: #cosmiconfigoptions\n", "readmeFilename": "README.md", "_id": "cosmiconfig@5.2.0", "_requested": { "type": "version", "registry": true, "raw": "cosmiconfig@5.2.0", "name": "cosmiconfig", "escapedName": "cosmiconfig", "rawSpec": "5.2.0", "saveSpec": "[Circular]", "fetchSpec": "5.2.0" }, "_spec": "5.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "cosmiconfig@5.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "import-fresh": "^2.0.0", "is-directory": "^0.3.1", "js-yaml": "^3.13.0", "parse-json": "^4.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/cosmiconfig", "error": "[Circular]", "extraneous": false }, "execall": { "name": "execall", "version": "1.0.0", "description": "Find multiple RegExp matches in a string", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/execall.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "node test.js" }, "files": [ "index.js" ], "keywords": [ "regex", "regexp", "re", "regular", "expression", "exec", "match", "matches", "execall", "all", "find", "findall", "immutable", "string", "str", "multiple", "many", "global" ], "dependencies": { "clone-regexp": { "name": "clone-regexp", "version": "1.0.1", "description": "Clone and modify a RegExp instance", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/clone-regexp.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "http://sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha" }, "files": [ "index.js" ], "keywords": [ "regexp", "regex", "re", "regular", "expression", "clone", "duplicate", "modify", "mutate" ], "dependencies": { "is-regexp": { "name": "is-regexp", "version": "1.0.0", "description": "Check whether a variable is a regular expression", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/is-regexp.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "http://sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha" }, "files": [ "index.js" ], "keywords": [ "regex", "regexp", "regular", "expression", "regular expression", "re", "check", "type", "is" ], "devDependencies": { "mocha": "*" }, "_resolved": "https://registry.npmjs.org/is-regexp/-/is-regexp-1.0.0.tgz", "_integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk=", "_from": "is-regexp@1.0.0", "readme": "# is-regexp [![Build Status](https://travis-ci.org/sindresorhus/is-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/is-regexp)\n\n> Check whether a variable is a regular expression\n\n\n## Install\n\n```sh\n$ npm install --save is-regexp\n```\n\n\n## Usage\n\n```js\nvar isRegexp = require('is-regexp');\n\nisRegexp('unicorn');\n//=> false\n\nisRegexp(/unicorn/);\n//=> true\n\nisRegexp(new RegExp('unicorn'));\n//=> true\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/is-regexp/issues" }, "homepage": "https://github.com/sindresorhus/is-regexp#readme", "_id": "is-regexp@1.0.0", "_requested": { "type": "version", "registry": true, "raw": "is-regexp@1.0.0", "name": "is-regexp", "escapedName": "is-regexp", "rawSpec": "1.0.0", "saveSpec": "[Circular]", "fetchSpec": "1.0.0" }, "_spec": "1.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-regexp@1.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-regexp", "error": "[Circular]", "extraneous": false }, "is-supported-regexp-flag": { "name": "is-supported-regexp-flag", "version": "1.0.1", "description": "Check whether a RegExp flag is supported. Mostly useful for `y` and `u`.", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/is-supported-regexp-flag.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "http://sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha" }, "files": [ "index.js" ], "keywords": [ "regexp", "regex", "re", "check", "is", "support", "supported", "valid", "flag" ], "devDependencies": { "mocha": "*" }, "_resolved": "https://registry.npmjs.org/is-supported-regexp-flag/-/is-supported-regexp-flag-1.0.1.tgz", "_integrity": "sha512-3vcJecUUrpgCqc/ca0aWeNu64UGgxcvO60K/Fkr1N6RSvfGCTU60UKN68JDmKokgba0rFFJs12EnzOQa14ubKQ==", "_from": "is-supported-regexp-flag@1.0.1", "readme": "# is-supported-regexp-flag [![Build Status](https://travis-ci.org/sindresorhus/is-supported-regexp-flag.svg?branch=master)](https://travis-ci.org/sindresorhus/is-supported-regexp-flag)\n\n> Check whether a RegExp flag is supported. Mostly useful for `y` and `u`.\n\n\n## Install\n\n```sh\n$ npm install --save is-supported-regexp-flag\n```\n\n\n## Usage\n\n```js\nvar isSupportedRegexpFlag = require('is-supported-regexp-flag');\n\nisSupportedRegexpFlag('g'); // as in /foo/g\n//=> true\n\nisSupportedRegexpFlag('u');\n//=> false\n```\n\nRegExp throws if you're trying to use unsupported flags. This is a nicer way to check for support.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/is-supported-regexp-flag/issues" }, "homepage": "https://github.com/sindresorhus/is-supported-regexp-flag#readme", "_id": "is-supported-regexp-flag@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "is-supported-regexp-flag@1.0.1", "name": "is-supported-regexp-flag", "escapedName": "is-supported-regexp-flag", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-supported-regexp-flag@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-supported-regexp-flag", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "mocha": "*" }, "_resolved": "https://registry.npmjs.org/clone-regexp/-/clone-regexp-1.0.1.tgz", "_integrity": "sha512-Fcij9IwRW27XedRIJnSOEupS7RVcXtObJXbcUOX93UCLqqOdRpkvzKywOOSizmEK/Is3S/RHX9dLdfo6R1Q1mw==", "_from": "clone-regexp@1.0.1", "readme": "# clone-regexp [![Build Status](https://travis-ci.org/sindresorhus/clone-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/clone-regexp)\n\n> Clone and modify a [RegExp](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) instance\n\n\n## Install\n\n```sh\n$ npm install --save clone-regexp\n```\n\n\n## Usage\n\n```js\nvar cloneRegexp = require('clone-regexp');\nvar re = /[a-z]/gi;\n\ncloneRegexp(re);\n//=> /[a-z]/gi\n\ncloneRegexp(re) === re;\n//=> false\n\ncloneRegexp(re, {global: false});\n//=> /[a-z]/i\n\ncloneRegexp(re, {multiline: true});\n//=> /[a-z]/gim\n\ncloneRegexp(re, {source: 'unicorn'});\n//=> /unicorn/gi\n```\n\n\n## API\n\n### cloneRegexp(regexp, [options])\n\n#### regex\n\nType: `regexp`\n\nRegExp instance to clone.\n\n\n#### options\n\nType: `object` \nProperties: [`source`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/source) [`global`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global) [`ignoreCase`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/ignoreCase) [`multiline`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/multiline) [`sticky`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky) [`unicode`](http://norbertlindenberg.com/2012/05/ecmascript-supplementary-characters/#RegExp)\n\nOptionally modify the cloned RegExp instance.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/clone-regexp/issues" }, "homepage": "https://github.com/sindresorhus/clone-regexp#readme", "_id": "clone-regexp@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "clone-regexp@1.0.1", "name": "clone-regexp", "escapedName": "clone-regexp", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "clone-regexp@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-regexp": "^1.0.0", "is-supported-regexp-flag": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/clone-regexp", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "0.0.4" }, "_resolved": "https://registry.npmjs.org/execall/-/execall-1.0.0.tgz", "_integrity": "sha1-c9CQTjlbPKsGWLCNCewlMH8pu3M=", "_from": "execall@1.0.0", "readme": "# execall [![Build Status](https://travis-ci.org/sindresorhus/execall.svg?branch=master)](https://travis-ci.org/sindresorhus/execall)\n\n> Find multiple RegExp matches in a string\n\nInstead of having to iterate over `RegExp#exec`, immutable, and with a nicer result format.\n\n\n## Install\n\n```\n$ npm install --save execall\n```\n\n\n## Usage\n\n```js\nvar execall = require('execall');\n\nexecall(/(\\d+)/g, '$200 and $400');\n/*\n[\n\t{\n\t\tmatch: '200',\n\t\tsub: ['200'],\n\t\tindex: 1\n\t},\n\t{\n\t\tmatch: '400',\n\t\tsub: ['400'],\n\t\tindex: 10\n\t}\n]\n*/\n```\n\n\n## API\n\n### execall(re, input)\n\nReturns an array of objects with a match, sub-matches, and index.\n\n#### re\n\nType: `regexp`\n\nRegular expression to match against the `input`.\n\n#### input\n\nType: `string`\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/execall/issues" }, "homepage": "https://github.com/sindresorhus/execall#readme", "_id": "execall@1.0.0", "_requested": { "type": "version", "registry": true, "raw": "execall@1.0.0", "name": "execall", "escapedName": "execall", "rawSpec": "1.0.0", "saveSpec": "[Circular]", "fetchSpec": "1.0.0" }, "_spec": "1.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "execall@1.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "clone-regexp": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/execall", "error": "[Circular]", "extraneous": false }, "file-entry-cache": { "name": "file-entry-cache", "version": "5.0.1", "description": "Super simple cache for file metadata, useful for process that work o a given series of files and that only need to repeat the job on the changed ones since the previous run of the process", "repository": { "type": "git", "url": "git+https://github.com/royriojas/file-entry-cache.git" }, "license": "MIT", "author": { "name": "Roy Riojas", "url": "http://royriojas.com" }, "main": "cache.js", "files": [ "cache.js" ], "engines": { "node": ">=4" }, "scripts": { "beautify": "esbeautifier 'cache.js' 'test/**/*.js' 'perf.js'", "beautify-check": "npm run beautify -- -k", "eslint": "eslinter 'cache.js' 'specs/**/*.js' 'perf.js'", "lint": "npm run beautify && npm run eslint", "verify": "npm run beautify-check && npm run eslint", "install-hooks": "prepush install && changelogx install-hook && precommit install", "changelog": "changelogx -f markdown -o ./changelog.md", "do-changelog": "npm run changelog && git add ./changelog.md && git commit -m 'DOC: Generate changelog' --no-verify", "pre-v": "npm run test", "post-v": "npm run do-changelog && git push --no-verify && git push --tags --no-verify", "bump-major": "npm run pre-v && npm version major -m 'BLD: Release v%s' && npm run post-v", "bump-minor": "npm run pre-v && npm version minor -m 'BLD: Release v%s' && npm run post-v", "bump-patch": "npm run pre-v && npm version patch -m 'BLD: Release v%s' && npm run post-v", "test": "npm run verify --silent && mocha -R spec test/specs", "perf": "node perf.js", "cover": "istanbul cover test/runner.js html text-summary", "watch": "watch-run -i -p 'test/specs/**/*.js' istanbul cover test/runner.js html text-summary" }, "prepush": [ "npm run verify" ], "precommit": [ "npm run verify" ], "keywords": [ "file cache", "task cache files", "file cache", "key par", "key value", "cache" ], "changelogx": { "ignoreRegExp": [ "BLD: Release", "DOC: Generate Changelog", "Generated Changelog" ], "issueIDRegExp": "#(\\d+)", "commitURL": "https://github.com/royriojas/file-entry-cache/commit/{0}", "authorURL": "https://github.com/{0}", "issueIDURL": "https://github.com/royriojas/file-entry-cache/issues/{0}", "projectName": "file-entry-cache" }, "devDependencies": { "chai": "^3.2.0", "changelogx": "3.0.0", "commander": "^2.6.0", "del": "^2.0.2", "esbeautifier": "^4.2.11", "eslinter": "^2.3.3", "glob-expand": "^0.1.0", "istanbul": "^0.3.6", "mocha": "^2.1.0", "precommit": "^1.1.5", "prepush": "^3.1.4", "proxyquire": "^1.3.1", "sinon": "^1.12.2", "sinon-chai": "^2.7.0", "watch-run": "^1.2.1", "write": "^0.3.1" }, "dependencies": {}, "_resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz", "_integrity": "sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==", "_from": "file-entry-cache@5.0.1", "readme": "# file-entry-cache\n> Super simple cache for file metadata, useful for process that work o a given series of files\n> and that only need to repeat the job on the changed ones since the previous run of the process — Edit\n\n[![NPM Version](http://img.shields.io/npm/v/file-entry-cache.svg?style=flat)](https://npmjs.org/package/file-entry-cache)\n[![Build Status](http://img.shields.io/travis/royriojas/file-entry-cache.svg?style=flat)](https://travis-ci.org/royriojas/file-entry-cache)\n\n## install\n\n```bash\nnpm i --save file-entry-cache\n```\n\n## Usage\n\nThe module exposes two functions `create` and `createFromFile`.\n\n## `create(cacheName, [directory, useCheckSum])`\n- **cacheName**: the name of the cache to be created\n- **directory**: Optional the directory to load the cache from\n- **usecheckSum**: Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file.\n\n## `createFromFile(pathToCache, [useCheckSum])`\n- **pathToCache**: the path to the cache file (this combines the cache name and directory)\n- **useCheckSum**: Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file.\n\n```js\n// loads the cache, if one does not exists for the given\n// Id a new one will be prepared to be created\nvar fileEntryCache = require('file-entry-cache');\n\nvar cache = fileEntryCache.create('testCache');\n\nvar files = expand('../fixtures/*.txt');\n\n// the first time this method is called, will return all the files\nvar oFiles = cache.getUpdatedFiles(files);\n\n// this will persist this to disk checking each file stats and\n// updating the meta attributes `size` and `mtime`.\n// custom fields could also be added to the meta object and will be persisted\n// in order to retrieve them later\ncache.reconcile();\n\n// use this if you want the non visited file entries to be kept in the cache\n// for more than one execution\n//\n// cache.reconcile( true /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old noPrune */)\n\n// on a second run\nvar cache2 = fileEntryCache.create('testCache');\n\n// will return now only the files that were modified or none\n// if no files were modified previous to the execution of this function\nvar oFiles = cache.getUpdatedFiles(files);\n\n// if you want to prevent a file from being considered non modified\n// something useful if a file failed some sort of validation\n// you can then remove the entry from the cache doing\ncache.removeEntry('path/to/file'); // path to file should be the same path of the file received on `getUpdatedFiles`\n// that will effectively make the file to appear again as modified until the validation is passed. In that\n// case you should not remove it from the cache\n\n// if you need all the files, so you can determine what to do with the changed ones\n// you can call\nvar oFiles = cache.normalizeEntries(files);\n\n// oFiles will be an array of objects like the following\nentry = {\n key: 'some/name/file', the path to the file\n changed: true, // if the file was changed since previous run\n meta: {\n size: 3242, // the size of the file\n mtime: 231231231, // the modification time of the file\n data: {} // some extra field stored for this file (useful to save the result of a transformation on the file\n }\n}\n\n```\n\n## Motivation for this module\n\nI needed a super simple and dumb **in-memory cache** with optional disk persistence (write-back cache) in order to make\na script that will beautify files with `esformatter` to execute only on the files that were changed since the last run.\n\nIn doing so the process of beautifying files was reduced from several seconds to a small fraction of a second.\n\nThis module uses [flat-cache](https://www.npmjs.com/package/flat-cache) a super simple `key/value` cache storage with\noptional file persistance.\n\nThe main idea is to read the files when the task begins, apply the transforms required, and if the process succeed,\nthen store the new state of the files. The next time this module request for `getChangedFiles` will return only\nthe files that were modified. Making the process to end faster.\n\nThis module could also be used by processes that modify the files applying a transform, in that case the result of the\ntransform could be stored in the `meta` field, of the entries. Anything added to the meta field will be persisted.\nThose processes won't need to call `getChangedFiles` they will instead call `normalizeEntries` that will return the\nentries with a `changed` field that can be used to determine if the file was changed or not. If it was not changed\nthe transformed stored data could be used instead of actually applying the transformation, saving time in case of only\na few files changed.\n\nIn the worst case scenario all the files will be processed. In the best case scenario only a few of them will be processed.\n\n## Important notes\n- The values set on the meta attribute of the entries should be `stringify-able` ones if possible, flat-cache uses `circular-json` to try to persist circular structures, but this should be considered experimental. The best results are always obtained with non circular values\n- All the changes to the cache state are done to memory first and only persisted after reconcile.\n\n## License\n\nMIT\n\n\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/royriojas/file-entry-cache/issues" }, "homepage": "https://github.com/royriojas/file-entry-cache#readme", "_id": "file-entry-cache@5.0.1", "_requested": { "type": "version", "registry": true, "raw": "file-entry-cache@5.0.1", "name": "file-entry-cache", "escapedName": "file-entry-cache", "rawSpec": "5.0.1", "saveSpec": "[Circular]", "fetchSpec": "5.0.1" }, "_spec": "5.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "file-entry-cache@5.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "flat-cache": "^2.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/file-entry-cache", "error": "[Circular]", "extraneous": false, "_deduped": "file-entry-cache" }, "global-modules": { "name": "global-modules", "description": "The directory used by npm for globally installed npm modules.", "version": "2.0.0", "homepage": "https://github.com/jonschlinkert/global-modules", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "JasonChang", "url": "https://packagist.org/packages/jason-chang" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Kiko Beats", "url": "https://kikobeats.com" } ], "repository": { "type": "git", "url": "git+https://github.com/jonschlinkert/global-modules.git" }, "bugs": { "url": "https://github.com/jonschlinkert/global-modules/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=6" }, "scripts": { "test": "mocha" }, "dependencies": { "global-prefix": { "name": "global-prefix", "description": "Get the npm global path prefix.", "version": "3.0.0", "homepage": "https://github.com/jonschlinkert/global-prefix", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "Alexandr Bogachev", "url": "https://github.com/rmbaad" }, { "name": "Brian Woodward", "url": "https://twitter.com/doowb" }, { "name": "Charlike Mike Reagent", "url": "https://i.am.charlike.online" }, { "name": "JasonChang", "url": "https://packagist.org/packages/jason-chang" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Jorrit Schippers", "url": "https://www.ncode.nl" }, { "name": "Mathias Rasmussen", "url": "chrome://dino" }, { "name": "Ross Fenning", "url": "http://rossfenning.co.uk" } ], "repository": { "type": "git", "url": "git+https://github.com/jonschlinkert/global-prefix.git" }, "bugs": { "url": "https://github.com/jonschlinkert/global-prefix/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=6" }, "scripts": { "test": "mocha" }, "dependencies": { "kind-of": { "name": "kind-of", "description": "Get the native type of a value.", "version": "6.0.2", "homepage": "https://github.com/jonschlinkert/kind-of", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "David Fox-Powell", "url": "https://dtothefp.github.io/me" }, { "name": "James", "url": "https://twitter.com/aretecode" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Ken Sheedlo", "url": "kensheedlo.com" }, { "name": "laggingreflex", "url": "https://github.com/laggingreflex" }, { "name": "Miguel Mota", "url": "https://miguelmota.com" }, { "name": "Peter deHaan", "url": "http://about.me/peterdehaan" }, { "name": "tunnckoCore", "url": "https://i.am.charlike.online" } ], "repository": { "type": "git", "url": "git+https://github.com/jonschlinkert/kind-of.git" }, "bugs": { "url": "https://github.com/jonschlinkert/kind-of/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha", "prepublish": "browserify -o browser.js -e index.js -s index --bare" }, "devDependencies": { "benchmarked": "^2.0.0", "browserify": "^14.4.0", "gulp-format-md": "^1.0.0", "mocha": "^4.0.1", "write": "^1.0.3" }, "keywords": [ "arguments", "array", "boolean", "check", "date", "function", "is", "is-type", "is-type-of", "kind", "kind-of", "number", "object", "of", "regexp", "string", "test", "type", "type-of", "typeof", "types" ], "verb": { "toc": false, "layout": "default", "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "lint": { "reflinks": true }, "related": { "list": [ "is-glob", "is-number", "is-primitive" ] }, "reflinks": [ "type-of", "typeof", "verb" ] }, "_resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz", "_integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==", "_from": "kind-of@6.0.2", "readme": "# kind-of [![NPM version](https://img.shields.io/npm/v/kind-of.svg?style=flat)](https://www.npmjs.com/package/kind-of) [![NPM monthly downloads](https://img.shields.io/npm/dm/kind-of.svg?style=flat)](https://npmjs.org/package/kind-of) [![NPM total downloads](https://img.shields.io/npm/dt/kind-of.svg?style=flat)](https://npmjs.org/package/kind-of) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/kind-of.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/kind-of)\n\n> Get the native type of a value.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save kind-of\n```\n\nInstall with [bower](https://bower.io/)\n\n```sh\n$ bower install kind-of --save\n```\n\n## Why use this?\n\n1. [it's fast](#benchmarks) | [optimizations](#optimizations)\n2. [better type checking](#better-type-checking)\n\n## Usage\n\n> es5, es6, and browser ready\n\n```js\nvar kindOf = require('kind-of');\n\nkindOf(undefined);\n//=> 'undefined'\n\nkindOf(null);\n//=> 'null'\n\nkindOf(true);\n//=> 'boolean'\n\nkindOf(false);\n//=> 'boolean'\n\nkindOf(new Buffer(''));\n//=> 'buffer'\n\nkindOf(42);\n//=> 'number'\n\nkindOf('str');\n//=> 'string'\n\nkindOf(arguments);\n//=> 'arguments'\n\nkindOf({});\n//=> 'object'\n\nkindOf(Object.create(null));\n//=> 'object'\n\nkindOf(new Test());\n//=> 'object'\n\nkindOf(new Date());\n//=> 'date'\n\nkindOf([1, 2, 3]);\n//=> 'array'\n\nkindOf(/foo/);\n//=> 'regexp'\n\nkindOf(new RegExp('foo'));\n//=> 'regexp'\n\nkindOf(new Error('error'));\n//=> 'error'\n\nkindOf(function () {});\n//=> 'function'\n\nkindOf(function 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps () {});\n//=> 'generatorfunction'\n\nkindOf(Symbol('str'));\n//=> 'symbol'\n\nkindOf(new Map());\n//=> 'map'\n\nkindOf(new WeakMap());\n//=> 'weakmap'\n\nkindOf(new Set());\n//=> 'set'\n\nkindOf(new WeakSet());\n//=> 'weakset'\n\nkindOf(new Int8Array());\n//=> 'int8array'\n\nkindOf(new Uint8Array());\n//=> 'uint8array'\n\nkindOf(new Uint8ClampedArray());\n//=> 'uint8clampedarray'\n\nkindOf(new Int16Array());\n//=> 'int16array'\n\nkindOf(new Uint16Array());\n//=> 'uint16array'\n\nkindOf(new Int32Array());\n//=> 'int32array'\n\nkindOf(new Uint32Array());\n//=> 'uint32array'\n\nkindOf(new Float32Array());\n//=> 'float32array'\n\nkindOf(new Float64Array());\n//=> 'float64array'\n```\n\n## Benchmarks\n\nBenchmarked against [typeof](http://github.com/CodingFu/typeof) and [type-of](https://github.com/ForbesLindesay/type-of).\n\n```bash\n# arguments (32 bytes)\n kind-of x 17,024,098 ops/sec ±1.90% (86 runs sampled)\n lib-type-of x 11,926,235 ops/sec ±1.34% (83 runs sampled)\n lib-typeof x 9,245,257 ops/sec ±1.22% (87 runs sampled)\n\n fastest is kind-of (by 161% avg)\n\n# array (22 bytes)\n kind-of x 17,196,492 ops/sec ±1.07% (88 runs sampled)\n lib-type-of x 8,838,283 ops/sec ±1.02% (87 runs sampled)\n lib-typeof x 8,677,848 ops/sec ±0.87% (87 runs sampled)\n\n fastest is kind-of (by 196% avg)\n\n# boolean (24 bytes)\n kind-of x 16,841,600 ops/sec ±1.10% (86 runs sampled)\n lib-type-of x 8,096,787 ops/sec ±0.95% (87 runs sampled)\n lib-typeof x 8,423,345 ops/sec ±1.15% (86 runs sampled)\n\n fastest is kind-of (by 204% avg)\n\n# buffer (38 bytes)\n kind-of x 14,848,060 ops/sec ±1.05% (86 runs sampled)\n lib-type-of x 3,671,577 ops/sec ±1.49% (87 runs sampled)\n lib-typeof x 8,360,236 ops/sec ±1.24% (86 runs sampled)\n\n fastest is kind-of (by 247% avg)\n\n# date (30 bytes)\n kind-of x 16,067,761 ops/sec ±1.58% (86 runs sampled)\n lib-type-of x 8,954,436 ops/sec ±1.40% (87 runs sampled)\n lib-typeof x 8,488,307 ops/sec ±1.51% (84 runs sampled)\n\n fastest is kind-of (by 184% avg)\n\n# error (36 bytes)\n kind-of x 9,634,090 ops/sec ±1.12% (89 runs sampled)\n lib-type-of x 7,735,624 ops/sec ±1.32% (86 runs sampled)\n lib-typeof x 7,442,160 ops/sec ±1.11% (90 runs sampled)\n\n fastest is kind-of (by 127% avg)\n\n# function (34 bytes)\n kind-of x 10,031,494 ops/sec ±1.27% (86 runs sampled)\n lib-type-of x 9,502,757 ops/sec ±1.17% (89 runs sampled)\n lib-typeof x 8,278,985 ops/sec ±1.08% (88 runs sampled)\n\n fastest is kind-of (by 113% avg)\n\n# null (24 bytes)\n kind-of x 18,159,808 ops/sec ±1.92% (86 runs sampled)\n lib-type-of x 12,927,635 ops/sec ±1.01% (88 runs sampled)\n lib-typeof x 7,958,234 ops/sec ±1.21% (89 runs sampled)\n\n fastest is kind-of (by 174% avg)\n\n# number (22 bytes)\n kind-of x 17,846,779 ops/sec ±0.91% (85 runs sampled)\n lib-type-of x 3,316,636 ops/sec ±1.19% (86 runs sampled)\n lib-typeof x 2,329,477 ops/sec ±2.21% (85 runs sampled)\n\n fastest is kind-of (by 632% avg)\n\n# object-plain (47 bytes)\n kind-of x 7,085,155 ops/sec ±1.05% (88 runs sampled)\n lib-type-of x 8,870,930 ops/sec ±1.06% (83 runs sampled)\n lib-typeof x 8,716,024 ops/sec ±1.05% (87 runs sampled)\n\n fastest is lib-type-of (by 112% avg)\n\n# regex (25 bytes)\n kind-of x 14,196,052 ops/sec ±1.65% (84 runs sampled)\n lib-type-of x 9,554,164 ops/sec ±1.25% (88 runs sampled)\n lib-typeof x 8,359,691 ops/sec ±1.07% (87 runs sampled)\n\n fastest is kind-of (by 158% avg)\n\n# string (33 bytes)\n kind-of x 16,131,428 ops/sec ±1.41% (85 runs sampled)\n lib-type-of x 7,273,172 ops/sec ±1.05% (87 runs sampled)\n lib-typeof x 7,382,635 ops/sec ±1.17% (85 runs sampled)\n\n fastest is kind-of (by 220% avg)\n\n# symbol (34 bytes)\n kind-of x 17,011,537 ops/sec ±1.24% (86 runs sampled)\n lib-type-of x 3,492,454 ops/sec ±1.23% (89 runs sampled)\n lib-typeof x 7,471,235 ops/sec ±2.48% (87 runs sampled)\n\n fastest is kind-of (by 310% avg)\n\n# template-strings (36 bytes)\n kind-of x 15,434,250 ops/sec ±1.46% (83 runs sampled)\n lib-type-of x 7,157,907 ops/sec ±0.97% (87 runs sampled)\n lib-typeof x 7,517,986 ops/sec ±0.92% (86 runs sampled)\n\n fastest is kind-of (by 210% avg)\n\n# undefined (29 bytes)\n kind-of x 19,167,115 ops/sec ±1.71% (87 runs sampled)\n lib-type-of x 15,477,740 ops/sec ±1.63% (85 runs sampled)\n lib-typeof x 19,075,495 ops/sec ±1.17% (83 runs sampled)\n\n fastest is lib-typeof,kind-of\n\n```\n\n## Optimizations\n\nIn 7 out of 8 cases, this library is 2x-10x faster than other top libraries included in the benchmarks. There are a few things that lead to this performance advantage, none of them hard and fast rules, but all of them simple and repeatable in almost any code library:\n\n1. Optimize around the fastest and most common use cases first. Of course, this will change from project-to-project, but I took some time to understand how and why `typeof` checks were being used in my own libraries and other libraries I use a lot.\n2. Optimize around bottlenecks - In other words, the order in which conditionals are implemented is significant, because each check is only as fast as the failing checks that came before it. Here, the biggest bottleneck by far is checking for plain objects (an object that was created by the `Object` constructor). I opted to make this check happen by process of elimination rather than brute force up front (e.g. by using something like `val.constructor.name`), so that every other type check would not be penalized it.\n3. Don't do uneccessary processing - why do `.slice(8, -1).toLowerCase();` just to get the word `regex`? It's much faster to do `if (type === '[object RegExp]') return 'regex'`\n4. There is no reason to make the code in a microlib as terse as possible, just to win points for making it shorter. It's always better to favor performant code over terse code. You will always only be using a single `require()` statement to use the library anyway, regardless of how the code is written.\n\n## Better type checking\n\nkind-of seems to be more consistently \"correct\" than other type checking libs I've looked at. For example, here are some differing results from other popular libs:\n\n### [typeof](https://github.com/CodingFu/typeof) lib\n\nIncorrectly identifies instances of custom constructors (pretty common):\n\n```js\nvar typeOf = require('typeof');\nfunction Test() {}\nconsole.log(typeOf(new Test()));\n//=> 'test'\n```\n\nReturns `object` instead of `arguments`:\n\n```js\nfunction foo() {\n console.log(typeOf(arguments)) //=> 'object'\n}\nfoo();\n```\n\n### [type-of](https://github.com/ForbesLindesay/type-of) lib\n\nIncorrectly returns `object` for generator functions, buffers, `Map`, `Set`, `WeakMap` and `WeakSet`:\n\n```js\nfunction 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps foo() {}\nconsole.log(typeOf(foo));\n//=> 'object'\nconsole.log(typeOf(new Buffer('')));\n//=> 'object'\nconsole.log(typeOf(new Map()));\n//=> 'object'\nconsole.log(typeOf(new Set()));\n//=> 'object'\nconsole.log(typeOf(new WeakMap()));\n//=> 'object'\nconsole.log(typeOf(new WeakSet()));\n//=> 'object'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern… [more](https://github.com/jonschlinkert/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number \"Returns true if the value is a number. comprehensive tests.\")\n* [is-primitive](https://www.npmjs.com/package/is-primitive): Returns `true` if the value is a primitive. | [homepage](https://github.com/jonschlinkert/is-primitive \"Returns `true` if the value is a primitive. \")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 98 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 3 | [aretecode](https://github.com/aretecode) |\n| 2 | [miguelmota](https://github.com/miguelmota) |\n| 1 | [dtothefp](https://github.com/dtothefp) |\n| 1 | [ianstormtaylor](https://github.com/ianstormtaylor) |\n| 1 | [ksheedlo](https://github.com/ksheedlo) |\n| 1 | [pdehaan](https://github.com/pdehaan) |\n| 1 | [laggingreflex](https://github.com/laggingreflex) |\n| 1 | [charlike-old](https://github.com/charlike-old) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on December 01, 2017._", "readmeFilename": "README.md", "_id": "kind-of@6.0.2", "_requested": { "type": "version", "registry": true, "raw": "kind-of@6.0.2", "name": "kind-of", "escapedName": "kind-of", "rawSpec": "6.0.2", "saveSpec": "[Circular]", "fetchSpec": "6.0.2" }, "_spec": "6.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "kind-of@6.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/global-prefix/node_modules/kind-of", "error": "[Circular]", "extraneous": false }, "ini": { "author": { "name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/" }, "name": "ini", "description": "An ini encoder/decoder for node", "version": "1.3.5", "repository": { "type": "git", "url": "git://github.com/isaacs/ini.git" }, "main": "ini.js", "scripts": { "pretest": "standard ini.js", "test": "tap test/*.js --100 -J", "preversion": "npm test", "postversion": "npm publish", "postpublish": "git push origin --all; git push origin --tags" }, "engines": { "node": "*" }, "dependencies": {}, "devDependencies": { "standard": "^10.0.3", "tap": "^10.7.3 || 11" }, "license": "ISC", "files": [ "ini.js" ], "_resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz", "_integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==", "_from": "ini@1.3.5", "readme": "An ini format parser and serializer for node.\n\nSections are treated as nested objects. Items before the first\nheading are saved on the object directly.\n\n## Usage\n\nConsider an ini-file `config.ini` that looks like this:\n\n ; this comment is being ignored\n scope = global\n\n [database]\n user = dbuser\n password = dbpassword\n database = use_this_database\n\n [paths.default]\n datadir = /var/lib/data\n array[] = first value\n array[] = second value\n array[] = third value\n\nYou can read, manipulate and write the ini-file like so:\n\n var fs = require('fs')\n , ini = require('ini')\n\n var config = ini.parse(fs.readFileSync('./config.ini', 'utf-8'))\n\n config.scope = 'local'\n config.database.database = 'use_another_database'\n config.paths.default.tmpdir = '/tmp'\n delete config.paths.default.datadir\n config.paths.default.array.push('fourth value')\n\n fs.writeFileSync('./config_modified.ini', ini.stringify(config, { section: 'section' }))\n\nThis will result in a file called `config_modified.ini` being written\nto the filesystem with the following content:\n\n [section]\n scope=local\n [section.database]\n user=dbuser\n password=dbpassword\n database=use_another_database\n [section.paths.default]\n tmpdir=/tmp\n array[]=first value\n array[]=second value\n array[]=third value\n array[]=fourth value\n\n\n## API\n\n### decode(inistring)\n\nDecode the ini-style formatted `inistring` into a nested object.\n\n### parse(inistring)\n\nAlias for `decode(inistring)`\n\n### encode(object, [options])\n\nEncode the object `object` into an ini-style formatted string. If the\noptional parameter `section` is given, then all top-level properties\nof the object are put into this section and the `section`-string is\nprepended to all sub-sections, see the usage example above.\n\nThe `options` object may contain the following:\n\n* `section` A string which will be the first `section` in the encoded\n ini data. Defaults to none.\n* `whitespace` Boolean to specify whether to put whitespace around the\n `=` character. By default, whitespace is omitted, to be friendly to\n some persnickety old parsers that don't tolerate it well. But some\n find that it's more human-readable and pretty with the whitespace.\n\nFor backwards compatibility reasons, if a `string` options is passed\nin, then it is assumed to be the `section` value.\n\n### stringify(object, [options])\n\nAlias for `encode(object, [options])`\n\n### safe(val)\n\nEscapes the string `val` such that it is safe to be used as a key or\nvalue in an ini-file. Basically escapes quotes. For example\n\n ini.safe('\"unsafe string\"')\n\nwould result in\n\n \"\\\"unsafe string\\\"\"\n\n### unsafe(val)\n\nUnescapes the string `val`\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/isaacs/ini/issues" }, "homepage": "https://github.com/isaacs/ini#readme", "_id": "ini@1.3.5", "_requested": { "type": "version", "registry": true, "raw": "ini@1.3.5", "name": "ini", "escapedName": "ini", "rawSpec": "1.3.5", "saveSpec": "[Circular]", "fetchSpec": "1.3.5" }, "_spec": "1.3.5", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ini@1.3.5", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/ini", "error": "[Circular]", "extraneous": false }, "which": { "author": { "name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me" }, "name": "which", "description": "Like which(1) unix command. Find the first instance of an executable in the PATH.", "version": "1.3.1", "repository": { "type": "git", "url": "git://github.com/isaacs/node-which.git" }, "main": "which.js", "bin": { "which": "./bin/which" }, "license": "ISC", "dependencies": {}, "devDependencies": { "mkdirp": "^0.5.0", "rimraf": "^2.6.2", "tap": "^12.0.1" }, "scripts": { "test": "tap test/*.js --cov", "changelog": "bash gen-changelog.sh", "postversion": "npm run changelog && git add CHANGELOG.md && git commit -m 'update changelog - '${npm_package_version}" }, "files": [ "which.js", "bin/which" ], "_resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz", "_integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==", "_from": "which@1.3.1", "readme": "# which\n\nLike the unix `which` utility.\n\nFinds the first instance of a specified executable in the PATH\nenvironment variable. Does not cache the results, so `hash -r` is not\nneeded when the PATH changes.\n\n## USAGE\n\n```javascript\nvar which = require('which')\n\n// async usage\nwhich('node', function (er, resolvedPath) {\n // er is returned if no \"node\" is found on the PATH\n // if it is found, then the absolute path to the exec is returned\n})\n\n// sync usage\n// throws if not found\nvar resolved = which.sync('node')\n\n// if nothrow option is used, returns null if not found\nresolved = which.sync('node', {nothrow: true})\n\n// Pass options to override the PATH and PATHEXT environment vars.\nwhich('node', { path: someOtherPath }, function (er, resolved) {\n if (er)\n throw er\n console.log('found at %j', resolved)\n})\n```\n\n## CLI USAGE\n\nSame as the BSD `which(1)` binary.\n\n```\nusage: which [-as] program ...\n```\n\n## OPTIONS\n\nYou may pass an options object as the second argument.\n\n- `path`: Use instead of the `PATH` environment variable.\n- `pathExt`: Use instead of the `PATHEXT` environment variable.\n- `all`: Return all matches, instead of just the first one. Note that\n this means the function returns an array of strings instead of a\n single string.\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/isaacs/node-which/issues" }, "homepage": "https://github.com/isaacs/node-which#readme", "_id": "which@1.3.1", "_requested": { "type": "version", "registry": true, "raw": "which@1.3.1", "name": "which", "escapedName": "which", "rawSpec": "1.3.1", "saveSpec": "[Circular]", "fetchSpec": "1.3.1" }, "_spec": "1.3.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "which@1.3.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "isexe": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/which", "error": "[Circular]", "extraneous": false, "_deduped": "which" } }, "devDependencies": { "gulp-format-md": "^2.0.0", "mocha": "^5.2.0" }, "keywords": [ "global", "module", "modules", "npm", "path", "prefix", "resolve" ], "_resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-3.0.0.tgz", "_integrity": "sha512-awConJSVCHVGND6x3tmMaKcQvwXLhjdkmomy2W+Goaui8YPgYgXJZewhg3fWC+DlfqqQuWg8AwqjGTD2nAPVWg==", "_from": "global-prefix@3.0.0", "readme": "# global-prefix [![NPM version](https://img.shields.io/npm/v/global-prefix.svg?style=flat)](https://www.npmjs.com/package/global-prefix) [![NPM monthly downloads](https://img.shields.io/npm/dm/global-prefix.svg?style=flat)](https://npmjs.org/package/global-prefix) [![NPM total downloads](https://img.shields.io/npm/dt/global-prefix.svg?style=flat)](https://npmjs.org/package/global-prefix) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/global-prefix.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/global-prefix) [![Windows Build Status](https://img.shields.io/appveyor/ci/jonschlinkert/global-prefix.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/jonschlinkert/global-prefix)\n\n> Get the npm global path prefix.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save global-prefix\n```\n\nThis is partially based on the code used by npm internally to resolve the global prefix.\n\n## Usage\n\n```js\nvar prefix = require('global-prefix');\n//=> '/usr/local' (this path will differ by system and user-defined config)\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [global-modules](https://www.npmjs.com/package/global-modules): The directory used by npm for globally installed npm modules. | [homepage](https://github.com/jonschlinkert/global-modules \"The directory used by npm for globally installed npm modules.\")\n* [global-paths](https://www.npmjs.com/package/global-paths): Returns an array of unique \"global\" directories based on the user's platform and environment. The… [more](https://github.com/jonschlinkert/global-paths) | [homepage](https://github.com/jonschlinkert/global-paths \"Returns an array of unique \"global\" directories based on the user's platform and environment. The resulting paths can be used for doing lookups for generators or other globally installed npm packages. Node.js / JavaScript.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 23 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 15 | [doowb](https://github.com/doowb) |\n| 2 | [phated](https://github.com/phated) |\n| 1 | [rmbaad](https://github.com/rmbaad) |\n| 1 | [avengerpenguin](https://github.com/avengerpenguin) |\n| 1 | [jorrit](https://github.com/jorrit) |\n| 1 | [mathiasvr](https://github.com/mathiasvr) |\n| 1 | [tunnckoCore](https://github.com/tunnckoCore) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on October 11, 2018._", "readmeFilename": "README.md", "_id": "global-prefix@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "global-prefix@3.0.0", "name": "global-prefix", "escapedName": "global-prefix", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "global-prefix@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ini": "^1.3.5", "kind-of": "^6.0.2", "which": "^1.3.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/global-prefix", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "gulp-format-md": "^2.0.0", "mocha": "^5.2.0" }, "keywords": [ "directory", "dirname", "global", "module", "modules", "package", "path", "prefix", "resolve" ], "verb": { "run": true, "toc": false, "layout": "default", "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "related": { "list": [ "git-config-path", "global-prefix", "npm-paths" ] }, "lint": { "reflinks": true } }, "_resolved": "https://registry.npmjs.org/global-modules/-/global-modules-2.0.0.tgz", "_integrity": "sha512-NGbfmJBp9x8IxyJSd1P+otYK8vonoJactOogrVfFRIAEY1ukil8RSKDz2Yo7wh1oihl51l/r6W4epkeKJHqL8A==", "_from": "global-modules@2.0.0", "readme": "# global-modules [![NPM version](https://img.shields.io/npm/v/global-modules.svg?style=flat)](https://www.npmjs.com/package/global-modules) [![NPM monthly downloads](https://img.shields.io/npm/dm/global-modules.svg?style=flat)](https://npmjs.org/package/global-modules) [![NPM total downloads](https://img.shields.io/npm/dt/global-modules.svg?style=flat)](https://npmjs.org/package/global-modules) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/global-modules.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/global-modules)\n\n> The directory used by npm for globally installed npm modules.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save global-modules\n```\n\n## Usage\n\n```js\nconst globalModules = require('global-modules');\nconsole.log(globalModules);\n//=> '/usr/local/lib/node_modules' \n```\n_(Note that this path might be different based on platform, user-defined configuration settings, etc)_\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [git-config-path](https://www.npmjs.com/package/git-config-path): Resolve the path to the user's local or global .gitconfig. | [homepage](https://github.com/jonschlinkert/git-config-path \"Resolve the path to the user's local or global .gitconfig.\")\n* [global-prefix](https://www.npmjs.com/package/global-prefix): Get the npm global path prefix. | [homepage](https://github.com/jonschlinkert/global-prefix \"Get the npm global path prefix.\")\n* [npm-paths](https://www.npmjs.com/package/npm-paths): Returns an array of unique \"npm\" directories based on the user's platform and environment. | [homepage](https://github.com/jonschlinkert/npm-paths \"Returns an array of unique \"npm\" directories based on the user's platform and environment.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- | \n| 20 | [jonschlinkert](https://github.com/jonschlinkert) | \n| 1 | [Kikobeats](https://github.com/Kikobeats) | \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on December 14, 2018._", "readmeFilename": "README.md", "_id": "global-modules@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "global-modules@2.0.0", "name": "global-modules", "escapedName": "global-modules", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "global-modules@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "global-prefix": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/global-modules", "error": "[Circular]", "extraneous": false }, "globjoin": { "name": "globjoin", "version": "0.1.4", "description": "Join paths and globs.", "main": "index.js", "repository": { "type": "git", "url": "git+https://github.com/amobiz/globjoin.git" }, "scripts": { "test": "mocha" }, "keywords": [ "array", "glob", "glob join", "globbing", "multiple", "negative glob", "path", "path join", "patterns", "wildcard" ], "author": { "name": "Amobiz" }, "license": "MIT", "bugs": { "url": "https://github.com/amobiz/globjoin/issues" }, "homepage": "https://github.com/amobiz/globjoin", "devDependencies": { "mocha": "^2.3.4", "mocha-cases": "^0.1.4" }, "dependencies": {}, "_resolved": "https://registry.npmjs.org/globjoin/-/globjoin-0.1.4.tgz", "_integrity": "sha1-L0SUrIkZ43Z8XLtpHp9GMyQoXUM=", "_from": "globjoin@0.1.4", "readme": "# globjoin\n\nJoin paths and globs.\n\n[![MIT](http://img.shields.io/badge/license-MIT-brightgreen.svg)](https://github.com/amobiz/globjoin/blob/master/LICENSE) [![npm version](https://badge.fury.io/js/globjoin.svg)](http://badge.fury.io/js/globjoin) [![David Dependency Badge](https://david-dm.org/amobiz/globjoin.svg)](https://david-dm.org/amobiz/globjoin)\n\n[![NPM](https://nodei.co/npm/globjoin.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/globjoin.png?downloads=true&downloadRank=true&stars=true) [![NPM](https://nodei.co/npm-dl/globjoin.png?months=6&height=3)](https://nodei.co/npm/globjoin/)\n\n## Install\n``` bash\n$ npm install globjoin\n```\n\n## API\n\n### `globjoin(globs...)`\nJoin paths and globs.\n\nLike Node's [path.join()](https://nodejs.org/api/path.html#path_path_join_path1_path2) that join all arguments together and normalize the resulting path, `globjoin` takes arbitrary number of paths and/or arrays of paths, join them together and take care of negative globs.\n#### Context\nDon't care.\n#### Parameters\n##### `paths/globs`\nThe paths/globs or arrays of paths/globs to join.\n#### Returns\nThe result glob, or array of globs if any of paths/globs are array.\n#### Example\n``` javascript\nvar join = require('globjoin');\nvar globs1 = join(__dirname, ['**/*.js', '!**/test*.js']);\nvar globs2 = join('test', 'fixture', 'app', ['views', '!services'], ['**/*', '!*.{js,json,coffee,ts}']);\n```\n\nCheck out test for more examples.\n\n## Issues\n\n[Issues](https://github.com/amobiz/globjoin/issues)\n\n## Test\n\n``` bash\n$ npm test\n```\n\n## Changelog\n\n[Changelog](./CHANGELOG.md)\n\n## License\nMIT\n\n## Author\n[Amobiz](https://github.com/amobiz)\n", "readmeFilename": "README.md", "_id": "globjoin@0.1.4", "_requested": { "type": "version", "registry": true, "raw": "globjoin@0.1.4", "name": "globjoin", "escapedName": "globjoin", "rawSpec": "0.1.4", "saveSpec": "[Circular]", "fetchSpec": "0.1.4" }, "_spec": "0.1.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "globjoin@0.1.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/globjoin", "error": "[Circular]", "extraneous": false }, "html-tags": { "name": "html-tags", "version": "2.0.0", "description": "List of standard HTML tags", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/html-tags.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js", "void.js", "html-tags.json", "html-tags-void.json" ], "keywords": [ "html", "html5", "tags", "elements", "list", "whatwg", "w3c", "void", "self-closing" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/html-tags/-/html-tags-2.0.0.tgz", "_integrity": "sha1-ELMKOGCF9Dzt41PMj6fLDe7qZos=", "_from": "html-tags@2.0.0", "readme": "# html-tags [![Build Status](https://travis-ci.org/sindresorhus/html-tags.svg?branch=master)](https://travis-ci.org/sindresorhus/html-tags)\n\n> List of standard HTML tags\n\nIt's just a couple of JSON files that can be used in any environment.\n\nIt intentionally leaves out obsolete tags.\n\n\n## Install\n\n```\n$ npm install html-tags\n```\n\n\n## Usage\n\n```js\nconst htmlTags = require('html-tags');\n\nconsole.log(htmlTags);\n//=> ['a', 'abbr', 'acronym', ...]\n```\n\nAnd void (self-closing) tags:\n\n```js\nconst voidHtmlTags = require('html-tags/void');\n\nconsole.log(voidHtmlTags);\n//=> ['area', 'base', 'br', ...]\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/html-tags/issues" }, "homepage": "https://github.com/sindresorhus/html-tags#readme", "_id": "html-tags@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "html-tags@2.0.0", "name": "html-tags", "escapedName": "html-tags", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "html-tags@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/html-tags", "error": "[Circular]", "extraneous": false }, "import-lazy": { "name": "import-lazy", "version": "3.1.0", "description": "Import a module lazily", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/import-lazy.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "import", "require", "load", "module", "modules", "lazy", "lazily", "defer", "deferred", "proxy", "proxies" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/import-lazy/-/import-lazy-3.1.0.tgz", "_integrity": "sha512-8/gvXvX2JMn0F+CDlSC4l6kOmVaLOO3XLkksI7CI3Ud95KDYJuYur2b9P/PUt/i/pDAMd/DulQsNbbbmRRsDIQ==", "_from": "import-lazy@3.1.0", "readme": "# import-lazy [![Build Status](https://travis-ci.org/sindresorhus/import-lazy.svg?branch=master)](https://travis-ci.org/sindresorhus/import-lazy)\n\n> Import a module lazily\n\nNote: Version 3 is exclusively `Proxy`-based and requires Node.js 6+. Use [version 2](https://github.com/sindresorhus/import-lazy/tree/ed6c2fac31aaf8a7d91a27295756383487f3965d) if you need Node.js <=5 support.\n\n\n## Install\n\n```\n$ npm install import-lazy\n```\n\n\n## Usage\n\n```js\n// Pass in `require` or a custom import function\nconst importLazy = require('import-lazy')(require);\nconst _ = importLazy('lodash');\n\n// Instead of referring to its exported properties directly…\n_.isNumber(2);\n\n// …it's cached on consecutive calls\n_.isNumber('unicorn');\n\n// It also works using destructuring assignment in ES2015\nconst {isNumber, isString} = importLazy('lodash');\n\n// Works out of the box for functions and regular properties\nconst stuff = importLazy('./math-lib');\nconsole.log(stuff.sum(1, 2)); // => 3\nconsole.log(stuff.PHI); // => 1.618033\n```\n\n\n## Related\n\n- [resolve-from](https://github.com/sindresorhus/resolve-from) - Resolve the path of a module from a given path\n- [import-from](https://github.com/sindresorhus/import-from) - Import a module from a given path\n- [resolve-pkg](https://github.com/sindresorhus/resolve-pkg) - Resolve the path of a package regardless of it having an entry point\n- [lazy-value](https://github.com/sindresorhus/lazy-value) - Create a lazily evaluated value\n- [define-lazy-prop](https://github.com/sindresorhus/define-lazy-prop) - Define a lazily evaluated property on an object\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/import-lazy/issues" }, "homepage": "https://github.com/sindresorhus/import-lazy#readme", "_id": "import-lazy@3.1.0", "_requested": { "type": "version", "registry": true, "raw": "import-lazy@3.1.0", "name": "import-lazy", "escapedName": "import-lazy", "rawSpec": "3.1.0", "saveSpec": "[Circular]", "fetchSpec": "3.1.0" }, "_spec": "3.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "import-lazy@3.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/import-lazy", "error": "[Circular]", "extraneous": false }, "imurmurhash": { "name": "imurmurhash", "version": "0.1.4", "description": "An incremental implementation of MurmurHash3", "homepage": "https://github.com/jensyt/imurmurhash-js", "main": "imurmurhash.js", "files": [ "imurmurhash.js", "imurmurhash.min.js", "package.json", "README.md" ], "repository": { "type": "git", "url": "git+https://github.com/jensyt/imurmurhash-js.git" }, "bugs": { "url": "https://github.com/jensyt/imurmurhash-js/issues" }, "keywords": [ "murmur", "murmurhash", "murmurhash3", "hash", "incremental" ], "author": { "name": "Jens Taylor", "email": "jensyt@gmail.com", "url": "https://github.com/homebrewing" }, "license": "MIT", "dependencies": {}, "devDependencies": {}, "engines": { "node": ">=0.8.19" }, "_resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz", "_integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=", "_from": "imurmurhash@0.1.4", "readme": "iMurmurHash.js\n==============\n\nAn incremental implementation of the MurmurHash3 (32-bit) hashing algorithm for JavaScript based on [Gary Court's implementation](https://github.com/garycourt/murmurhash-js) with [kazuyukitanimura's modifications](https://github.com/kazuyukitanimura/murmurhash-js).\n\nThis version works significantly faster than the non-incremental version if you need to hash many small strings into a single hash, since string concatenation (to build the single string to pass the non-incremental version) is fairly costly. In one case tested, using the incremental version was about 50% faster than concatenating 5-10 strings and then hashing.\n\nInstallation\n------------\n\nTo use iMurmurHash in the browser, [download the latest version](https://raw.github.com/jensyt/imurmurhash-js/master/imurmurhash.min.js) and include it as a script on your site.\n\n```html\n<script type=\"text/javascript\" src=\"/scripts/imurmurhash.min.js\"></script>\n<script>\n// Your code here, access iMurmurHash using the global object MurmurHash3\n</script>\n```\n\n---\n\nTo use iMurmurHash in Node.js, install the module using NPM:\n\n```bash\nnpm install imurmurhash\n```\n\nThen simply include it in your scripts:\n\n```javascript\nMurmurHash3 = require('imurmurhash');\n```\n\nQuick Example\n-------------\n\n```javascript\n// Create the initial hash\nvar hashState = MurmurHash3('string');\n\n// Incrementally add text\nhashState.hash('more strings');\nhashState.hash('even more strings');\n\n// All calls can be chained if desired\nhashState.hash('and').hash('some').hash('more');\n\n// Get a result\nhashState.result();\n// returns 0xe4ccfe6b\n```\n\nFunctions\n---------\n\n### MurmurHash3 ([string], [seed])\nGet a hash state object, optionally initialized with the given _string_ and _seed_. _Seed_ must be a positive integer if provided. Calling this function without the `new` keyword will return a cached state object that has been reset. This is safe to use as long as the object is only used from a single thread and no other hashes are created while operating on this one. If this constraint cannot be met, you can use `new` to create a new state object. For example:\n\n```javascript\n// Use the cached object, calling the function again will return the same\n// object (but reset, so the current state would be lost)\nhashState = MurmurHash3();\n...\n\n// Create a new object that can be safely used however you wish. Calling the\n// function again will simply return a new state object, and no state loss\n// will occur, at the cost of creating more objects.\nhashState = new MurmurHash3();\n```\n\nBoth methods can be mixed however you like if you have different use cases.\n\n---\n\n### MurmurHash3.prototype.hash (string)\nIncrementally add _string_ to the hash. This can be called as many times as you want for the hash state object, including after a call to `result()`. Returns `this` so calls can be chained.\n\n---\n\n### MurmurHash3.prototype.result ()\nGet the result of the hash as a 32-bit positive integer. This performs the tail and finalizer portions of the algorithm, but does not store the result in the state object. This means that it is perfectly safe to get results and then continue adding strings via `hash`.\n\n```javascript\n// Do the whole string at once\nMurmurHash3('this is a test string').result();\n// 0x70529328\n\n// Do part of the string, get a result, then the other part\nvar m = MurmurHash3('this is a');\nm.result();\n// 0xbfc4f834\nm.hash(' test string').result();\n// 0x70529328 (same as above)\n```\n\n---\n\n### MurmurHash3.prototype.reset ([seed])\nReset the state object for reuse, optionally using the given _seed_ (defaults to 0 like the constructor). Returns `this` so calls can be chained.\n\n---\n\nLicense (MIT)\n-------------\nCopyright (c) 2013 Gary Court, Jens Taylor\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", "readmeFilename": "README.md", "_id": "imurmurhash@0.1.4", "_requested": { "type": "version", "registry": true, "raw": "imurmurhash@0.1.4", "name": "imurmurhash", "escapedName": "imurmurhash", "rawSpec": "0.1.4", "saveSpec": "[Circular]", "fetchSpec": "0.1.4" }, "_spec": "0.1.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "imurmurhash@0.1.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/imurmurhash", "error": "[Circular]", "extraneous": false, "_deduped": "imurmurhash" }, "known-css-properties": { "name": "known-css-properties", "version": "0.13.0", "description": "List of known CSS properties", "repository": { "type": "git", "url": "git+https://github.com/known-css/known-css-properties.git" }, "main": "index.js", "scripts": { "bump": "npm version patch && npm publish && git push && git push --tags", "download-w3c-data": "node scripts/download-w3c-data", "generate": "node scripts/generate", "lint": "eslint index.js scripts/*.js", "test": "echo \"Error: no test specified\" && exit 1" }, "keywords": [ "css", "properties", "w3c", "chrome", "firefox", "explorer", "edge", "safari", "opera", "samsung-internet", "uc-browser" ], "contributors": [ { "name": "Krzysztof Bebenek", "email": "kbebenek@kbebenek.me", "url": "http://kbebenek.me" }, { "name": "Viorel Cojocaru", "email": "vio@beanon.com", "url": "http://beanon.com" } ], "author": { "name": "Viorel Cojocaru", "email": "vio@beanon.com", "url": "http://beanon.com" }, "license": "MIT", "bugs": { "url": "https://github.com/known-css/known-css-properties/issues" }, "homepage": "https://github.com/known-css/known-css-properties#readme", "devDependencies": { "axios": "0.18.0", "eslint": "5.15.2", "globby": "9.1.0", "lodash.sortby": "4.7.0", "lodash.uniq": "4.5.0" }, "_resolved": "https://registry.npmjs.org/known-css-properties/-/known-css-properties-0.13.0.tgz", "_integrity": "sha512-6VWDxNr7cQXPDtMdCWLZMK3E8hdLrpyPPRdx6RbyvqklqgM6/XNFsVopv8QOZ+hRB6iHG/urEDwzlWbmMCv/kw==", "_from": "known-css-properties@0.13.0", "readme": "<p align=\"center\"><img src=\"logo.png\" width=\"200\" height=\"200\" alt=\"logo\" /></p>\n\n# Known CSS properties\n\nList of standard and browser specific CSS properties.\n\n[![License](https://img.shields.io/github/license/known-css/known-css-properties.svg)](https://github.com/known-css/known-css-properties/blob/master/LICENSE)\n[![Renovate enabled](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://renovateapp.com/)\n[![Npm downloads](https://img.shields.io/npm/dm/known-css-properties.svg)](https://www.npmjs.com/package/known-css-properties)\n\n## Sources\n\n1. Standard properties (only 'REC', 'CR', 'LC', 'WD', 'FPWD', 'ED' statuses): http://www.w3.org/Style/CSS/all-properties.en.json\n2. Browser supported properties from `window.getComputedStyle` / `document.body.style`\n\n## Browser versions\n\n### Desktop\n\n| Name | Versions |\n|---|--:|\n| Chrome | 14 - 73 |\n| Firefox | 6 - 65 |\n| Edge | 13 - 18 |\n| Safari | 6, 6.2, 7 - 9, 9.1, 10.0, 11.0, 11.1, 12.0, 12.1 |\n| Internet Explorer | 8 - 11 |\n| Opera | 12.10, 12.14, 12.15, 12.16, 36 - 40, 45, 56, 58 |\n\n### Mobile\n| Name | Versions |\n|---|--:|\n| iOS Safari | 6 - 8, 8.3, 9.0, 9.3, 10.0, 10.2, 10.3, 11.0, 11.2, 11.3, 11.4, 12.0 , 12.1 |\n| Chrome for Android | 30, 35, 37, 44, 46, 51, 55 - 62, 64, 66 - 71, 73 |\n| Firefox for Android | 47, 52 - 54, 57, 58, 62 - 64 |\n| IE mobile | 11 |\n| Opera Mobile | 42.7, 43, 47.1 |\n| Samsung Internet | 4.0, 6.4, 7.4, 8.2 |\n| UC Browser for Android | 11.2, 12.9 |\n\n## JavaScript API\n\n```js\nconst properties = require('known-css-properties').all;\n```\n\n## Thanks\n\nWe use [SauceLabs](https://saucelabs.com) live testing solution for gathering most of the data.\n", "readmeFilename": "README.md", "_id": "known-css-properties@0.13.0", "_requested": { "type": "version", "registry": true, "raw": "known-css-properties@0.13.0", "name": "known-css-properties", "escapedName": "known-css-properties", "rawSpec": "0.13.0", "saveSpec": "[Circular]", "fetchSpec": "0.13.0" }, "_spec": "0.13.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "known-css-properties@0.13.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/known-css-properties", "error": "[Circular]", "extraneous": false }, "lodash": { "name": "lodash", "version": "4.17.11", "description": "Lodash modular utilities.", "keywords": [ "modules", "stdlib", "util" ], "homepage": "https://lodash.com/", "repository": { "type": "git", "url": "git+https://github.com/lodash/lodash.git" }, "icon": "https://lodash.com/icon.svg", "license": "MIT", "main": "lodash.js", "author": { "name": "John-David Dalton", "email": "john.david.dalton@gmail.com", "url": "http://allyoucanleet.com/" }, "contributors": [ { "name": "John-David Dalton", "email": "john.david.dalton@gmail.com", "url": "http://allyoucanleet.com/" }, { "name": "Mathias Bynens", "email": "mathias@qiwi.be", "url": "https://mathiasbynens.be/" } ], "scripts": { "test": "echo \"See https://travis-ci.org/lodash-archive/lodash-cli for testing details.\"" }, "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz", "_integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==", "_from": "lodash@4.17.11", "readme": "# lodash v4.17.11\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.11-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 68-69, Firefox 61-62, IE 11, Edge 17, Safari 10-11, Node.js 6-10, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/lodash/lodash/issues" }, "_id": "lodash@4.17.11", "_requested": { "type": "version", "registry": true, "raw": "lodash@4.17.11", "name": "lodash", "escapedName": "lodash", "rawSpec": "4.17.11", "saveSpec": "[Circular]", "fetchSpec": "4.17.11" }, "_spec": "4.17.11", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "lodash@4.17.11", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/lodash", "error": "[Circular]", "extraneous": false, "_deduped": "lodash" }, "log-symbols": { "name": "log-symbols", "version": "2.2.0", "description": "Colored symbols for various log levels. Example: ✔︎ Success", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/log-symbols.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js", "browser.js" ], "keywords": [ "unicode", "cli", "cmd", "command-line", "characters", "char", "symbol", "symbols", "figure", "figures", "fallback", "win", "windows", "log", "logging", "terminal", "stdout" ], "dependencies": { "chalk": { "name": "chalk", "version": "2.4.2", "description": "Terminal string styling done right", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/chalk.git" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && tsc --project types && flow --max-warnings=0 && nyc ava", "bench": "matcha benchmark.js", "coveralls": "nyc report --reporter=text-lcov | coveralls" }, "files": [ "index.js", "templates.js", "types/index.d.ts", "index.js.flow" ], "keywords": [ "color", "colour", "colors", "terminal", "console", "cli", "string", "str", "ansi", "style", "styles", "tty", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text" ], "dependencies": { "escape-string-regexp": { "name": "escape-string-regexp", "version": "1.0.5", "description": "Escape RegExp special characters", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/escape-string-regexp.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "maintainers": [ { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, { "name": "Joshua Boy Nicolai Appelman", "email": "joshua@jbna.nl", "url": "jbna.nl" } ], "engines": { "node": ">=0.8.0" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "escape", "regex", "regexp", "re", "regular", "expression", "string", "str", "special", "characters" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz", "_integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=", "_from": "escape-string-regexp@1.0.5", "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install --save escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/escape-string-regexp/issues" }, "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme", "_id": "escape-string-regexp@1.0.5", "_requested": { "type": "version", "registry": true, "raw": "escape-string-regexp@1.0.5", "name": "escape-string-regexp", "escapedName": "escape-string-regexp", "rawSpec": "1.0.5", "saveSpec": "[Circular]", "fetchSpec": "1.0.5" }, "_spec": "1.0.5", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "escape-string-regexp@1.0.5", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/escape-string-regexp", "error": "[Circular]", "extraneous": false, "_deduped": "escape-string-regexp" }, "ansi-styles": { "name": "ansi-styles", "version": "3.2.1", "description": "ANSI escape codes for styling strings in the terminal", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/ansi-styles.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava", "screenshot": "svg-term --command='node screenshot' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor" }, "files": [ "index.js" ], "keywords": [ "ansi", "styles", "color", "colour", "colors", "terminal", "console", "cli", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text" ], "dependencies": { "color-convert": { "name": "color-convert", "description": "Plain color conversion functions", "version": "1.9.3", "author": { "name": "Heather Arthur", "email": "fayearthur@gmail.com" }, "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/Qix-/color-convert.git" }, "scripts": { "pretest": "xo", "test": "node test/basic.js" }, "keywords": [ "color", "colour", "convert", "converter", "conversion", "rgb", "hsl", "hsv", "hwb", "cmyk", "ansi", "ansi16" ], "files": [ "index.js", "conversions.js", "css-keywords.js", "route.js" ], "xo": { "rules": { "default-case": 0, "no-inline-comments": 0, "operator-linebreak": 0 } }, "devDependencies": { "chalk": "1.1.1", "xo": "0.11.2" }, "dependencies": {}, "_resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz", "_integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==", "_from": "color-convert@1.9.3", "readme": "# color-convert\n\n[![Build Status](https://travis-ci.org/Qix-/color-convert.svg?branch=master)](https://travis-ci.org/Qix-/color-convert)\n\nColor-convert is a color conversion library for JavaScript and node.\nIt converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, `ansi`, `ansi16`, `hex` strings, and CSS `keyword`s (will round to closest):\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hsl(140, 200, 100); // [96, 48, 59]\nconvert.keyword.rgb('blue'); // [0, 0, 255]\n\nvar rgbChannels = convert.rgb.channels; // 3\nvar cmykChannels = convert.cmyk.channels; // 4\nvar ansiChannels = convert.ansi16.channels; // 1\n```\n\n# Install\n\n```console\n$ npm install color-convert\n```\n\n# API\n\nSimply get the property of the _from_ and _to_ conversion that you're looking for.\n\nAll functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on `.raw` to the function.\n\nAll 'from' functions have a hidden property called `.channels` that indicates the number of channels the function expects (not including alpha).\n\n```js\nvar convert = require('color-convert');\n\n// Hex to LAB\nconvert.hex.lab('DEADBF'); // [ 76, 21, -2 ]\nconvert.hex.lab.raw('DEADBF'); // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ]\n\n// RGB to CMYK\nconvert.rgb.cmyk(167, 255, 4); // [ 35, 0, 98, 0 ]\nconvert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]\n```\n\n### Arrays\nAll functions that accept multiple arguments also support passing an array.\n\nNote that this does **not** apply to functions that convert from a color that only requires one value (e.g. `keyword`, `ansi256`, `hex`, etc.)\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hex(123, 45, 67); // '7B2D43'\nconvert.rgb.hex([123, 45, 67]); // '7B2D43'\n```\n\n## Routing\n\nConversions that don't have an _explicitly_ defined conversion (in [conversions.js](conversions.js)), but can be converted by means of sub-conversions (e.g. XYZ -> **RGB** -> CMYK), are automatically routed together. This allows just about any color model supported by `color-convert` to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> **LAB** -> **XYZ** -> **RGB** -> Hex).\n\nKeep in mind that extensive conversions _may_ result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see [conversions.js](conversions.js).\n\n# Contribute\n\nIf there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.\n\n# License\nCopyright &copy; 2011-2016, Heather Arthur and Josh Junon. Licensed under the [MIT License](LICENSE).\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/Qix-/color-convert/issues" }, "homepage": "https://github.com/Qix-/color-convert#readme", "_id": "color-convert@1.9.3", "_requested": { "type": "version", "registry": true, "raw": "color-convert@1.9.3", "name": "color-convert", "escapedName": "color-convert", "rawSpec": "1.9.3", "saveSpec": "[Circular]", "fetchSpec": "1.9.3" }, "_spec": "1.9.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "color-convert@1.9.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "color-name": "1.1.3" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/color-convert", "error": "[Circular]", "extraneous": false, "_deduped": "color-convert" } }, "devDependencies": { "ava": "*", "babel-polyfill": "^6.23.0", "svg-term-cli": "^2.1.1", "xo": "*" }, "ava": { "require": "babel-polyfill" }, "_resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz", "_integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==", "_from": "ansi-styles@3.2.1", "readme": "# ansi-styles [![Build Status](https://travis-ci.org/chalk/ansi-styles.svg?branch=master)](https://travis-ci.org/chalk/ansi-styles)\n\n> [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles) for styling strings in the terminal\n\nYou probably want the higher-level [chalk](https://github.com/chalk/chalk) module for styling your strings.\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n\n## Install\n\n```\n$ npm install ansi-styles\n```\n\n\n## Usage\n\n```js\nconst style = require('ansi-styles');\n\nconsole.log(`${style.green.open}Hello world!${style.green.close}`);\n\n\n// Color conversion between 16/256/truecolor\n// NOTE: If conversion goes to 16 colors or 256 colors, the original color\n// may be degraded to fit that color palette. This means terminals\n// that do not support 16 million colors will best-match the\n// original color.\nconsole.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close);\nconsole.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close);\nconsole.log(style.color.ansi16m.hex('#ABCDEF') + 'Hello world!' + style.color.close);\n```\n\n## API\n\nEach style has an `open` and `close` property.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Advanced usage\n\nBy default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\n- `style.modifier`\n- `style.color`\n- `style.bgColor`\n\n###### Example\n\n```js\nconsole.log(style.color.green.open);\n```\n\nRaw escape codes (i.e. without the CSI escape prefix `\\u001B[` and render mode postfix `m`) are available under `style.codes`, which returns a `Map` with the open codes as keys and close codes as values.\n\n###### Example\n\n```js\nconsole.log(style.codes.get(36));\n//=> 39\n```\n\n\n## [256 / 16 million (TrueColor) support](https://gist.github.com/XVilka/8346728)\n\n`ansi-styles` uses the [`color-convert`](https://github.com/Qix-/color-convert) package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors.\n\nTo use these, call the associated conversion function with the intended output, for example:\n\n```js\nstyle.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code\nstyle.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code\n\nstyle.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\nstyle.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\n\nstyle.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code\nstyle.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code\n```\n\n\n## Related\n\n- [ansi-escapes](https://github.com/sindresorhus/ansi-escapes) - ANSI escape codes for manipulating the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/ansi-styles/issues" }, "homepage": "https://github.com/chalk/ansi-styles#readme", "_id": "ansi-styles@3.2.1", "_requested": { "type": "version", "registry": true, "raw": "ansi-styles@3.2.1", "name": "ansi-styles", "escapedName": "ansi-styles", "rawSpec": "3.2.1", "saveSpec": "[Circular]", "fetchSpec": "3.2.1" }, "_spec": "3.2.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ansi-styles@3.2.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "color-convert": "^1.9.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/log-symbols/node_modules/ansi-styles", "error": "[Circular]", "extraneous": false }, "supports-color": { "name": "supports-color", "version": "5.5.0", "description": "Detect whether a terminal supports color", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/supports-color.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js", "browser.js" ], "keywords": [ "color", "colour", "colors", "terminal", "console", "cli", "ansi", "styles", "tty", "rgb", "256", "shell", "xterm", "command-line", "support", "supports", "capability", "detect", "truecolor", "16m" ], "dependencies": { "has-flag": { "name": "has-flag", "version": "3.0.0", "description": "Check if argv has a specific flag", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/has-flag.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "has", "check", "detect", "contains", "find", "flag", "cli", "command-line", "argv", "process", "arg", "args", "argument", "arguments", "getopt", "minimist", "optimist" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz", "_integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=", "_from": "has-flag@3.0.0", "readme": "# has-flag [![Build Status](https://travis-ci.org/sindresorhus/has-flag.svg?branch=master)](https://travis-ci.org/sindresorhus/has-flag)\n\n> Check if [`argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) has a specific flag\n\nCorrectly stops looking after an `--` argument terminator.\n\n\n## Install\n\n```\n$ npm install has-flag\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=> true\n\nhasFlag('--unicorn');\n//=> true\n\nhasFlag('f');\n//=> true\n\nhasFlag('-f');\n//=> true\n\nhasFlag('foo=bar');\n//=> true\n\nhasFlag('foo');\n//=> false\n\nhasFlag('rainbow');\n//=> false\n```\n\n```\n$ node foo.js -f --unicorn --foo=bar -- --rainbow\n```\n\n\n## API\n\n### hasFlag(flag, [argv])\n\nReturns a boolean for whether the flag exists.\n\n#### flag\n\nType: `string`\n\nCLI flag to look for. The `--` prefix is optional.\n\n#### argv\n\nType: `string[]`<br>\nDefault: `process.argv`\n\nCLI arguments.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/has-flag/issues" }, "homepage": "https://github.com/sindresorhus/has-flag#readme", "_id": "has-flag@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "has-flag@3.0.0", "name": "has-flag", "escapedName": "has-flag", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "has-flag@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/has-flag", "error": "[Circular]", "extraneous": false, "_deduped": "has-flag" } }, "devDependencies": { "ava": "^0.25.0", "import-fresh": "^2.0.0", "xo": "^0.20.0" }, "browser": "browser.js", "_resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz", "_integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==", "_from": "supports-color@5.5.0", "readme": "# supports-color [![Build Status](https://travis-ci.org/chalk/supports-color.svg?branch=master)](https://travis-ci.org/chalk/supports-color)\n\n> Detect whether a terminal supports color\n\n\n## Install\n\n```\n$ npm install supports-color\n```\n\n\n## Usage\n\n```js\nconst supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n\tconsole.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n\tconsole.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n\tconsole.log('Terminal stderr supports 16 million colors (truecolor)');\n}\n```\n\n\n## API\n\nReturns an `Object` with a `stdout` and `stderr` property for testing either streams. Each property is an `Object`, or `false` if color is not supported.\n\nThe `stdout`/`stderr` objects specifies a level of support for color through a `.level` property and a corresponding flag:\n\n- `.level = 1` and `.hasBasic = true`: Basic color support (16 colors)\n- `.level = 2` and `.has256 = true`: 256 color support\n- `.level = 3` and `.has16m = true`: Truecolor support (16 million colors)\n\n\n## Info\n\nIt obeys the `--color` and `--no-color` CLI flags.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Related\n\n- [supports-color-cli](https://github.com/chalk/supports-color-cli) - CLI for this module\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/supports-color/issues" }, "homepage": "https://github.com/chalk/supports-color#readme", "_id": "supports-color@5.5.0", "_requested": { "type": "version", "registry": true, "raw": "supports-color@5.5.0", "name": "supports-color", "escapedName": "supports-color", "rawSpec": "5.5.0", "saveSpec": "[Circular]", "fetchSpec": "5.5.0" }, "_spec": "5.5.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "supports-color@5.5.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "has-flag": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/log-symbols/node_modules/supports-color", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "coveralls": "^3.0.0", "execa": "^0.9.0", "flow-bin": "^0.68.0", "import-fresh": "^2.0.0", "matcha": "^0.7.0", "nyc": "^11.0.2", "resolve-from": "^4.0.0", "typescript": "^2.5.3", "xo": "*" }, "types": "types/index.d.ts", "xo": { "envs": [ "node", "mocha" ], "ignores": [ "test/_flow.js" ] }, "_resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz", "_integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==", "_from": "chalk@2.4.2", "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\n### [See what's new in Chalk 2](https://github.com/chalk/chalk/releases/tag/v2.0.0)\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" alt=\"\" width=\"900\">\n\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~23,000 packages](https://www.npmjs.com/browse/depended/chalk) as of December 31, 2017\n\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n<a href=\"https://www.patreon.com/sindresorhus\">\n\t<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\">\n</a>\n\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, as is the level (see `chalk.level`). However, if you'd like to simply enable/disable Chalk, you can do so via the `.enabled` property.\n\nChalk is enabled by default unless explicitly disabled via the constructor or `chalk.level` is `0`.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.level\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({level: 0});\n```\n\nLevels are as follows:\n\n0. All colors disabled\n1. Basic color support (16 colors)\n2. 256 color support\n3. Truecolor support (16 million colors)\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n- `visible` (Text is emitted only if enabled)\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(On Windows the bright version is used since normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](http://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 5280;\n\nconsole.log(chalk`\n There are {bold 5280 feet} in a mile.\n In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following two statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model) - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- `ansi16`\n- `ansi256`\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://cmder.net/) instead of `cmd.exe`.\n\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/chalk/issues" }, "homepage": "https://github.com/chalk/chalk#readme", "_id": "chalk@2.4.2", "_requested": { "type": "version", "registry": true, "raw": "chalk@2.4.2", "name": "chalk", "escapedName": "chalk", "rawSpec": "2.4.2", "saveSpec": "[Circular]", "fetchSpec": "2.4.2" }, "_spec": "2.4.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "chalk@2.4.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ansi-styles": "^3.2.1", "escape-string-regexp": "^1.0.5", "supports-color": "^5.3.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/log-symbols/node_modules/chalk", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "strip-ansi": "^4.0.0", "xo": "*" }, "browser": "browser.js", "_resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-2.2.0.tgz", "_integrity": "sha512-VeIAFslyIerEJLXHziedo2basKbMKtTw3vfn5IzG0XTjhAVEJyNHnL2p7vc+wBDSdQuUpNw3M2u6xb9QsAY5Eg==", "_from": "log-symbols@2.2.0", "readme": "# log-symbols [![Build Status](https://travis-ci.org/sindresorhus/log-symbols.svg?branch=master)](https://travis-ci.org/sindresorhus/log-symbols)\n\n<img src=\"screenshot.png\" width=\"226\" align=\"right\">\n\n> Colored symbols for various log levels\n\nIncludes fallbacks for Windows CMD which only supports a [limited character set](https://en.wikipedia.org/wiki/Code_page_437).\n\n\n## Install\n\n```\n$ npm install log-symbols\n```\n\n\n## Usage\n\n```js\nconst logSymbols = require('log-symbols');\n\nconsole.log(logSymbols.success, 'Finished successfully!');\n// On good OSes: ✔ Finished successfully!\n// On Windows: √ Finished successfully!\n```\n\n## API\n\n### logSymbols\n\n#### info\n#### success\n#### warning\n#### error\n\n\n## Related\n\n- [figures](https://github.com/sindresorhus/figures) - Unicode symbols with Windows CMD fallbacks\n- [py-log-symbols](https://github.com/ManrajGrover/py-log-symbols) - Python port\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/log-symbols/issues" }, "homepage": "https://github.com/sindresorhus/log-symbols#readme", "_id": "log-symbols@2.2.0", "_requested": { "type": "version", "registry": true, "raw": "log-symbols@2.2.0", "name": "log-symbols", "escapedName": "log-symbols", "rawSpec": "2.2.0", "saveSpec": "[Circular]", "fetchSpec": "2.2.0" }, "_spec": "2.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "log-symbols@2.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "chalk": "^2.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/log-symbols", "error": "[Circular]", "extraneous": false }, "mathml-tag-names": { "name": "mathml-tag-names", "version": "2.1.0", "description": "List of known MathML tag-names", "license": "MIT", "keywords": [ "MathML", "math", "tag", "name", "element", "tagname", "w3c" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/mathml-tag-names.git" }, "bugs": { "url": "https://github.com/wooorm/mathml-tag-names/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "main": "index.json", "files": [ "index.json" ], "dependencies": {}, "devDependencies": { "bail": "^1.0.0", "browserify": "^16.0.0", "concat-stream": "^1.6.0", "esmangle": "^1.0.1", "hast-util-select": "^1.0.1", "hast-util-to-string": "^1.0.0", "prettier": "^1.12.0", "rehype-parse": "^4.0.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.4.0", "unified": "^6.1.5", "xo": "^0.20.0" }, "scripts": { "generate": "node build", "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.json --bare -s mathML > mathml-tag-names.js", "build-mangle": "esmangle mathml-tag-names.js > mathml-tag-names.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test": "npm run generate && npm run format && npm run build && npm run test-api" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignore": [ "mathml-tag-names.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/mathml-tag-names/-/mathml-tag-names-2.1.0.tgz", "_integrity": "sha512-3Zs9P/0zzwTob2pdgT0CHZuMbnSUSp8MB1bddfm+HDmnFWHGT4jvEZRf+2RuPoa+cjdn/z25SEt5gFTqdhvJAg==", "_from": "mathml-tag-names@2.1.0", "readme": "# mathml-tag-names [![Build Status][build-badge]][build-page]\n\nList of known MathML tag-names. Includes the elements from\n[MathML 1][mathml1], [MathML 2][mathml2], and\n[MathML 3][mathml3].\n\nThe repo contains a script to crawl specs to include newly introduced\ntag-names.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install mathml-tag-names\n```\n\n## Usage\n\n```javascript\nvar mathMLTagNames = require('mathml-tag-names')\n\nconsole.log(mathMLTagNames.length) // => 202\n\nconsole.log(mathMLTagNames.slice(0, 20))\n```\n\nYields:\n\n```js\n[ 'abs',\n 'and',\n 'annotation',\n 'annotation-xml',\n 'apply',\n 'approx',\n 'arccos',\n 'arccosh',\n 'arccot',\n 'arccoth',\n 'arccsc',\n 'arccsch',\n 'arcsec',\n 'arcsech',\n 'arcsin',\n 'arcsinh',\n 'arctan',\n 'arctanh',\n 'arg',\n 'bind' ]\n```\n\n## API\n\n### `mathMLTagNames`\n\n`Array.<string>` — List of lower-case tag-names.\n\n## Related\n\n* [`html-tag-names`](https://github.com/wooorm/html-tag-names)\n — List of HTML tags\n* [`svg-tag-names`](https://github.com/wooorm/svg-tag-names)\n — List of SVG tags\n* [`svg-element-attributes`](https://github.com/wooorm/svg-element-attributes)\n — Map of SVG elements to allowed attributes\n* [`html-element-attributes`](https://github.com/wooorm/html-element-attributes)\n — Map of HTML elements to allowed attributes\n* [`aria-attributes`](https://github.com/wooorm/aria-attributes)\n — List of ARIA attributes\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definition -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/mathml-tag-names.svg\n\n[build-page]: https://travis-ci.org/wooorm/mathml-tag-names\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[mathml1]: https://www.w3.org/TR/1998/REC-MathML-19980407/appendixF.html\n\n[mathml2]: https://www.w3.org/TR/MathML2/appendixl.html\n\n[mathml3]: https://www.w3.org/TR/MathML3/appendixi.html\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/mathml-tag-names#readme", "_id": "mathml-tag-names@2.1.0", "_requested": { "type": "version", "registry": true, "raw": "mathml-tag-names@2.1.0", "name": "mathml-tag-names", "escapedName": "mathml-tag-names", "rawSpec": "2.1.0", "saveSpec": "[Circular]", "fetchSpec": "2.1.0" }, "_spec": "2.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "mathml-tag-names@2.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/mathml-tag-names", "error": "[Circular]", "extraneous": false }, "normalize-selector": { "name": "normalize-selector", "version": "0.2.0", "description": "Normalize CSS Selectors", "main": "./lib/normalize-selector.js", "scripts": { "test": "node ./test/mocha/node-suite.js" }, "repository": { "type": "git", "url": "git://github.com/getify/normalize-selector.git" }, "keywords": [ "CSS" ], "bugs": { "url": "https://github.com/getify/normalize-selector/issues", "email": "getify@gmail.com" }, "homepage": "http://github.com/getify/normalize-selector", "author": { "name": "Kyle Simpson", "email": "getify@gmail.com" }, "contributors": [ { "name": "David Kaye", "url": "https://github.com/dfkaye" } ], "license": "MIT", "devDependencies": { "assertik": "^1.0.0", "mocha": "^2.2.5" }, "_resolved": "https://registry.npmjs.org/normalize-selector/-/normalize-selector-0.2.0.tgz", "_integrity": "sha1-0LFF62kRicY6eNIB3E/bEpPvDAM=", "_from": "normalize-selector@0.2.0", "readme": "# Normalize-Selector\n\nNormalize CSS selectors.\n\nExamples:\n\n* `#foo>.bar` -> `#foo > .bar`\n* ` \t#foo \t > \t .bar \t ` -> `#foo > .bar`\n* `foo[ a = 'b' ]` -> `foo[a='b']`\n\n## Tests\n\nRun mocha tests on node.js with:\n\n```\nnpm test\n```\n\nor:\n\n```\nnode ./test/mocha/node-suite.js\n```\n\n## rawgithub\n\nView the browser suite directly on\n[rawgithub](https://rawgithub.com/getify/normalize-selector/master/test/mocha/browser-suite.html)\n\n## License\n\nThe code and all the documentation are released under the MIT license.\n\nhttp://getify.mit-license.org/\n", "readmeFilename": "README.md", "_id": "normalize-selector@0.2.0", "_requested": { "type": "version", "registry": true, "raw": "normalize-selector@0.2.0", "name": "normalize-selector", "escapedName": "normalize-selector", "rawSpec": "0.2.0", "saveSpec": "[Circular]", "fetchSpec": "0.2.0" }, "_spec": "0.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "normalize-selector@0.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/normalize-selector", "error": "[Circular]", "extraneous": false }, "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": "[Circular]", "keywords": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://postcss.org/", "repository": "[Circular]", "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": "[Circular]", "browser": "[Circular]", "browserslist": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" }, "postcss-html": { "name": "postcss-html", "version": "0.36.0", "description": "PostCSS syntax for parsing HTML (and HTML-like)", "repository": { "type": "git", "url": "git+https://github.com/gucong3000/postcss-html.git" }, "keywords": [ "postcss", "syntax", "html", "vue", "quickapp", "PHP", "css", "less", "sass", "scss", "sss", "sugarss" ], "author": { "name": "gucong" }, "license": "MIT", "bugs": { "url": "https://github.com/gucong3000/postcss-html/issues" }, "homepage": "https://github.com/gucong3000/postcss-html#readme", "nyc": { "reporter": [ "lcov", "text" ], "all": true, "cache": true, "check-coverage": true }, "scripts": { "mocha": "mocha --no-timeouts", "test": "nyc npm run mocha", "debug": "npm run mocha -- --inspect-brk" }, "dependencies": { "htmlparser2": { "name": "htmlparser2", "description": "Fast & forgiving HTML/XML/RSS parser", "version": "3.10.1", "author": { "name": "Felix Boehm", "email": "me@feedic.com" }, "keywords": [ "html", "parser", "streams", "xml", "dom", "rss", "feed", "atom" ], "repository": { "type": "git", "url": "git://github.com/fb55/htmlparser2.git" }, "bugs": { "url": "http://github.com/fb55/htmlparser2/issues" }, "directories": { "lib": "lib/" }, "main": "lib/index.js", "files": [ "lib" ], "scripts": { "lcov": "istanbul cover _mocha --report lcovonly -- -R spec", "coveralls": "npm run lint && npm run lcov && (cat coverage/lcov.info | coveralls || exit 0)", "test": "mocha && npm run lint", "lint": "eslint lib test" }, "dependencies": {}, "devDependencies": { "coveralls": "^3.0.1", "eslint": "^5.13.0", "istanbul": "^0.4.3", "mocha": "^5.2.0", "mocha-lcov-reporter": "^1.2.0" }, "browser": { "readable-stream": false }, "license": "MIT", "prettier": { "tabWidth": 4 }, "_resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz", "_integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==", "_from": "htmlparser2@3.10.1", "readme": "# htmlparser2\n\n[![NPM version](http://img.shields.io/npm/v/htmlparser2.svg?style=flat)](https://npmjs.org/package/htmlparser2)\n[![Downloads](https://img.shields.io/npm/dm/htmlparser2.svg?style=flat)](https://npmjs.org/package/htmlparser2)\n[![Build Status](http://img.shields.io/travis/fb55/htmlparser2/master.svg?style=flat)](http://travis-ci.org/fb55/htmlparser2)\n[![Coverage](http://img.shields.io/coveralls/fb55/htmlparser2.svg?style=flat)](https://coveralls.io/r/fb55/htmlparser2)\n\nA forgiving HTML/XML/RSS parser. The parser can handle streams and provides a callback interface.\n\n## Installation\n\tnpm install htmlparser2\n\nA live demo of htmlparser2 is available [here](https://astexplorer.net/#/2AmVrGuGVJ).\n\n## Usage\n\n```javascript\nvar htmlparser = require(\"htmlparser2\");\nvar parser = new htmlparser.Parser({\n\tonopentag: function(name, attribs){\n\t\tif(name === \"script\" && attribs.type === \"text/javascript\"){\n\t\t\tconsole.log(\"JS! Hooray!\");\n\t\t}\n\t},\n\tontext: function(text){\n\t\tconsole.log(\"-->\", text);\n\t},\n\tonclosetag: function(tagname){\n\t\tif(tagname === \"script\"){\n\t\t\tconsole.log(\"That's it?!\");\n\t\t}\n\t}\n}, {decodeEntities: true});\nparser.write(\"Xyz <script type='text/javascript'>var foo = '<<bar>>';</ script>\");\nparser.end();\n```\n\nOutput (simplified):\n\n```\n--> Xyz\nJS! Hooray!\n--> var foo = '<<bar>>';\nThat's it?!\n```\n\n## Documentation\n\nRead more about the parser and its options in the [wiki](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n## Get a DOM\nThe `DomHandler` (known as `DefaultHandler` in the original `htmlparser` module) produces a DOM (document object model) that can be manipulated using the [`DomUtils`](https://github.com/fb55/DomUtils) helper.\n\nThe `DomHandler`, while still bundled with this module, was moved to its [own module](https://github.com/fb55/domhandler). Have a look at it for further information.\n\n## Parsing RSS/RDF/Atom Feeds\n\n```javascript\nnew htmlparser.FeedHandler(function(<error> error, <object> feed){\n ...\n});\n```\n\nNote: While the provided feed handler works for most feeds, you might want to use [danmactough/node-feedparser](https://github.com/danmactough/node-feedparser), which is much better tested and actively maintained.\n\n## Performance\n\nAfter having some artificial benchmarks for some time, __@AndreasMadsen__ published his [`htmlparser-benchmark`](https://github.com/AndreasMadsen/htmlparser-benchmark), which benchmarks HTML parses based on real-world websites.\n\nAt the time of writing, the latest versions of all supported parsers show the following performance characteristics on [Travis CI](https://travis-ci.org/AndreasMadsen/htmlparser-benchmark/builds/10805007) (please note that Travis doesn't guarantee equal conditions for all tests):\n\n```\ngumbo-parser : 34.9208 ms/file ± 21.4238\nhtml-parser : 24.8224 ms/file ± 15.8703\nhtml5 : 419.597 ms/file ± 264.265\nhtmlparser : 60.0722 ms/file ± 384.844\nhtmlparser2-dom: 12.0749 ms/file ± 6.49474\nhtmlparser2 : 7.49130 ms/file ± 5.74368\nhubbub : 30.4980 ms/file ± 16.4682\nlibxmljs : 14.1338 ms/file ± 18.6541\nparse5 : 22.0439 ms/file ± 15.3743\nsax : 49.6513 ms/file ± 26.6032\n```\n\n## How does this module differ from [node-htmlparser](https://github.com/tautologistics/node-htmlparser)?\n\nThis is a fork of the `htmlparser` module. The main difference is that this is intended to be used only with node (it runs on other platforms using [browserify](https://github.com/substack/node-browserify)). `htmlparser2` was rewritten multiple times and, while it maintains an API that's compatible with `htmlparser` in most cases, the projects don't share any code anymore.\n\nThe parser now provides a callback interface close to [sax.js](https://github.com/isaacs/sax-js) (originally targeted at [readabilitySAX](https://github.com/fb55/readabilitysax)). As a result, old handlers won't work anymore.\n\nThe `DefaultHandler` and the `RssHandler` were renamed to clarify their purpose (to `DomHandler` and `FeedHandler`). The old names are still available when requiring `htmlparser2`, your code should work as expected.\n", "readmeFilename": "README.md", "homepage": "https://github.com/fb55/htmlparser2#readme", "_id": "htmlparser2@3.10.1", "_requested": { "type": "version", "registry": true, "raw": "htmlparser2@3.10.1", "name": "htmlparser2", "escapedName": "htmlparser2", "rawSpec": "3.10.1", "saveSpec": "[Circular]", "fetchSpec": "3.10.1" }, "_spec": "3.10.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "htmlparser2@3.10.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "domelementtype": "^1.3.1", "domhandler": "^2.3.0", "domutils": "^1.5.1", "entities": "^1.1.1", "inherits": "^2.0.1", "readable-stream": "^3.1.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/htmlparser2", "error": "[Circular]", "extraneous": false, "_deduped": "htmlparser2" } }, "peerDependencies": { "postcss": ">=5.0.0", "postcss-syntax": ">=0.36.0" }, "devDependencies": { "autoprefixer": "^9.4.3", "chai": "^4.2.0", "codecov": "^3.1.0", "mocha": "^5.2.0", "nyc": "^13.1.0", "postcss": "^7.0.7", "postcss-less": "^3.1.0", "postcss-safe-parser": "^4.0.1", "postcss-scss": "^2.0.0", "postcss-syntax": ">=0.36.0", "sugarss": "^2.0.0" }, "_resolved": "https://registry.npmjs.org/postcss-html/-/postcss-html-0.36.0.tgz", "_integrity": "sha512-HeiOxGcuwID0AFsNAL0ox3mW6MHH5cstWN1Z3Y+n6H+g12ih7LHdYxWwEA/QmrebctLjo79xz9ouK3MroHwOJw==", "_from": "postcss-html@0.36.0", "readme": "PostCSS HTML Syntax\n====\n\n[![NPM version](https://img.shields.io/npm/v/postcss-html.svg?style=flat-square)](https://www.npmjs.com/package/postcss-html)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-html.svg)](https://travis-ci.org/gucong3000/postcss-html)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntaxes.svg?label=integration)](https://travis-ci.org/gucong3000/postcss-syntaxes)\n[![Codecov](https://img.shields.io/codecov/c/github/gucong3000/postcss-html.svg)](https://codecov.io/gh/gucong3000/postcss-html)\n[![David](https://img.shields.io/david/gucong3000/postcss-html.svg)](https://david-dm.org/gucong3000/postcss-html)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n\ttitle=\"Philosopher’s stone, logo of PostCSS\"\n\tsrc=\"http://postcss.github.io/postcss/logo.svg\">\n\n[PostCSS](https://github.com/postcss/postcss) syntax for parsing HTML (and HTML-like)\n- [PHP](http://php.net)\n- [Vue Single-File Component](https://vue-loader.vuejs.org/spec.html)\n- [Quick App](https://doc.quickapp.cn/framework/source-file.html)\n- [XSLT](https://www.w3.org/TR/xslt-30/)\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```\nnpm install postcss-syntax postcss-html --save-dev\n```\n\nIf you want support SCSS/SASS/LESS/SugarSS syntax, you need to install the corresponding module.\n\n- SCSS: [postcss-scss](https://github.com/postcss/postcss-scss)\n- SASS: [postcss-sass](https://github.com/aleshaoleg/postcss-sass)\n- LESS: [postcss-less](https://github.com/shellscape/postcss-less)\n- SugarSS: [sugarss](https://github.com/postcss/sugarss)\n\n## Use Cases\n\n```js\nconst postcss = require('postcss');\nconst syntax = require('postcss-html')({\n\t// syntax for parse scss (non-required options)\n\tscss: require('postcss-scss'),\n\t// syntax for parse less (non-required options)\n\tless: require('postcss-less'),\n\t// syntax for parse css blocks (non-required options)\n\tcss: require('postcss-safe-parser'),\n});\npostcss(plugins).process(source, { syntax: syntax }).then(function (result) {\n\t// An alias for the result.css property. Use it with syntaxes that generate non-CSS output.\n\tresult.content\n});\n```\n\nIf you want support SCSS/SASS/LESS/SugarSS syntax, you need to install these module:\n\n- SCSS: [postcss-scss](https://github.com/postcss/postcss-scss)\n- SASS: [postcss-sass](https://github.com/aleshaoleg/postcss-sass)\n- LESS: [postcss-less](https://github.com/shellscape/postcss-less)\n- SugarSS: [sugarss](https://github.com/postcss/sugarss)\n\n## Advanced Use Cases\n\nSee: [postcss-syntax](https://github.com/gucong3000/postcss-syntax)\n\n## Turning PostCSS off from within your HTML\n\nPostCSS can be temporarily turned off by using special comments in your HTML. For example:\n\n```html\n<html>\n<body>\n<!-- postcss-disable -->\n<a style=\"color: red;\"></a>\n<!-- postcss-enable -->\n```\n\n## Style Transformations\n\nThe main use case of this plugin is to apply PostCSS transformations to `<style>` tags and `<div style=\"*\">` property in HTML (and HTML-like).\n", "readmeFilename": "README.md", "_id": "postcss-html@0.36.0", "_requested": { "type": "version", "registry": true, "raw": "postcss-html@0.36.0", "name": "postcss-html", "escapedName": "postcss-html", "rawSpec": "0.36.0", "saveSpec": "[Circular]", "fetchSpec": "0.36.0" }, "_spec": "0.36.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-html@0.36.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "htmlparser2": "^3.10.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-html", "error": "[Circular]", "extraneous": false }, "postcss-jsx": { "name": "postcss-jsx", "version": "0.36.0", "description": "PostCSS syntax for parsing CSS in JS literals", "repository": { "type": "git", "url": "git+https://github.com/gucong3000/postcss-jsx.git" }, "keywords": [ "postcss", "syntax", "emotion", "aphrodite", "glamor", "glamorous", "react-native", "react-style", "reactcss", "styled-components", "styletron-react", "typestyle", "css-in-js", "css" ], "author": { "name": "gucong3000" }, "license": "MIT", "bugs": { "url": "https://github.com/gucong3000/postcss-jsx/issues" }, "homepage": "https://github.com/gucong3000/postcss-jsx#readme", "nyc": { "reporter": [ "lcov", "text" ], "all": true, "cache": true, "check-coverage": true }, "scripts": { "mocha": "mocha --no-timeouts", "test": "nyc npm run mocha", "debug": "npm run mocha -- --inspect-brk" }, "dependencies": { "@babel/core": { "name": "@babel/core", "version": "7.4.3", "description": "Babel compiler core.", "main": "lib/index.js", "author": { "name": "Sebastian McKenzie", "email": "sebmck@gmail.com" }, "homepage": "https://babeljs.io/", "license": "MIT", "publishConfig": { "access": "public" }, "repository": { "type": "git", "url": "https://github.com/babel/babel/tree/master/packages/babel-core" }, "keywords": [ "6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler" ], "engines": { "node": ">=6.9.0" }, "browser": { "./lib/config/files/index.js": "./lib/config/files/index-browser.js", "./lib/transform-file.js": "./lib/transform-file-browser.js" }, "dependencies": {}, "devDependencies": { "@babel/helper-transform-fixture-test-runner": "^7.4.3", "@babel/register": "^7.4.0" }, "gitHead": "508fde4009f31883f318b9e6546459ac1b086a91", "_resolved": "https://registry.npmjs.org/@babel/core/-/core-7.4.3.tgz", "_integrity": "sha512-oDpASqKFlbspQfzAE7yaeTmdljSH2ADIvBlb0RwbStltTuWa0+7CCI1fYVINNv9saHPa1W7oaKeuNuKj+RQCvA==", "_from": "@babel/core@7.4.3", "readme": "# @babel/core\n\n> Babel compiler core.\n\nSee our website [@babel/core](https://babeljs.io/docs/en/next/babel-core.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20core%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/core\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/core --dev\n```\n", "readmeFilename": "README.md", "_id": "@babel/core@7.4.3", "_requested": { "type": "version", "registry": true, "raw": "@babel/core@7.4.3", "name": "@babel/core", "escapedName": "@babel%2fcore", "scope": "@babel", "rawSpec": "7.4.3", "saveSpec": "[Circular]", "fetchSpec": "7.4.3" }, "_spec": "7.4.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@babel/core@7.4.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "@babel/code-frame": "^7.0.0", "@babel/generator": "^7.4.0", "@babel/helpers": "^7.4.3", "@babel/parser": "^7.4.3", "@babel/template": "^7.4.0", "@babel/traverse": "^7.4.3", "@babel/types": "^7.4.0", "convert-source-map": "^1.1.0", "debug": "^4.1.0", "json5": "^2.1.0", "lodash": "^4.17.11", "resolve": "^1.3.2", "semver": "^5.4.1", "source-map": "^0.5.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@babel/core", "error": "[Circular]", "extraneous": false, "_deduped": "@babel/core" } }, "peerDependencies": { "postcss": ">=5.0.0", "postcss-syntax": ">=0.36.0" }, "devDependencies": { "autoprefixer": "^9.4.3", "chai": "^4.2.0", "codecov": "^3.1.0", "json5": "^2.1.0", "mocha": "^5.2.0", "nyc": "^13.1.0", "postcss": "^7.0.7", "postcss-parser-tests": "^6.3.1", "postcss-safe-parser": "^4.0.1", "postcss-syntax": ">=0.36.0" }, "_resolved": "https://registry.npmjs.org/postcss-jsx/-/postcss-jsx-0.36.0.tgz", "_integrity": "sha512-/lWOSXSX5jlITCKFkuYU2WLFdrncZmjSVyNpHAunEgirZXLwI8RjU556e3Uz4mv0WVHnJA9d3JWb36lK9Yx99g==", "_from": "postcss-jsx@0.36.0", "readme": "PostCSS JSX Syntax\n====\n\n[![NPM version](https://img.shields.io/npm/v/postcss-jsx.svg?style=flat-square)](https://www.npmjs.com/package/postcss-jsx)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-jsx.svg)](https://travis-ci.org/gucong3000/postcss-jsx)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntaxes.svg?label=integration)](https://travis-ci.org/gucong3000/postcss-syntaxes)\n[![Codecov](https://img.shields.io/codecov/c/github/gucong3000/postcss-jsx.svg)](https://codecov.io/gh/gucong3000/postcss-jsx)\n[![David](https://img.shields.io/david/gucong3000/postcss-jsx.svg)](https://david-dm.org/gucong3000/postcss-jsx)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n\ttitle=\"Philosopher’s stone, logo of PostCSS\"\n\tsrc=\"http://postcss.github.io/postcss/logo.svg\">\n\n[PostCSS](https://github.com/postcss/postcss) syntax for parsing [CSS in JS](https://github.com/MicheleBertoli/css-in-js) literals:\n\n- [aphrodite](https://github.com/Khan/aphrodite)\n- [astroturf](https://github.com/4Catalyzer/astroturf)\n- [csjs](https://github.com/rtsao/csjs)\n- [css-light](https://github.com/streamich/css-light)\n- [cssobj](https://github.com/cssobj/cssobj)\n- [electron-css](https://github.com/azukaar/electron-css)\n- [emotion](https://github.com/emotion-js/emotion)\n- [freestyler](https://github.com/streamich/freestyler)\n- [glamor](https://github.com/threepointone/glamor)\n- [glamorous](https://github.com/paypal/glamorous)\n- [j2c](https://github.com/j2css/j2c)\n- [linaria](https://github.com/callstack/linaria)\n- [lit-css](https://github.com/bashmish/lit-css)\n- [react-native](https://github.com/necolas/react-native-web)\n- [react-style](https://github.com/js-next/react-style)\n- [reactcss](https://github.com/casesandberg/reactcss)\n- [styled-components](https://github.com/styled-components/styled-components)\n- [styletron-react](https://github.com/rtsao/styletron)\n- [styling](https://github.com/andreypopp/styling)\n- [typestyle](https://github.com/typestyle/typestyle)\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```\nnpm install postcss-syntax postcss-jsx --save-dev\n```\n\n## Use Cases\n\n```js\nconst postcss = require('postcss');\nconst stylelint = require('stylelint');\nconst syntax = require('postcss-syntax');\npostcss([stylelint({ fix: true })]).process(source, { syntax: syntax }).then(function (result) {\n\t// An alias for the result.css property. Use it with syntaxes that generate non-CSS output.\n\tresult.content\n});\n```\n\ninput:\n```javascript\nimport glm from 'glamorous';\nconst Component1 = glm.a({\n\tflexDirectionn: 'row',\n\tdisplay: 'inline-block',\n\tcolor: '#fff',\n});\n```\n\noutput:\n```javascript\nimport glm from 'glamorous';\nconst Component1 = glm.a({\n\tcolor: '#fff',\n\tdisplay: 'inline-block',\n\tflexDirectionn: 'row',\n});\n```\n\n## Advanced Use Cases\n\nAdd support for more `css-in-js` package:\n```js\nconst syntax = require('postcss-syntax')({\n\t\"i-css\": (index, namespace) => namespace[index + 1] === \"addStyles\",\n\t\"styled-components\": true,\n});\n```\n\nSee: [postcss-syntax](https://github.com/gucong3000/postcss-syntax)\n\n## Style Transformations\n\nThe main use case of this plugin is to apply PostCSS transformations to CSS code in template literals & styles as object literals.\n", "readmeFilename": "README.md", "_id": "postcss-jsx@0.36.0", "_requested": { "type": "version", "registry": true, "raw": "postcss-jsx@0.36.0", "name": "postcss-jsx", "escapedName": "postcss-jsx", "rawSpec": "0.36.0", "saveSpec": "[Circular]", "fetchSpec": "0.36.0" }, "_spec": "0.36.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-jsx@0.36.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "@babel/core": ">=7.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-jsx", "error": "[Circular]", "extraneous": false }, "postcss-less": { "name": "postcss-less", "version": "3.1.4", "description": "LESS parser for PostCSS", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/shellscape/postcss-less.git" }, "author": { "name": "Denys Kniazevych", "email": "webschik@gmail.com" }, "maintainer": "Andrew Powell <andrew@shellscape.org>", "homepage": "https://github.com/shellscape/postcss-less", "bugs": { "url": "https://github.com/shellscape/postcss-less/issues" }, "main": "lib/index.js", "engines": { "node": ">=6.14.4" }, "scripts": { "ci:coverage": "nyc npm run test && nyc report --reporter=text-lcov > coverage.lcov", "ci:lint": "npm run lint && npm run security", "ci:test": "npm run test", "commitlint": "commitlint", "commitmsg": "commitlint -e $GIT_PARAMS", "lint": "eslint --fix --cache lib test", "lint-staged": "lint-staged", "security": "npm audit", "test": "ava" }, "files": [ "lib", "README.md", "LICENSE" ], "dependencies": { "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": "[Circular]", "keywords": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://postcss.org/", "repository": "[Circular]", "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": "[Circular]", "browser": "[Circular]", "browserslist": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" } }, "devDependencies": { "@commitlint/cli": "^7.1.2", "@commitlint/config-conventional": "^7.1.2", "ava": "^1.0.0-beta.8", "cheerio": "^1.0.0-rc.2", "eslint": "^5.6.0", "eslint-config-shellscape": "^2.0.2", "eslint-plugin-filenames": "^1.2.0", "is-absolute-url": "^2.1.0", "less": "^3.8.1", "lint-staged": "^8.1.0", "node-fetch": "^2.2.0", "nyc": "^13.3.0", "postcss-parser-tests": "^6.3.1", "pre-commit": "^1.2.2", "standard-version": "^4.4.0", "url-join": "^4.0.0" }, "keywords": [ "css", "postcss", "postcss-syntax", "parser", "less" ], "pre-commit": "lint-staged", "lint-staged": { "*.js": [ "eslint --fix", "git add" ] }, "_resolved": "https://registry.npmjs.org/postcss-less/-/postcss-less-3.1.4.tgz", "_integrity": "sha512-7TvleQWNM2QLcHqvudt3VYjULVB49uiW6XzEUFmvwHzvsOEF5MwBrIXZDJQvJNFGjJQTzSzZnDoCJ8h/ljyGXA==", "_from": "postcss-less@3.1.4", "readme": "[tests]: \thttps://img.shields.io/circleci/project/github/shellscape/postcss-less.svg\n[tests-url]: https://circleci.com/gh/shellscape/postcss-less\n\n[cover]: https://codecov.io/gh/shellscape/postcss-less/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/shellscape/postcss-less\n\n[size]: https://packagephobia.now.sh/badge?p=postcss-less\n[size-url]: https://packagephobia.now.sh/result?p=postcss-less\n\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS-SCSS]: https://github.com/postcss/postcss-scss\n[LESS]: http://lesless.org\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[Stylelint]: http://stylelint.io/\n\n# postcss-less\n\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![size][size]][size-url]\n\nA [PostCSS] Syntax for parsing [LESS]\n\n_Note: This module requires Node v6.14.4+. `poscss-less` is not a LESS compiler. For compiling LESS, please use the official toolset for LESS._\n\n## Install\n\nUsing npm:\n\n```console\nnpm install postcss-less --save-dev\n```\n\n<a href=\"https://www.patreon.com/shellscape\">\n <img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\">\n</a>\n\nPlease consider [becoming a patron](https://www.patreon.com/shellscape) if you find this module useful.\n\n## Usage\n\nThe most common use of `postcss-less` is for applying PostCSS transformations directly to LESS source. eg. ia theme written in LESS which uses [Autoprefixer] to add appropriate vendor prefixes.\n\n```js\nconst syntax = require('postcss-less');\npostcss(plugins)\n .process(lessText, { syntax: syntax })\n .then(function (result) {\n result.content // LESS with transformations\n});\n```\n\n## LESS Specific Parsing\n\n### `@import`\n\nParsing of LESS-specific `@import` statements and options are supported.\n\n```less\n@import (option) 'file.less';\n```\n\nThe AST will contain an `AtRule` node with:\n\n- an `import: true` property\n- a `filename: <String>` property containing the imported filename\n- an `options: <String>` property containing any [import options](http://lesscss.org/features/#import-atrules-feature-import-options) specified\n\n### Inline Comments\n\nParsing of single-line comments in CSS is supported.\n\n```less\n:root {\n // Main theme color\n --color: red;\n}\n```\n\nThe AST will contain a `Comment` node with an `inline: true` property.\n\n### Mixins\n\nParsing of LESS mixins is supported.\n\n```less\n.my-mixin {\n color: black;\n}\n```\n\nThe AST will contain an `AtRule` node with a `mixin: true` property.\n\n#### `!important`\n\nMixins that declare `!important` will contain an `important: true` property on their respective node.\n\n### Variables\n\nParsing of LESS variables is supported.\n\n```less\n@link-color: #428bca;\n```\n\nThe AST will contain an `AtRule` node with a `variable: true` property.\n\n_Note: LESS variables are strictly parsed - a colon (`:`) must immediately follow a variable name._\n\n## Stringifying\n\nTo process LESS code without PostCSS transformations, custom stringifier\nshould be provided.\n\n```js\nconst postcss = require('postcss');\nconst syntax = require('postcss-less');\n\nconst less = `\n // inline comment\n\n .container {\n .mixin-1();\n .mixin-2;\n .mixin-3 (@width: 100px) {\n width: @width;\n }\n }\n\n .rotation(@deg:5deg){\n .transform(rotate(@deg));\n }\n`;\n\nconst result = await postcss().process(less, { syntax });\n\n // will contain the value of `less`\nconst { content } = result;\n```\n\n## Use Cases\n\n- Lint LESS code with 3rd-party plugins.\n- Apply PostCSS transformations (such as [Autoprefixer](https://github.com/postcss/autoprefixer)) directly to the LESS source code\n\n## Meta\n\n[CONTRIBUTING](./.github/CONTRIBUTING)\n\n[LICENSE (MIT)](./LICENSE)\n", "readmeFilename": "README.md", "_id": "postcss-less@3.1.4", "_requested": { "type": "version", "registry": true, "raw": "postcss-less@3.1.4", "name": "postcss-less", "escapedName": "postcss-less", "rawSpec": "3.1.4", "saveSpec": "[Circular]", "fetchSpec": "3.1.4" }, "_spec": "3.1.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-less@3.1.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "postcss": "^7.0.14" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-less", "error": "[Circular]", "extraneous": false }, "postcss-markdown": { "name": "postcss-markdown", "version": "0.36.0", "description": "PostCSS syntax for parsing Markdown", "repository": { "type": "git", "url": "git+https://github.com/gucong3000/postcss-markdown.git" }, "keywords": [ "postcss", "syntax", "markdown", "html", "css", "less", "sass", "scss", "sss", "sugarss" ], "author": { "name": "gucong" }, "license": "MIT", "bugs": { "url": "https://github.com/gucong3000/postcss-markdown/issues" }, "homepage": "https://github.com/gucong3000/postcss-markdown#readme", "nyc": { "reporter": [ "lcov", "text" ], "all": true, "cache": true, "check-coverage": true }, "scripts": { "mocha": "mocha --no-timeouts", "test": "nyc npm run mocha", "debug": "npm run mocha -- --inspect-brk" }, "dependencies": { "remark": { "name": "remark", "version": "10.0.1", "description": "Markdown processor powered by plugins", "license": "MIT", "keywords": [ "markdown", "abstract", "syntax", "tree", "ast", "parse", "stringify", "process" ], "homepage": "https://remark.js.org", "repository": { "type": "git", "url": "https://github.com/remarkjs/remark/tree/master/packages/remark" }, "bugs": { "url": "https://github.com/remarkjs/remark/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" } ], "files": [ "index.js" ], "dependencies": { "remark-stringify": { "name": "remark-stringify", "version": "6.0.4", "description": "Markdown compiler for remark", "license": "MIT", "keywords": [ "markdown", "abstract", "syntax", "tree", "ast", "stringify" ], "homepage": "https://remark.js.org", "repository": { "type": "git", "url": "https://github.com/remarkjs/remark/tree/master/packages/remark-stringify" }, "bugs": { "url": "https://github.com/remarkjs/remark/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, { "name": "Eugene Sharygin", "email": "eush77@gmail.com" } ], "files": [ "index.js", "lib" ], "dependencies": { "ccount": { "name": "ccount", "version": "1.0.3", "description": "Count characters", "license": "MIT", "keywords": [ "character", "count", "char" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/ccount.git" }, "bugs": { "url": "https://github.com/wooorm/ccount/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s ccount > ccount.js", "build-mangle": "esmangle ccount.js > ccount.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "ccount.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "_resolved": "https://registry.npmjs.org/ccount/-/ccount-1.0.3.tgz", "_integrity": "sha512-Jt9tIBkRc9POUof7QA/VwWd+58fKkEEfI+/t1/eOlxKM7ZhrczNzMFefge7Ai+39y1pR/pP6cI19guHy3FSLmw==", "_from": "ccount@1.0.3", "readme": "# ccount [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCount characters.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install ccount\n```\n\n## Usage\n\n```javascript\nvar ccount = require('ccount')\n\nccount('foo(bar(baz)', '(') // => 2\nccount('foo(bar(baz)', ')') // => 1\n```\n\n## API\n\n### `ccount(value, character)`\n\nGet the total count of `character` in `value`.\n\n###### Parameters\n\n* `value` (`string`) — Content, coerced to string\n* `character` (`string`) — Single character to look for\n\n###### Returns\n\n`number` — Number of times `character` occurred in `value`.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/ccount.svg\n\n[travis]: https://travis-ci.org/wooorm/ccount\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/ccount.svg\n\n[codecov]: https://codecov.io/github/wooorm/ccount\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/ccount#readme", "_id": "ccount@1.0.3", "_requested": { "type": "version", "registry": true, "raw": "ccount@1.0.3", "name": "ccount", "escapedName": "ccount", "rawSpec": "1.0.3", "saveSpec": "[Circular]", "fetchSpec": "1.0.3" }, "_spec": "1.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ccount@1.0.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/ccount", "error": "[Circular]", "extraneous": false }, "is-alphanumeric": { "name": "is-alphanumeric", "version": "1.0.0", "description": "Check if a string only contains alphanumeric characters", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/arthurvr/is-alphanumeric.git" }, "author": { "name": "Arthur Verschaeve", "email": "contact@arthurverschaeve.be", "url": "arthurverschaeve.be" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha" }, "files": [ "index.js" ], "keywords": [ "numbers", "numeric", "alphabet", "alphabetic", "check", "is", "detect", "latin", "alphanumeric", "string", "text", "letters", "digit", "arabic", "alphameric" ], "devDependencies": { "mocha": "*" }, "_resolved": "https://registry.npmjs.org/is-alphanumeric/-/is-alphanumeric-1.0.0.tgz", "_integrity": "sha1-Spzvcdr0wAHB2B1j0UDPU/1oifQ=", "_from": "is-alphanumeric@1.0.0", "readme": "# is-alphanumeric [![Build Status](https://travis-ci.org/arthurvr/is-alphanumeric.svg?branch=master)](https://travis-ci.org/arthurvr/is-alphanumeric)\n\n> Check if a string only contains alphanumeric characters\n\n\n## Install\n\n```\n$ npm install --save is-alphanumeric\n```\n\n\n## Usage\n\n```js\nvar isAlphanumeric = require('is-alphanumeric');\n\nisAlphanumeric('unicorns');\n//=> true\n\nisAlphanumeric('55');\n//=> true\n\nisAlphanumeric('ABC');\n//=> true\n\nisAlphanumeric('*unicorns');\n//=> false\n\nisAlphanumeric('{unicorns}');\n//=> false\n\nisAlphanumeric(' ');\n//=> false\n```\n\n\n## License\n\nMIT © [Arthur Verschaeve](http://arthurverschaeve.be)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/arthurvr/is-alphanumeric/issues" }, "homepage": "https://github.com/arthurvr/is-alphanumeric#readme", "_id": "is-alphanumeric@1.0.0", "_requested": { "type": "version", "registry": true, "raw": "is-alphanumeric@1.0.0", "name": "is-alphanumeric", "escapedName": "is-alphanumeric", "rawSpec": "1.0.0", "saveSpec": "[Circular]", "fetchSpec": "1.0.0" }, "_spec": "1.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-alphanumeric@1.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-alphanumeric", "error": "[Circular]", "extraneous": false }, "is-decimal": { "name": "is-decimal", "version": "1.0.2", "description": "Check if a character is decimal", "license": "MIT", "keywords": [ "string", "character", "char", "code", "decimal" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/is-decimal.git" }, "bugs": { "url": "https://github.com/wooorm/is-decimal/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s isDecimal > is-decimal.js", "build-mangle": "esmangle < is-decimal.js > is-decimal.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "is-decimal.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/is-decimal/-/is-decimal-1.0.2.tgz", "_integrity": "sha512-TRzl7mOCchnhchN+f3ICUCzYvL9ul7R+TYOsZ8xia++knyZAJfv/uA1FvQXsAnYIl1T3B2X5E/J7Wb1QXiIBXg==", "_from": "is-decimal@1.0.2", "readme": "# is-decimal [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is decimal.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-decimal\n```\n\n## Usage\n\n```javascript\nvar decimal = require('is-decimal')\n\ndecimal('0') // => true\ndecimal('9') // => true\ndecimal('a') // => false\ndecimal('💩') // => false\n```\n\n## API\n\n### `decimal(character|code)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is decimal.\n\n## Related\n\n* [`is-alphabetical`](https://github.com/wooorm/is-alphabetical)\n* [`is-hexadecimal`](https://github.com/wooorm/is-hexadecimal)\n* [`is-whitespace-character`](https://github.com/wooorm/is-whitespace-character)\n* [`is-word-character`](https://github.com/wooorm/is-word-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-decimal.svg\n\n[travis]: https://travis-ci.org/wooorm/is-decimal\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-decimal.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-decimal\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-decimal#readme", "_id": "is-decimal@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-decimal@1.0.2", "name": "is-decimal", "escapedName": "is-decimal", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-decimal@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-decimal", "error": "[Circular]", "extraneous": false, "_deduped": "is-decimal" }, "is-whitespace-character": { "name": "is-whitespace-character", "version": "1.0.2", "description": "Check if a character is a whitespace character", "license": "MIT", "keywords": [ "string", "character", "char", "code", "whitespace", "white", "space" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/is-whitespace-character.git" }, "bugs": { "url": "https://github.com/wooorm/is-whitespace-character/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s isWhitespaceCharacter > is-whitespace-character.js", "build-mangle": "esmangle < is-whitespace-character.js > is-whitespace-character.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "is-whitespace-character.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/is-whitespace-character/-/is-whitespace-character-1.0.2.tgz", "_integrity": "sha512-SzM+T5GKUCtLhlHFKt2SDAX2RFzfS6joT91F2/WSi9LxgFdsnhfPK/UIA+JhRR2xuyLdrCys2PiFDrtn1fU5hQ==", "_from": "is-whitespace-character@1.0.2", "readme": "# is-whitespace-character [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is a whitespace character: `\\s`, which equals\nall Unicode Space Separators (including `[ \\t\\v\\f]`), the BOM\n(`\\uFEFF`), and line terminator (`[\\n\\r\\u2028\\u2029]`).\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-whitespace-character\n```\n\n## Usage\n\n```javascript\nvar whitespace = require('is-whitespace-character')\n\nwhitespace(' ') // => true\nwhitespace('\\n') // => true\nwhitespace('\\uFEFF') // => true\nwhitespace('_') // => false\nwhitespace('a') // => true\nwhitespace('💩') // => false\n```\n\n## API\n\n### `whitespaceCharacter(character|code)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is a whitespace character.\n\n## Related\n\n* [`is-alphabetical`](https://github.com/wooorm/is-alphabetical)\n* [`is-alphanumerical`](https://github.com/wooorm/is-alphanumerical)\n* [`is-decimal`](https://github.com/wooorm/is-decimal)\n* [`is-hexadecimal`](https://github.com/wooorm/is-hexadecimal)\n* [`is-word-character`](https://github.com/wooorm/is-word-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-whitespace-character.svg\n\n[travis]: https://travis-ci.org/wooorm/is-whitespace-character\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-whitespace-character.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-whitespace-character\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-whitespace-character#readme", "_id": "is-whitespace-character@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-whitespace-character@1.0.2", "name": "is-whitespace-character", "escapedName": "is-whitespace-character", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-whitespace-character@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-whitespace-character", "error": "[Circular]", "extraneous": false, "_deduped": "is-whitespace-character" }, "longest-streak": { "name": "longest-streak", "version": "2.0.2", "description": "Count the longest repeating streak of a character", "license": "MIT", "keywords": [ "count", "length", "longest", "repeating", "streak", "character" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/longest-streak.git" }, "bugs": { "url": "https://github.com/wooorm/longest-streak/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^14.0.0", "esmangle": "^1.0.0", "nyc": "^11.0.0", "remark-cli": "^4.0.0", "remark-preset-wooorm": "^3.0.0", "tape": "^4.6.2", "xo": "^0.18.0" }, "scripts": { "build-md": "remark . -qfo", "build-bundle": "browserify index.js --bare -s longestStreak > longest-streak.js", "build-mangle": "esmangle longest-streak.js > longest-streak.min.js", "build": "npm run build-md && npm run build-bundle && npm run build-mangle", "lint": "xo", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run build && npm run lint && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "xo": { "space": true, "esnext": false, "ignores": [ "longest-streak.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/longest-streak/-/longest-streak-2.0.2.tgz", "_integrity": "sha512-TmYTeEYxiAmSVdpbnQDXGtvYOIRsCMg89CVZzwzc2o7GFL1CjoiRPjH5ec0NFAVlAx3fVof9dX/t6KKRAo2OWA==", "_from": "longest-streak@2.0.2", "readme": "# longest-streak [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCount the longest repeating streak of a character.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install longest-streak\n```\n\n## Usage\n\n```js\nvar longestStreak = require('longest-streak');\n\nlongestStreak('` foo `` bar `', '`') //=> 2\n```\n\n## API\n\n### `longestStreak(value, character)`\n\nGet the count of the longest repeating streak of `character` in `value`.\n\n###### Parameters\n\n* `value` (`string`) — Content, coerced to string.\n* `character` (`string`) — Single character to look for.\n\n###### Returns\n\n`number` — Number of characters at the place where `character` occurs in\nits longest streak in `value`.\n\n###### Throws\n\n* `Error` — when `character` is not a single character string.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/longest-streak.svg\n\n[travis]: https://travis-ci.org/wooorm/longest-streak\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/longest-streak.svg\n\n[codecov]: https://codecov.io/github/wooorm/longest-streak\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/longest-streak#readme", "_id": "longest-streak@2.0.2", "_requested": { "type": "version", "registry": true, "raw": "longest-streak@2.0.2", "name": "longest-streak", "escapedName": "longest-streak", "rawSpec": "2.0.2", "saveSpec": "[Circular]", "fetchSpec": "2.0.2" }, "_spec": "2.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "longest-streak@2.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/longest-streak", "error": "[Circular]", "extraneous": false }, "markdown-escapes": { "name": "markdown-escapes", "version": "1.0.2", "description": "List of escapable characters in markdown", "license": "MIT", "keywords": [ "markdown", "escape", "pedantic", "gfm", "commonmark" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/markdown-escapes.git" }, "bugs": { "url": "https://github.com/wooorm/markdown-escapes/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s markdownEscapes > markdown-escapes.js", "build-mangle": "esmangle < markdown-escapes.js > markdown-escapes.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "markdown-escapes.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "_resolved": "https://registry.npmjs.org/markdown-escapes/-/markdown-escapes-1.0.2.tgz", "_integrity": "sha512-lbRZ2mE3Q9RtLjxZBZ9+IMl68DKIXaVAhwvwn9pmjnPLS0h/6kyBMgNhqi1xFJ/2yv6cSyv0jbiZavZv93JkkA==", "_from": "markdown-escapes@1.0.2", "readme": "# markdown-escapes [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nList of escapable characters in markdown.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install markdown-escapes\n```\n\n## Usage\n\n```javascript\nvar escapes = require('markdown-escapes');\n\n// Access by property:\nescapes.commonmark; //=> ['\\\\', '`', ..., '@', '^']\n\n// Access by options object:\nescapes({gfm: true}); //=> ['\\\\', '`', ..., '~', '|']\n```\n\n## API\n\n### `escapes([options])`\n\nGet escapes. Supports `options.commonmark` and `options.gfm`, which\nwhen `true` returns the extra escape characters supported by those\nflavours.\n\n###### Returns\n\n`Array.<string>`.\n\n### `escapes.default`\n\nList of default escapable characters.\n\n### `escapes.gfm`\n\nList of escapable characters in GFM (which includes all `default`s).\n\n### `escapes.commonmark`\n\nList of escapable characters in CommonMark (which includes all `gfm`s).\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/markdown-escapes.svg\n\n[travis]: https://travis-ci.org/wooorm/markdown-escapes\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/markdown-escapes.svg\n\n[codecov]: https://codecov.io/github/wooorm/markdown-escapes\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/markdown-escapes#readme", "_id": "markdown-escapes@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "markdown-escapes@1.0.2", "name": "markdown-escapes", "escapedName": "markdown-escapes", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "markdown-escapes@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/markdown-escapes", "error": "[Circular]", "extraneous": false, "_deduped": "markdown-escapes" }, "markdown-table": { "name": "markdown-table", "version": "1.1.2", "description": "Markdown/ASCII tables", "license": "MIT", "keywords": [ "text", "markdown", "table", "align", "ascii", "rows", "tabular" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/markdown-table.git" }, "bugs": { "url": "https://github.com/wooorm/markdown-table/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "chalk": "^2.0.0", "esmangle": "^1.0.0", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "strip-ansi": "^4.0.0", "tape": "^4.4.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js -s markdownTable > markdown-table.js", "build-mangle": "esmangle markdown-table.js > markdown-table.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "complexity": "off", "max-depth": "off", "object-shorthand": "off", "prefer-arrow-callback": "off", "no-var": "off" }, "ignores": [ "markdown-table.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "_resolved": "https://registry.npmjs.org/markdown-table/-/markdown-table-1.1.2.tgz", "_integrity": "sha512-NcWuJFHDA8V3wkDgR/j4+gZx+YQwstPgfQDV8ndUeWWzta3dnDTBxpVzqS9lkmJAuV5YX35lmyojl6HO5JXAgw==", "_from": "markdown-table@1.1.2", "readme": "# markdown-table [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nGenerate fancy [Markdown][fancy]/ASCII tables.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install markdown-table\n```\n\n## Usage\n\nNormal usage (defaults to left-alignment):\n\n```javascript\nvar table = require('markdown-table')\n\ntable([\n ['Branch', 'Commit'],\n ['master', '0123456789abcdef'],\n ['staging', 'fedcba9876543210']\n])\n```\n\nYields:\n\n```markdown\n| Branch | Commit |\n| ------- | ---------------- |\n| master | 0123456789abcdef |\n| staging | fedcba9876543210 |\n```\n\nWith alignment:\n\n```javascript\ntable(\n [\n ['Beep', 'No.', 'Boop'],\n ['beep', '1024', 'xyz'],\n ['boop', '3388450', 'tuv'],\n ['foo', '10106', 'qrstuv'],\n ['bar', '45', 'lmno']\n ],\n {\n align: ['l', 'c', 'r']\n }\n)\n```\n\nYields:\n\n```markdown\n| Beep | No. | Boop |\n| :--- | :-----: | -----: |\n| beep | 1024 | xyz |\n| boop | 3388450 | tuv |\n| foo | 10106 | qrstuv |\n| bar | 45 | lmno |\n```\n\nAlignment on dots:\n\n```javascript\ntable([['No.'], ['0.1.2'], ['11.22.33'], ['5.6.'], ['1.22222']], {\n align: '.'\n})\n```\n\nYields:\n\n```markdown\n| No. |\n| :---------: |\n| 0.1.2 |\n| 11.22.33 |\n| 5.6. |\n| 1.22222 |\n```\n\n## API\n\n### `markdownTable(table[, options])`\n\nTurns a given matrix of strings (an array of arrays of strings) into a table.\n\n##### `options`\n\n###### `options.align`\n\nOne style for all columns, or styles for their respective columns (`string` or\n`Array.<string>`). Each style is either `'l'` (left), `'r'` (right), `'c'`\n(centre), or `'.'` (dot). Other values are treated as `''`, which doesn’t place\nthe colon but does left align. _Only the lowercased first character is used,\nso `Right` is fine._\n\n###### `options.delimiter`\n\nValue to insert between cells (`string`, default: `' | '`). Careful, setting\nthis to a non-pipe breaks GitHub Flavoured Markdown.\n\n###### `options.start`\n\nValue to insert at the beginning of every row (`string`, default: `'| '`).\n\n###### `options.end`\n\nValue to insert at the end of every row (`string`, default: `' |'`).\n\n###### `options.rule`\n\nWhether to display a rule between the header and the body of the table\n(`boolean`, default: `true`). Careful, will break GitHub Flavoured Markdown\nwhen `false`.\n\n###### `options.stringLength`\n\nMethod to detect the length of a cell (`Function`, default: `s => s.length`).\n\nANSI-sequences mess up tables on terminals. To fix this, you have to\npass in a `stringLength` option to detect the “visible” length of a\ncell.\n\n```javascript\nvar strip = require('strip-ansi')\n\nfunction stringLength(cell) {\n return strip(cell).length\n}\n```\n\n###### `options.pad`\n\nWhether to pad the markdown for table cells to make them the same width\n(`boolean`, default: `true`). Setting this to false will cause the table\nrows to remain staggered.\n\n## Inspiration\n\nThe original idea and basic implementation was inspired by James\nHalliday’s [text-table][] library.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/markdown-table.svg\n\n[travis]: https://travis-ci.org/wooorm/markdown-table\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/markdown-table.svg\n\n[codecov]: https://codecov.io/github/wooorm/markdown-table\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[fancy]: https://help.github.com/articles/github-flavored-markdown/#tables\n\n[text-table]: https://github.com/substack/text-table\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/markdown-table#readme", "_id": "markdown-table@1.1.2", "_requested": { "type": "version", "registry": true, "raw": "markdown-table@1.1.2", "name": "markdown-table", "escapedName": "markdown-table", "rawSpec": "1.1.2", "saveSpec": "[Circular]", "fetchSpec": "1.1.2" }, "_spec": "1.1.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "markdown-table@1.1.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/markdown-table", "error": "[Circular]", "extraneous": false }, "mdast-util-compact": { "name": "mdast-util-compact", "version": "1.0.2", "description": "Make an MDAST tree compact", "license": "MIT", "keywords": [ "mdast", "utility", "compact", "node" ], "repository": { "type": "git", "url": "git+https://github.com/syntax-tree/mdast-util-compact.git" }, "bugs": { "url": "https://github.com/syntax-tree/mdast-util-compact/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": { "unist-util-visit": { "name": "unist-util-visit", "version": "1.4.0", "description": "Recursively walk over unist nodes", "license": "MIT", "keywords": [ "unist", "remark", "markdown", "retext", "natural", "language", "node", "visit", "walk", "util", "utility" ], "repository": { "type": "git", "url": "git+https://github.com/syntax-tree/unist-util-visit.git" }, "bugs": { "url": "https://github.com/syntax-tree/unist-util-visit/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, { "name": "Eugene Sharygin", "email": "eush77@gmail.com" }, { "name": "Richard Gibson", "email": "richard.gibson@gmail.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "nyc": "^12.0.0", "prettier": "^1.12.1", "remark": "^9.0.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.5.1", "tinyify": "^2.4.3", "xo": "^0.21.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify . -s unistUtilVisit > unist-util-visit.js", "build-mangle": "browserify . -s unistUtilVisit -p tinyify > unist-util-visit.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "guard-for-in": "off", "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "unist-util-visit.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/unist-util-visit/-/unist-util-visit-1.4.0.tgz", "_integrity": "sha512-FiGu34ziNsZA3ZUteZxSFaczIjGmksfSgdKqBfOejrrfzyUy5b7YrlzT1Bcvi+djkYDituJDy2XB7tGTeBieKw==", "_from": "unist-util-visit@1.4.0", "readme": "# unist-util-visit [![Build Status][build-badge]][build-page] [![Coverage Status][coverage-badge]][coverage-page]\n\n[unist][] node visitor. Useful when working with [**remark**][remark],\n[**retext**][retext], or [**rehype**][rehype].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unist-util-visit\n```\n\n## Usage\n\n```javascript\nvar remark = require('remark')\nvar visit = require('unist-util-visit')\n\nvar tree = remark().parse('Some _emphasis_, **importance**, and `code`.')\n\nvisit(tree, 'text', visitor)\n\nfunction visitor(node) {\n console.log(node)\n}\n```\n\nYields:\n\n```js\n{type: 'text', value: 'Some '}\n{type: 'text', value: 'emphasis'}\n{type: 'text', value: ', '}\n{type: 'text', value: 'importance'}\n{type: 'text', value: ', and '}\n{type: 'text', value: '.'}\n```\n\n## API\n\n### `visit(tree[, test], visitor[, reverse])`\n\nThis function works exactly the same as [`unist-util-visit-parents`][vp],\nbut `visitor` has a different signature.\n\n#### `next? = visitor(node, index, parent)`\n\nInstead of being passed an array of ancestors, `visitor` is invoked with the\nnode’s [`index`][index] and its [`parent`][parent].\n\nOtherwise the same as [`unist-util-visit-parents`][vp].\n\n## Related\n\n* [`unist-util-visit-parents`][vp]\n — Like `visit`, but with a stack of parents\n* [`unist-util-filter`](https://github.com/eush77/unist-util-filter)\n — Create a new tree with all nodes that pass a test\n* [`unist-util-map`](https://github.com/syntax-tree/unist-util-map)\n — Create a new tree with all nodes mapped by a given function\n* [`unist-util-remove`](https://github.com/eush77/unist-util-remove)\n — Remove nodes from a tree that pass a test\n* [`unist-util-select`](https://github.com/eush77/unist-util-select)\n — Select nodes with CSS-like selectors\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/unist`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definition -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/unist-util-visit.svg\n\n[build-page]: https://travis-ci.org/syntax-tree/unist-util-visit\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-visit.svg\n\n[coverage-page]: https://codecov.io/github/syntax-tree/unist-util-visit?branch=master\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[retext]: https://github.com/retextjs/retext\n\n[remark]: https://github.com/remarkjs/remark\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[contributing]: https://github.com/syntax-tree/unist/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/unist/blob/master/code-of-conduct.md\n\n[vp]: https://github.com/syntax-tree/unist-util-visit-parents\n\n[index]: https://github.com/syntax-tree/unist#index\n\n[parent]: https://github.com/syntax-tree/unist#parent-1\n", "readmeFilename": "readme.md", "homepage": "https://github.com/syntax-tree/unist-util-visit#readme", "_id": "unist-util-visit@1.4.0", "_requested": { "type": "version", "registry": true, "raw": "unist-util-visit@1.4.0", "name": "unist-util-visit", "escapedName": "unist-util-visit", "rawSpec": "1.4.0", "saveSpec": "[Circular]", "fetchSpec": "1.4.0" }, "_spec": "1.4.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "unist-util-visit@1.4.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "unist-util-visit-parents": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/unist-util-visit", "error": "[Circular]", "extraneous": false, "_deduped": "unist-util-visit" } }, "devDependencies": { "browserify": "^16.0.0", "nyc": "^12.0.0", "prettier": "^1.14.2", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "tinyify": "^2.4.3", "unist-builder": "^1.0.2", "xo": "^0.22.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify . -s mdastUtilCompact > mdast-util-compact.js", "build-mangle": "browserify . -s mdastUtilCompact -p tinyify > mdast-util-compact.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "ignores": [ "mdast-util-compact.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/mdast-util-compact/-/mdast-util-compact-1.0.2.tgz", "_integrity": "sha512-d2WS98JSDVbpSsBfVvD9TaDMlqPRz7ohM/11G0rp5jOBb5q96RJ6YLszQ/09AAixyzh23FeIpCGqfaamEADtWg==", "_from": "mdast-util-compact@1.0.2", "readme": "# mdast-util-compact [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nMake an [MDAST][] tree compact: collapse text nodes (when possible),\nand blockquotes (in commonmark mode).\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install mdast-util-compact\n```\n\n## Usage\n\n```javascript\nvar u = require('unist-builder')\nvar compact = require('mdast-util-compact')\n\nvar tree = u('strong', [u('text', 'alpha'), u('text', ' '), u('text', 'bravo')])\n\ncompact(tree)\n\nconsole.log(tree)\n```\n\nYields:\n\n```js\n{ type: 'strong',\n children: [ { type: 'text', value: 'alpha bravo' } ] }\n```\n\n## API\n\n### `compact(tree[, commonmark])`\n\nVisit the tree and collapse nodes. Combines adjacent text nodes (but\nnot when they represent entities or escapes). If `commonmark` is `true`,\ncollapses `blockquote` nodes.\n\nHandles positional information properly.\n\n###### Returns\n\nThe given `tree`.\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/mdast`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/mdast-util-compact.svg\n\n[travis]: https://travis-ci.org/syntax-tree/mdast-util-compact\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/mdast-util-compact.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/mdast-util-compact\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: http://wooorm.com\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[contributing]: https://github.com/syntax-tree/mdast/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/mdast/blob/master/code-of-conduct.md\n", "readmeFilename": "readme.md", "homepage": "https://github.com/syntax-tree/mdast-util-compact#readme", "_id": "mdast-util-compact@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "mdast-util-compact@1.0.2", "name": "mdast-util-compact", "escapedName": "mdast-util-compact", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "mdast-util-compact@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "unist-util-visit": "^1.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/mdast-util-compact", "error": "[Circular]", "extraneous": false }, "parse-entities": { "name": "parse-entities", "version": "1.2.1", "description": "Parse HTML character references: fast, spec-compliant, positional information", "license": "MIT", "keywords": [ "parse", "html", "character", "reference", "entity", "entities" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/parse-entities.git" }, "bugs": { "url": "https://github.com/wooorm/parse-entities/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "browser": { "./decode-entity.js": "./decode-entity.browser.js" }, "react-native": { "./decode-entity.js": "./decode-entity.js" }, "files": [ "index.js", "decode-entity.js", "decode-entity.browser.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.2.0", "tape-run": "^4.0.0", "tinyify": "^2.4.3", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify . -s parseEntities > parse-entities.js", "build-mangle": "browserify . -s parseEntities -p tinyify > parse-entities.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test-browser": "browserify test.js | tape-run", "test": "npm run format && npm run build && npm run test-coverage && npm run test-browser" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "unicorn/number-literal-case": "off", "object-shorthand": "off", "no-var": "off", "prefer-arrow-callback": "off", "guard-for-in": "off", "no-negated-condition": "off", "max-depth": "off", "complexity": "off" }, "ignores": [ "parse-entities.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-1.2.1.tgz", "_integrity": "sha512-NBWYLQm1KSoDKk7GAHyioLTvCZ5QjdH/ASBBQTD3iLiAWJXS5bg1jEWI8nIJ+vgVvsceBVBcDGRWSo0KVQBvvg==", "_from": "parse-entities@1.2.1", "readme": "# parse-entities [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status]\n\nParse HTML character references: fast, spec-compliant, positional\ninformation.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install parse-entities\n```\n\n## Usage\n\n```js\nvar decode = require('parse-entities')\n\ndecode('alpha &amp bravo')\n// => alpha & bravo\n\ndecode('charlie &copycat; delta')\n// => charlie ©cat; delta\n\ndecode('echo &copy; foxtrot &#8800; golf &#x1D306; hotel')\n// => echo © foxtrot ≠ golf 𝌆 hotel\n```\n\n## API\n\n## `parseEntities(value[, options])`\n\n##### `options`\n\n###### `options.additional`\n\nAdditional character to accept (`string?`, default: `''`).\nThis allows other characters, without error, when following an ampersand.\n\n###### `options.attribute`\n\nWhether to parse `value` as an attribute value (`boolean?`, default:\n`false`).\n\n###### `options.nonTerminated`\n\nWhether to allow non-terminated entities (`boolean`, default: `true`).\nFor example, `&copycat` for `©cat`. This behaviour is spec-compliant but\ncan lead to unexpected results.\n\n###### `options.warning`\n\nError handler ([`Function?`][warning]).\n\n###### `options.text`\n\nText handler ([`Function?`][text]).\n\n###### `options.reference`\n\nReference handler ([`Function?`][reference]).\n\n###### `options.warningContext`\n\nContext used when invoking `warning` (`'*'`, optional).\n\n###### `options.textContext`\n\nContext used when invoking `text` (`'*'`, optional).\n\n###### `options.referenceContext`\n\nContext used when invoking `reference` (`'*'`, optional)\n\n###### `options.position`\n\nStarting `position` of `value` (`Location` or `Position`, optional). Useful\nwhen dealing with values nested in some sort of syntax tree. The default is:\n\n```js\n{\n start: {line: 1, column: 1, offset: 0},\n indent: []\n}\n```\n\n##### Returns\n\n`string` — Decoded `value`.\n\n### `function warning(reason, position, code)`\n\nError handler.\n\n##### Context\n\n`this` refers to `warningContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `reason`\n\nHuman-readable reason for triggering a parse error (`string`).\n\n###### `position`\n\nPlace at which the parse error occurred (`Position`).\n\n###### `code`\n\nIdentifier of reason for triggering a parse error (`number`).\n\nThe following codes are used:\n\n| Code | Example | Note |\n| ---- | ------------------ | --------------------------------------------- |\n| `1` | `foo &amp bar` | Missing semicolon (named) |\n| `2` | `foo &#123 bar` | Missing semicolon (numeric) |\n| `3` | `Foo &bar baz` | Ampersand did not start a reference |\n| `4` | `Foo &#` | Empty reference |\n| `5` | `Foo &bar; baz` | Unknown entity |\n| `6` | `Foo &#128; baz` | [Disallowed reference][invalid] |\n| `7` | `Foo &#xD800; baz` | Prohibited: outside permissible unicode range |\n\n### `function text(value, location)`\n\nText handler.\n\n##### Context\n\n`this` refers to `textContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nString of content (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n### `function reference(value, location, source)`\n\nCharacter reference handler.\n\n##### Context\n\n`this` refers to `referenceContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nEncoded character reference (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n###### `source`\n\nSource of character reference (`Location`).\n\n## Related\n\n* [`stringify-entities`](https://github.com/wooorm/stringify-entities)\n — Encode HTML character references\n* [`character-entities`](https://github.com/wooorm/character-entities)\n — Info on character entities\n* [`character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n — Info on HTML4 character entities\n* [`character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n — Info on legacy character entities\n* [`character-reference-invalid`](https://github.com/wooorm/character-reference-invalid)\n — Info on invalid numeric character references\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/parse-entities.svg\n\n[build-status]: https://travis-ci.org/wooorm/parse-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/parse-entities.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/parse-entities\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: http://wooorm.com\n\n[warning]: #function-warningreason-position-code\n\n[text]: #function-textvalue-location\n\n[reference]: #function-referencevalue-location-source\n\n[invalid]: https://github.com/wooorm/character-reference-invalid\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/parse-entities#readme", "_id": "parse-entities@1.2.1", "_requested": { "type": "version", "registry": true, "raw": "parse-entities@1.2.1", "name": "parse-entities", "escapedName": "parse-entities", "rawSpec": "1.2.1", "saveSpec": "[Circular]", "fetchSpec": "1.2.1" }, "_spec": "1.2.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "parse-entities@1.2.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "character-entities": "^1.0.0", "character-entities-legacy": "^1.0.0", "character-reference-invalid": "^1.0.0", "is-alphanumerical": "^1.0.0", "is-decimal": "^1.0.0", "is-hexadecimal": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/parse-entities", "error": "[Circular]", "extraneous": false, "_deduped": "parse-entities" }, "xtend": { "name": "xtend", "version": "4.0.1", "description": "extend like a boss", "keywords": [ "extend", "merge", "options", "opts", "object", "array" ], "author": { "name": "Raynos", "email": "raynos2@gmail.com" }, "repository": { "type": "git", "url": "git://github.com/Raynos/xtend.git" }, "main": "immutable", "scripts": { "test": "node test" }, "dependencies": {}, "devDependencies": { "tape": "~1.1.0" }, "homepage": "https://github.com/Raynos/xtend", "contributors": [ { "name": "Jake Verbaten" }, { "name": "Matt Esch" } ], "bugs": { "url": "https://github.com/Raynos/xtend/issues", "email": "raynos2@gmail.com" }, "license": "MIT", "testling": { "files": "test.js", "browsers": [ "ie/7..latest", "firefox/16..latest", "firefox/nightly", "chrome/22..latest", "chrome/canary", "opera/12..latest", "opera/next", "safari/5.1..latest", "ipad/6.0..latest", "iphone/6.0..latest" ] }, "engines": { "node": ">=0.4" }, "_resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz", "_integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68=", "_from": "xtend@4.0.1", "readme": "# xtend\n\n[![browser support][3]][4]\n\n[![locked](http://badges.github.io/stability-badges/dist/locked.svg)](http://github.com/badges/stability-badges)\n\nExtend like a boss\n\nxtend is a basic utility library which allows you to extend an object by appending all of the properties from each object in a list. When there are identical properties, the right-most property takes precedence.\n\n## Examples\n\n```js\nvar extend = require(\"xtend\")\n\n// extend returns a new object. Does not mutate arguments\nvar combination = extend({\n a: \"a\",\n b: 'c'\n}, {\n b: \"b\"\n})\n// { a: \"a\", b: \"b\" }\n```\n\n## Stability status: Locked\n\n## MIT Licenced\n\n\n [3]: http://ci.testling.com/Raynos/xtend.png\n [4]: http://ci.testling.com/Raynos/xtend\n", "readmeFilename": "README.md", "_id": "xtend@4.0.1", "_requested": { "type": "version", "registry": true, "raw": "xtend@4.0.1", "name": "xtend", "escapedName": "xtend", "rawSpec": "4.0.1", "saveSpec": "[Circular]", "fetchSpec": "4.0.1" }, "_spec": "4.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "xtend@4.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark-stringify/node_modules/xtend", "error": "[Circular]", "extraneous": false }, "repeat-string": { "name": "repeat-string", "description": "Repeat the given string n times. Fastest implementation for repeating a string.", "version": "1.6.1", "homepage": "https://github.com/jonschlinkert/repeat-string", "author": { "name": "Jon Schlinkert", "url": "http://github.com/jonschlinkert" }, "contributors": [ { "name": "Brian Woodward", "email": "brian.woodward@gmail.com", "url": "https://github.com/doowb" }, { "name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert" }, { "name": "Linus Unnebäck", "email": "linus@folkdatorn.se", "url": "http://linus.unnebäck.se" }, { "name": "Thijs Busser", "email": "tbusser@gmail.com", "url": "http://tbusser.net" }, { "name": "Titus", "email": "tituswormer@gmail.com", "url": "wooorm.com" } ], "repository": { "type": "git", "url": "git+https://github.com/jonschlinkert/repeat-string.git" }, "bugs": { "url": "https://github.com/jonschlinkert/repeat-string/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=0.10" }, "scripts": { "test": "mocha" }, "devDependencies": { "ansi-cyan": "^0.1.1", "benchmarked": "^0.2.5", "gulp-format-md": "^0.1.11", "isobject": "^2.1.0", "mocha": "^3.1.2", "repeating": "^3.0.0", "text-table": "^0.2.0", "yargs-parser": "^4.0.2" }, "keywords": [ "fast", "fastest", "fill", "left", "left-pad", "multiple", "pad", "padding", "repeat", "repeating", "repetition", "right", "right-pad", "string", "times" ], "verb": { "toc": false, "layout": "default", "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "related": { "list": [ "repeat-element" ] }, "helpers": [ "./benchmark/helper.js" ], "reflinks": [ "verb" ] }, "_resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz", "_integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=", "_from": "repeat-string@1.6.1", "readme": "# repeat-string [![NPM version](https://img.shields.io/npm/v/repeat-string.svg?style=flat)](https://www.npmjs.com/package/repeat-string) [![NPM monthly downloads](https://img.shields.io/npm/dm/repeat-string.svg?style=flat)](https://npmjs.org/package/repeat-string) [![NPM total downloads](https://img.shields.io/npm/dt/repeat-string.svg?style=flat)](https://npmjs.org/package/repeat-string) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/repeat-string.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/repeat-string)\n\n> Repeat the given string n times. Fastest implementation for repeating a string.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save repeat-string\n```\n\n## Usage\n\n### [repeat](index.js#L41)\n\nRepeat the given `string` the specified `number` of times.\n\n**Example:**\n\n**Example**\n\n```js\nvar repeat = require('repeat-string');\nrepeat('A', 5);\n//=> AAAAA\n```\n\n**Params**\n\n* `string` **{String}**: The string to repeat\n* `number` **{Number}**: The number of times to repeat the string\n* `returns` **{String}**: Repeated string\n\n## Benchmarks\n\nRepeat string is significantly faster than the native method (which is itself faster than [repeating](https://github.com/sindresorhus/repeating)):\n\n```sh\n# 2x\nrepeat-string █████████████████████████ (26,953,977 ops/sec)\nrepeating █████████ (9,855,695 ops/sec)\nnative ██████████████████ (19,453,895 ops/sec)\n\n# 3x\nrepeat-string █████████████████████████ (19,445,252 ops/sec)\nrepeating ███████████ (8,661,565 ops/sec)\nnative ████████████████████ (16,020,598 ops/sec)\n\n# 10x\nrepeat-string █████████████████████████ (23,792,521 ops/sec)\nrepeating █████████ (8,571,332 ops/sec)\nnative ███████████████ (14,582,955 ops/sec)\n\n# 50x\nrepeat-string █████████████████████████ (23,640,179 ops/sec)\nrepeating █████ (5,505,509 ops/sec)\nnative ██████████ (10,085,557 ops/sec)\n\n# 250x\nrepeat-string █████████████████████████ (23,489,618 ops/sec)\nrepeating ████ (3,962,937 ops/sec)\nnative ████████ (7,724,892 ops/sec)\n\n# 2000x\nrepeat-string █████████████████████████ (20,315,172 ops/sec)\nrepeating ████ (3,297,079 ops/sec)\nnative ███████ (6,203,331 ops/sec)\n\n# 20000x\nrepeat-string █████████████████████████ (23,382,915 ops/sec)\nrepeating ███ (2,980,058 ops/sec)\nnative █████ (5,578,808 ops/sec)\n```\n\n**Run the benchmarks**\n\nInstall dev dependencies:\n\n```sh\nnpm i -d && node benchmark\n```\n\n## About\n\n### Related projects\n\n[repeat-element](https://www.npmjs.com/package/repeat-element): Create an array by repeating the given value n times. | [homepage](https://github.com/jonschlinkert/repeat-element \"Create an array by repeating the given value n times.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor**<br/> | \n| --- | --- |\n| 51 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [LinusU](https://github.com/LinusU) |\n| 2 | [tbusser](https://github.com/tbusser) |\n| 1 | [doowb](https://github.com/doowb) |\n| 1 | [wooorm](https://github.com/wooorm) |\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2016, [Jon Schlinkert](http://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/repeat-string/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.2.0, on October 23, 2016._", "readmeFilename": "README.md", "_id": "repeat-string@1.6.1", "_requested": { "type": "version", "registry": true, "raw": "repeat-string@1.6.1", "name": "repeat-string", "escapedName": "repeat-string", "rawSpec": "1.6.1", "saveSpec": "[Circular]", "fetchSpec": "1.6.1" }, "_spec": "1.6.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "repeat-string@1.6.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/repeat-string", "error": "[Circular]", "extraneous": false, "_deduped": "repeat-string" }, "state-toggle": { "name": "state-toggle", "version": "1.0.1", "description": "Enter/exit a state", "license": "MIT", "keywords": [ "enter", "exit", "state" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/state-toggle.git" }, "bugs": { "url": "https://github.com/wooorm/state-toggle/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s stateToggle > state-toggle.js", "build-mangle": "esmangle < state-toggle.js > state-toggle.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "state-toggle.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "_resolved": "https://registry.npmjs.org/state-toggle/-/state-toggle-1.0.1.tgz", "_integrity": "sha512-Qe8QntFrrpWTnHwvwj2FZTgv+PKIsp0B9VxLzLLbSpPXWOgRgc5LVj/aTiSfK1RqIeF9jeC1UeOH8Q8y60A7og==", "_from": "state-toggle@1.0.1", "readme": "# state-toggle [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nEnter/exit a state.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install state-toggle\n```\n\n## Usage\n\n```javascript\nvar toggle = require('state-toggle')\n\nvar ctx = {on: false}\nvar enter = toggle('on', ctx.on, ctx)\nvar exit\n\n// Entering:\nexit = enter()\nconsole.log(ctx.on) // => true\n\n// Exiting:\nexit()\nconsole.log(ctx.on) // => false\n```\n\n## API\n\n### `toggle(key, initial[, ctx])`\n\nCreate a toggle, which when entering toggles `key` on `ctx` (or `this`,\nif `ctx` is not given) to `!initial`, and when exiting, sets `key` on\nthe context back to the value it had before entering.\n\n###### Returns\n\n`Function` — [`enter`][enter].\n\n### `enter()`\n\nEnter the state.\n\n###### Context\n\nIf no `ctx` was given to `toggle`, the context object (`this`) of `enter()`\nis used to toggle.\n\n###### Returns\n\n`Function` — [`exit`][exit].\n\n### `exit()`\n\nExit the state, reverting `key` to the value it had before entering.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/state-toggle.svg\n\n[travis]: https://travis-ci.org/wooorm/state-toggle\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/state-toggle.svg\n\n[codecov]: https://codecov.io/github/wooorm/state-toggle\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[enter]: #enter\n\n[exit]: #exit\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/state-toggle#readme", "_id": "state-toggle@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "state-toggle@1.0.1", "name": "state-toggle", "escapedName": "state-toggle", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "state-toggle@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/state-toggle", "error": "[Circular]", "extraneous": false, "_deduped": "state-toggle" }, "stringify-entities": { "name": "stringify-entities", "version": "1.3.2", "description": "Encode HTML character references and character entities", "license": "MIT", "keywords": [ "stringify", "encode", "escape", "html", "character", "reference", "entity", "entities" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/stringify-entities.git" }, "bugs": { "url": "https://github.com/wooorm/stringify-entities/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "dangerous.json", "index.js" ], "dependencies": { "character-entities-html4": { "name": "character-entities-html4", "version": "1.1.2", "description": "HTML4 character entity information", "license": "MIT", "keywords": [ "html", "html4", "entity", "entities", "character", "reference", "name", "replacement" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/character-entities-html4.git" }, "bugs": { "url": "https://github.com/wooorm/character-entities-html4/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "main": "index.json", "files": [ "index.json" ], "dependencies": {}, "devDependencies": { "bail": "^1.0.1", "browserify": "^16.0.0", "concat-stream": "^1.5.2", "esmangle": "^1.0.1", "prettier": "^1.12.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "generate": "node build", "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.json --bare -s characterEntitiesHTML4 > character-entities-html4.js", "build-mangle": "esmangle character-entities-html4.js > character-entities-html4.min.js", "build": "npm run build-bundle && npm run build-mangle", "lint": "xo", "test-api": "node test", "test": "npm run generate && npm run format && npm run build && npm run test-api" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "character-entities-html4.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/character-entities-html4/-/character-entities-html4-1.1.2.tgz", "_integrity": "sha512-sIrXwyna2+5b0eB9W149izTPJk/KkJTg6mEzDGibwBUkyH1SbDa+nf515Ppdi3MaH35lW0JFJDWeq9Luzes1Iw==", "_from": "character-entities-html4@1.1.2", "readme": "# character-entities-html4 [![Build Status][travis-badge]][travis]\n\nHTML4 character entity information.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install character-entities-html4\n```\n\n## Usage\n\n```js\nvar characterEntities = require('character-entities-html4')\n\nconsole.log(characterEntities.AElig) // => 'Æ'\nconsole.log(characterEntities.aelig) // => 'æ'\nconsole.log(characterEntities.amp) // => '&'\nconsole.log(characterEntities.apos) // => undefined\n```\n\n## API\n\n### `characterEntitiesHTML4`\n\nMapping between (case-sensitive) character entity names to replacements.\n\n## Support\n\nSee [w3.org][html].\n\n## Related\n\n* [`character-entities`](https://github.com/wooorm/character-entities)\n — HTML character entity info\n* [`character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n — Legacy character entity info\n* [`parse-entities`](https://github.com/wooorm/parse-entities)\n — Parse HTML character references\n* [`stringify-entities`](https://github.com/wooorm/stringify-entities)\n — Stringify HTML character references\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/character-entities-html4.svg\n\n[travis]: https://travis-ci.org/wooorm/character-entities-html4\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[html]: http://www.w3.org/TR/html4/sgml/entities.html\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/character-entities-html4#readme", "_id": "character-entities-html4@1.1.2", "_requested": { "type": "version", "registry": true, "raw": "character-entities-html4@1.1.2", "name": "character-entities-html4", "escapedName": "character-entities-html4", "rawSpec": "1.1.2", "saveSpec": "[Circular]", "fetchSpec": "1.1.2" }, "_spec": "1.1.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "character-entities-html4@1.1.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/character-entities-html4", "error": "[Circular]", "extraneous": false }, "character-entities-legacy": { "name": "character-entities-legacy", "version": "1.1.2", "description": "HTML legacy character entity information", "license": "MIT", "keywords": [ "html", "entity", "entities", "character", "reference", "name", "replacement" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/character-entities-legacy.git" }, "bugs": { "url": "https://github.com/wooorm/character-entities-legacy/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "main": "index.json", "files": [ "index.json" ], "dependencies": {}, "devDependencies": { "bail": "^1.0.1", "browserify": "^16.0.0", "concat-stream": "^1.5.2", "esmangle": "^1.0.1", "prettier": "^1.12.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "generate": "node build", "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.json --bare -s characterEntitiesLegacy > character-entities-legacy.js", "build-mangle": "esmangle character-entities-legacy.js > character-entities-legacy.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test": "npm run generate && npm run format && npm run build && npm run test-api" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "character-entities-legacy.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-1.1.2.tgz", "_integrity": "sha512-9NB2VbXtXYWdXzqrvAHykE/f0QJxzaKIpZ5QzNZrrgQ7Iyxr2vnfS8fCBNVW9nUEZE0lo57nxKRqnzY/dKrwlA==", "_from": "character-entities-legacy@1.1.2", "readme": "# character-entities-legacy [![Build Status][travis-badge]][travis]\n\nHTML legacy character entity information: for legacy reasons some\ncharacter entities are not required to have a trailing semicolon:\n`&copy` is perfectly okay for `©`.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install character-entities-legacy\n```\n\n## Usage\n\n```js\nvar characterEntitiesLegacy = require('character-entities-legacy')\n\nconsole.log(characterEntitiesLegacy.copy) // => '©'\nconsole.log(characterEntitiesLegacy.frac34) // => '¾'\nconsole.log(characterEntitiesLegacy.sup1) // => '¹'\n```\n\n## API\n\n### `characterEntitiesLegacy`\n\nMapping between (case-sensitive) legacy character entity names to\nreplacements.\n\n## Support\n\nSee [whatwg/html][html].\n\n## Related\n\n* [`character-entities`](https://github.com/wooorm/character-entities)\n — HTML character entity info\n* [`character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n — HTML 4 character entity info\n* [`parse-entities`](https://github.com/wooorm/parse-entities)\n — Parse HTML character references\n* [`stringify-entities`](https://github.com/wooorm/stringify-entities)\n — Stringify HTML character references\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/character-entities-legacy.svg\n\n[travis]: https://travis-ci.org/wooorm/character-entities-legacy\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[html]: https://raw.githubusercontent.com/whatwg/html/master/json-entities-legacy.inc\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/character-entities-legacy#readme", "_id": "character-entities-legacy@1.1.2", "_requested": { "type": "version", "registry": true, "raw": "character-entities-legacy@1.1.2", "name": "character-entities-legacy", "escapedName": "character-entities-legacy", "rawSpec": "1.1.2", "saveSpec": "[Circular]", "fetchSpec": "1.1.2" }, "_spec": "1.1.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "character-entities-legacy@1.1.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/character-entities-legacy", "error": "[Circular]", "extraneous": false, "_deduped": "character-entities-legacy" }, "is-alphanumerical": { "name": "is-alphanumerical", "version": "1.0.2", "description": "Check if a character is alphanumerical", "license": "MIT", "keywords": [ "string", "character", "char", "code", "alphabetical", "numerical", "alphanumerical" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/is-alphanumerical.git" }, "bugs": { "url": "https://github.com/wooorm/is-alphanumerical/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s isAlphanumerical > is-alphanumerical.js", "build-mangle": "esmangle < is-alphanumerical.js > is-alphanumerical.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "is-alphanumerical.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-1.0.2.tgz", "_integrity": "sha512-pyfU/0kHdISIgslFfZN9nfY1Gk3MquQgUm1mJTjdkEPpkAKNWuBTSqFwewOpR7N351VkErCiyV71zX7mlQQqsg==", "_from": "is-alphanumerical@1.0.2", "readme": "# is-alphanumerical [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is alphanumerical (`[a-zA-Z0-9]`).\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-alphanumerical\n```\n\n## Usage\n\n```javascript\nvar alphanumerical = require('is-alphanumerical')\n\nalphanumerical('a') // => true\nalphanumerical('Z') // => true\nalphanumerical('0') // => true\nalphanumerical(' ') // => false\nalphanumerical('💩') // => false\n```\n\n## API\n\n### `alphanumerical(character)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is alphanumerical.\n\n## Related\n\n* [`is-alphabetical`](https://github.com/wooorm/is-alphabetical)\n* [`is-decimal`](https://github.com/wooorm/is-decimal)\n* [`is-hexadecimal`](https://github.com/wooorm/is-hexadecimal)\n* [`is-whitespace-character`](https://github.com/wooorm/is-whitespace-character)\n* [`is-word-character`](https://github.com/wooorm/is-word-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-alphanumerical.svg\n\n[travis]: https://travis-ci.org/wooorm/is-alphanumerical\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-alphanumerical.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-alphanumerical\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-alphanumerical#readme", "_id": "is-alphanumerical@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-alphanumerical@1.0.2", "name": "is-alphanumerical", "escapedName": "is-alphanumerical", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-alphanumerical@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-alphabetical": "^1.0.0", "is-decimal": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-alphanumerical", "error": "[Circular]", "extraneous": false, "_deduped": "is-alphanumerical" }, "is-hexadecimal": { "name": "is-hexadecimal", "version": "1.0.2", "description": "Check if a character is hexadecimal", "license": "MIT", "keywords": [ "string", "character", "char", "code", "hexadecimal" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/is-hexadecimal.git" }, "bugs": { "url": "https://github.com/wooorm/is-hexadecimal/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s isHexadecimal > is-hexadecimal.js", "build-mangle": "esmangle < is-hexadecimal.js > is-hexadecimal.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "is-hexadecimal.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-1.0.2.tgz", "_integrity": "sha512-but/G3sapV3MNyqiDBLrOi4x8uCIw0RY3o/Vb5GT0sMFHrVV7731wFSVy41T5FO1og7G0gXLJh0MkgPRouko/A==", "_from": "is-hexadecimal@1.0.2", "readme": "# is-hexadecimal [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is hexadecimal.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-hexadecimal\n```\n\n## Usage\n\n```javascript\nvar hexadecimal = require('is-hexadecimal')\n\nhexadecimal('a') // => true\nhexadecimal('0') // => true\nhexadecimal('G') // => false\nhexadecimal('💩') // => false\n```\n\n## API\n\n### `hexadecimal(character|code)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is hexadecimal.\n\n## Related\n\n* [`is-alphabetical`](https://github.com/wooorm/is-alphabetical)\n* [`is-alphanumerical`](https://github.com/wooorm/is-alphabetical)\n* [`is-decimal`](https://github.com/wooorm/is-decimal)\n* [`is-whitespace-character`](https://github.com/wooorm/is-whitespace-character)\n* [`is-word-character`](https://github.com/wooorm/is-word-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-hexadecimal.svg\n\n[travis]: https://travis-ci.org/wooorm/is-hexadecimal\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-hexadecimal.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-hexadecimal\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-hexadecimal#readme", "_id": "is-hexadecimal@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-hexadecimal@1.0.2", "name": "is-hexadecimal", "escapedName": "is-hexadecimal", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-hexadecimal@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-hexadecimal", "error": "[Circular]", "extraneous": false, "_deduped": "is-hexadecimal" } }, "devDependencies": { "browserify": "^16.0.0", "character-entities": "^1.0.0", "esmangle": "^1.0.0", "nyc": "^11.0.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "generate": "node build", "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s stringifyEntities > stringify-entities.js", "build-mangle": "esmangle stringify-entities.js > stringify-entities.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run generate && npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "unicorn/number-literal-case": "off", "prefer-arrow-callback": "off", "guard-for-in": "off" }, "ignores": [ "stringify-entities.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.3.2.tgz", "_integrity": "sha512-nrBAQClJAPN2p+uGCVJRPIPakKeKWZ9GtBCmormE7pWOSlHat7+x5A8gx85M7HM5Dt0BP3pP5RhVW77WdbJJ3A==", "_from": "stringify-entities@1.3.2", "readme": "# stringify-entities [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status]\n\nEncode HTML character references and character entities.\n\n* [x] Very fast\n* [x] Just the encoding part\n* [x] Reliable: ``'`'`` characters are escaped to ensure no scripts\n run in IE6-8. Additionally, only named entities recognised by HTML4\n are encoded, meaning the infamous `&apos;` (which people think is a\n [virus][]) won’t show up\n\n## Algorithm\n\nBy default, all dangerous, non-ASCII, or non-printable ASCII characters\nare encoded. A [subset][] of characters can be given to encode just\nthose characters. Alternatively, pass [`escapeOnly`][escapeonly] to\nescape just the dangerous characters (`\"`, `'`, `<`, `>`, `&`, `` ` ``).\nBy default, numeric entities are used. Pass [`useNamedReferences`][named]\nto use named entities when possible, or [`useShortestReferences`][short]\nto use them if that results in less bytes.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install stringify-entities\n```\n\n## Usage\n\n```js\nvar stringify = require('stringify-entities')\n\nstringify('alpha © bravo ≠ charlie 𝌆 delta')\n// => 'alpha &#xA9; bravo &#x2260; charlie &#x1D306; delta'\n\nstringify('alpha © bravo ≠ charlie 𝌆 delta', {useNamedReferences: true})\n// => 'alpha &copy; bravo &ne; charlie &#x1D306; delta'\n```\n\n## API\n\n### `stringifyEntities(value[, options])`\n\nEncode special characters in `value`.\n\n##### `options`\n\n###### `options.escapeOnly`\n\nWhether to only escape possibly dangerous characters (`boolean`,\ndefault: `false`). Those characters are `\"`, `'`, `<`, `>` `&`, and\n`` ` ``.\n\n###### `options.subset`\n\nWhether to only escape the given subset of characters (`Array.<string>`).\n\n###### `options.useNamedReferences`\n\nWhether to use named entities where possible (`boolean?`, default:\n`false`).\n\n###### `options.useShortestReferences`\n\nWhether to use named entities, where possible, if that results in less\nbytes (`boolean?`, default: `false`). **Note**: `useNamedReferences`\ncan be omitted when using `useShortestReferences`.\n\n###### `options.omitOptionalSemicolons`\n\nWhether to omit semi-colons when possible (`boolean?`, default: `false`).\n**Note**: This creates parse errors: don’t use this except when building\na minifier.\n\nOmitting semi-colons is possible for [certain][dangerous] [legacy][]\nnamed references, and numeric entities, in some cases.\n\n###### `options.attribute`\n\nOnly needed when operating dangerously with `omitOptionalSemicolons: true`.\nCreate entities which don’t fail in attributes (`boolean?`, default:\n`false`).\n\n## Related\n\n* [`parse-entities`](https://github.com/wooorm/parse-entities)\n — Parse HTML character references\n* [`character-entities`](https://github.com/wooorm/character-entities)\n — Info on character entities\n* [`character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n — Info on HTML4 character entities\n* [`character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n — Info on legacy character entities\n* [`character-reference-invalid`](https://github.com/wooorm/character-reference-invalid)\n — Info on invalid numeric character references\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/stringify-entities.svg\n\n[build-status]: https://travis-ci.org/wooorm/stringify-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/stringify-entities.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/stringify-entities\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[virus]: http://www.telegraph.co.uk/technology/advice/10516839/Why-do-some-apostrophes-get-replaced-with-andapos.html\n\n[dangerous]: dangerous.json\n\n[legacy]: https://github.com/wooorm/character-entities-legacy\n\n[subset]: #optionssubset\n\n[escapeonly]: #optionsescapeonly\n\n[named]: #optionsusenamedreferences\n\n[short]: #optionsuseshortestreferences\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/stringify-entities#readme", "_id": "stringify-entities@1.3.2", "_requested": { "type": "version", "registry": true, "raw": "stringify-entities@1.3.2", "name": "stringify-entities", "escapedName": "stringify-entities", "rawSpec": "1.3.2", "saveSpec": "[Circular]", "fetchSpec": "1.3.2" }, "_spec": "1.3.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "stringify-entities@1.3.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "character-entities-html4": "^1.0.0", "character-entities-legacy": "^1.0.0", "is-alphanumerical": "^1.0.0", "is-hexadecimal": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stringify-entities", "error": "[Circular]", "extraneous": false }, "unherit": { "name": "unherit", "version": "1.1.1", "description": "Clone a constructor without affecting the super-class", "license": "MIT", "keywords": [ "clone", "super", "class", "constructor" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/unherit.git" }, "bugs": { "url": "https://github.com/wooorm/unherit/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s unherit > unherit.js", "build-mangle": "esmangle unherit.js > unherit.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off", "guard-for-in": "off" }, "ignores": [ "unherit.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/unherit/-/unherit-1.1.1.tgz", "_integrity": "sha512-+XZuV691Cn4zHsK0vkKYwBEwB74T3IZIcxrgn2E4rKwTfFyI1zCh7X7grwh9Re08fdPlarIdyWgI8aVB3F5A5g==", "_from": "unherit@1.1.1", "readme": "# unherit [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCreate a custom constructor which can be modified without affecting the\noriginal class.\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install unherit\n```\n\n## Usage\n\n```js\nvar EventEmitter = require('events').EventEmitter\nvar unherit = require('unherit')\n\n/* Create a private class which acts just like\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `EventEmitter`. */\nvar Emitter = unherit(EventEmitter)\n\nEmitter.prototype.defaultMaxListeners = 0\n/* Now, all instances of `Emitter` have no maximum\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps listeners, without affecting other `EventEmitter`s. */\n\nnew Emitter().defaultMaxListeners === 0 // => true\nnew EventEmitter().defaultMaxListeners === undefined // => true\nnew Emitter() instanceof EventEmitter // => true\n```\n\n## API\n\n### `unherit(Super)`\n\nCreate a custom constructor which can be modified without affecting the\noriginal class.\n\n###### Parameters\n\n* `Super` (`Function`) — Super-class.\n\n###### Returns\n\n`Function` — Constructor acting like `Super`, which can be modified\nwithout affecting the original class.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/unherit.svg\n\n[travis]: https://travis-ci.org/wooorm/unherit\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/unherit.svg\n\n[codecov]: https://codecov.io/github/wooorm/unherit\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/unherit#readme", "_id": "unherit@1.1.1", "_requested": { "type": "version", "registry": true, "raw": "unherit@1.1.1", "name": "unherit", "escapedName": "unherit", "rawSpec": "1.1.1", "saveSpec": "[Circular]", "fetchSpec": "1.1.1" }, "_spec": "1.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "unherit@1.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "inherits": "^2.0.1", "xtend": "^4.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/unherit", "error": "[Circular]", "extraneous": false, "_deduped": "unherit" } }, "devDependencies": { "tape": "^4.9.1", "unified": "^7.0.0", "unist-builder": "^1.0.3", "unist-util-visit": "^1.4.0", "wcwidth": "^1.0.1" }, "scripts": { "test": "tape test.js" }, "xo": false, "_resolved": "https://registry.npmjs.org/remark-stringify/-/remark-stringify-6.0.4.tgz", "_integrity": "sha512-eRWGdEPMVudijE/psbIDNcnJLRVx3xhfuEsTDGgH4GsFF91dVhw5nhmnBppafJ7+NWINW6C7ZwWbi30ImJzqWg==", "_from": "remark-stringify@6.0.4", "readme": "# remark-stringify [![Travis][build-badge]][build-status] [![Coverage][coverage-badge]][coverage-status] [![Downloads][dl-badge]][dl] [![Size][size-badge]][size] [![Chat][chat-badge]][chat]\n\n[Compiler][] for [**unified**][unified].\nStringifies [**mdast**][mdast] syntax trees to markdown.\nUsed in the [**remark** processor][processor] but can be used on its own as\nwell.\nCan be [extended][extend] to change how markdown is parsed.\n\n* 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps *\n\n**Announcing the unified collective! 🎉\n[Read more about it on Medium »][announcement]**\n\n## Sponsors\n\n<!--lint ignore no-html maximum-line-length-->\n\n<table>\n <tr valign=\"top\">\n <td width=\"20%\" align=\"center\">\n <a href=\"https://zeit.co\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://zeit.co\">ZEIT</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://www.gatsbyjs.org\">Gatsby</a></td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://compositor.io\"><img src=\"https://avatars1.githubusercontent.com/u/19245838?s=400&v=4\"></a>\n <br><br>🥉\n <a href=\"https://compositor.io\">Compositor</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=400&v=4\"></a>\n <br><br>\n <a href=\"https://www.holloway.com\">Holloway</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <br><br><br><br>\n <a href=\"https://opencollective.com/unified\"><strong>You?</strong>\n </td>\n </tr>\n</table>\n\n## Installation\n\n[npm][]:\n\n```sh\nnpm install remark-stringify\n```\n\n## Usage\n\n```js\nvar unified = require('unified')\nvar createStream = require('unified-stream')\nvar parse = require('remark-parse')\nvar toc = require('remark-toc')\nvar stringify = require('remark-stringify')\n\nvar processor = unified()\n .use(parse)\n .use(toc)\n .use(stringify, {\n bullet: '*',\n fence: '~',\n fences: true,\n incrementListMarker: false\n })\n\nprocess.stdin.pipe(createStream(processor)).pipe(process.stdout)\n```\n\n## Table of Contents\n\n* [API](#api)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.use(stringify\\[, options\\])](#processorusestringify-options)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [stringify.Compiler](#stringifycompiler)\n* [Extending the Compiler](#extending-the-compiler)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Compiler#visitors](#compilervisitors)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [function visitor(node\\[, parent\\])](#function-visitornode-parent)\n* [License](#license)\n\n## API\n\n### `processor.use(stringify[, options])`\n\nConfigure the `processor` to stringify [**mdast**][mdast] syntax trees\nto markdown.\n\n##### `options`\n\nOptions are passed directly, or passed later through [`processor.data()`][data].\n\n###### `options.gfm`\n\nStringify with the required escapes for GFM compatible markdown (`boolean`,\ndefault: `true`).\n\n* Escape pipes (`|`, for tables)\n* Escape colons (`:`, for literal URLs)\n* Escape tildes (`~`, for strike-through)\n\n###### `options.commonmark`\n\nStringify for CommonMark compatible markdown (`boolean`, default: `false`).\n\n* Compile adjacent blockquotes separately\n* Escape more characters using slashes, instead of as entities\n\n###### `options.pedantic`\n\nStringify for pedantic compatible markdown (`boolean`, default: `false`).\n\n* Escape underscores in words\n\n###### `options.entities`\n\nHow to stringify entities (`string` or `boolean`, default: `false`):\n\n* `true` — Entities are generated for special HTML characters\n (`&` > `&amp;`) and non-ASCII characters (`©` > `&copy;`).\n If named entities are not (widely) supported, numbered character\n references are used (`’` > `&#x2019;`)\n* `'numbers'` — Numbered entities are generated (`&` > `&#x26;`)\n for special HTML characters and non-ASCII characters\n* `'escape'` — Special HTML characters are encoded (`&` >\n `&amp;`, `’` > `&#x2019;`), non-ASCII characters not (ö persists)\n\n###### `options.setext`\n\nCompile headings, when possible, in Setext-style (`boolean`, default: `false`).\nUses `=` for level one headings and `-` for level two headings. Other heading\nlevels are compiled as ATX (respecting `closeAtx`).\n\n###### `options.closeAtx`\n\nCompile ATX headings with the same amount of closing hashes as opening hashes\n(`boolean`, default: `false`).\n\n###### `options.looseTable`\n\nCreate tables without fences: initial and final pipes (`boolean`, default:\n`false`).\n\n###### `options.spacedTable`\n\nCreate tables without spacing between pipes and content (`boolean`, default:\n`true`).\n\n###### `options.paddedTable`\n\nCreate tables with padding in each cell so that they are the same size\n(`boolean`, default: `true`).\n\n###### `options.stringLength`\n\nFunction passed to [`markdown-table`][markdown-table] to detect the length of a\ntable cell (`Function`, default: [`s => s.length`][string-length]).\n\n###### `options.fence`\n\nFence marker to use for code blocks (`'~'` or ``'`'``, default: ``'`'``).\n\n###### `options.fences`\n\nStringify code blocks without language with fences (`boolean`, default:\n`false`).\n\n###### `options.bullet`\n\nBullet marker to use for unordered list items (`'-'`, `'*'`, or `'+'`,\ndefault: `'-'`).\n\n###### `options.listItemIndent`\n\nHow to indent the content from list items (`'tab'`, `'mixed'` or `'1'`,\ndefault: `'tab'`).\n\n* `'tab'`: use tab stops (4 spaces)\n* `'1'`: use one space\n* `'mixed'`: use `1` for tight and `tab` for loose list items\n\n###### `options.incrementListMarker`\n\nWhether to increment ordered list item bullets (`boolean`, default: `true`).\n\n###### `options.rule`\n\nMarker to use for thematic breaks / horizontal rules (`'-'`, `'*'`, or `'_'`,\ndefault: `'*'`).\n\n###### `options.ruleRepetition`\n\nNumber of markers to use for thematic breaks / horizontal rules (`number`,\ndefault: `3`). Should be `3` or more.\n\n###### `options.ruleSpaces`\n\nWhether to pad thematic break (horizontal rule) markers with spaces (`boolean`,\ndefault `true`).\n\n###### `options.strong`\n\nMarker to use for importance (`'_'` or `'*'`, default `'*'`).\n\n###### `options.emphasis`\n\nMarker to use for emphasis (`'_'` or `'*'`, default `'_'`).\n\n### `stringify.Compiler`\n\nAccess to the raw [compiler][], if you need it.\n\n## Extending the Compiler\n\nIf this plugin is used, it adds a [`Compiler`][compiler] constructor\nto the `processor`. Other plugins can change and add visitors on\nthe compiler’s prototype to change how markdown is stringified.\n\nThe below plugin modifies a [visitor][] to add an extra blank line\nbefore level two headings.\n\n```js\nmodule.exports = gap\n\nfunction gap() {\n var Compiler = this.Compiler\n var visitors = Compiler.prototype.visitors\n var original = visitors.heading\n\n visitors.heading = heading\n\n function heading(node) {\n return (node.depth === 2 ? '\\n' : '') + original.apply(this, arguments)\n }\n}\n```\n\n### `Compiler#visitors`\n\nAn object mapping [node][] types to [`visitor`][visitor]s.\n\n### `function visitor(node[, parent])`\n\nStringify `node`.\n\n###### Parameters\n\n* `node` ([`Node`][node]) — Node to compile\n* `parent` ([`Node`][node], optional) — Parent of `node`\n\n###### Returns\n\n`string`, the compiled given `node`.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/remarkjs/remark/master.svg\n\n[build-status]: https://travis-ci.org/remarkjs/remark\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark.svg\n\n[coverage-status]: https://codecov.io/github/remarkjs/remark\n\n[dl-badge]: https://img.shields.io/npm/dm/remark-stringify.svg\n\n[dl]: https://www.npmjs.com/package/remark-stringify\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-stringify.svg\n\n[size]: https://bundlephobia.com/result?p=remark-stringify\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/remark\n\n[license]: https://github.com/remarkjs/remark/blob/master/license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[unified]: https://github.com/unifiedjs/unified\n\n[processor]: https://github.com/remarkjs/remark\n\n[data]: https://github.com/unifiedjs/unified#processordatakey-value\n\n[compiler]: https://github.com/unifiedjs/unified#processorcompiler\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[extend]: #extending-the-compiler\n\n[visitor]: #function-visitornode-parent\n\n[markdown-table]: https://github.com/wooorm/markdown-table\n\n[string-length]: https://github.com/wooorm/markdown-table#stringlengthcell\n\n[announcement]: https://medium.com/unifiedjs/collectively-evolving-through-crowdsourcing-22c359ea95cc\n", "readmeFilename": "readme.md", "_id": "remark-stringify@6.0.4", "_requested": { "type": "version", "registry": true, "raw": "remark-stringify@6.0.4", "name": "remark-stringify", "escapedName": "remark-stringify", "rawSpec": "6.0.4", "saveSpec": "[Circular]", "fetchSpec": "6.0.4" }, "_spec": "6.0.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "remark-stringify@6.0.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ccount": "^1.0.0", "is-alphanumeric": "^1.0.0", "is-decimal": "^1.0.0", "is-whitespace-character": "^1.0.0", "longest-streak": "^2.0.1", "markdown-escapes": "^1.0.0", "markdown-table": "^1.1.0", "mdast-util-compact": "^1.0.0", "parse-entities": "^1.0.2", "repeat-string": "^1.5.4", "state-toggle": "^1.0.0", "stringify-entities": "^1.0.1", "unherit": "^1.0.4", "xtend": "^4.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark-stringify", "error": "[Circular]", "extraneous": false }, "remark-parse": { "name": "remark-parse", "version": "6.0.3", "description": "Markdown parser for remark", "license": "MIT", "keywords": [ "markdown", "abstract", "syntax", "tree", "ast", "parse" ], "homepage": "https://remark.js.org", "repository": { "type": "git", "url": "https://github.com/remarkjs/remark/tree/master/packages/remark-parse" }, "bugs": { "url": "https://github.com/remarkjs/remark/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, { "name": "Eugene Sharygin", "email": "eush77@gmail.com" }, { "name": "Junyoung Choi", "email": "fluke8259@gmail.com" }, { "name": "Elijah Hamovitz", "email": "elijahhamovitz@gmail.com" }, { "name": "Ika", "email": "ikatyang@gmail.com" } ], "files": [ "index.js", "lib" ], "dependencies": { "collapse-white-space": { "name": "collapse-white-space", "version": "1.0.4", "description": "Replace multiple white-space characters with a single space", "license": "MIT", "keywords": [ "collapse", "white", "space" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/collapse-white-space.git" }, "bugs": { "url": "https://github.com/wooorm/collapse-white-space/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s collapseWhiteSpace > collapse-white-space.js", "build-mangle": "esmangle collapse-white-space.js > collapse-white-space.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "capitalized-comments": "off", "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "collapse-white-space.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "_resolved": "https://registry.npmjs.org/collapse-white-space/-/collapse-white-space-1.0.4.tgz", "_integrity": "sha512-YfQ1tAUZm561vpYD+5eyWN8+UsceQbSrqqlc/6zDY2gtAE+uZLSdkkovhnGpmCThsvKBFakq4EdY/FF93E8XIw==", "_from": "collapse-white-space@1.0.4", "readme": "# collapse-white-space [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nReplace multiple white-space characters with a single space.\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install collapse-white-space\n```\n\n## Usage\n\n```javascript\nvar collapse = require('collapse-white-space')\n\ncollapse('\\tfoo \\n\\tbar \\t\\r\\nbaz') //=> ' foo bar baz'\n```\n\n## API\n\n### `collapse(value)`\n\nReplace multiple white-space characters in value with a single space.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/collapse-white-space.svg\n\n[travis]: https://travis-ci.org/wooorm/collapse-white-space\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/collapse-white-space.svg\n\n[codecov]: https://codecov.io/github/wooorm/collapse-white-space\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/collapse-white-space#readme", "_id": "collapse-white-space@1.0.4", "_requested": { "type": "version", "registry": true, "raw": "collapse-white-space@1.0.4", "name": "collapse-white-space", "escapedName": "collapse-white-space", "rawSpec": "1.0.4", "saveSpec": "[Circular]", "fetchSpec": "1.0.4" }, "_spec": "1.0.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "collapse-white-space@1.0.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/collapse-white-space", "error": "[Circular]", "extraneous": false, "_deduped": "collapse-white-space" }, "is-alphabetical": { "name": "is-alphabetical", "version": "1.0.2", "description": "Check if a character is alphabetical", "license": "MIT", "keywords": [ "string", "character", "char", "code", "alphabetical" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/is-alphabetical.git" }, "bugs": { "url": "https://github.com/wooorm/is-alphabetical/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s isAlphabetical > is-alphabetical.js", "build-mangle": "esmangle < is-alphabetical.js > is-alphabetical.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off", "capitalized-comments": "off" }, "ignores": [ "is-alphabetical.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-1.0.2.tgz", "_integrity": "sha512-V0xN4BYezDHcBSKb1QHUFMlR4as/XEuCZBzMJUU4n7+Cbt33SmUnSol+pnXFvLxSHNq2CemUXNdaXV6Flg7+xg==", "_from": "is-alphabetical@1.0.2", "readme": "# is-alphabetical [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is alphabetical.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-alphabetical\n```\n\n## Usage\n\n```javascript\nvar alphabetical = require('is-alphabetical')\n\nalphabetical('a') // => true\nalphabetical('B') // => true\nalphabetical('0') // => false\nalphabetical('💩') // => false\n```\n\n## API\n\n### `alphabetical(character|code)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is alphabetical.\n\n## Related\n\n* [`is-decimal`](https://github.com/wooorm/is-decimal)\n* [`is-hexadecimal`](https://github.com/wooorm/is-hexadecimal)\n* [`is-alphanumerical`](https://github.com/wooorm/is-alphanumerical)\n* [`is-whitespace-character`](https://github.com/wooorm/is-whitespace-character)\n* [`is-word-character`](https://github.com/wooorm/is-word-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-alphabetical.svg\n\n[travis]: https://travis-ci.org/wooorm/is-alphabetical\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-alphabetical.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-alphabetical\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-alphabetical#readme", "_id": "is-alphabetical@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-alphabetical@1.0.2", "name": "is-alphabetical", "escapedName": "is-alphabetical", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-alphabetical@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-alphabetical", "error": "[Circular]", "extraneous": false, "_deduped": "is-alphabetical" }, "is-decimal": { "name": "is-decimal", "version": "1.0.2", "description": "Check if a character is decimal", "license": "MIT", "keywords": "[Circular]", "repository": "[Circular]", "bugs": "[Circular]", "author": "[Circular]", "contributors": "[Circular]", "files": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "scripts": "[Circular]", "prettier": "[Circular]", "xo": "[Circular]", "nyc": "[Circular]", "remarkConfig": "[Circular]", "_resolved": "https://registry.npmjs.org/is-decimal/-/is-decimal-1.0.2.tgz", "_integrity": "sha512-TRzl7mOCchnhchN+f3ICUCzYvL9ul7R+TYOsZ8xia++knyZAJfv/uA1FvQXsAnYIl1T3B2X5E/J7Wb1QXiIBXg==", "_from": "is-decimal@1.0.2", "readme": "# is-decimal [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is decimal.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-decimal\n```\n\n## Usage\n\n```javascript\nvar decimal = require('is-decimal')\n\ndecimal('0') // => true\ndecimal('9') // => true\ndecimal('a') // => false\ndecimal('💩') // => false\n```\n\n## API\n\n### `decimal(character|code)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is decimal.\n\n## Related\n\n* [`is-alphabetical`](https://github.com/wooorm/is-alphabetical)\n* [`is-hexadecimal`](https://github.com/wooorm/is-hexadecimal)\n* [`is-whitespace-character`](https://github.com/wooorm/is-whitespace-character)\n* [`is-word-character`](https://github.com/wooorm/is-word-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-decimal.svg\n\n[travis]: https://travis-ci.org/wooorm/is-decimal\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-decimal.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-decimal\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-decimal#readme", "_id": "is-decimal@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-decimal@1.0.2", "name": "is-decimal", "escapedName": "is-decimal", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-decimal", "error": "[Circular]", "extraneous": false, "_deduped": "is-decimal" }, "is-whitespace-character": { "name": "is-whitespace-character", "version": "1.0.2", "description": "Check if a character is a whitespace character", "license": "MIT", "keywords": "[Circular]", "repository": "[Circular]", "bugs": "[Circular]", "author": "[Circular]", "contributors": "[Circular]", "files": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "scripts": "[Circular]", "prettier": "[Circular]", "xo": "[Circular]", "nyc": "[Circular]", "remarkConfig": "[Circular]", "_resolved": "https://registry.npmjs.org/is-whitespace-character/-/is-whitespace-character-1.0.2.tgz", "_integrity": "sha512-SzM+T5GKUCtLhlHFKt2SDAX2RFzfS6joT91F2/WSi9LxgFdsnhfPK/UIA+JhRR2xuyLdrCys2PiFDrtn1fU5hQ==", "_from": "is-whitespace-character@1.0.2", "readme": "# is-whitespace-character [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is a whitespace character: `\\s`, which equals\nall Unicode Space Separators (including `[ \\t\\v\\f]`), the BOM\n(`\\uFEFF`), and line terminator (`[\\n\\r\\u2028\\u2029]`).\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-whitespace-character\n```\n\n## Usage\n\n```javascript\nvar whitespace = require('is-whitespace-character')\n\nwhitespace(' ') // => true\nwhitespace('\\n') // => true\nwhitespace('\\uFEFF') // => true\nwhitespace('_') // => false\nwhitespace('a') // => true\nwhitespace('💩') // => false\n```\n\n## API\n\n### `whitespaceCharacter(character|code)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is a whitespace character.\n\n## Related\n\n* [`is-alphabetical`](https://github.com/wooorm/is-alphabetical)\n* [`is-alphanumerical`](https://github.com/wooorm/is-alphanumerical)\n* [`is-decimal`](https://github.com/wooorm/is-decimal)\n* [`is-hexadecimal`](https://github.com/wooorm/is-hexadecimal)\n* [`is-word-character`](https://github.com/wooorm/is-word-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-whitespace-character.svg\n\n[travis]: https://travis-ci.org/wooorm/is-whitespace-character\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-whitespace-character.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-whitespace-character\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-whitespace-character#readme", "_id": "is-whitespace-character@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-whitespace-character@1.0.2", "name": "is-whitespace-character", "escapedName": "is-whitespace-character", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-whitespace-character", "error": "[Circular]", "extraneous": false, "_deduped": "is-whitespace-character" }, "is-word-character": { "name": "is-word-character", "version": "1.0.2", "description": "Check if a character is a word character", "license": "MIT", "keywords": [ "string", "character", "char", "code", "word" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/is-word-character.git" }, "bugs": { "url": "https://github.com/wooorm/is-word-character/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s isWordCharacter > is-word-character.js", "build-mangle": "esmangle < is-word-character.js > is-word-character.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "is-word-character.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/is-word-character/-/is-word-character-1.0.2.tgz", "_integrity": "sha512-T3FlsX8rCHAH8e7RE7PfOPZVFQlcV3XRF9eOOBQ1uf70OxO7CjjSOjeImMPCADBdYWcStAbVbYvJ1m2D3tb+EA==", "_from": "is-word-character@1.0.2", "readme": "# is-word-character [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCheck if a character is a word character (`\\w`, which equals\n`[a-zA-Z0-9_]`).\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install is-word-character\n```\n\n## Usage\n\n```javascript\nvar wordCharacter = require('is-word-character')\n\nwordCharacter('a') // => true\nwordCharacter('Z') // => true\nwordCharacter('0') // => true\nwordCharacter('_') // => true\nwordCharacter(' ') // => false\nwordCharacter('💩') // => false\n```\n\n## API\n\n### `wordCharacter(character|code)`\n\nCheck whether the given character code (`number`), or the character\ncode at the first position (`string`), is a word character.\n\n## Related\n\n* [`is-alphabetical`](https://github.com/wooorm/is-alphabetical)\n* [`is-alphanumerical`](https://github.com/wooorm/is-alphanumerical)\n* [`is-decimal`](https://github.com/wooorm/is-decimal)\n* [`is-hexadecimal`](https://github.com/wooorm/is-hexadecimal)\n* [`is-whitespace-character`](https://github.com/wooorm/is-whitespace-character)\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/is-word-character.svg\n\n[travis]: https://travis-ci.org/wooorm/is-word-character\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/is-word-character.svg\n\n[codecov]: https://codecov.io/github/wooorm/is-word-character\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/is-word-character#readme", "_id": "is-word-character@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "is-word-character@1.0.2", "name": "is-word-character", "escapedName": "is-word-character", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-word-character@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-word-character", "error": "[Circular]", "extraneous": false, "_deduped": "is-word-character" }, "markdown-escapes": { "name": "markdown-escapes", "version": "1.0.2", "description": "List of escapable characters in markdown", "license": "MIT", "keywords": "[Circular]", "repository": "[Circular]", "bugs": "[Circular]", "author": "[Circular]", "contributors": "[Circular]", "files": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "scripts": "[Circular]", "remarkConfig": "[Circular]", "prettier": "[Circular]", "xo": "[Circular]", "nyc": "[Circular]", "_resolved": "https://registry.npmjs.org/markdown-escapes/-/markdown-escapes-1.0.2.tgz", "_integrity": "sha512-lbRZ2mE3Q9RtLjxZBZ9+IMl68DKIXaVAhwvwn9pmjnPLS0h/6kyBMgNhqi1xFJ/2yv6cSyv0jbiZavZv93JkkA==", "_from": "markdown-escapes@1.0.2", "readme": "# markdown-escapes [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nList of escapable characters in markdown.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install markdown-escapes\n```\n\n## Usage\n\n```javascript\nvar escapes = require('markdown-escapes');\n\n// Access by property:\nescapes.commonmark; //=> ['\\\\', '`', ..., '@', '^']\n\n// Access by options object:\nescapes({gfm: true}); //=> ['\\\\', '`', ..., '~', '|']\n```\n\n## API\n\n### `escapes([options])`\n\nGet escapes. Supports `options.commonmark` and `options.gfm`, which\nwhen `true` returns the extra escape characters supported by those\nflavours.\n\n###### Returns\n\n`Array.<string>`.\n\n### `escapes.default`\n\nList of default escapable characters.\n\n### `escapes.gfm`\n\nList of escapable characters in GFM (which includes all `default`s).\n\n### `escapes.commonmark`\n\nList of escapable characters in CommonMark (which includes all `gfm`s).\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/markdown-escapes.svg\n\n[travis]: https://travis-ci.org/wooorm/markdown-escapes\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/markdown-escapes.svg\n\n[codecov]: https://codecov.io/github/wooorm/markdown-escapes\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/markdown-escapes#readme", "_id": "markdown-escapes@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "markdown-escapes@1.0.2", "name": "markdown-escapes", "escapedName": "markdown-escapes", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/markdown-escapes", "error": "[Circular]", "extraneous": false, "_deduped": "markdown-escapes" }, "parse-entities": { "name": "parse-entities", "version": "1.2.1", "description": "Parse HTML character references: fast, spec-compliant, positional information", "license": "MIT", "keywords": "[Circular]", "repository": "[Circular]", "bugs": "[Circular]", "author": "[Circular]", "contributors": "[Circular]", "browser": "[Circular]", "react-native": "[Circular]", "files": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "scripts": "[Circular]", "nyc": "[Circular]", "prettier": "[Circular]", "xo": "[Circular]", "remarkConfig": "[Circular]", "_resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-1.2.1.tgz", "_integrity": "sha512-NBWYLQm1KSoDKk7GAHyioLTvCZ5QjdH/ASBBQTD3iLiAWJXS5bg1jEWI8nIJ+vgVvsceBVBcDGRWSo0KVQBvvg==", "_from": "parse-entities@1.2.1", "readme": "# parse-entities [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status]\n\nParse HTML character references: fast, spec-compliant, positional\ninformation.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install parse-entities\n```\n\n## Usage\n\n```js\nvar decode = require('parse-entities')\n\ndecode('alpha &amp bravo')\n// => alpha & bravo\n\ndecode('charlie &copycat; delta')\n// => charlie ©cat; delta\n\ndecode('echo &copy; foxtrot &#8800; golf &#x1D306; hotel')\n// => echo © foxtrot ≠ golf 𝌆 hotel\n```\n\n## API\n\n## `parseEntities(value[, options])`\n\n##### `options`\n\n###### `options.additional`\n\nAdditional character to accept (`string?`, default: `''`).\nThis allows other characters, without error, when following an ampersand.\n\n###### `options.attribute`\n\nWhether to parse `value` as an attribute value (`boolean?`, default:\n`false`).\n\n###### `options.nonTerminated`\n\nWhether to allow non-terminated entities (`boolean`, default: `true`).\nFor example, `&copycat` for `©cat`. This behaviour is spec-compliant but\ncan lead to unexpected results.\n\n###### `options.warning`\n\nError handler ([`Function?`][warning]).\n\n###### `options.text`\n\nText handler ([`Function?`][text]).\n\n###### `options.reference`\n\nReference handler ([`Function?`][reference]).\n\n###### `options.warningContext`\n\nContext used when invoking `warning` (`'*'`, optional).\n\n###### `options.textContext`\n\nContext used when invoking `text` (`'*'`, optional).\n\n###### `options.referenceContext`\n\nContext used when invoking `reference` (`'*'`, optional)\n\n###### `options.position`\n\nStarting `position` of `value` (`Location` or `Position`, optional). Useful\nwhen dealing with values nested in some sort of syntax tree. The default is:\n\n```js\n{\n start: {line: 1, column: 1, offset: 0},\n indent: []\n}\n```\n\n##### Returns\n\n`string` — Decoded `value`.\n\n### `function warning(reason, position, code)`\n\nError handler.\n\n##### Context\n\n`this` refers to `warningContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `reason`\n\nHuman-readable reason for triggering a parse error (`string`).\n\n###### `position`\n\nPlace at which the parse error occurred (`Position`).\n\n###### `code`\n\nIdentifier of reason for triggering a parse error (`number`).\n\nThe following codes are used:\n\n| Code | Example | Note |\n| ---- | ------------------ | --------------------------------------------- |\n| `1` | `foo &amp bar` | Missing semicolon (named) |\n| `2` | `foo &#123 bar` | Missing semicolon (numeric) |\n| `3` | `Foo &bar baz` | Ampersand did not start a reference |\n| `4` | `Foo &#` | Empty reference |\n| `5` | `Foo &bar; baz` | Unknown entity |\n| `6` | `Foo &#128; baz` | [Disallowed reference][invalid] |\n| `7` | `Foo &#xD800; baz` | Prohibited: outside permissible unicode range |\n\n### `function text(value, location)`\n\nText handler.\n\n##### Context\n\n`this` refers to `textContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nString of content (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n### `function reference(value, location, source)`\n\nCharacter reference handler.\n\n##### Context\n\n`this` refers to `referenceContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nEncoded character reference (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n###### `source`\n\nSource of character reference (`Location`).\n\n## Related\n\n* [`stringify-entities`](https://github.com/wooorm/stringify-entities)\n — Encode HTML character references\n* [`character-entities`](https://github.com/wooorm/character-entities)\n — Info on character entities\n* [`character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n — Info on HTML4 character entities\n* [`character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n — Info on legacy character entities\n* [`character-reference-invalid`](https://github.com/wooorm/character-reference-invalid)\n — Info on invalid numeric character references\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/parse-entities.svg\n\n[build-status]: https://travis-ci.org/wooorm/parse-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/parse-entities.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/parse-entities\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: http://wooorm.com\n\n[warning]: #function-warningreason-position-code\n\n[text]: #function-textvalue-location\n\n[reference]: #function-referencevalue-location-source\n\n[invalid]: https://github.com/wooorm/character-reference-invalid\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/parse-entities#readme", "_id": "parse-entities@1.2.1", "_requested": { "type": "version", "registry": true, "raw": "parse-entities@1.2.1", "name": "parse-entities", "escapedName": "parse-entities", "rawSpec": "1.2.1", "saveSpec": "[Circular]", "fetchSpec": "1.2.1" }, "_spec": "1.2.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/parse-entities", "error": "[Circular]", "extraneous": false, "_deduped": "parse-entities" }, "xtend": { "name": "xtend", "version": "4.0.1", "description": "extend like a boss", "keywords": [ "extend", "merge", "options", "opts", "object", "array" ], "author": { "name": "Raynos", "email": "raynos2@gmail.com" }, "repository": { "type": "git", "url": "git://github.com/Raynos/xtend.git" }, "main": "immutable", "scripts": { "test": "node test" }, "dependencies": {}, "devDependencies": { "tape": "~1.1.0" }, "homepage": "https://github.com/Raynos/xtend", "contributors": [ { "name": "Jake Verbaten" }, { "name": "Matt Esch" } ], "bugs": { "url": "https://github.com/Raynos/xtend/issues", "email": "raynos2@gmail.com" }, "license": "MIT", "testling": { "files": "test.js", "browsers": [ "ie/7..latest", "firefox/16..latest", "firefox/nightly", "chrome/22..latest", "chrome/canary", "opera/12..latest", "opera/next", "safari/5.1..latest", "ipad/6.0..latest", "iphone/6.0..latest" ] }, "engines": { "node": ">=0.4" }, "_resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz", "_integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68=", "_from": "xtend@4.0.1", "readme": "# xtend\n\n[![browser support][3]][4]\n\n[![locked](http://badges.github.io/stability-badges/dist/locked.svg)](http://github.com/badges/stability-badges)\n\nExtend like a boss\n\nxtend is a basic utility library which allows you to extend an object by appending all of the properties from each object in a list. When there are identical properties, the right-most property takes precedence.\n\n## Examples\n\n```js\nvar extend = require(\"xtend\")\n\n// extend returns a new object. Does not mutate arguments\nvar combination = extend({\n a: \"a\",\n b: 'c'\n}, {\n b: \"b\"\n})\n// { a: \"a\", b: \"b\" }\n```\n\n## Stability status: Locked\n\n## MIT Licenced\n\n\n [3]: http://ci.testling.com/Raynos/xtend.png\n [4]: http://ci.testling.com/Raynos/xtend\n", "readmeFilename": "README.md", "_id": "xtend@4.0.1", "_requested": { "type": "version", "registry": true, "raw": "xtend@4.0.1", "name": "xtend", "escapedName": "xtend", "rawSpec": "4.0.1", "saveSpec": "[Circular]", "fetchSpec": "4.0.1" }, "_spec": "4.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "xtend@4.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark/node_modules/xtend", "error": "[Circular]", "extraneous": false }, "repeat-string": { "name": "repeat-string", "description": "Repeat the given string n times. Fastest implementation for repeating a string.", "version": "1.6.1", "homepage": "https://github.com/jonschlinkert/repeat-string", "author": "[Circular]", "contributors": "[Circular]", "repository": "[Circular]", "bugs": "[Circular]", "license": "MIT", "files": "[Circular]", "main": "index.js", "engines": "[Circular]", "scripts": "[Circular]", "devDependencies": "[Circular]", "keywords": "[Circular]", "verb": "[Circular]", "_resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz", "_integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=", "_from": "repeat-string@1.6.1", "readme": "# repeat-string [![NPM version](https://img.shields.io/npm/v/repeat-string.svg?style=flat)](https://www.npmjs.com/package/repeat-string) [![NPM monthly downloads](https://img.shields.io/npm/dm/repeat-string.svg?style=flat)](https://npmjs.org/package/repeat-string) [![NPM total downloads](https://img.shields.io/npm/dt/repeat-string.svg?style=flat)](https://npmjs.org/package/repeat-string) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/repeat-string.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/repeat-string)\n\n> Repeat the given string n times. Fastest implementation for repeating a string.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save repeat-string\n```\n\n## Usage\n\n### [repeat](index.js#L41)\n\nRepeat the given `string` the specified `number` of times.\n\n**Example:**\n\n**Example**\n\n```js\nvar repeat = require('repeat-string');\nrepeat('A', 5);\n//=> AAAAA\n```\n\n**Params**\n\n* `string` **{String}**: The string to repeat\n* `number` **{Number}**: The number of times to repeat the string\n* `returns` **{String}**: Repeated string\n\n## Benchmarks\n\nRepeat string is significantly faster than the native method (which is itself faster than [repeating](https://github.com/sindresorhus/repeating)):\n\n```sh\n# 2x\nrepeat-string █████████████████████████ (26,953,977 ops/sec)\nrepeating █████████ (9,855,695 ops/sec)\nnative ██████████████████ (19,453,895 ops/sec)\n\n# 3x\nrepeat-string █████████████████████████ (19,445,252 ops/sec)\nrepeating ███████████ (8,661,565 ops/sec)\nnative ████████████████████ (16,020,598 ops/sec)\n\n# 10x\nrepeat-string █████████████████████████ (23,792,521 ops/sec)\nrepeating █████████ (8,571,332 ops/sec)\nnative ███████████████ (14,582,955 ops/sec)\n\n# 50x\nrepeat-string █████████████████████████ (23,640,179 ops/sec)\nrepeating █████ (5,505,509 ops/sec)\nnative ██████████ (10,085,557 ops/sec)\n\n# 250x\nrepeat-string █████████████████████████ (23,489,618 ops/sec)\nrepeating ████ (3,962,937 ops/sec)\nnative ████████ (7,724,892 ops/sec)\n\n# 2000x\nrepeat-string █████████████████████████ (20,315,172 ops/sec)\nrepeating ████ (3,297,079 ops/sec)\nnative ███████ (6,203,331 ops/sec)\n\n# 20000x\nrepeat-string █████████████████████████ (23,382,915 ops/sec)\nrepeating ███ (2,980,058 ops/sec)\nnative █████ (5,578,808 ops/sec)\n```\n\n**Run the benchmarks**\n\nInstall dev dependencies:\n\n```sh\nnpm i -d && node benchmark\n```\n\n## About\n\n### Related projects\n\n[repeat-element](https://www.npmjs.com/package/repeat-element): Create an array by repeating the given value n times. | [homepage](https://github.com/jonschlinkert/repeat-element \"Create an array by repeating the given value n times.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor**<br/> | \n| --- | --- |\n| 51 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [LinusU](https://github.com/LinusU) |\n| 2 | [tbusser](https://github.com/tbusser) |\n| 1 | [doowb](https://github.com/doowb) |\n| 1 | [wooorm](https://github.com/wooorm) |\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2016, [Jon Schlinkert](http://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/repeat-string/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.2.0, on October 23, 2016._", "readmeFilename": "README.md", "_id": "repeat-string@1.6.1", "_requested": { "type": "version", "registry": true, "raw": "repeat-string@1.6.1", "name": "repeat-string", "escapedName": "repeat-string", "rawSpec": "1.6.1", "saveSpec": "[Circular]", "fetchSpec": "1.6.1" }, "_spec": "1.6.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/repeat-string", "error": "[Circular]", "extraneous": false, "_deduped": "repeat-string" }, "state-toggle": { "name": "state-toggle", "version": "1.0.1", "description": "Enter/exit a state", "license": "MIT", "keywords": "[Circular]", "repository": "[Circular]", "bugs": "[Circular]", "author": "[Circular]", "contributors": "[Circular]", "files": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "scripts": "[Circular]", "prettier": "[Circular]", "xo": "[Circular]", "remarkConfig": "[Circular]", "nyc": "[Circular]", "_resolved": "https://registry.npmjs.org/state-toggle/-/state-toggle-1.0.1.tgz", "_integrity": "sha512-Qe8QntFrrpWTnHwvwj2FZTgv+PKIsp0B9VxLzLLbSpPXWOgRgc5LVj/aTiSfK1RqIeF9jeC1UeOH8Q8y60A7og==", "_from": "state-toggle@1.0.1", "readme": "# state-toggle [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nEnter/exit a state.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install state-toggle\n```\n\n## Usage\n\n```javascript\nvar toggle = require('state-toggle')\n\nvar ctx = {on: false}\nvar enter = toggle('on', ctx.on, ctx)\nvar exit\n\n// Entering:\nexit = enter()\nconsole.log(ctx.on) // => true\n\n// Exiting:\nexit()\nconsole.log(ctx.on) // => false\n```\n\n## API\n\n### `toggle(key, initial[, ctx])`\n\nCreate a toggle, which when entering toggles `key` on `ctx` (or `this`,\nif `ctx` is not given) to `!initial`, and when exiting, sets `key` on\nthe context back to the value it had before entering.\n\n###### Returns\n\n`Function` — [`enter`][enter].\n\n### `enter()`\n\nEnter the state.\n\n###### Context\n\nIf no `ctx` was given to `toggle`, the context object (`this`) of `enter()`\nis used to toggle.\n\n###### Returns\n\n`Function` — [`exit`][exit].\n\n### `exit()`\n\nExit the state, reverting `key` to the value it had before entering.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/state-toggle.svg\n\n[travis]: https://travis-ci.org/wooorm/state-toggle\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/state-toggle.svg\n\n[codecov]: https://codecov.io/github/wooorm/state-toggle\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[enter]: #enter\n\n[exit]: #exit\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/state-toggle#readme", "_id": "state-toggle@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "state-toggle@1.0.1", "name": "state-toggle", "escapedName": "state-toggle", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/state-toggle", "error": "[Circular]", "extraneous": false, "_deduped": "state-toggle" }, "trim": { "name": "trim", "version": "0.0.1", "description": "Trim string whitespace", "keywords": [ "string", "trim" ], "author": { "name": "TJ Holowaychuk", "email": "tj@vision-media.ca" }, "dependencies": {}, "devDependencies": { "mocha": "*", "should": "*" }, "main": "index", "component": { "scripts": { "trim/index.js": "index.js" } }, "_resolved": "https://registry.npmjs.org/trim/-/trim-0.0.1.tgz", "_integrity": "sha1-WFhUf2spB1fulczMZm+1AITEYN0=", "_from": "trim@0.0.1", "readme": "\n# trim\n\n Trims string whitespace.\n\n## Installation\n\n```\n$ npm install trim\n$ component install component/trim\n```\n\n## API\n\n - [trim(str)](#trimstr)\n - [.left(str)](#leftstr)\n - [.right(str)](#rightstr)\n<a name=\"\" />\n \n<a name=\"trimstr\" />\n### trim(str)\nshould trim leading / trailing whitespace.\n\n```js\ntrim(' foo bar ').should.equal('foo bar');\ntrim('\\n\\n\\nfoo bar\\n\\r\\n\\n').should.equal('foo bar');\n```\n\n<a name=\"leftstr\" />\n### .left(str)\nshould trim leading whitespace.\n\n```js\ntrim.left(' foo bar ').should.equal('foo bar ');\n```\n\n<a name=\"rightstr\" />\n### .right(str)\nshould trim trailing whitespace.\n\n```js\ntrim.right(' foo bar ').should.equal(' foo bar');\n```\n\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "readmeFilename": "Readme.md", "_id": "trim@0.0.1", "_requested": { "type": "version", "registry": true, "raw": "trim@0.0.1", "name": "trim", "escapedName": "trim", "rawSpec": "0.0.1", "saveSpec": "[Circular]", "fetchSpec": "0.0.1" }, "_spec": "0.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "trim@0.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/trim", "error": "[Circular]", "extraneous": false, "_deduped": "trim" }, "trim-trailing-lines": { "name": "trim-trailing-lines", "version": "1.1.1", "description": "Remove final newline characters from a string", "license": "MIT", "keywords": [ "trim", "final", "line", "newline", "characters" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/trim-trailing-lines.git" }, "bugs": { "url": "https://github.com/wooorm/trim-trailing-lines/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.0", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.6.3", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js -s trimTrailingLines > trim-trailing-lines.js", "build-mangle": "esmangle trim-trailing-lines.js > trim-trailing-lines.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "trim-trailing-lines.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/trim-trailing-lines/-/trim-trailing-lines-1.1.1.tgz", "_integrity": "sha512-bWLv9BbWbbd7mlqqs2oQYnLD/U/ZqeJeJwbO0FG2zA1aTq+HTvxfHNKFa/HGCVyJpDiioUYaBhfiT6rgk+l4mg==", "_from": "trim-trailing-lines@1.1.1", "readme": "# trim-trailing-lines [![Build Status][travtrim-trailing-lines]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nRemove final newline characters from a string.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install trim-trailing-lines\n```\n\n## Usage\n\n```js\nvar trimTrailingLines = require('trim-trailing-lines')\n\ntrimTrailingLines('foo\\nbar') // => 'foo\\nbar'\ntrimTrailingLines('foo\\nbar\\n') // => 'foo\\nbar'\ntrimTrailingLines('foo\\nbar\\n\\n') // => 'foo\\nbar'\n```\n\n## API\n\n### `trimTrailingLines(value)`\n\nRemove final newline characters from `value`.\n\n###### Parameters\n\n* `value` (`string`) — Value with trailing newlines, coerced to string.\n\n###### Returns\n\n`string` — Value without trailing newlines.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travtrim-trailing-lines]: https://img.shields.io/travis/wooorm/trim-trailing-lines.svg\n\n[travis]: https://travis-ci.org/wooorm/trim-trailing-lines\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/trim-trailing-lines.svg\n\n[codecov]: https://codecov.io/github/wooorm/trim-trailing-lines\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/trim-trailing-lines#readme", "_id": "trim-trailing-lines@1.1.1", "_requested": { "type": "version", "registry": true, "raw": "trim-trailing-lines@1.1.1", "name": "trim-trailing-lines", "escapedName": "trim-trailing-lines", "rawSpec": "1.1.1", "saveSpec": "[Circular]", "fetchSpec": "1.1.1" }, "_spec": "1.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "trim-trailing-lines@1.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/trim-trailing-lines", "error": "[Circular]", "extraneous": false, "_deduped": "trim-trailing-lines" }, "unherit": { "name": "unherit", "version": "1.1.1", "description": "Clone a constructor without affecting the super-class", "license": "MIT", "keywords": "[Circular]", "repository": "[Circular]", "bugs": "[Circular]", "author": "[Circular]", "contributors": "[Circular]", "files": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "scripts": "[Circular]", "prettier": "[Circular]", "xo": "[Circular]", "remarkConfig": "[Circular]", "_resolved": "https://registry.npmjs.org/unherit/-/unherit-1.1.1.tgz", "_integrity": "sha512-+XZuV691Cn4zHsK0vkKYwBEwB74T3IZIcxrgn2E4rKwTfFyI1zCh7X7grwh9Re08fdPlarIdyWgI8aVB3F5A5g==", "_from": "unherit@1.1.1", "readme": "# unherit [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nCreate a custom constructor which can be modified without affecting the\noriginal class.\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install unherit\n```\n\n## Usage\n\n```js\nvar EventEmitter = require('events').EventEmitter\nvar unherit = require('unherit')\n\n/* Create a private class which acts just like\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `EventEmitter`. */\nvar Emitter = unherit(EventEmitter)\n\nEmitter.prototype.defaultMaxListeners = 0\n/* Now, all instances of `Emitter` have no maximum\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps listeners, without affecting other `EventEmitter`s. */\n\nnew Emitter().defaultMaxListeners === 0 // => true\nnew EventEmitter().defaultMaxListeners === undefined // => true\nnew Emitter() instanceof EventEmitter // => true\n```\n\n## API\n\n### `unherit(Super)`\n\nCreate a custom constructor which can be modified without affecting the\noriginal class.\n\n###### Parameters\n\n* `Super` (`Function`) — Super-class.\n\n###### Returns\n\n`Function` — Constructor acting like `Super`, which can be modified\nwithout affecting the original class.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/unherit.svg\n\n[travis]: https://travis-ci.org/wooorm/unherit\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/unherit.svg\n\n[codecov]: https://codecov.io/github/wooorm/unherit\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/unherit#readme", "_id": "unherit@1.1.1", "_requested": { "type": "version", "registry": true, "raw": "unherit@1.1.1", "name": "unherit", "escapedName": "unherit", "rawSpec": "1.1.1", "saveSpec": "[Circular]", "fetchSpec": "1.1.1" }, "_spec": "1.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/unherit", "error": "[Circular]", "extraneous": false, "_deduped": "unherit" }, "unist-util-remove-position": { "name": "unist-util-remove-position", "version": "1.1.2", "description": "Remove `position`s from a unist tree", "license": "MIT", "keywords": [ "unist", "utility", "remove", "position", "location" ], "repository": { "type": "git", "url": "git+https://github.com/syntax-tree/unist-util-remove-position.git" }, "bugs": { "url": "https://github.com/syntax-tree/unist-util-remove-position/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark": "^9.0.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "unist-builder": "^1.0.2", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s unistUtilRemovePosition > unist-util-remove-position.js", "build-mangle": "esmangle < unist-util-remove-position.js > unist-util-remove-position.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "guard-for-in": "off", "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "unist-util-remove-position.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/unist-util-remove-position/-/unist-util-remove-position-1.1.2.tgz", "_integrity": "sha512-XxoNOBvq1WXRKXxgnSYbtCF76TJrRoe5++pD4cCBsssSiWSnPEktyFrFLE8LTk3JW5mt9hB0Sk5zn4x/JeWY7Q==", "_from": "unist-util-remove-position@1.1.2", "readme": "# unist-util-remove-position [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nRemove [`position`][position]s from a [Unist][] tree.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unist-util-remove-position\n```\n\n## Usage\n\n```javascript\nvar remark = require('remark')\nvar removePosition = require('unist-util-remove-position')\n\nvar tree = remark().parse('Some _emphasis_, **importance**, and `code`.')\n\nconsole.dir(removePosition(tree, true), {depth: null})\n```\n\nYields:\n\n```js\n{ type: 'root',\n children:\n [ { type: 'paragraph',\n children:\n [ { type: 'text', value: 'Some ' },\n { type: 'emphasis',\n children: [ { type: 'text', value: 'emphasis' } ] },\n { type: 'text', value: ', ' },\n { type: 'strong',\n children: [ { type: 'text', value: 'importance' } ] },\n { type: 'text', value: ', and ' },\n { type: 'inlineCode', value: 'code' },\n { type: 'text', value: '.' } ] } ] }\n```\n\n## API\n\n### `removePosition(node[, force])`\n\nRemove [`position`][position]s from [`node`][node]. If `force` is given,\nuses `delete`, otherwise, sets `position`s to `undefined`.\n\n###### Returns\n\nThe given `node`.\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/unist`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/unist-util-remove-position.svg\n\n[travis]: https://travis-ci.org/syntax-tree/unist-util-remove-position\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-remove-position.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/unist-util-remove-position\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[position]: https://github.com/syntax-tree/unist#position\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[contributing]: https://github.com/syntax-tree/unist/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/unist/blob/master/code-of-conduct.md\n", "readmeFilename": "readme.md", "homepage": "https://github.com/syntax-tree/unist-util-remove-position#readme", "_id": "unist-util-remove-position@1.1.2", "_requested": { "type": "version", "registry": true, "raw": "unist-util-remove-position@1.1.2", "name": "unist-util-remove-position", "escapedName": "unist-util-remove-position", "rawSpec": "1.1.2", "saveSpec": "[Circular]", "fetchSpec": "1.1.2" }, "_spec": "1.1.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "unist-util-remove-position@1.1.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "unist-util-visit": "^1.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/unist-util-remove-position", "error": "[Circular]", "extraneous": false, "_deduped": "unist-util-remove-position" }, "vfile-location": { "name": "vfile-location", "version": "2.0.4", "description": "Convert between positions (line and column-based) and offsets (range-based) locations in a virtual file", "license": "MIT", "keywords": [ "remark", "comment", "message", "marker", "control" ], "repository": { "type": "git", "url": "git+https://github.com/vfile/vfile-location.git" }, "bugs": { "url": "https://github.com/vfile/vfile-location/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" } ], "dependencies": {}, "files": [ "index.js" ], "devDependencies": { "browserify": "^16.0.0", "nyc": "^13.0.0", "prettier": "^1.12.1", "remark-cli": "^6.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "tinyify": "^2.4.3", "vfile": "^3.0.0", "xo": "^0.23.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify . -s vfileLocation > vfile-location.js", "build-mangle": "browserify . -s vfileLocation -p tinyify > vfile-location.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off", "object-shorthand": "off" }, "ignores": [ "vfile-location.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/vfile-location/-/vfile-location-2.0.4.tgz", "_integrity": "sha512-KRL5uXQPoUKu+NGvQVL4XLORw45W62v4U4gxJ3vRlDfI9QsT4ZN1PNXn/zQpKUulqGDpYuT0XDfp5q9O87/y/w==", "_from": "vfile-location@2.0.4", "readme": "# vfile-location\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Chat][chat-badge]][chat]\n\nConvert between positions (line and column-based) and offsets\n(range-based) locations in a [virtual file][vfile].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install vfile-location\n```\n\n## Usage\n\n```js\nvar vfile = require('vfile')\nvar vfileLocation = require('vfile-location')\n\nvar location = vfileLocation(vfile('foo\\nbar\\nbaz'))\n\nvar offset = location.toOffset({line: 3, column: 3}) // => 10\nlocation.toPosition(offset) // => {line: 3, column: 3, offset: 10}\n```\n\n## API\n\n### `location = vfileLocation(doc)`\n\nGet transform functions for the given `doc` (`string`) or\n[`file`][vfile].\n\nReturns an object with [`toOffset`][to-offset] and\n[`toPosition`][to-position].\n\n### `location.toOffset(position)`\n\nGet the `offset` (`number`) for a line and column-based\n[`position`][position] in the bound file. Returns `-1`\nwhen given invalid or out of bounds input.\n\n### `location.toPosition(offset)`\n\nGet the line and column-based [`position`][position] for `offset` in\nthe bound file.\n\n## Contribute\n\nSee [`contributing.md` in `vfile/vfile`][contributing] for ways to get started.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/vfile/vfile-location.svg\n\n[build]: https://travis-ci.org/vfile/vfile-location\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/vfile/vfile-location.svg\n\n[coverage]: https://codecov.io/github/vfile/vfile-location\n\n[downloads-badge]: https://img.shields.io/npm/dm/vfile-location.svg\n\n[downloads]: https://www.npmjs.com/package/vfile-location\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/vfile\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[vfile]: https://github.com/vfile/vfile\n\n[to-offset]: #locationtooffsetposition\n\n[to-position]: #locationtopositionoffset\n\n[position]: https://github.com/syntax-tree/unist#position\n\n[contributing]: https://github.com/vfile/vfile/blob/master/contributing.md\n\n[coc]: https://github.com/vfile/vfile/blob/master/code-of-conduct.md\n", "readmeFilename": "readme.md", "homepage": "https://github.com/vfile/vfile-location#readme", "_id": "vfile-location@2.0.4", "_requested": { "type": "version", "registry": true, "raw": "vfile-location@2.0.4", "name": "vfile-location", "escapedName": "vfile-location", "rawSpec": "2.0.4", "saveSpec": "[Circular]", "fetchSpec": "2.0.4" }, "_spec": "2.0.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "vfile-location@2.0.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/vfile-location", "error": "[Circular]", "extraneous": false, "_deduped": "vfile-location" } }, "devDependencies": { "tape": "^4.9.1", "unified": "^7.0.0", "vfile": "^3.0.0" }, "scripts": { "test": "tape test.js" }, "xo": false, "_resolved": "https://registry.npmjs.org/remark-parse/-/remark-parse-6.0.3.tgz", "_integrity": "sha512-QbDXWN4HfKTUC0hHa4teU463KclLAnwpn/FBn87j9cKYJWWawbiLgMfP2Q4XwhxxuuuOxHlw+pSN0OKuJwyVvg==", "_from": "remark-parse@6.0.3", "readme": "# remark-parse [![Travis][build-badge]][build-status] [![Coverage][coverage-badge]][coverage-status] [![Downloads][dl-badge]][dl] [![Size][size-badge]][size] [![Chat][chat-badge]][chat]\n\n[Parser][] for [**unified**][unified].\nParses markdown to [**mdast**][mdast] syntax trees.\nUsed in the [**remark** processor][processor] but can be used on its own as\nwell.\nCan be [extended][extend] to change how markdown is parsed.\n\n* 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps *\n\n**Announcing the unified collective! 🎉\n[Read more about it on Medium »][announcement]**\n\n## Sponsors\n\n<!--lint ignore no-html maximum-line-length-->\n\n<table>\n <tr valign=\"top\">\n <td width=\"20%\" align=\"center\">\n <a href=\"https://zeit.co\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://zeit.co\">ZEIT</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://www.gatsbyjs.org\">Gatsby</a></td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://compositor.io\"><img src=\"https://avatars1.githubusercontent.com/u/19245838?s=400&v=4\"></a>\n <br><br>🥉\n <a href=\"https://compositor.io\">Compositor</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=400&v=4\"></a>\n <br><br>\n <a href=\"https://www.holloway.com\">Holloway</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <br><br><br><br>\n <a href=\"https://opencollective.com/unified\"><strong>You?</strong>\n </td>\n </tr>\n</table>\n\n## Installation\n\n[npm][]:\n\n```sh\nnpm install remark-parse\n```\n\n## Usage\n\n```js\nvar unified = require('unified')\nvar createStream = require('unified-stream')\nvar markdown = require('remark-parse')\nvar html = require('remark-html')\n\nvar processor = unified()\n .use(markdown, {commonmark: true})\n .use(html)\n\nprocess.stdin.pipe(createStream(processor)).pipe(process.stdout)\n```\n\n## Table of Contents\n\n* [API](#api)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.use(parse\\[, options\\])](#processoruseparse-options)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [parse.Parser](#parseparser)\n* [Extending the Parser](#extending-the-parser)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Parser#blockTokenizers](#parserblocktokenizers)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Parser#blockMethods](#parserblockmethods)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Parser#inlineTokenizers](#parserinlinetokenizers)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Parser#inlineMethods](#parserinlinemethods)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [function tokenizer(eat, value, silent)](#function-tokenizereat-value-silent)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [tokenizer.locator(value, fromIndex)](#tokenizerlocatorvalue-fromindex)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [eat(subvalue)](#eatsubvalue)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [add(node\\[, parent\\])](#addnode-parent)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [add.test()](#addtest)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [add.reset(node\\[, parent\\])](#addresetnode-parent)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Turning off a tokenizer](#turning-off-a-tokenizer)\n* [License](#license)\n\n## API\n\n### `processor.use(parse[, options])`\n\nConfigure the `processor` to read markdown as input and process\n[**mdast**][mdast] syntax trees.\n\n##### `options`\n\nOptions are passed directly, or passed later through [`processor.data()`][data].\n\n##### `options.gfm`\n\n```md\nhello ~~hi~~ world\n```\n\nGFM mode (`boolean`, default: `true`) turns on:\n\n* [Fenced code blocks](https://help.github.com/articles/github-flavored-markdown/#fenced-code-blocks)\n* [Autolinking of URLs](https://help.github.com/articles/github-flavored-markdown/#url-autolinking)\n* [Deletions (strikethrough)](https://help.github.com/articles/github-flavored-markdown/#strikethrough)\n* [Task lists](https://help.github.com/articles/writing-on-github/#task-lists)\n* [Tables](https://help.github.com/articles/github-flavored-markdown/#tables)\n\n##### `options.commonmark`\n\n```md\nThis is a paragraph\n and this is also part of the preceding paragraph.\n```\n\nCommonMark mode (`boolean`, default: `false`) allows:\n\n* Empty lines to split blockquotes\n* Parentheses (`(` and `)`) around for link and image titles\n* Any escaped js character\n* Closing parenthesis (`)`) as an ordered list marker\n* URL definitions (and footnotes, when enabled) in blockquotes\n\nCommonMark mode disallows:\n\n* Code directly following a paragraph\n* ATX-headings (`# Hash headings`) without spacing after opening hashes\n or and before closing hashes\n* Setext headings (`Underline headings\\n---`) when following a paragraph\n* Newlines in link and image titles\n* White space in link and image URLs in auto-links (links in brackets,\n `<` and `>`)\n* Lazy blockquote continuation, lines not preceded by a closing angle\n bracket (`>`), for lists, code, and thematicBreak\n\n##### `options.footnotes`\n\n```md\nSomething something[^or something?].\n\nAnd something else[^1].\n\n[^1]: This reference footnote contains a paragraph...\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps ...and a list\n```\n\nFootnotes mode (`boolean`, default: `false`) enables reference footnotes and\ninline footnotes. Both are wrapped in square brackets and preceded by a caret\n(`^`), and can be referenced from inside other footnotes.\n\n##### `options.blocks`\n\n```md\n<block>foo\n</block>\n```\n\nBlocks (`Array.<string>`, default: list of [block HTML elements][blocks])\nexposes let’s users define block-level HTML elements.\n\n##### `options.pedantic`\n\n```md\nCheck out some_file_name.txt\n```\n\nPedantic mode (`boolean`, default: `false`) turns on:\n\n* Emphasis (`_alpha_`) and importance (`__bravo__`) with underscores\n in words\n* Unordered lists with different markers (`*`, `-`, `+`)\n* If `commonmark` is also turned on, ordered lists with different\n markers (`.`, `)`)\n* And pedantic mode removes less spaces in list-items (at most four,\n instead of the whole indent)\n\n### `parse.Parser`\n\nAccess to the [parser][], if you need it.\n\n## Extending the Parser\n\nMost often, using transformers to manipulate a syntax tree produces\nthe desired output. Sometimes, mainly when introducing new syntactic\nentities with a certain level of precedence, interfacing with the parser\nis necessary.\n\nIf the `remark-parse` plugin is used, it adds a [`Parser`][parser] constructor\nto the `processor`. Other plugins can add tokenizers to the parser’s prototype\nto change how markdown is parsed.\n\nThe below plugin adds a [tokenizer][] for at-mentions.\n\n```js\nmodule.exports = mentions\n\nfunction mentions() {\n var Parser = this.Parser\n var tokenizers = Parser.prototype.inlineTokenizers\n var methods = Parser.prototype.inlineMethods\n\n // Add an inline tokenizer (defined in the following example).\n tokenizers.mention = tokenizeMention\n\n // Run it just before `text`.\n methods.splice(methods.indexOf('text'), 0, 'mention')\n}\n```\n\n### `Parser#blockTokenizers`\n\nAn object mapping tokenizer names to [tokenizer][]s. These\ntokenizers (for example: `fencedCode`, `table`, and `paragraph`) eat\nfrom the start of a value to a line ending.\n\nSee `#blockMethods` below for a list of methods that are included by\ndefault.\n\n### `Parser#blockMethods`\n\nArray of `blockTokenizers` names (`string`) specifying the order in\nwhich they run.\n\n<!--methods-block start-->\n\n* `newline`\n* `indentedCode`\n* `fencedCode`\n* `blockquote`\n* `atxHeading`\n* `thematicBreak`\n* `list`\n* `setextHeading`\n* `html`\n* `footnote`\n* `definition`\n* `table`\n* `paragraph`\n\n<!--methods-block end-->\n\n### `Parser#inlineTokenizers`\n\nAn object mapping tokenizer names to [tokenizer][]s. These tokenizers\n(for example: `url`, `reference`, and `emphasis`) eat from the start\nof a value. To increase performance, they depend on [locator][]s.\n\nSee `#inlineMethods` below for a list of methods that are included by\ndefault.\n\n### `Parser#inlineMethods`\n\nArray of `inlineTokenizers` names (`string`) specifying the order in\nwhich they run.\n\n<!--methods-inline start-->\n\n* `escape`\n* `autoLink`\n* `url`\n* `html`\n* `link`\n* `reference`\n* `strong`\n* `emphasis`\n* `deletion`\n* `code`\n* `break`\n* `text`\n\n<!--methods-inline end-->\n\n### `function tokenizer(eat, value, silent)`\n\n```js\ntokenizeMention.notInLink = true\ntokenizeMention.locator = locateMention\n\nfunction tokenizeMention(eat, value, silent) {\n var match = /^@(\\w+)/.exec(value)\n\n if (match) {\n if (silent) {\n return true\n }\n\n return eat(match[0])({\n type: 'link',\n url: 'https://social-network/' + match[1],\n children: [{type: 'text', value: match[0]}]\n })\n }\n}\n```\n\nThe parser knows two types of tokenizers: block level and inline level.\nBlock level tokenizers are the same as inline level tokenizers, with\nthe exception that the latter must have a [locator][].\n\nTokenizers _test_ whether a document starts with a certain syntactic\nentity. In _silent_ mode, they return whether that test passes.\nIn _normal_ mode, they consume that token, a process which is called\n“eating”. Locators enable tokenizers to function faster by providing\ninformation on where the next entity may occur.\n\n###### Signatures\n\n* `Node? = tokenizer(eat, value)`\n* `boolean? = tokenizer(eat, value, silent)`\n\n###### Parameters\n\n* `eat` ([`Function`][eat]) — Eat, when applicable, an entity\n* `value` (`string`) — Value which may start an entity\n* `silent` (`boolean`, optional) — Whether to detect or consume\n\n###### Properties\n\n* `locator` ([`Function`][locator])\n — Required for inline tokenizers\n* `onlyAtStart` (`boolean`)\n — Whether nodes can only be found at the beginning of the document\n* `notInBlock` (`boolean`)\n — Whether nodes cannot be in blockquotes, lists, or footnote\n definitions\n* `notInList` (`boolean`)\n — Whether nodes cannot be in lists\n* `notInLink` (`boolean`)\n — Whether nodes cannot be in links\n\n###### Returns\n\n* In _silent_ mode, whether a node can be found at the start of `value`\n* In _normal_ mode, a node if it can be found at the start of `value`\n\n### `tokenizer.locator(value, fromIndex)`\n\n```js\nfunction locateMention(value, fromIndex) {\n return value.indexOf('@', fromIndex)\n}\n```\n\nLocators are required for inline tokenization to keep the process\nperformant. Locators enable inline tokenizers to function faster by\nproviding information on the where the next entity occurs. Locators\nmay be wrong, it’s OK if there actually isn’t a node to be found at\nthe index they return, but they must skip any nodes.\n\n###### Parameters\n\n* `value` (`string`) — Value which may contain an entity\n* `fromIndex` (`number`) — Position to start searching at\n\n###### Returns\n\nIndex at which an entity may start, and `-1` otherwise.\n\n### `eat(subvalue)`\n\n```js\nvar add = eat('foo')\n```\n\nEat `subvalue`, which is a string at the start of the\n[tokenize][tokenizer]d `value` (it’s tracked to ensure the correct\nvalue is eaten).\n\n###### Parameters\n\n* `subvalue` (`string`) - Value to eat.\n\n###### Returns\n\n[`add`][add].\n\n### `add(node[, parent])`\n\n```js\nvar add = eat('foo')\n\nadd({type: 'text', value: 'foo'})\n```\n\nAdd [positional information][location] to `node` and add it to `parent`.\n\n###### Parameters\n\n* `node` ([`Node`][node]) - Node to patch position on and insert\n* `parent` ([`Node`][node], optional) - Place to add `node` to in\n the syntax tree. Defaults to the currently processed node\n\n###### Returns\n\nThe given `node`.\n\n### `add.test()`\n\nGet the [positional information][location] which would be patched on\n`node` by `add`.\n\n###### Returns\n\n[`Location`][location].\n\n### `add.reset(node[, parent])`\n\n`add`, but resets the internal location. Useful for example in\nlists, where the same content is first eaten for a list, and later\nfor list items\n\n###### Parameters\n\n* `node` ([`Node`][node]) - Node to patch position on and insert\n* `parent` ([`Node`][node], optional) - Place to add `node` to in\n the syntax tree. Defaults to the currently processed node\n\n###### Returns\n\nThe given `node`.\n\n### Turning off a tokenizer\n\nIn rare situations, you may want to turn off a tokenizer to avoid parsing\nthat syntactic feature. This can be done by replacing the tokenizer from\nyour Parser’s `blockTokenizers` (or `blockMethods`) or `inlineTokenizers`\n(or `inlineMethods`).\n\nThe following example turns off indented code blocks:\n\n```js\nremarkParse.Parser.prototype.blockTokenizers.indentedCode = indentedCode\n\nfunction indentedCode() {\n return true\n}\n```\n\nPreferably, just use [this plugin](https://github.com/zestedesavoir/zmarkdown/tree/master/packages/remark-disable-tokenizers).\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/remarkjs/remark/master.svg\n\n[build-status]: https://travis-ci.org/remarkjs/remark\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark.svg\n\n[coverage-status]: https://codecov.io/github/remarkjs/remark\n\n[dl-badge]: https://img.shields.io/npm/dm/remark-parse.svg\n\n[dl]: https://www.npmjs.com/package/remark-parse\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-parse.svg\n\n[size]: https://bundlephobia.com/result?p=remark-parse\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/remark\n\n[license]: https://github.com/remarkjs/remark/blob/master/license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[unified]: https://github.com/unifiedjs/unified\n\n[data]: https://github.com/unifiedjs/unified#processordatakey-value\n\n[processor]: https://github.com/remarkjs/remark/blob/master/packages/remark\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[escapes]: https://spec.commonmark.org/0.28/#backslash-escapes\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[location]: https://github.com/syntax-tree/unist#location\n\n[parser]: https://github.com/unifiedjs/unified#processorparser\n\n[extend]: #extending-the-parser\n\n[tokenizer]: #function-tokenizereat-value-silent\n\n[locator]: #tokenizerlocatorvalue-fromindex\n\n[eat]: #eatsubvalue\n\n[add]: #addnode-parent\n\n[blocks]: https://github.com/remarkjs/remark/blob/master/packages/remark-parse/lib/block-elements.js\n\n[announcement]: https://medium.com/unifiedjs/collectively-evolving-through-crowdsourcing-22c359ea95cc\n", "readmeFilename": "readme.md", "_id": "remark-parse@6.0.3", "_requested": { "type": "version", "registry": true, "raw": "remark-parse@6.0.3", "name": "remark-parse", "escapedName": "remark-parse", "rawSpec": "6.0.3", "saveSpec": "[Circular]", "fetchSpec": "6.0.3" }, "_spec": "6.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "remark-parse@6.0.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "collapse-white-space": "^1.0.2", "is-alphabetical": "^1.0.0", "is-decimal": "^1.0.0", "is-whitespace-character": "^1.0.0", "is-word-character": "^1.0.0", "markdown-escapes": "^1.0.0", "parse-entities": "^1.1.0", "repeat-string": "^1.5.4", "state-toggle": "^1.0.0", "trim": "0.0.1", "trim-trailing-lines": "^1.0.0", "unherit": "^1.0.4", "unist-util-remove-position": "^1.0.0", "vfile-location": "^2.0.0", "xtend": "^4.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark/node_modules/remark-parse", "error": "[Circular]", "extraneous": false }, "unified": { "name": "unified", "version": "7.1.0", "description": "Pluggable text processing interface", "license": "MIT", "keywords": [ "process", "parse", "transform", "compile", "stringify", "rehype", "retext", "remark" ], "homepage": "https://unified.js.org", "repository": { "type": "git", "url": "git+https://github.com/unifiedjs/unified.git" }, "bugs": { "url": "https://github.com/unifiedjs/unified/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" } ], "types": "types/index.d.ts", "files": [ "types/index.d.ts", "index.js", "lib" ], "dependencies": { "@types/unist": { "name": "@types/unist", "version": "2.0.3", "description": "TypeScript definitions for non-npm package Unist", "license": "MIT", "contributors": [ { "name": "bizen241", "url": "https://github.com/bizen241" }, { "name": "Jun Lu", "url": "https://github.com/lujun2" }, { "name": "Hernan Rajchert", "url": "https://github.com/hrajchert" }, { "name": "Titus Wormer", "url": "https://github.com/wooorm" }, { "name": "Junyoung Choi", "url": "https://github.com/rokt33r" } ], "main": "", "types": "index", "repository": { "type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git" }, "scripts": {}, "dependencies": {}, "typesPublisherContentHash": "555fe20f164ccded02a3f69d8b45c8c9d2ec6fd53844a7c7858a3001c281bc9b", "typeScriptVersion": "3.0", "_resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.3.tgz", "_integrity": "sha512-FvUupuM3rlRsRtCN+fDudtmytGO6iHJuuRKS1Ss0pG5z8oX0diNEw94UEL7hgDbpN94rgaK5R7sWm6RrSkZuAQ==", "_from": "@types/unist@2.0.3", "readme": "# Installation\r\n> `npm install --save @types/unist`\r\n\r\n# Summary\r\nThis package contains type definitions for non-npm package Unist ( https://github.com/syntax-tree/unist ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/unist\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Thu, 14 Feb 2019 18:10:46 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by bizen241 <https://github.com/bizen241>, Jun Lu <https://github.com/lujun2>, Hernan Rajchert <https://github.com/hrajchert>, Titus Wormer <https://github.com/wooorm>, Junyoung Choi <https://github.com/rokt33r>.\r\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues" }, "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/unist@2.0.3", "_requested": { "type": "version", "registry": true, "raw": "@types/unist@2.0.3", "name": "@types/unist", "escapedName": "@types%2funist", "scope": "@types", "rawSpec": "2.0.3", "saveSpec": "[Circular]", "fetchSpec": "2.0.3" }, "_spec": "2.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@types/unist@2.0.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/unist", "error": "[Circular]", "extraneous": false }, "@types/vfile": { "name": "@types/vfile", "version": "3.0.2", "description": "TypeScript definitions for VFile", "license": "MIT", "contributors": [ { "name": "bizen241", "url": "https://github.com/bizen241" }, { "name": "Junyoung Choi", "url": "https://github.com/rokt33r" } ], "main": "", "types": "index", "repository": { "type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git" }, "scripts": {}, "dependencies": { "@types/node": { "name": "@types/node", "version": "11.13.4", "description": "TypeScript definitions for Node.js", "license": "MIT", "contributors": [ { "name": "Microsoft TypeScript", "url": "https://github.com/Microsoft" }, { "name": "DefinitelyTyped", "url": "https://github.com/DefinitelyTyped" }, { "name": "Alberto Schiabel", "url": "https://github.com/jkomyno" }, { "name": "Alexander T.", "url": "https://github.com/a-tarasyuk" }, { "name": "Alvis HT Tang", "url": "https://github.com/alvis" }, { "name": "Andrew Makarov", "url": "https://github.com/r3nya" }, { "name": "Benjamin Toueg", "url": "https://github.com/btoueg" }, { "name": "Bruno Scheufler", "url": "https://github.com/brunoscheufler" }, { "name": "Chigozirim C.", "url": "https://github.com/smac89" }, { "name": "Christian Vaagland Tellnes", "url": "https://github.com/tellnes" }, { "name": "David Junger", "url": "https://github.com/touffy" }, { "name": "Deividas Bakanas", "url": "https://github.com/DeividasBakanas" }, { "name": "Eugene Y. Q. Shen", "url": "https://github.com/eyqs" }, { "name": "Flarna", "url": "https://github.com/Flarna" }, { "name": "Hannes Magnusson", "url": "https://github.com/Hannes-Magnusson-CK" }, { "name": "Hoàng Văn Khải", "url": "https://github.com/KSXGitHub" }, { "name": "Huw", "url": "https://github.com/hoo29" }, { "name": "Kelvin Jin", "url": "https://github.com/kjin" }, { "name": "Klaus Meinhardt", "url": "https://github.com/ajafff" }, { "name": "Lishude", "url": "https://github.com/islishude" }, { "name": "Mariusz Wiktorczyk", "url": "https://github.com/mwiktorczyk" }, { "name": "Matthieu Sieben", "url": "https://github.com/matthieusieben" }, { "name": "Mohsen Azimi", "url": "https://github.com/mohsen1" }, { "name": "Nicolas Even", "url": "https://github.com/n-e" }, { "name": "Nicolas Voigt", "url": "https://github.com/octo-sniffle" }, { "name": "Parambir Singh", "url": "https://github.com/parambirs" }, { "name": "Sebastian Silbermann", "url": "https://github.com/eps1lon" }, { "name": "Simon Schick", "url": "https://github.com/SimonSchick" }, { "name": "Thomas den Hollander", "url": "https://github.com/ThomasdenH" }, { "name": "Wilco Bakker", "url": "https://github.com/WilcoBakker" }, { "name": "wwwy3y3", "url": "https://github.com/wwwy3y3" }, { "name": "Zane Hannan AU", "url": "https://github.com/ZaneHannanAU" }, { "name": "Jeremie Rodriguez", "url": "https://github.com/jeremiergz" }, { "name": "Samuel Ainsworth", "url": "https://github.com/samuela" }, { "name": "Kyle Uehlein", "url": "https://github.com/kuehlein" }, { "name": "Jordi Oliveras Rovira", "url": "https://github.com/j-oliveras" }, { "name": "Thanik Bhongbhibhat", "url": "https://github.com/bhongy" } ], "main": "", "types": "index", "typesVersions": { ">=3.2.0-0": { "*": [ "ts3.2/*" ] } }, "repository": { "type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/node" }, "scripts": {}, "dependencies": {}, "typesPublisherContentHash": "65764fe7ac3d472c68db335bc5a4ededefe76e9f1c2d7176dca805fba7084a52", "typeScriptVersion": "2.0", "_resolved": "https://registry.npmjs.org/@types/node/-/node-11.13.4.tgz", "_integrity": "sha512-+rabAZZ3Yn7tF/XPGHupKIL5EcAbrLxnTr/hgQICxbeuAfWtT0UZSfULE+ndusckBItcv4o6ZeOJplQikVcLvQ==", "_from": "@types/node@11.13.4", "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js ( http://nodejs.org/ ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Wed, 10 Apr 2019 17:39:58 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: Buffer, NodeJS, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, queueMicrotask, require, setImmediate, setInterval, setTimeout\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript <https://github.com/Microsoft>, DefinitelyTyped <https://github.com/DefinitelyTyped>, Alberto Schiabel <https://github.com/jkomyno>, Alexander T. <https://github.com/a-tarasyuk>, Alvis HT Tang <https://github.com/alvis>, Andrew Makarov <https://github.com/r3nya>, Benjamin Toueg <https://github.com/btoueg>, Bruno Scheufler <https://github.com/brunoscheufler>, Chigozirim C. <https://github.com/smac89>, Christian Vaagland Tellnes <https://github.com/tellnes>, David Junger <https://github.com/touffy>, Deividas Bakanas <https://github.com/DeividasBakanas>, Eugene Y. Q. Shen <https://github.com/eyqs>, Flarna <https://github.com/Flarna>, Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>, Hoàng Văn Khải <https://github.com/KSXGitHub>, Huw <https://github.com/hoo29>, Kelvin Jin <https://github.com/kjin>, Klaus Meinhardt <https://github.com/ajafff>, Lishude <https://github.com/islishude>, Mariusz Wiktorczyk <https://github.com/mwiktorczyk>, Matthieu Sieben <https://github.com/matthieusieben>, Mohsen Azimi <https://github.com/mohsen1>, Nicolas Even <https://github.com/n-e>, Nicolas Voigt <https://github.com/octo-sniffle>, Parambir Singh <https://github.com/parambirs>, Sebastian Silbermann <https://github.com/eps1lon>, Simon Schick <https://github.com/SimonSchick>, Thomas den Hollander <https://github.com/ThomasdenH>, Wilco Bakker <https://github.com/WilcoBakker>, wwwy3y3 <https://github.com/wwwy3y3>, Zane Hannan AU <https://github.com/ZaneHannanAU>, Jeremie Rodriguez <https://github.com/jeremiergz>, Samuel Ainsworth <https://github.com/samuela>, Kyle Uehlein <https://github.com/kuehlein>, Jordi Oliveras Rovira <https://github.com/j-oliveras>, Thanik Bhongbhibhat <https://github.com/bhongy>.\r\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues" }, "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/node@11.13.4", "_requested": { "type": "version", "registry": true, "raw": "@types/node@11.13.4", "name": "@types/node", "escapedName": "@types%2fnode", "scope": "@types", "rawSpec": "11.13.4", "saveSpec": "[Circular]", "fetchSpec": "11.13.4" }, "_spec": "11.13.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@types/node@11.13.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/node", "error": "[Circular]", "extraneous": false, "_deduped": "@types/node" }, "@types/unist": { "name": "@types/unist", "version": "2.0.3", "description": "TypeScript definitions for non-npm package Unist", "license": "MIT", "contributors": "[Circular]", "main": "", "types": "index", "repository": "[Circular]", "scripts": "[Circular]", "dependencies": {}, "typesPublisherContentHash": "555fe20f164ccded02a3f69d8b45c8c9d2ec6fd53844a7c7858a3001c281bc9b", "typeScriptVersion": "3.0", "_resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.3.tgz", "_integrity": "sha512-FvUupuM3rlRsRtCN+fDudtmytGO6iHJuuRKS1Ss0pG5z8oX0diNEw94UEL7hgDbpN94rgaK5R7sWm6RrSkZuAQ==", "_from": "@types/unist@2.0.3", "readme": "# Installation\r\n> `npm install --save @types/unist`\r\n\r\n# Summary\r\nThis package contains type definitions for non-npm package Unist ( https://github.com/syntax-tree/unist ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/unist\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Thu, 14 Feb 2019 18:10:46 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by bizen241 <https://github.com/bizen241>, Jun Lu <https://github.com/lujun2>, Hernan Rajchert <https://github.com/hrajchert>, Titus Wormer <https://github.com/wooorm>, Junyoung Choi <https://github.com/rokt33r>.\r\n", "readmeFilename": "README.md", "bugs": "[Circular]", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/unist@2.0.3", "_requested": { "type": "version", "registry": true, "raw": "@types/unist@2.0.3", "name": "@types/unist", "escapedName": "@types%2funist", "scope": "@types", "rawSpec": "2.0.3", "saveSpec": "[Circular]", "fetchSpec": "2.0.3" }, "_spec": "2.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/unist", "error": "[Circular]", "extraneous": false, "_deduped": "@types/unist" }, "@types/vfile-message": { "name": "@types/vfile-message", "version": "1.0.1", "description": "TypeScript definitions for vfile-message", "license": "MIT", "contributors": [ { "name": "Junyoung Choi", "url": "https://github.com/rokt33r" } ], "main": "", "types": "index", "repository": { "type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git" }, "scripts": {}, "dependencies": { "@types/node": { "name": "@types/node", "version": "11.13.4", "description": "TypeScript definitions for Node.js", "license": "MIT", "contributors": "[Circular]", "main": "", "types": "index", "typesVersions": "[Circular]", "repository": "[Circular]", "scripts": "[Circular]", "dependencies": {}, "typesPublisherContentHash": "65764fe7ac3d472c68db335bc5a4ededefe76e9f1c2d7176dca805fba7084a52", "typeScriptVersion": "2.0", "_resolved": "https://registry.npmjs.org/@types/node/-/node-11.13.4.tgz", "_integrity": "sha512-+rabAZZ3Yn7tF/XPGHupKIL5EcAbrLxnTr/hgQICxbeuAfWtT0UZSfULE+ndusckBItcv4o6ZeOJplQikVcLvQ==", "_from": "@types/node@11.13.4", "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js ( http://nodejs.org/ ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Wed, 10 Apr 2019 17:39:58 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: Buffer, NodeJS, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, queueMicrotask, require, setImmediate, setInterval, setTimeout\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript <https://github.com/Microsoft>, DefinitelyTyped <https://github.com/DefinitelyTyped>, Alberto Schiabel <https://github.com/jkomyno>, Alexander T. <https://github.com/a-tarasyuk>, Alvis HT Tang <https://github.com/alvis>, Andrew Makarov <https://github.com/r3nya>, Benjamin Toueg <https://github.com/btoueg>, Bruno Scheufler <https://github.com/brunoscheufler>, Chigozirim C. <https://github.com/smac89>, Christian Vaagland Tellnes <https://github.com/tellnes>, David Junger <https://github.com/touffy>, Deividas Bakanas <https://github.com/DeividasBakanas>, Eugene Y. Q. Shen <https://github.com/eyqs>, Flarna <https://github.com/Flarna>, Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>, Hoàng Văn Khải <https://github.com/KSXGitHub>, Huw <https://github.com/hoo29>, Kelvin Jin <https://github.com/kjin>, Klaus Meinhardt <https://github.com/ajafff>, Lishude <https://github.com/islishude>, Mariusz Wiktorczyk <https://github.com/mwiktorczyk>, Matthieu Sieben <https://github.com/matthieusieben>, Mohsen Azimi <https://github.com/mohsen1>, Nicolas Even <https://github.com/n-e>, Nicolas Voigt <https://github.com/octo-sniffle>, Parambir Singh <https://github.com/parambirs>, Sebastian Silbermann <https://github.com/eps1lon>, Simon Schick <https://github.com/SimonSchick>, Thomas den Hollander <https://github.com/ThomasdenH>, Wilco Bakker <https://github.com/WilcoBakker>, wwwy3y3 <https://github.com/wwwy3y3>, Zane Hannan AU <https://github.com/ZaneHannanAU>, Jeremie Rodriguez <https://github.com/jeremiergz>, Samuel Ainsworth <https://github.com/samuela>, Kyle Uehlein <https://github.com/kuehlein>, Jordi Oliveras Rovira <https://github.com/j-oliveras>, Thanik Bhongbhibhat <https://github.com/bhongy>.\r\n", "readmeFilename": "README.md", "bugs": "[Circular]", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/node@11.13.4", "_requested": { "type": "version", "registry": true, "raw": "@types/node@11.13.4", "name": "@types/node", "escapedName": "@types%2fnode", "scope": "@types", "rawSpec": "11.13.4", "saveSpec": "[Circular]", "fetchSpec": "11.13.4" }, "_spec": "11.13.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/node", "error": "[Circular]", "extraneous": false, "_deduped": "@types/node" }, "@types/unist": { "name": "@types/unist", "version": "2.0.3", "description": "TypeScript definitions for non-npm package Unist", "license": "MIT", "contributors": "[Circular]", "main": "", "types": "index", "repository": "[Circular]", "scripts": "[Circular]", "dependencies": {}, "typesPublisherContentHash": "555fe20f164ccded02a3f69d8b45c8c9d2ec6fd53844a7c7858a3001c281bc9b", "typeScriptVersion": "3.0", "_resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.3.tgz", "_integrity": "sha512-FvUupuM3rlRsRtCN+fDudtmytGO6iHJuuRKS1Ss0pG5z8oX0diNEw94UEL7hgDbpN94rgaK5R7sWm6RrSkZuAQ==", "_from": "@types/unist@2.0.3", "readme": "# Installation\r\n> `npm install --save @types/unist`\r\n\r\n# Summary\r\nThis package contains type definitions for non-npm package Unist ( https://github.com/syntax-tree/unist ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/unist\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Thu, 14 Feb 2019 18:10:46 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by bizen241 <https://github.com/bizen241>, Jun Lu <https://github.com/lujun2>, Hernan Rajchert <https://github.com/hrajchert>, Titus Wormer <https://github.com/wooorm>, Junyoung Choi <https://github.com/rokt33r>.\r\n", "readmeFilename": "README.md", "bugs": "[Circular]", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/unist@2.0.3", "_requested": { "type": "version", "registry": true, "raw": "@types/unist@2.0.3", "name": "@types/unist", "escapedName": "@types%2funist", "scope": "@types", "rawSpec": "2.0.3", "saveSpec": "[Circular]", "fetchSpec": "2.0.3" }, "_spec": "2.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/unist", "error": "[Circular]", "extraneous": false, "_deduped": "@types/unist" } }, "typesPublisherContentHash": "a4b1783c8099ea97640e04b739c1c9979c18251898ae0f5a808e314ffb433c50", "typeScriptVersion": "3.0", "_resolved": "https://registry.npmjs.org/@types/vfile-message/-/vfile-message-1.0.1.tgz", "_integrity": "sha512-mlGER3Aqmq7bqR1tTTIVHq8KSAFFRyGbrxuM8C/H82g6k7r2fS+IMEkIu3D7JHzG10NvPdR8DNx0jr0pwpp4dA==", "_from": "@types/vfile-message@1.0.1", "readme": "# Installation\r\n> `npm install --save @types/vfile-message`\r\n\r\n# Summary\r\nThis package contains type definitions for vfile-message (https://github.com/vfile/vfile-message#readme).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/vfile-message\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Wed, 05 Dec 2018 19:00:19 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: @types/unist, @types/node\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by Junyoung Choi <https://github.com/rokt33r>.\r\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues" }, "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/vfile-message@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "@types/vfile-message@1.0.1", "name": "@types/vfile-message", "escapedName": "@types%2fvfile-message", "scope": "@types", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@types/vfile-message@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "@types/node": "*", "@types/unist": "*" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/vfile-message", "error": "[Circular]", "extraneous": false } }, "typesPublisherContentHash": "bb48d507c93dd3ef78cc32948c63a2e407e0706f185a4c8da2fb862ab259d3b9", "typeScriptVersion": "3.0", "_resolved": "https://registry.npmjs.org/@types/vfile/-/vfile-3.0.2.tgz", "_integrity": "sha512-b3nLFGaGkJ9rzOcuXRfHkZMdjsawuDD0ENL9fzTophtBg8FJHSGbH7daXkEpcwy3v7Xol3pAvsmlYyFhR4pqJw==", "_from": "@types/vfile@3.0.2", "readme": "# Installation\r\n> `npm install --save @types/vfile`\r\n\r\n# Summary\r\nThis package contains type definitions for VFile (https://github.com/vfile/vfile).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/vfile\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Wed, 05 Dec 2018 19:00:18 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: @types/unist, @types/vfile-message, @types/node\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by bizen241 <https://github.com/bizen241>, Junyoung Choi <https://github.com/rokt33r>.\r\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues" }, "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/vfile@3.0.2", "_requested": { "type": "version", "registry": true, "raw": "@types/vfile@3.0.2", "name": "@types/vfile", "escapedName": "@types%2fvfile", "scope": "@types", "rawSpec": "3.0.2", "saveSpec": "[Circular]", "fetchSpec": "3.0.2" }, "_spec": "3.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@types/vfile@3.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "@types/node": "*", "@types/unist": "*", "@types/vfile-message": "*" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/vfile", "error": "[Circular]", "extraneous": false }, "bail": { "name": "bail", "version": "1.0.3", "description": "Throw a given error", "license": "MIT", "keywords": [ "fail", "bail", "throw", "callback", "error" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/bail.git" }, "bugs": { "url": "https://github.com/wooorm/bail/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s bail > bail.js", "build-mangle": "esmangle bail.js > bail.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "bail.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "_resolved": "https://registry.npmjs.org/bail/-/bail-1.0.3.tgz", "_integrity": "sha512-1X8CnjFVQ+a+KW36uBNMTU5s8+v5FzeqrP7hTG5aTb4aPreSbZJlhwPon9VKMuEVgV++JM+SQrALY3kr7eswdg==", "_from": "bail@1.0.3", "readme": "# bail [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n:warning: Throw a given error.\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install bail\n```\n\n## Usage\n\n```js\nvar bail = require('bail')\n\nbail()\n\nbail(new Error('failure'))\n// Error: failure\n// at repl:1:6\n// at REPLServer.defaultEval (repl.js:154:27)\n// ...\n```\n\n## API\n\n### `bail([err])`\n\nThrow a given error.\n\n###### Parameters\n\n* `err` (`Error?`) — Optional error.\n\n###### Throws\n\n* `Error` — Given error, if any.\n\n## Related\n\n* [`noop`][noop]\n* [`noop2`][noop2]\n* [`noop3`][noop3]\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/bail.svg\n\n[travis]: https://travis-ci.org/wooorm/bail\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/bail.svg\n\n[codecov]: https://codecov.io/github/wooorm/bail\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[noop]: https://www.npmjs.com/package/noop\n\n[noop2]: https://www.npmjs.com/package/noop2\n\n[noop3]: https://www.npmjs.com/package/noop3\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/bail#readme", "_id": "bail@1.0.3", "_requested": { "type": "version", "registry": true, "raw": "bail@1.0.3", "name": "bail", "escapedName": "bail", "rawSpec": "1.0.3", "saveSpec": "[Circular]", "fetchSpec": "1.0.3" }, "_spec": "1.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "bail@1.0.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/bail", "error": "[Circular]", "extraneous": false, "_deduped": "bail" }, "extend": { "name": "extend", "author": { "name": "Stefan Thomas", "email": "justmoon@members.fsf.org", "url": "http://www.justmoon.net" }, "version": "3.0.2", "description": "Port of jQuery.extend for node.js and the browser", "main": "index", "scripts": { "pretest": "npm run lint", "test": "npm run tests-only", "posttest": "npm run coverage-quiet", "tests-only": "node test", "coverage": "covert test/index.js", "coverage-quiet": "covert test/index.js --quiet", "lint": "npm run jscs && npm run eslint", "jscs": "jscs *.js */*.js", "eslint": "eslint *.js */*.js" }, "contributors": [ { "name": "Jordan Harband", "url": "https://github.com/ljharb" } ], "keywords": [ "extend", "clone", "merge" ], "repository": { "type": "git", "url": "git+https://github.com/justmoon/node-extend.git" }, "dependencies": {}, "devDependencies": { "@ljharb/eslint-config": "^12.2.1", "covert": "^1.1.0", "eslint": "^4.19.1", "jscs": "^3.0.7", "tape": "^4.9.1" }, "license": "MIT", "_resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz", "_integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==", "_from": "extend@3.0.2", "readme": "[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n\n# extend() for Node.js <sup>[![Version Badge][npm-version-png]][npm-url]</sup>\n\n`node-extend` is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.\n\nNotes:\n\n* Since Node.js >= 4,\n [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n now offers the same functionality natively (but without the \"deep copy\" option).\n See [ECMAScript 2015 (ES6) in Node.js](https://nodejs.org/en/docs/es6).\n* Some native implementations of `Object.assign` in both Node.js and many\n browsers (since NPM modules are for the browser too) may not be fully\n spec-compliant.\n Check [`object.assign`](https://www.npmjs.com/package/object.assign) module for\n a compliant candidate.\n\n## Installation\n\nThis package is available on [npm][npm-url] as: `extend`\n\n``` sh\nnpm install extend\n```\n\n## Usage\n\n**Syntax:** extend **(** [`deep`], `target`, `object1`, [`objectN`] **)**\n\n*Extend one object with one or more others, returning the modified object.*\n\n**Example:**\n\n``` js\nvar extend = require('extend');\nextend(targetObject, object1, object2);\n```\n\nKeep in mind that the target object will be modified, and will be returned from extend().\n\nIf a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).\nUndefined properties are not copied. However, properties inherited from the object's prototype will be copied over.\nWarning: passing `false` as the first argument is not supported.\n\n### Arguments\n\n* `deep` *Boolean* (optional)\nIf set, the merge becomes recursive (i.e. deep copy).\n* `target`\t*Object*\nThe object to extend.\n* `object1`\t*Object*\nThe object that will be merged into the first.\n* `objectN` *Object* (Optional)\nMore objects to merge into the first.\n\n## License\n\n`node-extend` is licensed under the [MIT License][mit-license-url].\n\n## Acknowledgements\n\nAll credit to the jQuery authors for perfecting this amazing utility.\n\nPorted to Node.js by [Stefan Thomas][github-justmoon] with contributions by [Jonathan Buchanan][github-insin] and [Jordan Harband][github-ljharb].\n\n[travis-svg]: https://travis-ci.org/justmoon/node-extend.svg\n[travis-url]: https://travis-ci.org/justmoon/node-extend\n[npm-url]: https://npmjs.org/package/extend\n[mit-license-url]: http://opensource.org/licenses/MIT\n[github-justmoon]: https://github.com/justmoon\n[github-insin]: https://github.com/insin\n[github-ljharb]: https://github.com/ljharb\n[npm-version-png]: http://versionbadg.es/justmoon/node-extend.svg\n[deps-svg]: https://david-dm.org/justmoon/node-extend.svg\n[deps-url]: https://david-dm.org/justmoon/node-extend\n[dev-deps-svg]: https://david-dm.org/justmoon/node-extend/dev-status.svg\n[dev-deps-url]: https://david-dm.org/justmoon/node-extend#info=devDependencies\n\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/justmoon/node-extend/issues" }, "homepage": "https://github.com/justmoon/node-extend#readme", "_id": "extend@3.0.2", "_requested": { "type": "version", "registry": true, "raw": "extend@3.0.2", "name": "extend", "escapedName": "extend", "rawSpec": "3.0.2", "saveSpec": "[Circular]", "fetchSpec": "3.0.2" }, "_spec": "3.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": [ [ "extend@3.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/extend", "error": "[Circular]", "extraneous": false, "_deduped": "extend" }, "is-plain-obj": { "name": "is-plain-obj", "version": "1.1.0", "description": "Check if a value is a plain object", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/is-plain-obj.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "node test.js" }, "files": [ "index.js" ], "keywords": [ "obj", "object", "is", "check", "test", "type", "plain", "vanilla", "pure", "simple" ], "devDependencies": { "ava": "0.0.4" }, "_resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz", "_integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4=", "_from": "is-plain-obj@1.1.0", "readme": "# is-plain-obj [![Build Status](https://travis-ci.org/sindresorhus/is-plain-obj.svg?branch=master)](https://travis-ci.org/sindresorhus/is-plain-obj)\n\n> Check if a value is a plain object\n\nAn object is plain if it's created by either `{}`, `new Object()` or `Object.create(null)`.\n\n\n## Install\n\n```\n$ npm install --save is-plain-obj\n```\n\n\n## Usage\n\n```js\nvar isPlainObj = require('is-plain-obj');\n\nisPlainObj({foo: 'bar'});\n//=> true\n\nisPlainObj([1, 2, 3]);\n//=> false\n```\n\n\n## Related\n\n- [is-obj](https://github.com/sindresorhus/is-obj) - Check if a value is an object\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/is-plain-obj/issues" }, "homepage": "https://github.com/sindresorhus/is-plain-obj#readme", "_id": "is-plain-obj@1.1.0", "_requested": { "type": "version", "registry": true, "raw": "is-plain-obj@1.1.0", "name": "is-plain-obj", "escapedName": "is-plain-obj", "rawSpec": "1.1.0", "saveSpec": "[Circular]", "fetchSpec": "1.1.0" }, "_spec": "1.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-plain-obj@1.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-plain-obj", "error": "[Circular]", "extraneous": false, "_deduped": "is-plain-obj" }, "vfile": { "name": "vfile", "version": "3.0.1", "description": "Virtual file format for text processing", "license": "MIT", "keywords": [ "virtual", "file", "text", "processing", "message", "warning", "error", "remark", "retext" ], "repository": { "type": "git", "url": "git+https://github.com/vfile/vfile.git" }, "bugs": { "url": "https://github.com/vfile/vfile/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, { "name": "Brendan Abbott", "email": "brendan.abbott@temando.com" }, { "name": "Denys Dovhan", "email": "email@denysdovhan.com" }, { "name": "Kyle Mathews", "email": "mathews.kyle@gmail.com" }, { "name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com" }, { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com" } ], "files": [ "core.js", "index.js" ], "dependencies": { "is-buffer": { "name": "is-buffer", "description": "Determine if an object is a Buffer", "version": "2.0.3", "author": { "name": "Feross Aboukhadijeh", "email": "feross@feross.org", "url": "https://feross.org" }, "bugs": { "url": "https://github.com/feross/is-buffer/issues" }, "dependencies": {}, "devDependencies": { "airtap": "0.0.7", "standard": "*", "tape": "^4.0.0" }, "engines": { "node": ">=4" }, "keywords": [ "arraybuffer", "browser", "browser buffer", "browserify", "buffer", "buffers", "core buffer", "dataview", "float32array", "float64array", "int16array", "int32array", "type", "typed array", "uint32array" ], "license": "MIT", "main": "index.js", "repository": { "type": "git", "url": "git://github.com/feross/is-buffer.git" }, "scripts": { "test": "standard && npm run test-node && npm run test-browser", "test-browser": "airtap -- test/*.js", "test-browser-local": "airtap --local -- test/*.js", "test-node": "tape test/*.js" }, "testling": { "files": "test/*.js" }, "_resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.3.tgz", "_integrity": "sha512-U15Q7MXTuZlrbymiz95PJpZxu8IlipAp4dtS3wOdgPXx3mqBnslrWU14kxfHB+Py/+2PVKSr37dMAgM2A4uArw==", "_from": "is-buffer@2.0.3", "readme": "# is-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/is-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/is-buffer\n[npm-image]: https://img.shields.io/npm/v/is-buffer.svg\n[npm-url]: https://npmjs.org/package/is-buffer\n[downloads-image]: https://img.shields.io/npm/dm/is-buffer.svg\n[downloads-url]: https://npmjs.org/package/is-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Determine if an object is a [`Buffer`](http://nodejs.org/api/buffer.html) (including the [browserify Buffer](https://github.com/feross/buffer))\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[saucelabs-image]: https://saucelabs.com/browser-matrix/is-buffer.svg\n[saucelabs-url]: https://saucelabs.com/u/is-buffer\n\n## Why not use `Buffer.isBuffer`?\n\nThis module lets you check if an object is a `Buffer` without using `Buffer.isBuffer` (which includes the whole [buffer](https://github.com/feross/buffer) module in [browserify](http://browserify.org/)).\n\nIt's future-proof and works in node too!\n\n## install\n\n```bash\nnpm install is-buffer\n```\n\n## usage\n\n```js\nvar isBuffer = require('is-buffer')\n\nisBuffer(new Buffer(4)) // true\n\nisBuffer(undefined) // false\nisBuffer(null) // false\nisBuffer('') // false\nisBuffer(true) // false\nisBuffer(false) // false\nisBuffer(0) // false\nisBuffer(1) // false\nisBuffer(1.0) // false\nisBuffer('string') // false\nisBuffer({}) // false\nisBuffer(function foo () {}) // false\n```\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org).\n", "readmeFilename": "README.md", "homepage": "https://github.com/feross/is-buffer#readme", "_id": "is-buffer@2.0.3", "_requested": { "type": "version", "registry": true, "raw": "is-buffer@2.0.3", "name": "is-buffer", "escapedName": "is-buffer", "rawSpec": "2.0.3", "saveSpec": "[Circular]", "fetchSpec": "2.0.3" }, "_spec": "2.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-buffer@2.0.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark/node_modules/is-buffer", "error": "[Circular]", "extraneous": false }, "replace-ext": { "name": "replace-ext", "version": "1.0.0", "description": "Replaces a file extension with another one", "author": { "name": "Gulp Team", "email": "team@gulpjs.com", "url": "http://gulpjs.com/" }, "contributors": [ { "name": "Eric Schoffstall", "email": "yo@contra.io" }, { "name": "Blaine Bublitz", "email": "blaine.bublitz@gmail.com" } ], "repository": { "type": "git", "url": "git+https://github.com/gulpjs/replace-ext.git" }, "license": "MIT", "engines": { "node": ">= 0.10" }, "main": "index.js", "files": [ "LICENSE", "index.js" ], "scripts": { "lint": "eslint . && jscs index.js test/", "pretest": "npm run lint", "test": "mocha --async-only", "cover": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly", "coveralls": "npm run cover && istanbul-coveralls" }, "dependencies": {}, "devDependencies": { "eslint": "^1.10.3", "eslint-config-gulp": "^2.0.0", "expect": "^1.16.0", "istanbul": "^0.4.3", "istanbul-coveralls": "^1.0.3", "jscs": "^2.3.5", "jscs-preset-gulp": "^1.0.0", "mocha": "^2.4.5" }, "keywords": [ "gulp", "extensions", "filepath", "basename" ], "_resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.0.tgz", "_integrity": "sha1-3mMSg3P8v3w8z6TeWkgMRaZ5WOs=", "_from": "replace-ext@1.0.0", "readme": "<p align=\"center\">\n <a href=\"http://gulpjs.com\">\n <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n </a>\n</p>\n\n# replace-ext\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nReplaces a file extension with another one.\n\n## Usage\n\n```js\nvar replaceExt = require('replace-ext');\n\nvar path = '/some/dir/file.js';\nvar newPath = replaceExt(path, '.coffee');\n\nconsole.log(newPath); // /some/dir/file.coffee\n```\n\n## API\n\n### `replaceExt(path, extension)`\n\nReplaces the extension from `path` with `extension` and returns the updated path string.\n\nDoes not replace the extension if `path` is not a string or is empty.\n\n## License\n\nMIT\n\n[downloads-image]: http://img.shields.io/npm/dm/replace-ext.svg\n[npm-url]: https://www.npmjs.com/package/replace-ext\n[npm-image]: http://img.shields.io/npm/v/replace-ext.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/replace-ext\n[travis-image]: http://img.shields.io/travis/gulpjs/replace-ext.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/replace-ext\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/replace-ext.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/replace-ext\n[coveralls-image]: http://img.shields.io/coveralls/gulpjs/replace-ext/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/gulpjs/replace-ext/issues" }, "homepage": "https://github.com/gulpjs/replace-ext#readme", "_id": "replace-ext@1.0.0", "_requested": { "type": "version", "registry": true, "raw": "replace-ext@1.0.0", "name": "replace-ext", "escapedName": "replace-ext", "rawSpec": "1.0.0", "saveSpec": "[Circular]", "fetchSpec": "1.0.0" }, "_spec": "1.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "replace-ext@1.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/replace-ext", "error": "[Circular]", "extraneous": false, "_deduped": "replace-ext" }, "unist-util-stringify-position": { "name": "unist-util-stringify-position", "version": "1.1.2", "description": "Stringify a Unist node, position, or point", "license": "MIT", "keywords": [ "unist", "position", "location", "point", "node", "stringify", "tostring", "util", "utility" ], "repository": { "type": "git", "url": "git+https://github.com/syntax-tree/unist-util-stringify-position.git" }, "bugs": { "url": "https://github.com/syntax-tree/unist-util-stringify-position/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.0", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.5.1", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --no-builtins -s unistUtilStringifyPosition > unist-util-stringify-position.js", "build-mangle": "esmangle unist-util-stringify-position.js > unist-util-stringify-position.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "guard-for-in": "off", "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "unist-util-stringify-position.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-1.1.2.tgz", "_integrity": "sha512-pNCVrk64LZv1kElr0N1wPiHEUoXNVFERp+mlTg/s9R5Lwg87f9bM/3sQB99w+N9D/qnM9ar3+AKDBwo/gm/iQQ==", "_from": "unist-util-stringify-position@1.1.2", "readme": "# unist-util-stringify-position [![Build Status][build-badge]][build-page] [![Coverage Status][coverage-badge]][coverage-page]\n\nStringify a [**Unist**][unist] [`Position`][position] or [`Point`][point].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unist-util-stringify-position\n```\n\n## Usage\n\n```javascript\nvar stringify = require('unist-util-stringify-position')\n\n// Point\nstringify({line: 2, column: 3}) // => '2:3'\n\n// Position\nstringify({\n start: {line: 2},\n end: {line: 3}\n}) // => '2:1-3:1'\n\n// Node\nstringify({\n type: 'text',\n value: '!',\n position: {\n start: {line: 5, column: 11},\n end: {line: 5, column: 12}\n }\n}) // => '5:11-5:12'\n```\n\n## API\n\n### `stringifyPosition(node|position|point)`\n\nStringify one point, a position (start and end points), or\na node’s position.\n\n###### Parameters\n\n* `node` ([`Node`][node])\n — Node whose `'position'` property to stringify\n* `position` ([`Position`][position])\n — Position whose `'start'` and `'end'` points to stringify\n* `point` ([`Point`][point])\n — Point whose `'line'` and `'column'` to stringify\n\n###### Returns\n\n`string?` — A range `ls:cs-le:ce` (when given `node` or\n`position`) or a point `l:c` (when given `point`), where `l` stands\nfor line, `c` for column, `s` for `start`, and `e` for\nend. `null` is returned if the given value is neither `node`,\n`position`, nor `point`.\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/unist`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definition -->\n\n[build-badge]: https://img.shields.io/travis/syntax-tree/unist-util-stringify-position.svg\n\n[build-page]: https://travis-ci.org/syntax-tree/unist-util-stringify-position\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-stringify-position.svg\n\n[coverage-page]: https://codecov.io/github/syntax-tree/unist-util-stringify-position?branch=master\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[position]: https://github.com/syntax-tree/unist#position\n\n[point]: https://github.com/syntax-tree/unist#point\n\n[contributing]: https://github.com/syntax-tree/unist/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/unist/blob/master/code-of-conduct.md\n", "readmeFilename": "readme.md", "homepage": "https://github.com/syntax-tree/unist-util-stringify-position#readme", "_id": "unist-util-stringify-position@1.1.2", "_requested": { "type": "version", "registry": true, "raw": "unist-util-stringify-position@1.1.2", "name": "unist-util-stringify-position", "escapedName": "unist-util-stringify-position", "rawSpec": "1.1.2", "saveSpec": "[Circular]", "fetchSpec": "1.1.2" }, "_spec": "1.1.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "unist-util-stringify-position@1.1.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/unist-util-stringify-position", "error": "[Circular]", "extraneous": false, "_deduped": "unist-util-stringify-position" }, "vfile-message": { "name": "vfile-message", "version": "1.1.1", "description": "Create a virtual message", "license": "MIT", "keywords": [ "vfile", "virtual", "message" ], "repository": { "type": "git", "url": "git+https://github.com/vfile/vfile-message.git" }, "bugs": { "url": "https://github.com/vfile/vfile-message/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "https://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "nyc": "^13.0.0", "prettier": "^1.12.1", "remark-cli": "^6.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "tinyify": "^2.4.3", "xo": "^0.23.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify . -s vfileMessage > vfile-message.js", "build-mangle": "browserify . -s vfileMessage -p tinyify > vfile-message.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off", "object-shorthand": "off" }, "ignores": [ "vfile-message.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-1.1.1.tgz", "_integrity": "sha512-1WmsopSGhWt5laNir+633LszXvZ+Z/lxveBf6yhGsqnQIhlhzooZae7zV6YVM1Sdkw68dtAW3ow0pOdPANugvA==", "_from": "vfile-message@1.1.1", "readme": "# vfile-message\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Chat][chat-badge]][chat]\n\nCreate [vfile][] messages.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install vfile-message\n```\n\n## Usage\n\n```js\nvar VMessage = require('vfile-message')\n\nvar message = new VMessage(\n '`braavo` is misspelt; did you mean `bravo`?',\n {line: 1, column: 8},\n 'spell:typo'\n)\n\nconsole.log(message)\n```\n\nYields:\n\n```js\n{ [1:8: `braavo` is misspelt; did you mean `bravo`?]\n reason: '`braavo` is misspelt; did you mean `bravo`?',\n fatal: null,\n line: 1,\n column: 8,\n location:\n { start: { line: 1, column: 8 },\n end: { line: null, column: null } },\n source: 'spell',\n ruleId: 'typo' }\n```\n\n## API\n\n### `VMessage(reason[, position][, origin])`\n\nConstructor of a message for `reason` at `position` from `origin`. When\nan error is passed in as `reason`, copies the stack.\n\n##### Parameters\n\n###### `reason`\n\nReason for message (`string` or `Error`). Uses the stack and message of the\nerror if given.\n\n###### `position`\n\nPlace at which the message occurred in a file ([`Node`][node],\n[`Position`][position], or [`Point`][point], optional).\n\n###### `origin`\n\nPlace in code the message originates from (`string`, optional).\n\nCan either be the [`ruleId`][ruleid] (`'rule'`), or a string with both a\n[`source`][source] and a [`ruleId`][ruleid] delimited with a colon\n(`'source:rule'`).\n\n##### Extends\n\n[`Error`][error].\n\n##### Returns\n\nAn instance of itself.\n\n##### Properties\n\n###### `reason`\n\nReason for message (`string`).\n\n###### `fatal`\n\nIf `true`, marks associated file as no longer processable (`boolean?`). If\n`false`, necessitates a (potential) change. The value can also be `null` or\n`undefined`.\n\n###### `line`\n\nStarting line of error (`number?`).\n\n###### `column`\n\nStarting column of error (`number?`).\n\n###### `location`\n\nFull range information, when available ([`Position`][position]). Has `start`\nand `end` properties, both set to an object with `line` and `column`, set to\n`number?`.\n\n###### `source`\n\nNamespace of warning (`string?`).\n\n###### `ruleId`\n\nCategory of message (`string?`).\n\n###### `stack`\n\nStack of message (`string?`).\n\n##### Custom properties\n\nIt’s OK to store custom data directly on the `VMessage`, some of those are\nhandled by [utilities][util].\n\n###### `file`\n\nYou may add a `file` property with a path of a file (used throughout the\n[**VFile**][vfile] ecosystem).\n\n###### `note`\n\nYou may add a `note` property with a long form description of the message\n(supported by [`vfile-reporter`][reporter]).\n\n###### `url`\n\nYou may add a `url` property with a link to documentation for the message.\n\n## Contribute\n\nSee [`contributing.md` in `vfile/vfile`][contributing] for ways to get started.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/vfile/vfile-message.svg\n\n[build]: https://travis-ci.org/vfile/vfile-message\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/vfile/vfile-message.svg\n\n[coverage]: https://codecov.io/github/vfile/vfile-message\n\n[downloads-badge]: https://img.shields.io/npm/dm/vfile-message.svg\n\n[downloads]: https://www.npmjs.com/package/vfile-message\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/vfile\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[error]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[position]: https://github.com/syntax-tree/unist#position\n\n[point]: https://github.com/syntax-tree/unist#point\n\n[vfile]: https://github.com/vfile/vfile\n\n[contributing]: https://github.com/vfile/vfile/blob/master/contributing.md\n\n[coc]: https://github.com/vfile/vfile/blob/master/code-of-conduct.md\n\n[util]: https://github.com/vfile/vfile#utilities\n\n[reporter]: https://github.com/vfile/vfile-reporter\n\n[ruleid]: #ruleid\n\n[source]: #source\n", "readmeFilename": "readme.md", "homepage": "https://github.com/vfile/vfile-message#readme", "_id": "vfile-message@1.1.1", "_requested": { "type": "version", "registry": true, "raw": "vfile-message@1.1.1", "name": "vfile-message", "escapedName": "vfile-message", "rawSpec": "1.1.1", "saveSpec": "[Circular]", "fetchSpec": "1.1.1" }, "_spec": "1.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "vfile-message@1.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "unist-util-stringify-position": "^1.1.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/vfile-message", "error": "[Circular]", "extraneous": false, "_deduped": "vfile-message" } }, "devDependencies": { "browserify": "^16.0.0", "nyc": "^13.0.0", "prettier": "^1.12.1", "remark-cli": "^6.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.4.0", "tinyify": "^2.4.3", "xo": "^0.23.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify . -s VFile > vfile.js", "build-mangle": "browserify . -s VFile -p tinyify > vfile.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "no-var": "off", "prefer-arrow-callback": "off", "object-shorthand": "off" }, "ignores": [ "vfile.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/vfile/-/vfile-3.0.1.tgz", "_integrity": "sha512-y7Y3gH9BsUSdD4KzHsuMaCzRjglXN0W2EcMf0gpvu6+SbsGhMje7xDc8AEoeXy6mIwCKMI6BkjMsRjzQbhMEjQ==", "_from": "vfile@3.0.1", "readme": "# ![vfile][]\n\n[![Travis][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Chat][chat-badge]][chat]\n\n**VFile** is a virtual file format used by [**unified**][unified],\na text processing umbrella (it powers [**retext**][retext] for\nnatural language, [**remark**][remark] for markdown, and\n[**rehype**][rehype] for HTML). Each processors that parse, transform,\nand compile text, and need a virtual representation of files and a\nplace to store [messages][] about them. Plus, they work in the browser.\n**VFile** provides these requirements at a small size, in IE 9 and up.\n\n> **VFile** is different from the excellent [**vinyl**][vinyl]\n> in that it has a smaller API, a smaller size, and focuses on\n> [messages][].\n\nVFile can be used anywhere where files need a lightweight representation.\nFor example, it’s used in:\n\n* [`documentation`](https://github.com/documentationjs/documentation)\n — The documentation system for modern JavaScript\n* [`awoo`](https://github.com/awoojs/awoo)\n — Declarative small site generator\n* [`geojsonhint`](https://github.com/mapbox/geojsonhint)\n — Complete, fast, standards-based validation for geojson\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install vfile\n```\n\n## Table of Contents\n\n* [Usage](#usage)\n* [Utilities](#utilities)\n* [Reporters](#reporters)\n* [API](#api)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [VFile(\\[options\\])](#vfileoptions)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.contents](#vfilecontents)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.cwd](#vfilecwd)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.path](#vfilepath)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.basename](#vfilebasename)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.stem](#vfilestem)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.extname](#vfileextname)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.dirname](#vfiledirname)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.history](#vfilehistory)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.messages](#vfilemessages)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [vfile.data](#vfiledata)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [VFile#toString(\\[encoding\\])](#vfiletostringencoding)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [VFile#message(reason\\[, position\\]\\[, origin\\])](#vfilemessagereason-position-origin)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [VFile#info(reason\\[, position\\]\\[, origin\\])](#vfileinforeason-position-origin)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [VFile#fail(reason\\[, position\\]\\[, origin\\])](#vfilefailreason-position-origin)\n* [Contribute](#contribute)\n* [Acknowledgments](#acknowledgments)\n* [License](#license)\n\n## Usage\n\n```js\nvar vfile = require('vfile')\n\nvar file = vfile({path: '~/example.txt', contents: 'Alpha *braavo* charlie.'})\n\nfile.path // => '~/example.txt'\nfile.dirname // => '~'\n\nfile.extname = '.md'\n\nfile.basename // => 'example.md'\n\nfile.basename = 'index.text'\n\nfile.history // => ['~/example.txt', '~/example.md', '~/index.text']\n\nfile.message('`braavo` is misspelt; did you mean `bravo`?', {\n line: 1,\n column: 8\n})\n\nconsole.log(file.messages)\n```\n\nYields:\n\n```js\n[ { [~/index.text:1:8: `braavo` is misspelt; did you mean `bravo`?]\n message: '`braavo` is misspelt; did you mean `bravo`?',\n name: '~/index.text:1:8',\n file: '~/index.text',\n reason: '`braavo` is misspelt; did you mean `bravo`?',\n line: 1,\n column: 8,\n location: { start: [Object], end: [Object] },\n ruleId: null,\n source: null,\n fatal: false } ]\n```\n\n## Utilities\n\nThe following list of projects includes tools for working with virtual\nfiles. See [**Unist**][unist] for projects working with nodes.\n\n* [`convert-vinyl-to-vfile`](https://github.com/dustinspecker/convert-vinyl-to-vfile)\n — Convert from [Vinyl][]\n* [`is-vfile-message`](https://github.com/shinnn/is-vfile-message)\n — Check if a value is a `VMessage` object\n* [`to-vfile`](https://github.com/vfile/to-vfile)\n — Create a virtual file from a file-path (and optionally read it)\n* [`vfile-find-down`](https://github.com/vfile/vfile-find-down)\n — Find files by searching the file system downwards\n* [`vfile-find-up`](https://github.com/vfile/vfile-find-up)\n — Find files by searching the file system upwards\n* [`vfile-glob`](https://github.com/shinnn/vfile-glob)\n — Find files by glob patterns\n* [`vfile-location`](https://github.com/vfile/vfile-location)\n — Convert between line/column- and range-based locations\n* [`vfile-message`](https://github.com/vfile/vfile-message)\n — Create a `VMessage` object (used in `vfile` itself)\n* [`vfile-statistics`](https://github.com/vfile/vfile-statistics)\n — Count messages per category\n* [`vfile-messages-to-vscode-diagnostics`](https://github.com/shinnn/vfile-messages-to-vscode-diagnostics)\n — Convert to VS Code diagnostics\n* [`vfile-sort`](https://github.com/vfile/vfile-sort)\n — Sort messages by line/column\n* [`vfile-to-eslint`](https://github.com/vfile/vfile-to-eslint)\n — Convert VFiles to ESLint formatter compatible output\n\n## Reporters\n\nThe following list of projects show linting results for given virtual files.\nReporters _must_ accept `Array.<VFile>` as their first argument, and return\n`string`. Reporters _may_ accept other values too, in which case it’s suggested\nto stick to `vfile-reporter`s interface.\n\n* [`vfile-reporter`][reporter]\n — Stylish reporter\n* [`vfile-reporter-json`](https://github.com/vfile/vfile-reporter-json)\n — JSON reporter\n* [`vfile-reporter-folder-json`](https://github.com/vfile/vfile-reporter-folder-json)\n — JSON reporter with a folder structure\n* [`vfile-reporter-pretty`](https://github.com/vfile/vfile-reporter-pretty)\n — Pretty reporter\n\n## API\n\n### `VFile([options])`\n\nCreate a new virtual file. If `options` is `string` or `Buffer`, treats\nit as `{contents: options}`. If `options` is a `VFile`, returns it.\nAll other options are set on the newly created `vfile`.\n\nPath related properties are set in the following order (least specific\nto most specific): `history`, `path`, `basename`, `stem`, `extname`,\n`dirname`.\n\nIt’s not possible to set either `dirname` or `extname` without setting\neither `history`, `path`, `basename`, or `stem` as well.\n\n###### Example\n\n```js\nvfile()\nvfile('console.log(\"alpha\");')\nvfile(Buffer.from('exit 1'))\nvfile({path: path.join(__dirname, 'readme.md')})\nvfile({stem: 'readme', extname: '.md', dirname: __dirname})\nvfile({other: 'properties', are: 'copied', ov: {e: 'r'}})\n```\n\n### `vfile.contents`\n\n`Buffer`, `string`, `null` — Raw value.\n\n### `vfile.cwd`\n\n`string` — Base of `path`. Defaults to `process.cwd()`.\n\n### `vfile.path`\n\n`string?` — Path of `vfile`. Cannot be nullified.\n\n### `vfile.basename`\n\n`string?` — Current name (including extension) of `vfile`. Cannot\ncontain path separators. Cannot be nullified either (use\n`file.path = file.dirname` instead).\n\n### `vfile.stem`\n\n`string?` — Name (without extension) of `vfile`. Cannot be nullified,\nand cannot contain path separators.\n\n### `vfile.extname`\n\n`string?` — Extension (with dot) of `vfile`. Cannot be set if\nthere’s no `path` yet and cannot contain path separators.\n\n### `vfile.dirname`\n\n`string?` — Path to parent directory of `vfile`. Cannot be set if\nthere’s no `path` yet.\n\n### `vfile.history`\n\n`Array.<string>` — List of file-paths the file moved between.\n\n### `vfile.messages`\n\n[`Array.<VMessage>`][message] — List of messages associated with the file.\n\n### `vfile.data`\n\n`Object` — Place to store custom information. It’s OK to store custom\ndata directly on the `vfile`, moving it to `data` gives a _little_ more\nprivacy.\n\n### `VFile#toString([encoding])`\n\nConvert contents of `vfile` to string. If `contents` is a buffer,\n`encoding` is used to stringify buffers (default: `'utf8'`).\n\n### `VFile#message(reason[, position][, origin])`\n\nAssociates a message with the file, where `fatal` is set to `false`.\nConstructs a new [`VMessage`][vmessage] and adds it to\n[`vfile.messages`][messages].\n\n##### Returns\n\n[`VMessage`][vmessage].\n\n### `VFile#info(reason[, position][, origin])`\n\nAssociates an informational message with the file, where `fatal` is set to\n`null`. Calls [`#message()`][message] internally.\n\n##### Returns\n\n[`VMessage`][vmessage].\n\n### `VFile#fail(reason[, position][, origin])`\n\nAssociates a fatal message with the file, then immediately throws it.\nNote: fatal errors mean a file is no longer processable.\nCalls [`#message()`][message] internally.\n\n##### Throws\n\n[`VMessage`][vmessage].\n\n## Contribute\n\n**VFile** is built by people just like you! Check out\n[`contributing.md`][contribute] for ways to get started.\n\nThis project has a [Code of Conduct][coc]. By interacting with this repository,\norganisation, or community you agree to abide by its terms.\n\nWant to chat with the community and contributors? Join us in [Gitter][chat]!\n\nHave an idea for a cool new utility or tool? That’s great! If you want\nfeedback, help, or just to share it with the world you can do so by creating\nan issue in the [`vfile/ideas`][ideas] repository!\n\n## Acknowledgments\n\nThe initial release of this project was authored by\n[**@wooorm**](https://github.com/wooorm).\n\nThanks to [**@contra**](https://github.com/contra),\n[**@phated**](https://github.com/phated), and others for their work on\n[Vinyl][], which was a huge inspiration.\n\nThanks to\n[**@brendo**](https://github.com/brendo),\n[**@shinnn**](https://github.com/shinnn),\n[**@KyleAMathews**](https://github.com/KyleAMathews), [**@sindresorhus**](https://github.com/sindresorhus),\nand [**@denysdovhan**](https://github.com/denysdovhan)\nfor contributing commits since!\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/vfile/vfile/master.svg\n\n[build]: https://travis-ci.org/vfile/vfile\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/vfile/vfile.svg\n\n[coverage]: https://codecov.io/github/vfile/vfile\n\n[downloads-badge]: https://img.shields.io/npm/dm/vfile.svg\n\n[downloads]: https://www.npmjs.com/package/vfile\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/vfile.svg\n\n[size]: https://bundlephobia.com/result?p=vfile\n\n[chat-badge]: https://img.shields.io/gitter/room/vfile/Lobby.svg\n\n[chat]: https://gitter.im/vfile/Lobby\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[vfile]: https://raw.githubusercontent.com/vfile/vfile/7e1e6a6/logo.svg?sanitize=true\n\n[unified]: https://github.com/unifiedjs/unified\n\n[retext]: https://github.com/retextjs/retext\n\n[remark]: https://github.com/remarkjs/remark\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[vinyl]: https://github.com/gulpjs/vinyl\n\n[unist]: https://github.com/syntax-tree/unist#list-of-utilities\n\n[reporter]: https://github.com/vfile/vfile-reporter\n\n[vmessage]: https://github.com/vfile/vfile-message\n\n[messages]: #vfilemessages\n\n[message]: #vfilemessagereason-position-origin\n\n[contribute]: contributing.md\n\n[coc]: code-of-conduct.md\n\n[ideas]: https://github.com/vfile/ideas\n", "readmeFilename": "readme.md", "homepage": "https://github.com/vfile/vfile#readme", "_id": "vfile@3.0.1", "_requested": { "type": "version", "registry": true, "raw": "vfile@3.0.1", "name": "vfile", "escapedName": "vfile", "rawSpec": "3.0.1", "saveSpec": "[Circular]", "fetchSpec": "3.0.1" }, "_spec": "3.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "vfile@3.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-buffer": "^2.0.0", "replace-ext": "1.0.0", "unist-util-stringify-position": "^1.0.0", "vfile-message": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark/node_modules/vfile", "error": "[Circular]", "extraneous": false }, "trough": { "name": "trough", "version": "1.0.3", "description": "Middleware: a channel used to convey a liquid", "license": "MIT", "keywords": [ "middleware", "ware" ], "repository": { "type": "git", "url": "git+https://github.com/wooorm/trough.git" }, "bugs": { "url": "https://github.com/wooorm/trough/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js", "wrap.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "nyc": "^11.0.0", "prettier": "^1.12.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.4.0", "tinyify": "^2.4.3", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js -s trough > trough.js", "build-mangle": "browserify index.js -s trough -p tinyify > trough.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "guard-for-in": "off", "unicorn/prefer-type-error": "off", "no-var": "off", "prefer-arrow-callback": "off" }, "ignores": [ "trough.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "_resolved": "https://registry.npmjs.org/trough/-/trough-1.0.3.tgz", "_integrity": "sha512-fwkLWH+DimvA4YCy+/nvJd61nWQQ2liO/nF/RjkTpiOGi+zxZzVkhb1mvbHIIW4b/8nDsYI8uTmAlc0nNkRMOw==", "_from": "trough@1.0.3", "readme": "# trough [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n> **trough** /trôf/ — a channel used to convey a liquid.\n\n`trough` is like [`ware`][ware] with less sugar, and middleware\nfunctions can change the input of the next.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install trough\n```\n\n## Usage\n\n```js\nvar fs = require('fs')\nvar path = require('path')\nvar trough = require('trough')\n\nvar pipeline = trough()\n .use(function(fileName) {\n console.log('Checking... ' + fileName)\n })\n .use(function(fileName) {\n return path.join(process.cwd(), fileName)\n })\n .use(function(filePath, next) {\n fs.stat(filePath, function(err, stats) {\n next(err, {filePath, stats})\n })\n })\n .use(function(ctx, next) {\n if (ctx.stats.isFile()) {\n fs.readFile(ctx.filePath, next)\n } else {\n next(new Error('Expected file'))\n }\n })\n\npipeline.run('readme.md', console.log)\npipeline.run('node_modules', console.log)\n```\n\nYields:\n\n```txt\nChecking... readme.md\nChecking... node_modules\nError: Expected file\n at ~/example.js:21:12\n at wrapped (~/node_modules/trough/index.js:93:19)\n at next (~/node_modules/trough/index.js:56:24)\n at done (~/node_modules/trough/index.js:124:12)\n at ~/node_modules/example.js:14:7\n at FSReqWrap.oncomplete (fs.js:153:5)\nnull <Buffer 23 20 74 72 6f 75 67 68 20 5b 21 5b 42 75 69 6c 64 20 53 74 61 74 75 73 5d 5b 74 72 61 76 69 73 2d 62 61 64 67 65 5d 5d 5b 74 72 61 76 69 73 5d 20 5b ... >\n```\n\n## API\n\n### `trough()`\n\nCreate a new [`Trough`][trough].\n\n#### `trough.wrap(middleware, callback[, ...input])`\n\nCall `middleware` with all input.\nIf `middleware` accepts more arguments than given in input, and extra `done`\nfunction is passed in after the input when calling it.\nIt must be called.\n\nThe first value in `input` is called the main input value.\nAll other input values are called the rest input values.\nThe values given to `callback` are the input values, merged with every\nnon-nully output value.\n\n* If `middleware` throws an error, returns a promise that is rejected, or\n calls the given `done` function with an error, `callback` is invoked with\n that error\n* If `middleware` returns a value or returns a promise that is resolved, that\n value is the main output value\n* If `middleware` calls `done`, all non-nully values except for the first one\n (the error) overwrite the output values\n\n### `Trough`\n\nA pipeline.\n\n#### `Trough#run([input..., ]done)`\n\nRun the pipeline (all [`use()`][use]d middleware). Invokes [`done`][done]\non completion with either an error or the output of the last middleware\n\n> Note! as the length of input defines whether [async][] functions get a `next`\n> function, it’s recommended to keep `input` at one value normally.\n\n##### `function done(err?, [output...])`\n\nThe final handler passed to [`run()`][run], invoked with an error\nif a [middleware function][fn] rejected, passed, or threw one, or\nthe output of the last middleware function.\n\n#### `Trough#use(fn)`\n\nAdd `fn`, a [middleware function][fn], to the pipeline.\n\n##### `function fn([input..., ][next])`\n\nA middleware function invoked with the output of its predecessor.\n\n###### Synchronous\n\nIf `fn` returns or throws an error, the pipeline fails and `done` is\ninvoked with that error.\n\nIf `fn` returns a value (neither `null` nor `undefined`), the first\n`input` of the next function is set to that value (all other `input`\nis passed through).\n\nThe following example shows how returning an error stops the pipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n .use(function(val) {\n return new Error('Got: ' + val)\n })\n .run('some value', console.log)\n```\n\nYields:\n\n```txt\nError: Got: some value\n at ~/example.js:5:12\n ...\n```\n\nThe following example shows how throwing an error stops the pipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n .use(function(val) {\n throw new Error('Got: ' + val)\n })\n .run('more value', console.log)\n```\n\nYields:\n\n```txt\nError: Got: more value\n at ~/example.js:5:11\n ...\n```\n\nThe following example shows how the first output can be modified:\n\n```js\nvar trough = require('trough')\n\ntrough()\n .use(function(val) {\n return 'even ' + val\n })\n .run('more value', 'untouched', console.log)\n```\n\nYields:\n\n```txt\nnull 'even more value' 'untouched'\n```\n\n###### Promise\n\nIf `fn` returns a promise, and that promise rejects, the pipeline fails\nand `done` is invoked with the rejected value.\n\nIf `fn` returns a promise, and that promise resolves with a value\n(neither `null` nor `undefined`), the first `input` of the next function\nis set to that value (all other `input` is passed through).\n\nThe following example shows how rejecting a promise stops the pipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n .use(function(val) {\n return new Promise(function(resolve, reject) {\n reject('Got: ' + val)\n })\n })\n .run('val', console.log)\n```\n\nYields:\n\n```txt\nGot: val\n```\n\nThe following example shows how the input isn’t touched by resolving\nto `null`.\n\n```js\nvar trough = require('trough')\n\ntrough()\n .use(function() {\n return new Promise(function(resolve) {\n setTimeout(function() {\n resolve(null)\n }, 100)\n })\n })\n .run('Input', console.log)\n```\n\nYields:\n\n```txt\nnull 'Input'\n```\n\n###### Asynchronous\n\nIf `fn` accepts one more argument than the given `input`, a `next`\nfunction is given (after the input). `next` must be called, but doesn’t\nhave to be called async.\n\nIf `next` is given a value (neither `null` nor `undefined`) as its first\nargument, the pipeline fails and `done` is invoked with that value.\n\nIf `next` is given no value (either `null` or `undefined`) as the first\nargument, all following non-nully values change the input of the following\nfunction, and all nully values default to the `input`.\n\nThe following example shows how passing a first argument stops the\npipeline:\n\n```js\nvar trough = require('trough')\n\ntrough()\n .use(function(val, next) {\n next(new Error('Got: ' + val))\n })\n .run('val', console.log)\n```\n\nYields:\n\n```txt\nError: Got: val\n at ~/example.js:5:10\n```\n\nThe following example shows how more values than the input are passed.\n\n```js\nvar trough = require('trough')\n\ntrough()\n .use(function(val, next) {\n setTimeout(function() {\n next(null, null, 'values')\n }, 100)\n })\n .run('some', console.log)\n```\n\nYields:\n\n```txt\nnull 'some' 'values'\n```\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/trough.svg\n\n[travis]: https://travis-ci.org/wooorm/trough\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/trough.svg\n\n[codecov]: https://codecov.io/github/wooorm/trough\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[ware]: https://github.com/segmentio/ware\n\n[trough]: #trough-1\n\n[use]: #troughusefn\n\n[run]: #troughruninput-done\n\n[fn]: #function-fninput-next\n\n[done]: #function-doneerr-output\n\n[async]: #asynchronous\n", "readmeFilename": "readme.md", "homepage": "https://github.com/wooorm/trough#readme", "_id": "trough@1.0.3", "_requested": { "type": "version", "registry": true, "raw": "trough@1.0.3", "name": "trough", "escapedName": "trough", "rawSpec": "1.0.3", "saveSpec": "[Circular]", "fetchSpec": "1.0.3" }, "_spec": "1.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "trough@1.0.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/trough", "error": "[Circular]", "extraneous": false, "_deduped": "trough" }, "x-is-string": { "name": "x-is-string", "version": "0.1.0", "description": "Simple string test", "keywords": [], "author": { "name": "Matt-Esch", "email": "matt@mattesch.info" }, "repository": { "type": "git", "url": "git://github.com/Matt-Esch/x-is-string.git" }, "main": "index", "homepage": "https://github.com/Matt-Esch/x-is-string", "contributors": [ { "name": "Matt-Esch" } ], "bugs": { "url": "https://github.com/Matt-Esch/x-is-string/issues", "email": "matt@mattesch.info" }, "dependencies": {}, "devDependencies": { "tape": "^2.12.2" }, "licenses": [ { "type": "MIT", "url": "http://github.com/Matt-Esch/x-is-string/raw/master/LICENSE" } ], "scripts": { "test": "node ./test/index.js", "start": "node ./index.js", "watch": "nodemon -w ./index.js index.js", "travis-test": "istanbul cover ./test/index.js && ((cat coverage/lcov.info | coveralls) || exit 0)", "cover": "istanbul cover --report none --print detail ./test/index.js", "view-cover": "istanbul report html && google-chrome ./coverage/index.html", "test-browser": "testem-browser ./test/browser/index.js", "testem": "testem-both -b=./test/browser/index.js" }, "testling": { "files": "test/index.js", "browsers": [ "ie/8..latest", "firefox/16..latest", "firefox/nightly", "chrome/22..latest", "chrome/canary", "opera/12..latest", "opera/next", "safari/5.1..latest", "ipad/6.0..latest", "iphone/6.0..latest", "android-browser/4.2..latest" ] }, "_resolved": "https://registry.npmjs.org/x-is-string/-/x-is-string-0.1.0.tgz", "_integrity": "sha1-R0tQhlrzpJqcRlfwWs0UVFj3fYI=", "_from": "x-is-string@0.1.0", "readme": "# x-is-string\n\nSimple string test\n\n## Example\n\n```js\nvar isString = require(\"x-is-string\")\n\nisString(\"hello\")\n// -> true\n\nisString(\"\")\n// -> true\n\nisString(new String(\"things\"))\n// -> true\n\nisString(1)\n// -> false\n\nisString(true)\n// -> false\n\nisString(new Date())\n// -> false\n\nisString({})\n// -> false\n\nisString(null)\n// -> false\n\nisString(undefined)\n// -> false\n```\n\n## Installation\n\n`npm install x-is-string`\n\n## Contributors\n\n - Matt-Esch\n\n## MIT Licenced", "readmeFilename": "README.md", "_id": "x-is-string@0.1.0", "_requested": { "type": "version", "registry": true, "raw": "x-is-string@0.1.0", "name": "x-is-string", "escapedName": "x-is-string", "rawSpec": "0.1.0", "saveSpec": "[Circular]", "fetchSpec": "0.1.0" }, "_spec": "0.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "x-is-string@0.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/x-is-string", "error": "[Circular]", "extraneous": false, "_deduped": "x-is-string" } }, "devDependencies": { "browserify": "^16.0.0", "dtslint": "^0.4.1", "esmangle": "^1.0.0", "nyc": "^13.0.0", "prettier": "^1.12.1", "remark-cli": "^6.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.4.0", "typescript": "^3.2.2", "xo": "^0.23.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/{*.js,*.ts}' && xo --fix", "build-bundle": "browserify index.js -s unified > unified.js", "build-mangle": "esmangle unified.js > unified.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test", "test-types": "dtslint types", "test": "npm run format && npm run build && npm run test-coverage && npm run test-types" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "guard-for-in": "off", "no-var": "off", "object-shorthand": "off", "prefer-arrow-callback": "off", "unicorn/prefer-type-error": "off" }, "ignores": [ "unified.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "collective": { "type": "opencollective", "url": "https://opencollective.com/unified" }, "_resolved": "https://registry.npmjs.org/unified/-/unified-7.1.0.tgz", "_integrity": "sha512-lbk82UOIGuCEsZhPj8rNAkXSDXd6p0QLzIuSsCdxrqnqU56St4eyOB+AlXsVgVeRmetPTYydIuvFfpDIed8mqw==", "_from": "unified@7.1.0", "readme": "# [![unified][logo]](https://unified.js.org/)\n\n[![Travis][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Chat][chat-badge]][chat]\n\n**unified** is an interface for processing text using syntax trees. It’s what\npowers [**remark**][remark], [**retext**][retext], and [**rehype**][rehype],\nbut it also allows for processing between multiple syntaxes.\n\n**unified** enabled new exciting projects like [Gatsby][] to pull in markdown,\n[MDX][] to embed [JSX][], and [Prettier][] to format it.\nIt’s used to check code for [Storybook][], [debugger.html][] ([Mozilla][]),\nand [opensource.guide][] ([GitHub][]).\n\n* To read about what we’re up to, follow us on [Medium][] and [Twitter][]\n* For a less technical and more practical introduction to unified, visit\n js and try its introductory [Guides][]\n* To help us out, see [`contributing.md`][contributing], or become a backer\n or sponsor on [Open Collective][collective]\n\n* 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps *\n\n<!--lint ignore no-html-->\n\n**Announcing the unified collective! 🎉\n[Read more about it on Medium »][medium]**\n\n## Sponsors\n\n<!--lint ignore no-html maximum-line-length-->\n\n<table>\n <tr valign=\"top\">\n <td width=\"20%\" align=\"center\">\n <a href=\"https://zeit.co\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://zeit.co\">ZEIT</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://www.gatsbyjs.org\">Gatsby</a></td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://compositor.io\"><img src=\"https://avatars1.githubusercontent.com/u/19245838?s=400&v=4\"></a>\n <br><br>🥉\n <a href=\"https://compositor.io\">Compositor</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=400&v=4\"></a>\n <br><br>\n <a href=\"https://www.holloway.com\">Holloway</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <br><br><br><br>\n <a href=\"https://opencollective.com/unified\"><strong>You?</strong>\n </td>\n </tr>\n</table>\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unified\n```\n\n## Usage\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar doc = require('rehype-document')\nvar format = require('rehype-format')\nvar html = require('rehype-stringify')\nvar report = require('vfile-reporter')\n\nunified()\n .use(markdown)\n .use(remark2rehype)\n .use(doc)\n .use(format)\n .use(html)\n .process('# Hello world!', function(err, file) {\n console.error(report(err || file))\n console.log(String(file))\n })\n```\n\nYields:\n\n```html\nno issues found\n<!doctype html>\n<html lang=\"en\">\n <head>\n <meta charset=\"utf-8\">\n <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n </head>\n <body>\n <h1>Hello world!</h1>\n </body>\n</html>\n```\n\n## Table of Contents\n\n* [Description](#description)\n* [API](#api)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor()](#processor)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.use(plugin\\[, options\\])](#processoruseplugin-options)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.parse(file|value)](#processorparsefilevalue)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.stringify(node\\[, file\\])](#processorstringifynode-file)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.run(node\\[, file\\]\\[, done\\])](#processorrunnode-file-done)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.runSync(node\\[, file\\])](#processorrunsyncnode-file)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.process(file|value\\[, done\\])](#processorprocessfilevalue-done)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.processSync(file|value)](#processorprocesssyncfilevalue)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.data(\\[key\\[, value\\]\\])](#processordatakey-value)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [processor.freeze()](#processorfreeze)\n* [Plugin](#plugin)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [function attacher(\\[options\\])](#function-attacheroptions)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [function transformer(node, file\\[, next\\])](#function-transformernode-file-next)\n* [Preset](#preset)\n* [Contribute](#contribute)\n* [Acknowledgments](#acknowledgments)\n* [License](#license)\n\n## Description\n\n**unified** is an interface for processing text using syntax trees. Syntax\ntrees are a representation understandable to programs. Those programs, called\n[**plugin**][plugin]s, take these trees and modify them, amongst other things.\nTo get to the syntax tree from input text there’s a [**parser**][parser]. To\nget from that back to text there’s a [**compiler**][compiler]. This is the\n[**process**][process] of a **processor**.\n\n```ascii\n| ....................... process() ......................... |\n| ......... parse() ..... | run() | ..... stringify() ....... |\n\n +--------+ +----------+\nInput ->- | Parser | ->- Syntax Tree ->- | Compiler | ->- Output\n +--------+ | +----------+\n X\n |\n +--------------+\n | Transformers |\n +--------------+\n```\n\n###### Processors\n\nEvery processor implements another processor. To create a new processor invoke\nanother processor. This creates a processor that is configured to function the\nsame as its ancestor. But when the descendant processor is configured in the\nfuture it does not affect the ancestral processor.\n\nWhen processors are exposed from a module (for example, unified itself) they\nshould not be configured directly, as that would change their behaviour for all\nmodule users. Those processors are [**frozen**][freeze] and they should be\ninvoked to create a new processor before they are used.\n\n###### Node\n\nThe syntax trees used in **unified** are [**Unist**][unist] nodes: plain\nJavaScript objects with a `type` property. The semantics of those `type`s are\ndefined by other projects.\n\nThere are several [utilities][unist-utilities] for working with these nodes.\n\n###### List of Processors\n\nThe following projects process different syntax trees. They parse text to\ntheir respective syntax tree and they compile their syntax trees back to text.\nThese processors can be used as-is, or their parsers and compilers can be mixed\nand matched with **unified** and other plugins to process between different\nsyntaxes.\n\n* [**rehype**][rehype] ([**hast**][hast]) — HTML\n* [**remark**][remark] ([**mdast**][mdast]) — Markdown\n* [**retext**][retext] ([**nlcst**][nlcst]) — Natural language\n\n###### List of Plugins\n\nThe below plugins work with **unified**, unrelated to what flavour the syntax\ntree is in:\n\n* [`unified-diff`](https://github.com/unifiedjs/unified-diff)\n — Ignore messages for unchanged lines in Travis\n\nSee [**remark**][remark-plugins], [**rehype**][rehype-plugins], and\n[**retext**][retext-plugins] for lists of their plugins.\n\n###### File\n\nWhen processing documents metadata is often gathered about that document.\n[**VFile**][vfile] is a virtual file format which stores data and handles\nmetadata and messages for **unified** and its plugins.\n\nThere are several [utilities][vfile-utilities] for working with these files.\n\n###### Configuration\n\nTo configure a processor invoke its [`use`][use] method, supply it a\n[**plugin**][plugin], and optionally settings.\n\n###### Integrations\n\n**unified** can integrate with the file-system through\n[`unified-engine`][engine]. On top of that, CLI apps can be created with\n[`unified-args`][args], Gulp plugins with [`unified-engine-gulp`][gulp], and\nAtom Linters with [`unified-engine-atom`][atom].\n\nA streaming interface is provided through [`unified-stream`][stream].\n\n###### Programming interface\n\nThe API gives access to processing metadata (such as lint messages) and\nsupports multiple passed through files:\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar styleGuide = require('remark-preset-lint-markdown-style-guide')\nvar remark2retext = require('remark-retext')\nvar english = require('retext-english')\nvar equality = require('retext-equality')\nvar remark2rehype = require('remark-rehype')\nvar html = require('rehype-stringify')\nvar report = require('vfile-reporter')\n\nunified()\n .use(markdown)\n .use(styleGuide)\n .use(\n remark2retext,\n unified()\n .use(english)\n .use(equality)\n )\n .use(remark2rehype)\n .use(html)\n .process('*Emphasis* and _importance_, you guys!', function(err, file) {\n console.error(report(err || file))\n console.log(String(file))\n })\n```\n\nYields:\n\n```txt\n 1:16-1:28 warning Emphasis should use `*` as a marker emphasis-marker remark-lint\n 1:34-1:38 warning `guys` may be insensitive, use `people`, `persons`, `folks` instead gals-men retext-equality\n\n⚠ 2 warnings\n<p><em>Emphasis</em> and <em>importance</em>, you guys!</p>\n```\n\n###### Processing between syntaxes\n\nThe processors can be combined in two modes.\n\n**Bridge** mode transforms the syntax tree from one flavour (the origin) to\nanother (the destination). Then, transformations are applied on that tree.\nFinally, the origin processor continues transforming the original syntax tree.\n\n**Mutate** mode also transforms the syntax tree from one flavour to another.\nBut then the origin processor continues transforming the destination syntax\ntree.\n\nIn the previous example (“Programming interface”), `remark-retext` is used in\nbridge mode: the origin syntax tree is kept after retext is done; whereas\n`remark-rehype` is used in mutate mode: it sets a new syntax tree and discards\nthe original.\n\n* [`remark-retext`][remark-retext]\n* [`remark-rehype`][remark-rehype]\n* fonts [`rehype-remark`][rehype-remark]\n\n## API\n\n### `processor()`\n\nObject describing how to process text.\n\n###### Returns\n\n`Function` — New [**unfrozen**][freeze] processor which is configured to\nfunction the same as its ancestor. But when the descendant processor is\nconfigured in the future it does not affect the ancestral processor.\n\n###### Example\n\nThe following example shows how a new processor can be created (from the remark\nprocessor) and linked to **stdin**(4) and **stdout**(4).\n\n```js\nvar remark = require('remark')\nvar concat = require('concat-stream')\n\nprocess.stdin.pipe(concat(onconcat))\n\nfunction onconcat(buf) {\n var doc = remark()\n .processSync(buf)\n .toString()\n\n process.stdout.write(doc)\n}\n```\n\n### `processor.use(plugin[, options])`\n\nConfigure the processor to use a [**plugin**][plugin] and optionally configure\nthat plugin with options.\n\n###### Signatures\n\n* `processor.use(plugin[, options])`\n* `processor.use(preset)`\n* `processor.use(list)`\n\n###### Parameters\n\n* `plugin` ([`Plugin`][plugin])\n* `options` (`*`, optional) — Configuration for `plugin`\n* `preset` (`Object`) — Object with an optional `plugins` (set to `list`),\n and/or an optional `settings` object\n* `list` (`Array`) — List of plugins, presets, and pairs (`plugin` and\n `options` in an array)\n\n###### Returns\n\n`processor` — The processor on which `use` is invoked.\n\n###### Note\n\n`use` cannot be called on [frozen][freeze] processors. Invoke the processor\nfirst to create a new unfrozen processor.\n\n###### Example\n\nThere are many ways to pass plugins to `.use()`. The below example gives an\noverview.\n\n```js\nvar unified = require('unified')\n\nunified()\n // Plugin with options:\n .use(plugin, {})\n // Plugins:\n .use([plugin, pluginB])\n // Two plugins, the second with options:\n .use([plugin, [pluginB, {}]])\n // Preset with plugins and settings:\n .use({plugins: [plugin, [pluginB, {}]], settings: {position: false}})\n // Settings only:\n .use({settings: {position: false}})\n\nfunction plugin() {}\nfunction pluginB() {}\n```\n\n### `processor.parse(file|value)`\n\nParse text to a syntax tree.\n\n###### Parameters\n\n* `file` ([`VFile`][file])\n — Or anything which can be given to `vfile()`\n\n###### Returns\n\n[`Node`][node] — Syntax tree representation of input.\n\n###### Note\n\n`parse` [freezes][freeze] the processor if not already frozen.\n\n`parse` does not apply [transformers from the run phase][description] to the\n[syntax tree][node].\n\n###### Example\n\nThe below example shows how the `parse` function can be used to create a\n[syntax tree][node] from a [file][].\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\n\nvar tree = unified()\n .use(markdown)\n .parse('# Hello world!')\n\nconsole.log(tree)\n```\n\nYields:\n\n```js\n{ type: 'root',\n children:\n [ { type: 'heading',\n depth: 1,\n children: [Array],\n position: [Position] } ],\n position:\n { start: { line: 1, column: 1, offset: 0 },\n end: { line: 1, column: 15, offset: 14 } } }\n```\n\n#### `processor.Parser`\n\nFunction handling the parsing of text to a syntax tree. Used in the\n[**parse**][parse] phase in the process and invoked with a `string` and\n[`VFile`][file] representation of the document to parse.\n\n`Parser` can be a normal function in which case it must return a\n[`Node`][node]: the syntax tree representation of the given file.\n\n`Parser` can also be a constructor function (a function with keys in its\n`prototype`) in which case it’s invoked with `new`. Instances must have a\n`parse` method which is invoked without arguments and must return a\n[`Node`][node].\n\n### `processor.stringify(node[, file])`\n\nCompile a syntax tree to text.\n\n###### Parameters\n\n* `node` ([`Node`][node])\n* `file` ([`VFile`][file], optional);\n — Or anything which can be given to `vfile()`\n\n###### Returns\n\n`string` — String representation of the syntax tree file.\n\n###### Note\n\n`stringify` [freezes][freeze] the processor if not already frozen.\n\n`stringify` does not apply [transformers from the run phase][description]\nto the [syntax tree][node].\n\n###### Example\n\nThe below example shows how the `stringify` function can be used to generate a\n[file][] from a [syntax tree][node].\n\n```js\nvar unified = require('unified')\nvar html = require('rehype-stringify')\nvar h = require('hastscript')\n\nvar tree = h('h1', 'Hello world!')\n\nvar doc = unified()\n .use(html)\n .stringify(tree)\n\nconsole.log(doc)\n```\n\nYields:\n\n```html\n<h1>Hello world!</h1>\n```\n\n#### `processor.Compiler`\n\nFunction handling the compilation of syntax tree to a text. Used in the\n[**stringify**][stringify] phase in the process and invoked with a\n[`Node`][node] and [`VFile`][file] representation of the document to stringify.\n\n`Compiler` can be a normal function in which case it must return a `string`:\nthe text representation of the given syntax tree.\n\n`Compiler` can also be a constructor function (a function with keys in its\n`prototype`) in which case it’s invoked with `new`. Instances must have a\n`compile` method which is invoked without arguments and must return a `string`.\n\n### `processor.run(node[, file][, done])`\n\nTransform a syntax tree by applying [**plugin**][plugin]s to it.\n\n###### Parameters\n\n* `node` ([`Node`][node])\n* `file` ([`VFile`][file], optional)\n — Or anything which can be given to `vfile()`\n* `done` ([`Function`][run-done], optional)\n\n###### Returns\n\n[`Promise`][promise] if `done` is not given. Rejected with an error, or\nresolved with the resulting syntax tree.\n\n###### Note\n\n`run` [freezes][freeze] the processor if not already frozen.\n\n#### `function done(err[, node, file])`\n\nInvoked when transformation is complete. Either invoked with an error or a\nsyntax tree and a file.\n\n###### Parameters\n\n* `err` (`Error`) — Fatal error\n* `node` ([`Node`][node])\n* `file` ([`VFile`][file])\n\n###### Example\n\nThe below example shows how the `run` function can be used to transform a\n[syntax tree][node].\n\n```js\nvar unified = require('unified')\nvar references = require('remark-reference-links')\nvar u = require('unist-builder')\n\nvar tree = u('root', [\n u('paragraph', [\n u('link', {href: 'https://example.com'}, [u('text', 'Example Domain')])\n ])\n])\n\nunified()\n .use(references)\n .run(tree, function(err, tree) {\n if (err) throw err\n console.log(tree)\n })\n```\n\nYields:\n\n```js\n{ type: 'root',\n children:\n [ { type: 'paragraph', children: [Array] },\n { type: 'definition',\n identifier: '1',\n title: undefined,\n url: undefined } ] }\n```\n\n### `processor.runSync(node[, file])`\n\nTransform a syntax tree by applying [**plugin**][plugin]s to it.\n\nIf asynchronous [**plugin**][plugin]s are configured an error is thrown.\n\n###### Parameters\n\n* `node` ([`Node`][node])\n* `file` ([`VFile`][file], optional)\n — Or anything which can be given to `vfile()`\n\n###### Returns\n\n[`Node`][node] — The given syntax tree.\n\n###### Note\n\n`runSync` [freezes][freeze] the processor if not already frozen.\n\n### `processor.process(file|value[, done])`\n\nProcess the given representation of a file as configured on the processor. The\nprocess invokes `parse`, `run`, and `stringify` internally.\n\n###### Parameters\n\n* `file` ([`VFile`][file])\n* `value` (`string`) — String representation of a file\n* `done` ([`Function`][process-done], optional)\n\n###### Returns\n\n[`Promise`][promise] if `done` is not given. Rejected with an error or\nresolved with the resulting file.\n\n###### Note\n\n`process` [freezes][freeze] the processor if not already frozen.\n\n###### Example\n\nThe below example shows how the `process` function can be used to process a\n[file][] whether plugins are asynchronous or not with Promises.\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar doc = require('rehype-document')\nvar format = require('rehype-format')\nvar html = require('rehype-stringify')\n\nunified()\n .use(markdown)\n .use(remark2rehype)\n .use(doc)\n .use(format)\n .use(html)\n .process('# Hello world!')\n .then(\n function(file) {\n console.log(String(file))\n },\n function(err) {\n console.error(String(err))\n }\n )\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n <head>\n <meta charset=\"utf-8\">\n <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n </head>\n <body>\n <h1>Hello world!</h1>\n </body>\n</html>\n```\n\n#### `function done(err, file)`\n\nInvoked when the process is complete. Invoked with a fatal error, if any, and\nthe [`VFile`][file].\n\n###### Parameters\n\n* `err` (`Error`, optional) — Fatal error\n* `file` ([`VFile`][file])\n\n###### Example\n\nThe below example shows how the `process` function can be used to process a\n[file][] whether plugins are asynchronous or not with a callback.\n\n```js\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar stringify = require('remark-stringify')\nvar github = require('remark-github')\nvar report = require('vfile-reporter')\n\nunified()\n .use(parse)\n .use(github)\n .use(stringify)\n .process('@mention', function(err, file) {\n console.error(report(err || file))\n console.log(String(file))\n })\n```\n\nYields:\n\n```markdown\nno issues found\n[**@mention**](https://github.com/blog/821)\n```\n\n### `processor.processSync(file|value)`\n\nProcess the given representation of a file as configured on the processor. The\nprocess invokes `parse`, `run`, and `stringify` internally.\n\nIf asynchronous [**plugin**][plugin]s are configured an error is thrown.\n\n###### Parameters\n\n* `file` ([`VFile`][file])\n* `value` (`string`) — String representation of a file\n\n###### Returns\n\n[`VFile`][file] — Virtual file with modified [`contents`][vfile-contents].\n\n###### Note\n\n`processSync` [freezes][freeze] the processor if not already frozen.\n\n###### Example\n\nThe below example shows how the `processSync` function can be used to process a\n[file][] if all plugins are known to be synchronous.\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar doc = require('rehype-document')\nvar format = require('rehype-format')\nvar html = require('rehype-stringify')\n\nvar processor = unified()\n .use(markdown)\n .use(remark2rehype)\n .use(doc)\n .use(format)\n .use(html)\n\nconsole.log(processor.processSync('# Hello world!').toString())\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n <head>\n <meta charset=\"utf-8\">\n <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n </head>\n <body>\n <h1>Hello world!</h1>\n </body>\n</html>\n```\n\n### `processor.data([key[, value]])`\n\nGet or set information in an in-memory key-value store accessible to all phases\nof the process. An example is a list of HTML elements which are self-closing,\nwhich is needed when parsing, transforming, and compiling HTML.\n\n###### Parameters\n\n* `key` (`string`, optional) — Identifier\n* `value` (`*`, optional) — Value to set. Omit if getting `key`\n\n###### Returns\n\n* `processor` — If setting, the processor on which `data` is invoked\n* `*` — If getting, the value at `key`\n* `object` - Without arguments, the key-value store\n\n###### Note\n\nSetting information with `data` cannot occur on [frozen][freeze] processors.\nInvoke the processor first to create a new unfrozen processor.\n\n###### Example\n\nThe following example show how to get and set information:\n\n```js\nvar unified = require('unified')\n\nvar processor = unified()\n .data('alpha', 'bravo')\n .data('alpha') // => 'bravo'\n\nprocessor.data() // {alpha: 'bravo'}\n```\n\n### `processor.freeze()`\n\nFreeze a processor. Frozen processors are meant to be extended and not to be\nconfigured or processed directly.\n\nOnce a processor is frozen it cannot be unfrozen. New processors functioning\njust like it can be created by invoking the processor.\n\nIt’s possible to freeze processors explicitly, by calling `.freeze()`, but\n[`.parse()`][parse], [`.run()`][run], [`.stringify()`][stringify], and\n[`.process()`][process] call `.freeze()` to freeze a processor too.\n\n###### Returns\n\n`Processor` — The processor on which `freeze` is invoked.\n\n###### Example\n\nThe following example, `index.js`, shows how [**rehype**][rehype] prevents\nextensions to itself:\n\n```js\nvar unified = require('unified')\nvar parse = require('rehype-parse')\nvar stringify = require('rehype-stringify')\n\nmodule.exports = unified()\n .use(parse)\n .use(stringify)\n .freeze()\n```\n\nThe below example, `a.js`, shows how that processor can be used and configured.\n\n```js\nvar rehype = require('rehype')\nvar format = require('rehype-format')\n// ...\n\nrehype()\n .use(format)\n // ...\n```\n\nThe below example, `b.js`, shows a similar looking example which operates on\nthe frozen [**rehype**][rehype] interface. If this behaviour was allowed it\nwould result in unexpected behaviour so an error is thrown. **This is\ninvalid**:\n\n```js\nvar rehype = require('rehype')\nvar format = require('rehype-format')\n// ...\n\nrehype\n .use(format)\n // ...\n```\n\nYields:\n\n```txt\n~/node_modules/unified/index.js:440\n throw new Error(\n ^\n\nError: Cannot invoke `use` on a frozen processor.\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.\n at assertUnfrozen (~/node_modules/unified/index.js:440:11)\n at Function.use (~/node_modules/unified/index.js:172:5)\n at Object.<anonymous> (~/b.js:6:4)\n```\n\n## `Plugin`\n\n**unified** plugins change the way the applied-on processor works in the\nfollowing ways:\n\n* They modify the [**processor**][processor]: such as changing the parser,\n the compiler, or linking it to other processors\n* They transform [**syntax tree**][node] representation of files\n* They modify metadata of files\n\nPlugins are a concept. They materialise as [`attacher`][attacher]s.\n\n###### Example\n\n`move.js`:\n\n```js\nmodule.exports = move\n\nfunction move(options) {\n var expected = (options || {}).extname\n\n if (!expected) {\n throw new Error('Missing `extname` in options')\n }\n\n return transformer\n\n function transformer(tree, file) {\n if (file.extname && file.extname !== expected) {\n file.extname = expected\n }\n }\n}\n```\n\n`index.js`:\n\n```js\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar stringify = require('rehype-stringify')\nvar vfile = require('to-vfile')\nvar report = require('vfile-reporter')\nvar move = require('./move')\n\nunified()\n .use(parse)\n .use(remark2rehype)\n .use(move, {extname: '.html'})\n .use(stringify)\n .process(vfile.readSync('index.md'), function(err, file) {\n console.error(report(err || file))\n if (file) {\n vfile.writeSync(file) // Written to `index.html`.\n }\n })\n```\n\n### `function attacher([options])`\n\nAn attacher is the thing passed to [`use`][use]. It configures the processor\nand in turn can receive options.\n\nAttachers can configure processors, such as by interacting with parsers and\ncompilers, linking them to other processors, or by specifying how the syntax\ntree is handled.\n\n###### Context\n\nThe context object is set to the invoked on [`processor`][processor].\n\n###### Parameters\n\n* `options` (`*`, optional) — Configuration\n\n###### Returns\n\n[`transformer`][transformer] — Optional.\n\n###### Note\n\nAttachers are invoked when the processor is [frozen][freeze]: either when\n`.freeze()` is called explicitly, or when [`.parse()`][parse], [`.run()`][run],\n[`.stringify()`][stringify], or [`.process()`][process] is called for the first\ntime.\n\n### `function transformer(node, file[, next])`\n\nTransformers modify the syntax tree or metadata of a file. A transformer is a\nfunction which is invoked each time a file is passed through the transform\nphase. If an error occurs (either because it’s thrown, returned, rejected, or\npassed to [`next`][next]), the process stops.\n\nThe transformation process in **unified** is handled by [`trough`][trough], see\nit’s documentation for the exact semantics of transformers.\n\n###### Parameters\n\n* `node` ([`Node`][node])\n* `file` ([`VFile`][file])\n* `next` ([`Function`][next], optional)\n\n###### Returns\n\n* `Error` — Can be returned to stop the process\n* [`Node`][node] — Can be returned and results in further transformations\n and `stringify`s to be performed on the new tree\n* `Promise` — If a promise is returned, the function is asynchronous, and\n **must** be resolved (optionally with a [`Node`][node]) or rejected\n (optionally with an `Error`)\n\n#### `function next(err[, tree[, file]])`\n\nIf the signature of a transformer includes `next` (third argument), the\nfunction **may** finish asynchronous, and **must** invoke `next()`.\n\n###### Parameters\n\n* `err` (`Error`, optional) — Stop the process\n* `node` ([`Node`][node], optional) — New syntax tree\n* `file` ([`VFile`][file], optional) — New virtual file\n\n## `Preset`\n\nPresets provide a potentially sharable way to configure processors. They can\ncontain multiple plugins and optionally settings as well.\n\n###### Example\n\n`preset.js`:\n\n```js\nexports.settings = {bullet: '*', fences: true}\n\nexports.plugins = [\n require('remark-preset-lint-recommended'),\n require('remark-comment-config'),\n require('remark-preset-lint-markdown-style-guide'),\n [require('remark-toc'), {maxDepth: 3, tight: true}],\n require('remark-github')\n]\n```\n\n`index.js`:\n\n```js\nvar remark = require('remark')\nvar vfile = require('to-vfile')\nvar report = require('vfile-reporter')\nvar preset = require('./preset')\n\nremark()\n .use(preset)\n .process(vfile.readSync('index.md'), function(err, file) {\n console.error(report(err || file))\n\n if (file) {\n vfile.writeSync(file)\n }\n })\n```\n\n## Contribute\n\n**unified** is built by people just like you!\nCheck out [`contributing.md`][contributing] for ways to get started.\n\nThis project has a [Code of Conduct][coc].\nBy interacting with this repository, organisation, or community you agree to\nabide by its terms.\n\nWant to chat with the community and contributors?\nJoin us in [spectrum][chat]!\n\nHave an idea for a cool new utility or tool?\nThat’s great!\nIf you want feedback, help, or just to share it with the world you can do so by\ncreating an issue in the [`unifiedjs/ideas`][ideas] repository!\n\n## Acknowledgments\n\nPreliminary work for unified was done [in 2014][preliminary] for\n[**retext**][retext] and inspired by [`ware`][ware]. Further incubation\nhappened in [**remark**][remark]. The project was finally [externalised][]\nin 2015 and [published][] as `unified`. The project was authored by\n[**@wooorm**](https://github.com/wooorm).\n\nAlthough `unified` since moved it’s plugin architecture to [`trough`][trough],\nthanks to [**@calvinfo**](https://github.com/calvinfo),\n[**@ianstormtaylor**](https://github.com/ianstormtaylor), and others for their\nwork on [`ware`][ware], which was a huge initial inspiration.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[logo]: https://raw.githubusercontent.com/unifiedjs/unified/39917ea/logo.svg?sanitize=true\n\n[build-badge]: https://img.shields.io/travis/unifiedjs/unified/master.svg\n\n[build]: https://travis-ci.org/unifiedjs/unified\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/unifiedjs/unified.svg\n\n[coverage]: https://codecov.io/github/unifiedjs/unified\n\n[downloads-badge]: https://img.shields.io/npm/dm/unified.svg\n\n[downloads]: https://www.npmjs.com/package/unified\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/unified.svg\n\n[size]: https://bundlephobia.com/result?p=unified\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[site]: https://unified.js.org\n\n[medium]: https://medium.com/unifiedjs\n\n[twitter]: https://twitter.com/unifiedjs\n\n[collective]: https://opencollective.com/unified\n\n[guides]: https://unified.js.org/#guides\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[remark]: https://github.com/remarkjs/remark\n\n[retext]: https://github.com/retextjs/retext\n\n[hast]: https://github.com/syntax-tree/hast\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[nlcst]: https://github.com/syntax-tree/nlcst\n\n[unist]: https://github.com/syntax-tree/unist\n\n[engine]: https://github.com/unifiedjs/unified-engine\n\n[args]: https://github.com/unifiedjs/unified-args\n\n[gulp]: https://github.com/unifiedjs/unified-engine-gulp\n\n[atom]: https://github.com/unifiedjs/unified-engine-atom\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[remark-retext]: https://github.com/remarkjs/remark-retext\n\n[rehype-retext]: https://github.com/rehypejs/rehype-retext\n\n[rehype-remark]: https://github.com/rehypejs/rehype-remark\n\n[unist-utilities]: https://github.com/syntax-tree/unist#list-of-utilities\n\n[vfile]: https://github.com/vfile/vfile\n\n[vfile-contents]: https://github.com/vfile/vfile#vfilecontents\n\n[vfile-utilities]: https://github.com/vfile/vfile#related-tools\n\n[description]: #description\n\n[file]: #file\n\n[node]: #node\n\n[processor]: #processor\n\n[process]: #processorprocessfilevalue-done\n\n[parse]: #processorparsefilevalue\n\n[parser]: #processorparser\n\n[stringify]: #processorstringifynode-file\n\n[run]: #processorrunnode-file-done\n\n[compiler]: #processorcompiler\n\n[use]: #processoruseplugin-options\n\n[attacher]: #function-attacheroptions\n\n[transformer]: #function-transformernode-file-next\n\n[next]: #function-nexterr-tree-file\n\n[freeze]: #processorfreeze\n\n[plugin]: #plugin\n\n[run-done]: #function-doneerr-node-file\n\n[process-done]: #function-doneerr-file\n\n[trough]: https://github.com/wooorm/trough#function-fninput-next\n\n[promise]: https://developer.mozilla.org/Web/JavaScript/Reference/Global_Objects/Promise\n\n[remark-plugins]: https://github.com/remarkjs/remark/blob/master/doc/plugins.md#list-of-plugins\n\n[rehype-plugins]: https://github.com/rehypejs/rehype/blob/master/doc/plugins.md#list-of-plugins\n\n[retext-plugins]: https://github.com/retextjs/retext/blob/master/doc/plugins.md#list-of-plugins\n\n[stream]: https://github.com/unifiedjs/unified-stream\n\n[contributing]: contributing.md\n\n[coc]: code-of-conduct.md\n\n[ideas]: https://github.com/unifiedjs/ideas\n\n[preliminary]: https://github.com/retextjs/retext/commit/8fcb1f#diff-168726dbe96b3ce427e7fedce31bb0bc\n\n[externalised]: https://github.com/remarkjs/remark/commit/9892ec#diff-168726dbe96b3ce427e7fedce31bb0bc\n\n[published]: https://github.com/unifiedjs/unified/commit/2ba1cf\n\n[ware]: https://github.com/segmentio/ware\n\n[gatsby]: https://www.gatsbyjs.org\n\n[mdx]: https://mdxjs.com\n\n[jsx]: https://reactjs.org/docs/jsx-in-depth.html\n\n[prettier]: https://prettier.io\n\n[storybook]: https://storybook.js.org\n\n[debugger.html]: https://github.com/devtools-html/debugger.html\n\n[mozilla]: https://www.mozilla.org\n\n[opensource.guide]: https://opensource.guide\n\n[github]: https://github.com\n", "readmeFilename": "readme.md", "_id": "unified@7.1.0", "_requested": { "type": "version", "registry": true, "raw": "unified@7.1.0", "name": "unified", "escapedName": "unified", "rawSpec": "7.1.0", "saveSpec": "[Circular]", "fetchSpec": "7.1.0" }, "_spec": "7.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "unified@7.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "@types/unist": "^2.0.0", "@types/vfile": "^3.0.0", "bail": "^1.0.0", "extend": "^3.0.0", "is-plain-obj": "^1.1.0", "trough": "^1.0.0", "vfile": "^3.0.0", "x-is-string": "^0.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark/node_modules/unified", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "tape": "^4.9.1" }, "scripts": { "test": "tape test.js" }, "xo": false, "_resolved": "https://registry.npmjs.org/remark/-/remark-10.0.1.tgz", "_integrity": "sha512-E6lMuoLIy2TyiokHprMjcWNJ5UxfGQjaMSMhV+f4idM625UjjK4j798+gPs5mfjzDE6vL0oFKVeZM6gZVSVrzQ==", "_from": "remark@10.0.1", "readme": "# remark [![Travis][build-badge]][build-status] [![Coverage][coverage-badge]][coverage-status] [![Downloads][dl-badge]][dl] [![Size][size-badge]][size] [![Chat][chat-badge]][chat]\n\n[**remark**][remark] is a markdown processor powered by [plugins][] part of the\n[unified][] [collective][].\n\n* API by [`unified`][unified]\n* Parses markdown to the tree with [`remark-parse`][parse]\n* [**mdast**][mdast] syntax tree\n* [Plugins][] transform the tree\n* Compiles the tree to markdown using [`remark-stringify`][stringify]\n\nDon’t need the parser? Or the compiler? [That’s OK][unified-usage].\n\n* 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps *\n\n**Announcing the unified collective! 🎉\n[Read more about it on Medium »][announcement]**\n\n## Sponsors\n\n<!--lint ignore no-html maximum-line-length-->\n\n<table>\n <tr valign=\"top\">\n <td width=\"20%\" align=\"center\">\n <a href=\"https://zeit.co\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://zeit.co\">ZEIT</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=400&v=4\"></a>\n <br><br>🥇\n <a href=\"https://www.gatsbyjs.org\">Gatsby</a></td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://compositor.io\"><img src=\"https://avatars1.githubusercontent.com/u/19245838?s=400&v=4\"></a>\n <br><br>🥉\n <a href=\"https://compositor.io\">Compositor</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=400&v=4\"></a>\n <br><br>\n <a href=\"https://www.holloway.com\">Holloway</a>\n </td>\n <td width=\"20%\" align=\"center\">\n <br><br><br><br>\n <a href=\"https://opencollective.com/unified\"><strong>You?</strong>\n </td>\n </tr>\n</table>\n\n## Installation\n\n[npm][]:\n\n```sh\nnpm install remark\n```\n\n## Usage\n\n###### Common example\n\nThis example lints markdown and turns it into HTML.\n\n```js\nvar remark = require('remark')\nvar recommended = require('remark-preset-lint-recommended')\nvar html = require('remark-html')\nvar report = require('vfile-reporter')\n\nremark()\n .use(recommended)\n .use(html)\n .process('## Hello world!', function(err, file) {\n console.error(report(err || file))\n console.log(String(file))\n })\n```\n\nYields:\n\n```txt\n1:1 warning Missing newline character at end of file final-newline remark-lint\n\n⚠ 1 warning\n```\n\n```html\n<h2>Hello world!</h2>\n```\n\n###### Settings through data\n\nThis example prettifies markdown and configures [`remark-parse`][parse] and\n[`remark-stringify`][stringify] through [data][].\n\n```js\nvar remark = require('remark')\n\nremark()\n .data('settings', {commonmark: true, emphasis: '*', strong: '*'})\n .process('_Emphasis_ and __importance__', function(err, file) {\n if (err) throw err\n console.log(String(file))\n })\n```\n\nYields:\n\n```markdown\n*Emphasis* and **importance**\n```\n\n###### Settings through a preset\n\nThis example prettifies markdown and configures [`remark-parse`][parse] and\n[`remark-stringify`][stringify] through a [preset][].\n\n```js\nvar remark = require('remark')\n\nremark()\n .use({\n settings: {commonmark: true, emphasis: '*', strong: '*'}\n })\n .process('_Emphasis_ and __importance__', function(err, file) {\n if (err) throw err\n console.log(String(file))\n })\n```\n\nYields:\n\n```markdown\n*Emphasis* and **importance**\n```\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/remarkjs/remark/master.svg\n\n[build-status]: https://travis-ci.org/remarkjs/remark\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark.svg\n\n[coverage-status]: https://codecov.io/github/remarkjs/remark\n\n[dl-badge]: https://img.shields.io/npm/dm/remark.svg\n\n[dl]: https://www.npmjs.com/package/remark\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark.svg\n\n[size]: https://bundlephobia.com/result?p=remark\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/remark\n\n[license]: https://github.com/remarkjs/remark/blob/master/license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[remark]: https://github.com/remarkjs/remark\n\n[unified]: https://github.com/unifiedjs/unified\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[parse]: https://github.com/remarkjs/remark/blob/master/packages/remark-parse\n\n[stringify]: https://github.com/remarkjs/remark/blob/master/packages/remark-stringify\n\n[plugins]: https://github.com/remarkjs/remark/blob/master/doc/plugins.md\n\n[unified-usage]: https://github.com/unifiedjs/unified#usage\n\n[preset]: https://github.com/unifiedjs/unified#preset\n\n[data]: https://github.com/unifiedjs/unified#processordatakey-value\n\n[collective]: https://opencollective.com/unified\n\n[announcement]: https://medium.com/unifiedjs/collectively-evolving-through-crowdsourcing-22c359ea95cc\n", "readmeFilename": "readme.md", "_id": "remark@10.0.1", "_requested": { "type": "version", "registry": true, "raw": "remark@10.0.1", "name": "remark", "escapedName": "remark", "rawSpec": "10.0.1", "saveSpec": "[Circular]", "fetchSpec": "10.0.1" }, "_spec": "10.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "remark@10.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "remark-parse": "^6.0.0", "remark-stringify": "^6.0.0", "unified": "^7.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/remark", "error": "[Circular]", "extraneous": false }, "unist-util-find-all-after": { "name": "unist-util-find-all-after", "version": "1.0.2", "description": "Utility to find nodes after another node", "license": "MIT", "keywords": [ "unist", "node", "find", "after", "util", "utility" ], "repository": { "type": "git", "url": "git+https://github.com/syntax-tree/unist-util-find-all-after.git" }, "bugs": { "url": "https://github.com/syntax-tree/unist-util-find-all-after/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "dependencies": { "unist-util-is": { "name": "unist-util-is", "version": "2.1.2", "description": "Utility to check if a node passes a test", "license": "MIT", "keywords": [ "unist", "node", "is", "equal", "test", "type", "util", "utility" ], "repository": { "type": "git", "url": "git+https://github.com/syntax-tree/unist-util-is.git" }, "bugs": { "url": "https://github.com/syntax-tree/hast-util-to-html/issues" }, "author": { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" }, "contributors": [ { "name": "Titus Wormer", "email": "tituswormer@gmail.com", "url": "http://wooorm.com" } ], "files": [ "index.js" ], "dependencies": {}, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.1", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.0.0", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --bare -s unistUtilIs > unist-util-is.js", "build-mangle": "esmangle < unist-util-is.js > unist-util-is.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "guard-for-in": "off", "no-var": "off", "prefer-arrow-callback": "off", "unicorn/prefer-type-error": "off" }, "ignore": [ "unist-util-is.js" ] }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/unist-util-is/-/unist-util-is-2.1.2.tgz", "_integrity": "sha512-YkXBK/H9raAmG7KXck+UUpnKiNmUdB+aBGrknfQ4EreE1banuzrKABx3jP6Z5Z3fMSPMQQmeXBlKpCbMwBkxVw==", "_from": "unist-util-is@2.1.2", "readme": "# unist-util-is [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n[**Unist**][unist] utility to check if a node passes a test.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unist-util-is\n```\n\n## Usage\n\n```js\nvar is = require('unist-util-is')\n\nvar node = {type: 'strong'}\nvar parent = {type: 'paragraph', children: [node]}\n\nfunction test(node, n) {\n return n === 5\n}\n\nis() // => false\nis(null, {children: []}) // => false\nis(null, node) // => true\nis('strong', node) // => true\nis('emphasis', node) // => false\n\nis(node, node) // => true\nis({type: 'paragraph'}, parent) // => true\nis({type: 'strong'}, parent) // => false\n\nis(test, node) // => false\nis(test, node, 4, parent) // => false\nis(test, node, 5, parent) // => true\n```\n\n## API\n\n### `is(test, node[, index, parent[, context]])`\n\n###### Parameters\n\n* `test` ([`Function`][test], `string`, `Object`, or `Array.<Test>`, optional)\n — When not given, checks if `node` is a [`Node`][node].\n When `string`, works like passing `function (node) {return\n node.type === test}`.\n When `array`, checks any one of the subtests pass.\n When `object`, checks that all keys in `test` are in `node`,\n and that they have (strictly) equal values\n* `node` ([`Node`][node]) — Node to check. `false` is returned\n* `index` (`number`, optional) — Position of `node` in `parent`\n* `parent` (`Node`, optional) — Parent of `node`\n* `context` (`*`, optional) — Context object to invoke `test` with\n\n###### Returns\n\n`boolean` — Whether `test` passed _and_ `node` is a [`Node`][node] (object\nwith `type` set to non-empty `string`).\n\n#### `function test(node[, index, parent])`\n\n###### Parameters\n\n* `node` (`Node`) — Node to test\n* `index` (`number?`) — Position of `node` in `parent`\n* `parent` (`Node?`) — Parent of `node`\n\n###### Context\n\n`*` — The to `is` given `context`.\n\n###### Returns\n\n`boolean?` — Whether `node` matches.\n\n## Related\n\n* [`unist-util-find-after`](https://github.com/syntax-tree/unist-util-find-after)\n — Find a node after another node\n* [`unist-util-find-before`](https://github.com/syntax-tree/unist-util-find-before)\n — Find a node before another node\n* [`unist-util-find-all-after`](https://github.com/syntax-tree/unist-util-find-all-after)\n — Find all nodes after another node\n* [`unist-util-find-all-before`](https://github.com/syntax-tree/unist-util-find-all-before)\n — Find all nodes before another node\n* [`unist-util-find-all-between`](https://github.com/mrzmmr/unist-util-find-all-between)\n — Find all nodes between two nodes\n* [`unist-util-find`](https://github.com/blahah/unist-util-find)\n — Find nodes matching a predicate\n* [`unist-util-filter`](https://github.com/eush77/unist-util-filter)\n — Create a new tree with nodes that pass a check\n* [`unist-util-remove`](https://github.com/eush77/unist-util-remove)\n — Remove nodes from tree\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/unist`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/unist-util-is.svg\n\n[travis]: https://travis-ci.org/syntax-tree/unist-util-is\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-is.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/unist-util-is\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[test]: #function-testnode-index-parent\n\n[contributing]: https://github.com/syntax-tree/unist/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/unist/blob/master/code-of-conduct.md\n", "readmeFilename": "readme.md", "homepage": "https://github.com/syntax-tree/unist-util-is#readme", "_id": "unist-util-is@2.1.2", "_requested": { "type": "version", "registry": true, "raw": "unist-util-is@2.1.2", "name": "unist-util-is", "escapedName": "unist-util-is", "rawSpec": "2.1.2", "saveSpec": "[Circular]", "fetchSpec": "2.1.2" }, "_spec": "2.1.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "unist-util-is@2.1.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/unist-util-is", "error": "[Circular]", "extraneous": false, "_deduped": "unist-util-is" } }, "devDependencies": { "browserify": "^16.0.0", "esmangle": "^1.0.0", "nyc": "^11.0.0", "prettier": "^1.12.1", "remark": "^9.0.0", "remark-cli": "^5.0.0", "remark-preset-wooorm": "^4.0.0", "tape": "^4.6.2", "xo": "^0.20.0" }, "scripts": { "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix", "build-bundle": "browserify index.js --no-builtins -s unistUtilFindAllAfter > unist-util-find-all-after.js", "build-mangle": "esmangle unist-util-find-all-after.js > unist-util-find-all-after.min.js", "build": "npm run build-bundle && npm run build-mangle", "test-api": "node test", "test-coverage": "nyc --reporter lcov tape test.js", "test": "npm run format && npm run build && npm run test-coverage" }, "nyc": { "check-coverage": true, "lines": 100, "functions": 100, "branches": 100 }, "prettier": { "tabWidth": 2, "useTabs": false, "singleQuote": true, "bracketSpacing": false, "semi": false, "trailingComma": "none" }, "xo": { "prettier": true, "esnext": false, "rules": { "guard-for-in": "off", "no-var": "off", "prefer-arrow-callback": "off" }, "ignore": [ "unist-util-find-all-after.js" ] }, "remarkConfig": { "plugins": [ "preset-wooorm" ] }, "_resolved": "https://registry.npmjs.org/unist-util-find-all-after/-/unist-util-find-all-after-1.0.2.tgz", "_integrity": "sha512-nDl79mKpffXojLpCimVXnxhlH/jjaTnDuScznU9J4jjsaUtBdDbxmlc109XtcqxY4SDO0SwzngsxxW8DIISt1w==", "_from": "unist-util-find-all-after@1.0.2", "readme": "# unist-util-find-all-after [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n[**Unist**][unist] utility to find nodes after another node.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unist-util-find-all-after\n```\n\n## Usage\n\n```js\nvar remark = require('remark')\nvar findAllAfter = require('unist-util-find-all-after')\n\nvar tree = remark().parse('Some _emphasis_, **importance**, and `code`.')\nvar paragraph = tree.children[0]\n\nconsole.log(findAllAfter(paragraph, 1, 'text'))\n```\n\nYields:\n\n```js\n[ { type: 'text', value: ', ' },\n { type: 'text', value: ', and ' },\n { type: 'text', value: '.' } ]\n```\n\n## API\n\n### `findAllAfter(parent, node|index[, test])`\n\nFind all children after `index` (or `node`) in `parent`, that passes `test`\n(when given).\n\n###### Parameters\n\n* `parent` ([`Node`][node]) — Context node\n* `node` ([`Node`][node]) — Node in `parent`\n* `index` (`number`, optional) — Position of a `node` in `parent`\n* `test` (`Function`, `string`, or `Node`, optional)\n — See [`unist-util-is`][is]\n\n###### Returns\n\n[`Array.<Node>`][node] — Child nodes of `parent` passing `test`.\n\n## Related\n\n* [`unist-util-find-after`](https://github.com/syntax-tree/unist-util-find-after)\n — Find a node after another node\n* [`unist-util-find-before`](https://github.com/syntax-tree/unist-util-find-before)\n — Find a node before another node\n* [`unist-util-find-all-before`](https://github.com/syntax-tree/unist-util-find-all-before)\n — Find all nodes before another node\n* [`unist-util-find-all-between`](https://github.com/mrzmmr/unist-util-find-all-between)\n — Find all nodes between two nodes\n* [`unist-util-find`](https://github.com/blahah/unist-util-find)\n — Find nodes matching a predicate\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/unist`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc]. By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/unist-util-find-all-after.svg\n\n[travis]: https://travis-ci.org/syntax-tree/unist-util-find-all-after\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-find-all-after.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/unist-util-find-all-after\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[is]: https://github.com/syntax-tree/unist-util-is\n\n[contributing]: https://github.com/syntax-tree/unist/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/unist/blob/master/code-of-conduct.md\n", "readmeFilename": "readme.md", "homepage": "https://github.com/syntax-tree/unist-util-find-all-after#readme", "_id": "unist-util-find-all-after@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "unist-util-find-all-after@1.0.2", "name": "unist-util-find-all-after", "escapedName": "unist-util-find-all-after", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "unist-util-find-all-after@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "unist-util-is": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/unist-util-find-all-after", "error": "[Circular]", "extraneous": false } }, "peerDependencies": { "postcss": ">=5.0.0", "postcss-syntax": ">=0.36.0" }, "devDependencies": { "chai": "^4.2.0", "codecov": "^3.1.0", "mocha": "^5.2.0", "nyc": "^13.1.0", "postcss": "^7.0.7", "postcss-html": ">=0.36.0", "postcss-less": "^3.1.0", "postcss-scss": "^2.0.0", "postcss-syntax": ">=0.36.0", "sugarss": "^2.0.0" }, "_resolved": "https://registry.npmjs.org/postcss-markdown/-/postcss-markdown-0.36.0.tgz", "_integrity": "sha512-rl7fs1r/LNSB2bWRhyZ+lM/0bwKv9fhl38/06gF6mKMo/NPnp55+K1dSTosSVjFZc0e1ppBlu+WT91ba0PMBfQ==", "_from": "postcss-markdown@0.36.0", "readme": "PostCSS Markdown Syntax\n====\n\n[![NPM version](https://img.shields.io/npm/v/postcss-markdown.svg?style=flat-square)](https://www.npmjs.com/package/postcss-markdown)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-markdown.svg)](https://travis-ci.org/gucong3000/postcss-markdown)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntaxes.svg?label=integration)](https://travis-ci.org/gucong3000/postcss-syntaxes)\n[![Codecov](https://img.shields.io/codecov/c/github/gucong3000/postcss-markdown.svg)](https://codecov.io/gh/gucong3000/postcss-markdown)\n[![David](https://img.shields.io/david/gucong3000/postcss-markdown.svg)](https://david-dm.org/gucong3000/postcss-markdown)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n\ttitle=\"Philosopher’s stone, logo of PostCSS\"\n\tsrc=\"http://postcss.github.io/postcss/logo.svg\">\n\n[PostCSS](https://github.com/postcss/postcss) Syntax for parsing [Markdown](https://daringfireball.net/projects/markdown/syntax)\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```\nnpm install postcss-syntax postcss-markdown --save-dev\n```\n\nIf you want support SCSS/SASS/LESS/SugarSS syntax, you need to install the corresponding module.\n\n- SCSS: [postcss-scss](https://github.com/postcss/postcss-scss)\n- SASS: [postcss-sass](https://github.com/aleshaoleg/postcss-sass)\n- LESS: [postcss-less](https://github.com/shellscape/postcss-less)\n- SugarSS: [sugarss](https://github.com/postcss/sugarss)\n\n## Use Cases\n\n```js\nvar syntax = require('postcss-syntax')({\n\t// Enable support for HTML (default: true) See: https://github.com/gucong3000/postcss-html\n\thtmlInMd: true,\n\t// syntax for parse scss (non-required options)\n\tscss: require('postcss-scss'),\n\t// syntax for parse less (non-required options)\n\tless: require('postcss-less'),\n\t// syntax for parse css blocks (non-required options)\n\tcss: require('postcss-safe-parser'),\n});\nvar autoprefixer = require('autoprefixer');\npostcss([ autoprefixer ]).process(source, { syntax: syntax }).then(function (result) {\n\t// An alias for the result.css property. Use it with syntaxes that generate non-CSS output.\n\tresult.content\n});\n```\ninput:\n<pre><code># title\n\n```css\n::placeholder {\n\tcolor: gray;\n}\n```\n</code></pre>\n\n\noutput:\n<pre><code># title\n\n```css\n::-webkit-input-placeholder {\n\tcolor: gray;\n}\n:-ms-input-placeholder {\n\tcolor: gray;\n}\n::-ms-input-placeholder {\n\tcolor: gray;\n}\n::placeholder {\n\tcolor: gray;\n}\n```\n</code></pre>\n\nIf you want support SCSS/SASS/LESS/SugarSS syntax, you need to install these module:\n\n- SCSS: [postcss-scss](https://github.com/postcss/postcss-scss)\n- SASS: [postcss-sass](https://github.com/aleshaoleg/postcss-sass)\n- LESS: [postcss-less](https://github.com/shellscape/postcss-less)\n- SugarSS: [sugarss](https://github.com/postcss/sugarss)\n\n## Advanced Use Cases\n\nSee: [postcss-syntax](https://github.com/gucong3000/postcss-syntax)\n\n## Style Transformations\n\nThe main use case of this plugin is apply PostCSS transformations to CSS (and CSS-like) code blocks in markdown file.\n", "readmeFilename": "README.md", "_id": "postcss-markdown@0.36.0", "_requested": { "type": "version", "registry": true, "raw": "postcss-markdown@0.36.0", "name": "postcss-markdown", "escapedName": "postcss-markdown", "rawSpec": "0.36.0", "saveSpec": "[Circular]", "fetchSpec": "0.36.0" }, "_spec": "0.36.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-markdown@0.36.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "remark": "^10.0.1", "unist-util-find-all-after": "^1.0.2" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-markdown", "error": "[Circular]", "extraneous": false }, "postcss-media-query-parser": { "name": "postcss-media-query-parser", "version": "0.2.3", "description": "A tool for parsing media query lists.", "main": "dist/index.js", "keywords": [ "postcss", "postcss tool", "media query", "media query parsing" ], "author": { "name": "dryoma" }, "license": "MIT", "homepage": "https://github.com/dryoma/postcss-media-query-parser", "repository": { "type": "git", "url": "git+https://github.com/dryoma/postcss-media-query-parser.git" }, "bugs": { "url": "https://github.com/dryoma/postcss-media-query-parser/issues" }, "devDependencies": { "babel-cli": "^6.14.0", "babel-preset-es2015": "^6.14.0", "babel-register": "^6.14.0", "eslint": "^2.5.1", "eslint-config-airbnb": "^6.0.2", "eslint-plugin-react": "^4.2.3", "tap-spec": "^4.1.1", "tape": "^4.6.0" }, "scripts": { "lint": "eslint . --ignore-path .gitignore", "test": "tape -r babel-register \"src/**/__tests__/*.js\" | tap-spec", "pretest": "npm run lint", "prebuild": "rimraf dist", "prepublish": "npm run build", "build": "babel src --out-dir dist" }, "eslintConfig": { "extends": "airbnb", "rules": { "max-len": [ 2, 80, 4 ], "func-names": 0 } }, "babel": { "presets": [ "es2015" ] }, "files": [ "dist", "!**/__tests__" ], "_resolved": "https://registry.npmjs.org/postcss-media-query-parser/-/postcss-media-query-parser-0.2.3.tgz", "_integrity": "sha1-J7Ocb02U+Bsac7j3Y1HGCeXO8kQ=", "_from": "postcss-media-query-parser@0.2.3", "readme": "# postcss-media-query-parser\r\n\r\n[![NPM version](http://img.shields.io/npm/v/postcss-media-query-parser.svg)](https://www.npmjs.com/package/postcss-media-query-parser) [![Build Status](https://travis-ci.org/dryoma/postcss-media-query-parser.svg?branch=master)](https://travis-ci.org/dryoma/postcss-media-query-parser)\r\n\r\nMedia query parser with very simple traversing functionality.\r\n\r\n## Installation and usage\r\n\r\nFirst install it via NPM:\r\n\r\n```\r\nnpm install postcss-media-query-parser\r\n```\r\n\r\nThen in your Node.js application:\r\n\r\n```js\r\nimport mediaParser from \"postcss-media-query-parser\";\r\n\r\nconst mediaQueryString = \"(max-width: 100px), not print\";\r\nconst result = mediaParser(mediaQueryString);\r\n```\r\n\r\nThe `result` will be this object:\r\n\r\n```js\r\n{\r\n type: 'media-query-list',\r\n value: '(max-width: 100px), not print',\r\n after: '',\r\n before: '',\r\n sourceIndex: 0,\r\n\r\n // the first media query\r\n nodes: [{\r\n type: 'media-query',\r\n value: '(max-width: 100px)',\r\n before: '',\r\n after: '',\r\n sourceIndex: 0,\r\n parent: <link to parent 'media-query-list' node>,\r\n nodes: [{\r\n type: 'media-feature-expression',\r\n value: '(max-width: 100px)',\r\n before: '',\r\n after: '',\r\n sourceIndex: 0,\r\n parent: <link to parent 'media-query' node>,\r\n nodes: [{\r\n type: 'media-feature',\r\n value: 'max-width',\r\n before: '',\r\n after: '',\r\n sourceIndex: 1,\r\n parent: <link to parent 'media-feature-expression' node>,\r\n }, {\r\n type: 'colon',\r\n value: ':',\r\n before: '',\r\n after: ' ',\r\n sourceIndex: 10,\r\n parent: <link to parent 'media-feature-expression' node>,\r\n }, {\r\n type: 'value',\r\n value: '100px',\r\n before: ' ',\r\n after: '',\r\n sourceIndex: 12,\r\n parent: <link to parent 'media-feature-expression' node>,\r\n }]\r\n }]\r\n },\r\n // the second media query\r\n {\r\n type: 'media-query',\r\n value: 'not print',\r\n before: ' ',\r\n after: '',\r\n sourceIndex: 20,\r\n parent: <link to parent 'media-query-list' node>,\r\n nodes: [{\r\n type: 'keyword',\r\n value: 'not',\r\n before: ' ',\r\n after: ' ',\r\n sourceIndex: 20,\r\n parent: <link to parent 'media-query' node>,\r\n }, {\r\n type: 'media-type',\r\n value: 'print',\r\n before: ' ',\r\n after: '',\r\n sourceIndex: 24,\r\n parent: <link to parent 'media-query' node>,\r\n }]\r\n }]\r\n}\r\n```\r\n\r\nOne of the likely sources of a string to parse would be traversing [a PostCSS container node](http://api.postcss.org/Root.html) and getting the `params` property of nodes with the name of \"atRule\":\r\n\r\n```js\r\nimport postcss from \"postcss\";\r\nimport mediaParser from \"postcss-media-query-parser\";\r\n\r\nconst root = postcss.parse(<contents>);\r\n// ... or any other way to get sucn container\r\n\r\nroot.walkAtRules(\"media\", (atRule) => {\r\n const mediaParsed = mediaParser(atRule.params);\r\n // Do something with \"mediaParsed\" object\r\n});\r\n```\r\n\r\n## Nodes\r\n\r\nNode is a very generic item in terms of this parser. It's is pretty much everything that ends up in the parsed result. Each node has these properties:\r\n\r\n* `type`: the type of the node (see below);\r\n* `value`: the node's value stripped of trailing whitespaces;\r\n* `sourceIndex`: 0-based index of the node start relative to the source start (excluding trailing whitespaces);\r\n* `before`: a string that contain a whitespace between the node start and the previous node end/source start;\r\n* `after`: a string that contain a whitespace between the node end and the next node start/source end;\r\n* `parent`: a link to this node's parent node (a container).\r\n\r\nA node can have one of these types (according to [the 2012 CSS3 standard](https://www.w3.org/TR/2012/REC-css3-mediaqueries-20120619/)):\r\n\r\n* `media-query-list`: that is the root level node of the parsing result. A [container](#containers); its children can have types of `url` and `media-query`.\r\n* `url`: if a source is taken from a CSS `@import` rule, it will have a `url(...)` function call. The value of such node will be `url(http://uri-address)`, it is to be parsed separately.\r\n* `media-query`: such nodes correspond to each media query in a comma separated list. In the exapmle above there are two. Nodes of this type are [containers](#containers).\r\n* `media-type`: `screen`, `tv` and other media types.\r\n* `keyword`: `only`, `not` or `and` keyword.\r\n* `media-feature-expression`: an expression in parentheses that checks for a condition of a particular media feature. The value would be like this: `(max-width: 1000px)`. Such nodes are [containers](#containers). They always have a `media-feature` child node, but might not have a `value` child node (like in `screen and (color)`).\r\n* `media-feature`: a media feature, e.g. `max-width`.\r\n* `colon`: present if a media feature expression has a colon (e.g. `(min-width: 1000px)`, compared to `(color)`).\r\n* `value`: a media feature expression value, e.g. `100px` in `(max-width: 1000px)`.\r\n\r\n### Parsing details\r\n\r\npostcss-media-query-parser allows for cases of some **non-standard syntaxes** and tries its best to work them around. For example, in a media query from a code with SCSS syntax:\r\n\r\n```scss\r\n@media #{$media-type} and ( #{\"max-width\" + \": 10px\"} ) { ... }\r\n```\r\n\r\n`#{$media-type}` will be the node of type `media-type`, alghough `$media-type`'s value can be `only screen`. And inside `media-feature-expression` there will only be a `media-feature` type node with the value of `#{\"max-width\" + \": 10px\"}` (this example doesn't make much sense, it's for demo purpose).\r\n\r\nBut the result of parsing **malformed media queries** (such as with incorrect amount of closing parens, curly braces, etc.) can be unexpected. For exapmle, parsing:\r\n\r\n```scss\r\n@media ((min-width: -100px)\r\n```\r\n\r\nwould return a media query list with the single `media-query` node that has no child nodes.\r\n\r\n## Containers\r\n\r\nContainers are [nodes](#nodes) that have other nodes as children. Container nodes have an additional property `nodes` which is an array of their child nodes. And also these methods:\r\n\r\n* `each(callback)` - traverses the direct child nodes of a container, calling `callback` function for each of them. Returns `false` if traversing has stopped by means of `callback` returning `false`, and `true` otherwise.\r\n* `walk([filter, ]callback)` - traverses ALL descendant nodes of a container, calling `callback` function for each of them. Returns `false` if traversing has stopped by means of `callback` returning `false`, and `true` otherwise.\r\n\r\nIn both cases `callback` takes these parameters:\r\n\r\n- `node` - the current node (one of the container's descendats, that the callback has been called against).\r\n- `i` - 0-based index of the `node` in an array of its parent's children.\r\n- `nodes` - array of child nodes of `node`'s parent.\r\n\r\nIf `callback` returns `false`, the traversing stops.\r\n\r\n## License\r\n\r\nMIT\r\n", "readmeFilename": "README.md", "_id": "postcss-media-query-parser@0.2.3", "_requested": { "type": "version", "registry": true, "raw": "postcss-media-query-parser@0.2.3", "name": "postcss-media-query-parser", "escapedName": "postcss-media-query-parser", "rawSpec": "0.2.3", "saveSpec": "[Circular]", "fetchSpec": "0.2.3" }, "_spec": "0.2.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-media-query-parser@0.2.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-media-query-parser", "error": "[Circular]", "extraneous": false }, "postcss-reporter": { "name": "postcss-reporter", "version": "6.0.1", "description": "Log PostCSS messages in the console", "main": "index.js", "files": [ "index.js", "lib" ], "repository": { "type": "git", "url": "git+https://github.com/postcss/postcss-reporter.git" }, "author": { "name": "David Clark", "email": "david.dave.clark@gmail.com", "url": "http://davidtheclark.com" }, "license": "MIT", "dependencies": { "lodash": { "name": "lodash", "version": "4.17.11", "description": "Lodash modular utilities.", "keywords": "[Circular]", "homepage": "https://lodash.com/", "repository": "[Circular]", "icon": "https://lodash.com/icon.svg", "license": "MIT", "main": "lodash.js", "author": "[Circular]", "contributors": "[Circular]", "scripts": "[Circular]", "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz", "_integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==", "_from": "lodash@4.17.11", "readme": "# lodash v4.17.11\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.11-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 68-69, Firefox 61-62, IE 11, Edge 17, Safari 10-11, Node.js 6-10, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "lodash@4.17.11", "_requested": { "type": "version", "registry": true, "raw": "lodash@4.17.11", "name": "lodash", "escapedName": "lodash", "rawSpec": "4.17.11", "saveSpec": "[Circular]", "fetchSpec": "4.17.11" }, "_spec": "4.17.11", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/lodash", "error": "[Circular]", "extraneous": false, "_deduped": "lodash" }, "log-symbols": { "name": "log-symbols", "version": "2.2.0", "description": "Colored symbols for various log levels. Example: ✔︎ Success", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "dependencies": {}, "devDependencies": "[Circular]", "browser": "browser.js", "_resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-2.2.0.tgz", "_integrity": "sha512-VeIAFslyIerEJLXHziedo2basKbMKtTw3vfn5IzG0XTjhAVEJyNHnL2p7vc+wBDSdQuUpNw3M2u6xb9QsAY5Eg==", "_from": "log-symbols@2.2.0", "readme": "# log-symbols [![Build Status](https://travis-ci.org/sindresorhus/log-symbols.svg?branch=master)](https://travis-ci.org/sindresorhus/log-symbols)\n\n<img src=\"screenshot.png\" width=\"226\" align=\"right\">\n\n> Colored symbols for various log levels\n\nIncludes fallbacks for Windows CMD which only supports a [limited character set](https://en.wikipedia.org/wiki/Code_page_437).\n\n\n## Install\n\n```\n$ npm install log-symbols\n```\n\n\n## Usage\n\n```js\nconst logSymbols = require('log-symbols');\n\nconsole.log(logSymbols.success, 'Finished successfully!');\n// On good OSes: ✔ Finished successfully!\n// On Windows: √ Finished successfully!\n```\n\n## API\n\n### logSymbols\n\n#### info\n#### success\n#### warning\n#### error\n\n\n## Related\n\n- [figures](https://github.com/sindresorhus/figures) - Unicode symbols with Windows CMD fallbacks\n- [py-log-symbols](https://github.com/ManrajGrover/py-log-symbols) - Python port\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/log-symbols#readme", "_id": "log-symbols@2.2.0", "_requested": { "type": "version", "registry": true, "raw": "log-symbols@2.2.0", "name": "log-symbols", "escapedName": "log-symbols", "rawSpec": "2.2.0", "saveSpec": "[Circular]", "fetchSpec": "2.2.0" }, "_spec": "2.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/log-symbols", "error": "[Circular]", "extraneous": false, "_deduped": "log-symbols" }, "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": "[Circular]", "keywords": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://postcss.org/", "repository": "[Circular]", "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": "[Circular]", "browser": "[Circular]", "browserslist": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" }, "chalk": { "name": "chalk", "version": "2.4.2", "description": "Terminal string styling done right", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/chalk.git" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && tsc --project types && flow --max-warnings=0 && nyc ava", "bench": "matcha benchmark.js", "coveralls": "nyc report --reporter=text-lcov | coveralls" }, "files": [ "index.js", "templates.js", "types/index.d.ts", "index.js.flow" ], "keywords": [ "color", "colour", "colors", "terminal", "console", "cli", "string", "str", "ansi", "style", "styles", "tty", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text" ], "dependencies": { "escape-string-regexp": { "name": "escape-string-regexp", "version": "1.0.5", "description": "Escape RegExp special characters", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "maintainers": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "_resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz", "_integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=", "_from": "escape-string-regexp@1.0.5", "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install --save escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme", "_id": "escape-string-regexp@1.0.5", "_requested": { "type": "version", "registry": true, "raw": "escape-string-regexp@1.0.5", "name": "escape-string-regexp", "escapedName": "escape-string-regexp", "rawSpec": "1.0.5", "saveSpec": "[Circular]", "fetchSpec": "1.0.5" }, "_spec": "1.0.5", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/escape-string-regexp", "error": "[Circular]", "extraneous": false, "_deduped": "escape-string-regexp" }, "ansi-styles": { "name": "ansi-styles", "version": "3.2.1", "description": "ANSI escape codes for styling strings in the terminal", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/ansi-styles.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava", "screenshot": "svg-term --command='node screenshot' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor" }, "files": [ "index.js" ], "keywords": [ "ansi", "styles", "color", "colour", "colors", "terminal", "console", "cli", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text" ], "dependencies": { "color-convert": { "name": "color-convert", "description": "Plain color conversion functions", "version": "1.9.3", "author": "[Circular]", "license": "MIT", "repository": "[Circular]", "scripts": "[Circular]", "keywords": "[Circular]", "files": "[Circular]", "xo": "[Circular]", "devDependencies": "[Circular]", "dependencies": {}, "_resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz", "_integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==", "_from": "color-convert@1.9.3", "readme": "# color-convert\n\n[![Build Status](https://travis-ci.org/Qix-/color-convert.svg?branch=master)](https://travis-ci.org/Qix-/color-convert)\n\nColor-convert is a color conversion library for JavaScript and node.\nIt converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, `ansi`, `ansi16`, `hex` strings, and CSS `keyword`s (will round to closest):\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hsl(140, 200, 100); // [96, 48, 59]\nconvert.keyword.rgb('blue'); // [0, 0, 255]\n\nvar rgbChannels = convert.rgb.channels; // 3\nvar cmykChannels = convert.cmyk.channels; // 4\nvar ansiChannels = convert.ansi16.channels; // 1\n```\n\n# Install\n\n```console\n$ npm install color-convert\n```\n\n# API\n\nSimply get the property of the _from_ and _to_ conversion that you're looking for.\n\nAll functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on `.raw` to the function.\n\nAll 'from' functions have a hidden property called `.channels` that indicates the number of channels the function expects (not including alpha).\n\n```js\nvar convert = require('color-convert');\n\n// Hex to LAB\nconvert.hex.lab('DEADBF'); // [ 76, 21, -2 ]\nconvert.hex.lab.raw('DEADBF'); // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ]\n\n// RGB to CMYK\nconvert.rgb.cmyk(167, 255, 4); // [ 35, 0, 98, 0 ]\nconvert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]\n```\n\n### Arrays\nAll functions that accept multiple arguments also support passing an array.\n\nNote that this does **not** apply to functions that convert from a color that only requires one value (e.g. `keyword`, `ansi256`, `hex`, etc.)\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hex(123, 45, 67); // '7B2D43'\nconvert.rgb.hex([123, 45, 67]); // '7B2D43'\n```\n\n## Routing\n\nConversions that don't have an _explicitly_ defined conversion (in [conversions.js](conversions.js)), but can be converted by means of sub-conversions (e.g. XYZ -> **RGB** -> CMYK), are automatically routed together. This allows just about any color model supported by `color-convert` to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> **LAB** -> **XYZ** -> **RGB** -> Hex).\n\nKeep in mind that extensive conversions _may_ result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see [conversions.js](conversions.js).\n\n# Contribute\n\nIf there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.\n\n# License\nCopyright &copy; 2011-2016, Heather Arthur and Josh Junon. Licensed under the [MIT License](LICENSE).\n", "readmeFilename": "README.md", "bugs": "[Circular]", "homepage": "https://github.com/Qix-/color-convert#readme", "_id": "color-convert@1.9.3", "_requested": { "type": "version", "registry": true, "raw": "color-convert@1.9.3", "name": "color-convert", "escapedName": "color-convert", "rawSpec": "1.9.3", "saveSpec": "[Circular]", "fetchSpec": "1.9.3" }, "_spec": "1.9.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/color-convert", "error": "[Circular]", "extraneous": false, "_deduped": "color-convert" } }, "devDependencies": { "ava": "*", "babel-polyfill": "^6.23.0", "svg-term-cli": "^2.1.1", "xo": "*" }, "ava": { "require": "babel-polyfill" }, "_resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz", "_integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==", "_from": "ansi-styles@3.2.1", "readme": "# ansi-styles [![Build Status](https://travis-ci.org/chalk/ansi-styles.svg?branch=master)](https://travis-ci.org/chalk/ansi-styles)\n\n> [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles) for styling strings in the terminal\n\nYou probably want the higher-level [chalk](https://github.com/chalk/chalk) module for styling your strings.\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n\n## Install\n\n```\n$ npm install ansi-styles\n```\n\n\n## Usage\n\n```js\nconst style = require('ansi-styles');\n\nconsole.log(`${style.green.open}Hello world!${style.green.close}`);\n\n\n// Color conversion between 16/256/truecolor\n// NOTE: If conversion goes to 16 colors or 256 colors, the original color\n// may be degraded to fit that color palette. This means terminals\n// that do not support 16 million colors will best-match the\n// original color.\nconsole.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close);\nconsole.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close);\nconsole.log(style.color.ansi16m.hex('#ABCDEF') + 'Hello world!' + style.color.close);\n```\n\n## API\n\nEach style has an `open` and `close` property.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Advanced usage\n\nBy default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\n- `style.modifier`\n- `style.color`\n- `style.bgColor`\n\n###### Example\n\n```js\nconsole.log(style.color.green.open);\n```\n\nRaw escape codes (i.e. without the CSI escape prefix `\\u001B[` and render mode postfix `m`) are available under `style.codes`, which returns a `Map` with the open codes as keys and close codes as values.\n\n###### Example\n\n```js\nconsole.log(style.codes.get(36));\n//=> 39\n```\n\n\n## [256 / 16 million (TrueColor) support](https://gist.github.com/XVilka/8346728)\n\n`ansi-styles` uses the [`color-convert`](https://github.com/Qix-/color-convert) package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors.\n\nTo use these, call the associated conversion function with the intended output, for example:\n\n```js\nstyle.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code\nstyle.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code\n\nstyle.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\nstyle.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\n\nstyle.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code\nstyle.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code\n```\n\n\n## Related\n\n- [ansi-escapes](https://github.com/sindresorhus/ansi-escapes) - ANSI escape codes for manipulating the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/ansi-styles/issues" }, "homepage": "https://github.com/chalk/ansi-styles#readme", "_id": "ansi-styles@3.2.1", "_requested": { "type": "version", "registry": true, "raw": "ansi-styles@3.2.1", "name": "ansi-styles", "escapedName": "ansi-styles", "rawSpec": "3.2.1", "saveSpec": "[Circular]", "fetchSpec": "3.2.1" }, "_spec": "3.2.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ansi-styles@3.2.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "color-convert": "^1.9.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-reporter/node_modules/ansi-styles", "error": "[Circular]", "extraneous": false }, "supports-color": { "name": "supports-color", "version": "5.5.0", "description": "Detect whether a terminal supports color", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/supports-color.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js", "browser.js" ], "keywords": [ "color", "colour", "colors", "terminal", "console", "cli", "ansi", "styles", "tty", "rgb", "256", "shell", "xterm", "command-line", "support", "supports", "capability", "detect", "truecolor", "16m" ], "dependencies": { "has-flag": { "name": "has-flag", "version": "3.0.0", "description": "Check if argv has a specific flag", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "_resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz", "_integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=", "_from": "has-flag@3.0.0", "readme": "# has-flag [![Build Status](https://travis-ci.org/sindresorhus/has-flag.svg?branch=master)](https://travis-ci.org/sindresorhus/has-flag)\n\n> Check if [`argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) has a specific flag\n\nCorrectly stops looking after an `--` argument terminator.\n\n\n## Install\n\n```\n$ npm install has-flag\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=> true\n\nhasFlag('--unicorn');\n//=> true\n\nhasFlag('f');\n//=> true\n\nhasFlag('-f');\n//=> true\n\nhasFlag('foo=bar');\n//=> true\n\nhasFlag('foo');\n//=> false\n\nhasFlag('rainbow');\n//=> false\n```\n\n```\n$ node foo.js -f --unicorn --foo=bar -- --rainbow\n```\n\n\n## API\n\n### hasFlag(flag, [argv])\n\nReturns a boolean for whether the flag exists.\n\n#### flag\n\nType: `string`\n\nCLI flag to look for. The `--` prefix is optional.\n\n#### argv\n\nType: `string[]`<br>\nDefault: `process.argv`\n\nCLI arguments.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/has-flag#readme", "_id": "has-flag@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "has-flag@3.0.0", "name": "has-flag", "escapedName": "has-flag", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/has-flag", "error": "[Circular]", "extraneous": false, "_deduped": "has-flag" } }, "devDependencies": { "ava": "^0.25.0", "import-fresh": "^2.0.0", "xo": "^0.20.0" }, "browser": "browser.js", "_resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz", "_integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==", "_from": "supports-color@5.5.0", "readme": "# supports-color [![Build Status](https://travis-ci.org/chalk/supports-color.svg?branch=master)](https://travis-ci.org/chalk/supports-color)\n\n> Detect whether a terminal supports color\n\n\n## Install\n\n```\n$ npm install supports-color\n```\n\n\n## Usage\n\n```js\nconst supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n\tconsole.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n\tconsole.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n\tconsole.log('Terminal stderr supports 16 million colors (truecolor)');\n}\n```\n\n\n## API\n\nReturns an `Object` with a `stdout` and `stderr` property for testing either streams. Each property is an `Object`, or `false` if color is not supported.\n\nThe `stdout`/`stderr` objects specifies a level of support for color through a `.level` property and a corresponding flag:\n\n- `.level = 1` and `.hasBasic = true`: Basic color support (16 colors)\n- `.level = 2` and `.has256 = true`: 256 color support\n- `.level = 3` and `.has16m = true`: Truecolor support (16 million colors)\n\n\n## Info\n\nIt obeys the `--color` and `--no-color` CLI flags.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Related\n\n- [supports-color-cli](https://github.com/chalk/supports-color-cli) - CLI for this module\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/supports-color/issues" }, "homepage": "https://github.com/chalk/supports-color#readme", "_id": "supports-color@5.5.0", "_requested": { "type": "version", "registry": true, "raw": "supports-color@5.5.0", "name": "supports-color", "escapedName": "supports-color", "rawSpec": "5.5.0", "saveSpec": "[Circular]", "fetchSpec": "5.5.0" }, "_spec": "5.5.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "supports-color@5.5.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "has-flag": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-reporter/node_modules/supports-color", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "coveralls": "^3.0.0", "execa": "^0.9.0", "flow-bin": "^0.68.0", "import-fresh": "^2.0.0", "matcha": "^0.7.0", "nyc": "^11.0.2", "resolve-from": "^4.0.0", "typescript": "^2.5.3", "xo": "*" }, "types": "types/index.d.ts", "xo": { "envs": [ "node", "mocha" ], "ignores": [ "test/_flow.js" ] }, "_resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz", "_integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==", "_from": "chalk@2.4.2", "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\n### [See what's new in Chalk 2](https://github.com/chalk/chalk/releases/tag/v2.0.0)\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" alt=\"\" width=\"900\">\n\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~23,000 packages](https://www.npmjs.com/browse/depended/chalk) as of December 31, 2017\n\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n<a href=\"https://www.patreon.com/sindresorhus\">\n\t<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\">\n</a>\n\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, as is the level (see `chalk.level`). However, if you'd like to simply enable/disable Chalk, you can do so via the `.enabled` property.\n\nChalk is enabled by default unless explicitly disabled via the constructor or `chalk.level` is `0`.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.level\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({level: 0});\n```\n\nLevels are as follows:\n\n0. All colors disabled\n1. Basic color support (16 colors)\n2. 256 color support\n3. Truecolor support (16 million colors)\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n- `visible` (Text is emitted only if enabled)\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(On Windows the bright version is used since normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](http://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 5280;\n\nconsole.log(chalk`\n There are {bold 5280 feet} in a mile.\n In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following two statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model) - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- `ansi16`\n- `ansi256`\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://cmder.net/) instead of `cmd.exe`.\n\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/chalk/issues" }, "homepage": "https://github.com/chalk/chalk#readme", "_id": "chalk@2.4.2", "_requested": { "type": "version", "registry": true, "raw": "chalk@2.4.2", "name": "chalk", "escapedName": "chalk", "rawSpec": "2.4.2", "saveSpec": "[Circular]", "fetchSpec": "2.4.2" }, "_spec": "2.4.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "chalk@2.4.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ansi-styles": "^3.2.1", "escape-string-regexp": "^1.0.5", "supports-color": "^5.3.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-reporter/node_modules/chalk", "error": "[Circular]", "extraneous": false } }, "engines": { "node": ">=6" }, "_resolved": "https://registry.npmjs.org/postcss-reporter/-/postcss-reporter-6.0.1.tgz", "_integrity": "sha512-LpmQjfRWyabc+fRygxZjpRxfhRf9u/fdlKf4VHG4TSPbV2XNsuISzYW1KL+1aQzx53CAppa1bKG4APIB/DOXXw==", "_from": "postcss-reporter@6.0.1", "readme": "# postcss-reporter\n[![Build Status](https://travis-ci.org/postcss/postcss-reporter.svg?branch=master)](https://travis-ci.org/postcss/postcss-reporter)\n[![AppVeyor Build Status](https://img.shields.io/appveyor/ci/davidtheclark/postcss-reporter/master.svg?label=windows%20build)](https://ci.appveyor.com/project/davidtheclark/postcss-reporter)\n\nA PostCSS plugin to `console.log()` the messages (warnings, etc.) registered by other PostCSS plugins.\n\n---\n\n**SEEKING A NEW MAINTAINER!** Interested in contributing to the ecosystem of PostCSS and Stylelint? Please open an issue if you'd like to take over maintenance of this package.\n\n---\n\n## Purpose\n\nAs of PostCSS 4.1, a single PostCSS process can accumulate messages from all of the plugins it uses.\nMost of these messages are [warnings](https://github.com/postcss/postcss/blob/master/docs/guidelines/plugin.md#32-use-resultwarn-for-warnings).\nPresumably, plugin authors want you to see those messages.\nSo this plugin exists to read the accumulated messages (or messages from only the plugins you've specified), format them, and print them to the console.\n\nBy default, the messages are formatted for human legibility and sorted according to the line/column positions attached to the messages. But another formatting function can be passed in with an option, and sorting can be turned of with an option.\n\n*By default, only warnings are logged*. If you would like to see more messages, you can change the `filter` function.\n\n## Example Output\n\n![Example](example.png?raw=true)\n\n## Installation\n\n```\nnpm install postcss-reporter\n```\n\nVersion 1.0.0+ is compatible with PostCSS 5+. (Earlier versions are compatible with PostCSS 4.)\n\n## Usage\n\nAdd it to your plugin list *after any plugins whose messages you want to log*, and optionally pass it an object of options.\n\nFor example, using [gulp-postcss](https://github.com/postcss/gulp-postcss):\n\n```js\ngulp.task('css', function() {\n return gulp.src('./src/*.css')\n .pipe(postcss([\n bemLinter(),\n customProperties(),\n calc(),\n rejectAllColors(),\n reporter(myOptions) // <------ ding\n ]))\n .pipe(gulp.dest('./dist'));\n});\n```\n\n## Options\n\n**clearReportedMessages** (boolean, default = `false`)\n\nIf true, the plugin will clear the result's messages after it logs them. This prevents other plugins, or the whatever runner you use, from logging the same information again and causing confusion.\n\n**formatter** (function, default = the default formatter)\n\nBy default, this reporter will format the messages for human legibility in the console.\nTo use another formatter, pass a function that\n\n - accepts an object containing a `messages` array and a `source` string\n - returns the string to report\n\nFor example, you could write a formatter like this:\n\n```js\nreporter({\n formatter: function(input) {\n return input.source + ' produced ' + input.messages.length + ' messages';\n }\n})\n```\n\n**plugins** (array of strings, default = `[]`)\n\nIf `plugins` is empty (as it is by default), the reporter will log messages from every PostCSS plugin.\n\nThere are 2 ways to limit output:\n\n- **Whitelist:** Provide an array of the plugins whose messages you would like to show.\n For example, `{ plugins: ['postcss-bem-linter'] }` will only log messages from the `postcss-bem-linter` plugin.\n- **Blacklist:** Prefix all plugins in the array with `!` to specify only those plugins whose messages you would like to hide.\n (All other plugins will be shown.)\n For example, `{ plugins: ['!postcss-bem-linter'] }` will never log messages from the `postcss-bem-linter` plugin; but will log messages from every other plugin.\n\n**filter** (function)\n\nProvide a filter function. It receives the message object and returns a truthy or falsy value, indicating whether that particular message should be reported or not.\n\nBy default, only messages with `type: \"warning\"` warnings are logged. (These are the messages produced when the plugin author uses PostCSS's `warn()` function.)\n\nFor example, `function(message) { return true }` will only every message, regardless of the plugin or whether it's a warning or not.\n\n**clearAllMessages** (boolean, default = `false`)\n\nIf `true`, not pass any messages into other plugins, or the whatever runner you use, for logging.\n\n**throwError** (boolean, default = `false`)\n\nIf `true`, after the plugin logs your messages it will throw an error if it found any warnings.\n\n**sortByPosition** (boolean, default = `true`)\n\nIf `false`, messages will not be sorted by line/column position.\n\n**positionless** (`\"first\"|\"last\"|\"any\"`, default = `\"first\"`)\n\nBy default, messages without line/column positions will be grouped at the beginning of the output.\nTo put them at the end, instead, use `\"last\"`.\nTo not bother sorting these, use `\"any\"`.\n\n**noIcon** (boolean, default = `false`)\n\nIf `true`, no exclamatory triangle icons will be printed next to warnings.\n\n**noPlugin** (boolean, default = `false`)\n\nIf `true`, plugin names will not be printed in brackets after messages.\n\n## How to get output without colors\n\nIf you would like no colors in the console output, simply pass `--no-colors` when you invoke whatever command runs this plugin. (This works because of [chalk](https://github.com/sindresorhus/chalk).)\n\n## Standalone formatter\n\nYou can also use this module's formatter as a library, with following API:\n\n```js\nvar formatter = require('postcss-reporter/lib/formatter');\nvar myFormatter = formatter(myOptions);\n// to use defaults, just pass no options: `formatter()`\nvar warningLog = myFormatter({\n messages: someMessages,\n source: someSource\n});\nconsole.log(warningLog);\n```\n\nThese are the formatter's options:\n\n- sortByPosition (boolean, default = `true`)\n- noIcon (boolean, default = `false`) - Do not print any warning exclamatory triangle icons\n- noPlugin (boolean, default = `false`) - Do not print plugin names\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/postcss/postcss-reporter/issues" }, "homepage": "https://github.com/postcss/postcss-reporter#readme", "_id": "postcss-reporter@6.0.1", "_requested": { "type": "version", "registry": true, "raw": "postcss-reporter@6.0.1", "name": "postcss-reporter", "escapedName": "postcss-reporter", "rawSpec": "6.0.1", "saveSpec": "[Circular]", "fetchSpec": "6.0.1" }, "_spec": "6.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-reporter@6.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "chalk": "^2.4.1", "lodash": "^4.17.11", "log-symbols": "^2.2.0", "postcss": "^7.0.7" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-reporter", "error": "[Circular]", "extraneous": false }, "postcss-resolve-nested-selector": { "name": "postcss-resolve-nested-selector", "version": "0.1.1", "description": "Resolve a nested selector in a PostCSS AST", "main": "index.js", "scripts": { "test": "ava test/*-test.js" }, "author": { "name": "David Clark" }, "license": "MIT", "files": [ "index.js" ], "devDependencies": { "ava": "0.12.0", "postcss": "5.0.16", "postcss-nested": "1.0.0", "postcss-nesting": "2.2.0" }, "_resolved": "https://registry.npmjs.org/postcss-resolve-nested-selector/-/postcss-resolve-nested-selector-0.1.1.tgz", "_integrity": "sha1-Kcy8fDfe36wwTp//C/FZaz9qDk4=", "_from": "postcss-resolve-nested-selector@0.1.1", "readme": "# postcss-resolve-nested-selector\n\n[![Build Status](https://travis-ci.org/davidtheclark/postcss-resolve-nested-selector.svg?branch=master)](https://travis-ci.org/davidtheclark/postcss-resolve-nested-selector)\n\nGiven a (nested) selector in a PostCSS AST, return an array of resolved selectors.\n\nTested to work with the syntax of\n[postcss-nested](https://github.com/postcss/postcss-nested)\nand [postcss-nesting](https://github.com/jonathantneal/postcss-nesting).\nShould also work with SCSS and Less syntax. If you'd like to help out by\nadding some automated tests for those, that'd be swell. In fact, if you'd\nlike to add any automated tests, you are a winner!\n\n## API\n\n`resolveNestedSelector(selector, node)`\n\nReturns an array of selectors resolved from `selector`.\n\nFor example, given this JS:\n\n```js\nvar resolvedNestedSelector = require('postcss-resolve-nested-selector');\npostcssRoot.eachRule(function(rule) {\n rule.selectors.forEach(function(selector) {\n console.log(resolvedNestedSelector(selector, rule));\n });\n});\n```\n\nAnd the following CSS:\n\n```scss\n.foo {\n .bar {\n color: pink;\n }\n}\n```\n\nThis should log:\n\n```\n['.foo']\n['.foo .bar']\n```\n\nOr with this CSS:\n\n```scss\n.foo {\n .bar &,\n a {\n color: pink;\n }\n}\n```\n\nThis should log:\n\n```\n['.foo']\n['.bar .foo']\n['.foo a']\n```\n", "readmeFilename": "README.md", "_id": "postcss-resolve-nested-selector@0.1.1", "_requested": { "type": "version", "registry": true, "raw": "postcss-resolve-nested-selector@0.1.1", "name": "postcss-resolve-nested-selector", "escapedName": "postcss-resolve-nested-selector", "rawSpec": "0.1.1", "saveSpec": "[Circular]", "fetchSpec": "0.1.1" }, "_spec": "0.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-resolve-nested-selector@0.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-resolve-nested-selector", "error": "[Circular]", "extraneous": false }, "postcss-safe-parser": { "name": "postcss-safe-parser", "version": "4.0.1", "description": "Fault-tolerant CSS parser for PostCSS", "keywords": [ "css", "postcss", "postcss-syntax", "parser", "fault tolerant" ], "author": { "name": "Andrey Sitnik", "email": "andrey@sitnik.ru" }, "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/postcss/postcss-safe-parser.git" }, "engines": { "node": ">=6.0.0" }, "dependencies": { "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": "[Circular]", "keywords": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://postcss.org/", "repository": "[Circular]", "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": "[Circular]", "browser": "[Circular]", "browserslist": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" } }, "devDependencies": { "babel-core": "^6.26.3", "babel-eslint": "^8.2.6", "babel-plugin-add-module-exports": "^0.2.1", "babel-plugin-precompile-charcodes": "^1.1.0", "babel-preset-env": "^1.7.0", "del": "^3.0.0", "eslint": "^5.1.0", "eslint-config-logux": "^23.0.2", "eslint-config-postcss": "^3.0.2", "eslint-config-standard": "^11.0.0", "eslint-plugin-import": "^2.13.0", "eslint-plugin-jest": "^21.17.0", "eslint-plugin-node": "^6.0.1", "eslint-plugin-promise": "^3.8.0", "eslint-plugin-security": "^1.4.0", "eslint-plugin-standard": "^3.1.0", "gulp": "^3.9.1", "gulp-babel": "^7.0.1", "gulp-changed": "^3.2.0", "gulp-eslint": "^5.0.0", "gulp-jest": "^4.0.2", "gulp-sourcemaps": "^2.6.4", "jest": "^23.4.1", "jest-cli": "^23.4.1", "lint-staged": "^7.2.0", "postcss-parser-tests": "^6.3.0", "pre-commit": "^1.1.3", "run-sequence": "^2.2.1" }, "scripts": { "lint-staged": "lint-staged", "test": "gulp" }, "eslintConfig": { "parser": "babel-eslint", "extends": "eslint-config-postcss", "overrides": [ { "files": [ "gulpfile.js" ], "rules": { "node/no-unpublished-require": "off", "global-require": "off" } } ] }, "jest": { "testEnvironment": "node", "modulePathIgnorePatterns": [ "<rootDir>/build" ] }, "babel": { "presets": [ [ "env", { "targets": { "browsers": [ "last 2 version", "not dead", "not Explorer 11", "not ExplorerMobile 11" ], "node": 6 }, "loose": true } ] ], "plugins": [ "add-module-exports", "precompile-charcodes" ] }, "main": "lib/safe-parse", "lint-staged": { "test/*.js": "eslint", "lib/*.es6": "eslint" }, "pre-commit": [ "lint-staged" ], "_resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-4.0.1.tgz", "_integrity": "sha512-xZsFA3uX8MO3yAda03QrG3/Eg1LN3EPfjjf07vke/46HERLZyHrTsQ9E1r1w1W//fWEhtYNndo2hQplN2cVpCQ==", "_from": "postcss-safe-parser@4.0.1", "readme": "# PostCSS Safe Parser [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n title=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\nA fault-tolerant CSS parser for [PostCSS], which will find & fix syntax errors,\ncapable of parsing any input. It is useful for:\n\n* Parse legacy code with many hacks. For example, it can parse all examples\n from [Browserhacks].\n* Works with demo tools with live input like [Autoprefixer demo].\n\n[Autoprefixer demo]: http://simevidas.jsbin.com/gufoko/quiet\n[Browserhacks]: http://browserhacks.com/\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]: https://img.shields.io/travis/postcss/postcss-safe-parser.svg\n[ci]: https://travis-ci.org/postcss/postcss-safe-parser\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Usage\n\n```js\nvar safe = require('postcss-safe-parser');\nvar badCss = 'a {';\n\npostcss(plugins).process(badCss, { parser: safe }).then(function (result) {\n result.css //= 'a {}'\n});\n```\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/postcss/postcss-safe-parser/issues" }, "homepage": "https://github.com/postcss/postcss-safe-parser#readme", "_id": "postcss-safe-parser@4.0.1", "_requested": { "type": "version", "registry": true, "raw": "postcss-safe-parser@4.0.1", "name": "postcss-safe-parser", "escapedName": "postcss-safe-parser", "rawSpec": "4.0.1", "saveSpec": "[Circular]", "fetchSpec": "4.0.1" }, "_spec": "4.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-safe-parser@4.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "postcss": "^7.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-safe-parser", "error": "[Circular]", "extraneous": false }, "postcss-sass": { "name": "postcss-sass", "version": "0.3.5", "description": "A Sass parser for PostCSS, using gonzales-pe.", "keywords": [ "postcss", "css", "postcss-plugin", "postcss-sass", "sass" ], "author": { "name": "Oleh Aloshkin", "email": "olegaleshkin@gmail.com" }, "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/AleshaOleg/postcss-sass.git" }, "bugs": { "url": "https://github.com/AleshaOleg/postcss-sass/issues" }, "homepage": "https://github.com/AleshaOleg/postcss-sass", "dependencies": { "gonzales-pe": { "name": "gonzales-pe", "description": "Gonzales Preprocessor Edition (fast CSS parser)", "version": "4.2.4", "homepage": "http://github.com/tonyganch/gonzales-pe", "bugs": { "url": "http://github.com/tonyganch/gonzales-pe/issues" }, "license": "MIT", "author": { "name": "Tony Ganch", "email": "tonyganch+github@gmail.com", "url": "http://tonyganch.com" }, "main": "./lib/gonzales", "repository": { "type": "git", "url": "git+ssh://git@github.com/tonyganch/gonzales-pe.git" }, "scripts": { "autofix-tests": "bash ./scripts/build.sh && bash ./scripts/autofix-tests.sh", "build": "bash ./scripts/build.sh", "init": "bash ./scripts/init.sh", "lint": "bash ./scripts/lint.sh", "log": "bash ./scripts/log.sh", "prepublishOnly": "bash ./scripts/build.sh", "test": "bash ./scripts/test.sh", "watch": "bash ./scripts/watch.sh" }, "bin": { "gonzales": "./bin/gonzales.js" }, "dependencies": { "minimist": { "name": "minimist", "version": "1.1.3", "description": "parse argument options", "main": "index.js", "devDependencies": { "covert": "^1.0.0", "tap": "~0.4.0", "tape": "^3.5.0" }, "scripts": { "test": "tap test/*.js", "coverage": "covert test/*.js" }, "testling": { "files": "test/*.js", "browsers": [ "ie/6..latest", "ff/5", "firefox/latest", "chrome/10", "chrome/latest", "safari/5.1", "safari/latest", "opera/12" ] }, "repository": { "type": "git", "url": "git://github.com/substack/minimist.git" }, "homepage": "https://github.com/substack/minimist", "keywords": [ "argv", "getopt", "parser", "optimist" ], "author": { "name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net" }, "license": "MIT", "_resolved": "https://registry.npmjs.org/minimist/-/minimist-1.1.3.tgz", "_integrity": "sha1-O+39kaktOQFvz6ocaB6Pqhoe/ag=", "_from": "minimist@1.1.3", "readme": "# minimist\n\nparse argument options\n\nThis module is the guts of optimist's argument parser without all the\nfanciful decoration.\n\n[![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)\n\n[![build status](https://secure.travis-ci.org/substack/minimist.png)](http://travis-ci.org/substack/minimist)\n\n# example\n\n``` js\nvar argv = require('minimist')(process.argv.slice(2));\nconsole.dir(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: 'beep', b: 'boop' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ 'foo', 'bar', 'baz' ],\n x: 3,\n y: 4,\n n: 5,\n a: true,\n b: true,\n c: true,\n beep: 'boop' }\n```\n\n# methods\n\n``` js\nvar parseArgs = require('minimist')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn't have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `'--'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a boolean, string or array of strings to always treat as\nbooleans. if `true` will treat all double hyphenated arguments without equal signs\nas boolean (e.g. affects `--foo`, not `-f` or `--foo=bar`)\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n* `opts.stopEarly` - when true, populate `argv._` with everything after the\nfirst non-option\n* `opts['--']` - when true, populate `argv._` with everything before the `--`\nand `argv['--']` with everything after the `--`. Here's an example:\n* `opts.unknown` - a function which is invoked with a command line parameter not\ndefined in the `opts` configuration object. If the function returns `false`, the\nunknown option is not added to `argv`.\n\n```\n> require('./')('one two three -- four five --six'.split(' '), { '--': true })\n{ _: [ 'one', 'two', 'three' ],\n '--': [ 'four', 'five', '--six' ] }\n```\n\nNote that with `opts['--']` set, parsing for arguments still stops after the\n`--`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT\n", "readmeFilename": "readme.markdown", "bugs": { "url": "https://github.com/substack/minimist/issues" }, "_id": "minimist@1.1.3", "_requested": { "type": "version", "registry": true, "raw": "minimist@1.1.3", "name": "minimist", "escapedName": "minimist", "rawSpec": "1.1.3", "saveSpec": "[Circular]", "fetchSpec": "1.1.3" }, "_spec": "1.1.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "minimist@1.1.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/gonzales-pe/node_modules/minimist", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "babel-core": "^6.18.2", "babel-loader": "^6.2.7", "babel-plugin-add-module-exports": "^0.2.1", "babel-preset-es2015": "^6.18.0", "coffee-script": "~1.7.1", "eslint": "^3.0.0", "jscs": "2.1.0", "jshint": "2.10.2", "json-loader": "^0.5.3", "mocha": "2.2.x", "webpack": "^1.12.2", "webpack-closure-compiler": "^2.0.2" }, "engines": { "node": ">=0.6.0" }, "files": [ "MIT-LICENSE.txt", "bin/gonzales.js", "lib/gonzales.js" ], "_resolved": "https://registry.npmjs.org/gonzales-pe/-/gonzales-pe-4.2.4.tgz", "_integrity": "sha512-v0Ts/8IsSbh9n1OJRnSfa7Nlxi4AkXIsWB6vPept8FDbL4bXn3FNuxjYtO/nmBGu7GDkL9MFeGebeSu6l55EPQ==", "_from": "gonzales-pe@4.2.4", "readme": "# Gonzales PE @dev\n\n[![NPM version][npm-img]][npm]\n[![Build Status][travis-img]][travis]\n[![AppVeyor Build Status][appveyor-img]][appveyor]\n\n[npm-img]: https://img.shields.io/npm/v/gonzales-pe.svg\n[npm]: https://www.npmjs.com/package/gonzales-pe\n[travis-img]: https://travis-ci.org/tonyganch/gonzales-pe.svg\n[travis]: https://travis-ci.org/tonyganch/gonzales-pe\n[appveyor-img]: https://ci.appveyor.com/api/projects/status/m29jphtrqt398v2o/branch/dev?svg=true\n[appveyor]: https://ci.appveyor.com/project/tonyganch/gonzales-pe/branch/dev\n\nGonzales PE is a CSS parser which plays nicely with preprocessors. \nCurrently those are supported: SCSS, Sass, LESS. \nTry out Gonzales PE online: [Gonzales PE Playground](http://tonyganch.io/gonzales-pe/).\n\n## Install\n\n(1) To install command-line tool globally:\n\n```bash\nnpm install -g git://github.com/tonyganch/gonzales-pe.git#dev\n```\n\n(2) To install parser as a project dependency:\n\n```bash\nnpm install --save git://github.com/tonyganch/gonzales-pe.git#dev\n```\n\n(3) If for some reason you want to build files yourself:\n\n```bash\n# Clone the repo.\ngit clone git@github.com:tonyganch/gonzales-pe.git\n# Go to dev branch.\ngit checkout dev\n# Install project dependencies.\nnpm install\n# Install git hooks and build files.\nnpm run init\n```\n\n## API\n\nBasically there are a few things you can do:\n\n1. parse css string and get a parse tree in return;\n2. modify tree nodes;\n3. remove tree nodes;\n4. add new nodes to the tree;\n5. convert modified tree back to a string.\n\nThe different type of tree nodes can be found in [docs/node-types.md](https://github.com/tonyganch/gonzales-pe/blob/dev/docs/node-types.md).\n\nIn examples below I assume that `gonzales` is a parser module and `parseTree`\nis some parsed css:\n\n```js\nlet gonzales = require('gonzales-pe');\nlet parseTree = gonzales.parse(css);\n```\n\n### gonzales.createNode(options)\n\n##### Description\n\nCreates a new node. Useful when you need to add something to a tree.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{Object}</i></td>\n <td>options</td>\n <td>Options to pass to a `Node` constructor.</td>\n </tr>\n <tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{Object}</i></td>\n <td>A new node.</td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nlet css = 'a {color: tomato}';\nlet parseTree = gonzales.parse(css);\nlet node = gonzales.createNode({ type: 'animal', content: 'panda' });\nparseTree.content.push(node);\n```\n\n\n### gonzales.parse(css[, options])\n\n##### Description\n\nParses a css string.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string}</i></td>\n <td>css</td>\n <td>A string to parse.</td>\n </tr>\n <tr>\n <td><i>{Object=}</i></td>\n <td>options</td>\n <td>Optional. Additional options:\n <ul>\n <li>\n <code>{string} syntax</code> — any of the following: <code>css</code>,\n <code>less</code>, <code>sass</code>, <code>scss</code>.\n Default one is <code>css</code>.\n </li>\n <li>\n <code>{string} context</code> — root node's type. For a list of available\n values see <a href=\"docs/node-types.md\">\"Node types\"</a>. Default\n one is <code>stylesheet</code>.\n </li>\n <li>\n <code>{number} tabSize</code> — size of a tab character in spaces.\n Default one is 1.\n </li>\n </ul>\n </td>\n </tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{Object}</i></td>\n <td>Parse tree.</td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nlet css = 'a {color: tomato}';\nlet parseTree = gonzales.parse(css);\n```\n\n```js\nlet less = 'a {$color: tomato}';\nlet parseTree = gonzales.parse(less, {syntax: 'less'});\n```\n\n```js\nlet less = '$color: tomato';\nlet parseTree = gonzales.parse(less, {syntax: 'less', rule: 'declaration'});\n```\n\n### parseTree.contains(type)\n\n##### Description\n\nChecks whether there is a child node of given type.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string}</i></td>\n <td>type</td>\n <td>\n Node type we're looking for. For a list of available values see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{boolean}</i></td>\n <td>\n <code>true</code> if a tree contains a child node of a given type,\n <code>false</code> otherwise.\n </td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nif (parseTree.contains('space')) {\n doSomething();\n}\n```\n\n### parseTree.content\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{string|Array}</i></td>\n <td>Node's content (child nodes or a string).</td>\n </tr>\n</table>\n\n### parseTree.eachFor([type, ]callback)\n\n##### Description\n\nCalls a function for every child node in tree. If `type` parameter is passed,\ncalls a function only for child nodes of a given type. The main difference from\n`parseTree.forEach()` is that this method loops through node list from the end\nto beginning.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string=}</i></td>\n <td>type</td>\n <td>\n Optional. A node type by which to filter child nodes before applying\n a callback function. For a list of available values see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n <tr>\n <td><i>{Function}</i></td>\n <td>callback</td>\n <td>\n Function to call for every child node. Accepts following parameters:\n <ul>\n <li><code>{Object}</code> — a child node;</li>\n <li><code>{number}</code> — index of the child node in node list;</li>\n <li>\n <code>{Object}</code> — parent node (equals to <code>parseTree</code>).\n </li>\n </ul>\n </td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nparseTree.eachFor(function(childNode) {\n doSomething(childNode);\n});\n```\n\n```js\n// Remove all child spaces.\nparseTree.eachFor('space', function(spaceNode, i) {\n parseTree.removeChild(i);\n});\n```\n\n### parseTree.end\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{Object}</i></td>\n <td>\n End position of the node. Contains following info:\n <ul>\n <li>\n <code>{number} line</code> — last symbol's line number\n (1-based index);\n </li>\n <li>\n <code>{number} column</code> — last symbol's column number\n (1-based index).\n </li>\n </ul>\n </td>\n </tr>\n</table>\n\n### parseTree.first([type])\n\n##### Description\n\nGets the first child node. If `type` parameter is passed, gets the first child\nnode of a given type. If no node has been found, returns `null`.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string=}</i></td>\n <td>type</td>\n <td>\n Optional. Node type to look for. For a list of available values see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{?Object}</i></td>\n <td>A node.</td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nlet node = parseTree.first();\nnode.content = 'panda';\n```\n\n```js\nlet node = parseTree.first('multilineComment');\nnode.content = 'panda';\n```\n\n### parseTree.forEach([type, ]callback)\n\n##### Description\n\nCalls a function for every child node in tree. If `type` parameter is passed,\ncalls a function only for child nodes of a given type. The main difference from\n`parseTree.eachFor()` is that this method loops through node list from the\nbeginnig to end.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string=}</i></td>\n <td>type</td>\n <td>\n Optional. A node type by which to filter child nodes before applying\n a callback function. For a list of available values see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n <tr>\n <td><i>{Function}</i></td>\n <td>callback</td>\n <td>\n Function to call for every child node. Accepts following parameters:\n <ul>\n <li><code>{Object}</code> — a child node;</li>\n <li><code>{number}</code> — index of the child node in node list;</li>\n <li>\n <code>{Object}</code> — parent node (equals to <code>parseTree</code>).\n </li>\n </ul>\n </td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nparseTree.forEach(function(childNode) {\n doSomething();\n});\n```\n\n```js\nparseTree.forEach('space', function(spaceNode) {\n doSomething();\n});\n```\n\n### parseTree.get(index)\n\n##### Description\n\nGets *nth* child of the `parseTree`. If no node has been found, returns `null`.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{number}</i></td>\n <td>index</td>\n <td>Index number of node which we're looking for.</td>\n </tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{?Object}</i></td>\n <td>A node.</td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nvar node = parseTree.get(2);\ndoSomething(node);\n```\n\n### parseTree.insert(index, node)\n\n##### Description\n\nInserts a node to a given position in `parseTree`.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{number}</i></td>\n <td>index</td>\n <td>Index of position where to insert the node.</td>\n </tr>\n <tr>\n <td><i>{Object}</i></td>\n <td>node</td>\n <td>A node to insert.</td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nlet node = gonzales.createNode({type: 'animal', content: 'panda'});\nparseTree.insert(2, node);\n```\n\n### parseTree.is(type)\n\n##### Description\n\nChecks whether the node is of given type.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string}</i></td>\n <td>type</td>\n <td>\n A node type against which to check type of <code>parseTree</code>.\n For a list of available values see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{boolean}</i></td>\n <td>\n <code>true</code> if types are equal, <code>false</code> otherwise.\n </td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nif (node.is('space')) {\n node.content = '';\n}\n```\n\n### parseTree.last(type)\n\nGets the last child node. If `type` parameter is passed, gets the last child\nnode of a given type. If no node has been found, returns `null`.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string=}</i></td>\n <td>type</td>\n <td>\n Optional. Node type to look for. For a list of available values see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{?Object}</i></td>\n <td>A node.</td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nlet node = parseTree.last();\nnode.content = 'panda';\n```\n\n```js\nlet node = parseTree.last('multilineComment');\nnode.content = 'panda';\n```\n\n### parseTree.length\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{number}</i></td>\n <td>Number of child nodes.</td>\n </tr>\n</table>\n\n### parseTree.removeChild(index)\n\n##### Description\n\nRemoves a child node at a given position.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{number}</i></td>\n <td>index</td>\n <td>Index of a child node we need to remove.</td>\n </tr>\n</table>\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{Object}</i></td>\n <td>Removed node.</td>\n </tr>\n</table>\n##### Examples\n\n```js\n// Swap nodes.\nvar node = parseTree.removeChild(1);\nparseTree.insert(0, node);\n```\n\n### parseTree.start\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{Object}</i></td>\n <td>\n Start position of the node. Contains following info:\n <ul>\n <li>\n <code>{number} line</code> — first symbol's line number\n (1-based index);\n </li>\n <li>\n <code>{number} column</code> — first symbol's column number\n (1-based index).\n </li>\n </ul>\n </td>\n </tr>\n</table>\n\n\n### parseTree.syntax\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{string}</i></td>\n <td>Syntax of original parsed string.</td>\n </tr>\n</table>\n\n### parseTree.toJson()\n\n##### Description\n\nConverts parse tree to JSON. Useful for printing.\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{Object}</i></td>\n <td>Parse tree in JSON</td>\n </tr>\n</table>\n\n### parseTree.toString()\n\n##### Description\n\nConverts parse tree back to string according to original syntax.\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{string}</i></td>\n <td>A compiled string.</td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nlet css = parseTree.toString();\n```\n\n### parseTree.traverse(callback)\n\n##### Description\n\nCalls the function for every node in a tree including `parseTree` itself.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{Function}</i></td>\n <td>callback</td>\n <td>\n Function to apply to every node. Accepts following parameters:\n <ul>\n <li><code>{Object}</code> — a node to which we apply callback;</li>\n <li><code>{number}</code> — node's index number inside its parent;</li>\n <li><code>{Object}</code> — a node's parent;</li>\n <li>\n <code>{number}</code> — node's nesting level relative to its parent.\n </li>\n </ul>\n </td>\n </tr>\n</table>\n\n##### Examples\n\n```js\nparseTree.traverse(function(node, index, parent) {\n if (node.is('multilineComment')) {\n parent.removeChild(index);\n } else if (node.is('space')) {\n node.content = ' ';\n }\n});\n```\n\n### parseTree.traverseByType(type, callback)\n\n##### Description\n\nThis method should be called for a root node, because calling it for a child\nwill be more time consuming. \nCalls the function for every node of a given type. This means not just child\nnodes, but grandchilds and so on.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{string}</i></td>\n <td>type</td>\n <td>\n Node type. For a list of available values please see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n <tr>\n <td><i>{Function}</i></td>\n <td>callback</td>\n <td>\n Function to apply to every node of a given type.\n Accepts following parameters:\n <ul>\n <li><code>{Object}</code> — a node to which we apply callback;</li>\n <li><code>{number}</code> — node's index number inside its parent;</li>\n <li><code>{Object}</code> — a node's parent.</li>\n </ul>\n </td>\n </tr>\n</table>\n\n##### Examples\n\n```js\n// Remove all comments.\nparseTree.traverseByType('multilineComment', function(node, index, parent) {\n parent.removeChild(index);\n});\n```\n\n### parseTree.traverseByTypes(types, callback)\n\n##### Description\n\nThis method should be called for a root node, because calling it for a child\nwill be more time consuming. \nCalls the function for every node of given types. This means not just child\nnodes, but grandchilds and so on.\n\n##### Parameters\n\n<table>\n <tr>\n <td><i>{Array.string}</i></td>\n <td>types</td>\n <td>\n List of node types. For a list of available values please see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n <tr>\n <td><i>{Function}</i></td>\n <td>callback</td>\n <td>\n Function to apply to every node of given types.\n Accepts following parameters:\n <ul>\n <li><code>{Object}</code> — a node to which we apply callback;</li>\n <li><code>{number}</code> — node's index number inside its parent;</li>\n <li><code>{Object}</code> — a node's parent.</li>\n </ul>\n </td>\n </tr>\n</table>\n\n##### Examples\n\n```js\n// Remove all comments and spaces.\nlet types = ['multilineComment', 'space'];\nparseTree.traverseByTypes(types, function(node, index, parent) {\n parent.removeChild(index);\n});\n```\n\n### parseTree.type\n\n##### Returns\n\n<table>\n <tr>\n <td><i>{string}</i></td>\n <td>\n Node type. For a list of available values see\n <a href=\"docs/node-types.md\">\"Node types\"</a>.\n </td>\n </tr>\n</table>\n\n\n## Test\n\nTo run tests:\n\n npm test\n\nThis command will build library files from sources and run tests on all files\nin syntax directories.\n\nEvery test has 3 files: source stylesheet, expected parse tree and expected\nstring compiled back from parse tree to css.\n\nIf some tests fail, you can find information in test logs:\n\n- `log/test.log` contains all information from stdout;\n- `log/expected.txt` contains only expected text;\n- `log/result.txt` contains only result text.\n\nThe last two are made for your convenience: you can use any diff app to see\nthe defference between them.\n\nIf you want to test one specific string or get a general idea of how Gonzales\nworks, you can use `test/ast.js` file. \nSimply change the first two strings (`css` and `syntax` vars) and run:\n\n node test/single-test.js\n\n## Report\n\nIf you find a bug or want to add a feature, welcome to [Issues](https://github.com/tonyganch/gonzales-pe/issues).\n\nIf you are shy but have a question, feel free to [drop me a\nline](mailto:tonyganch+gonzales@gmail.com).\n", "readmeFilename": "README.md", "_id": "gonzales-pe@4.2.4", "_requested": { "type": "version", "registry": true, "raw": "gonzales-pe@4.2.4", "name": "gonzales-pe", "escapedName": "gonzales-pe", "rawSpec": "4.2.4", "saveSpec": "[Circular]", "fetchSpec": "4.2.4" }, "_spec": "4.2.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "gonzales-pe@4.2.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "minimist": "1.1.x" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/gonzales-pe", "error": "[Circular]", "extraneous": false }, "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": "[Circular]", "keywords": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://postcss.org/", "repository": "[Circular]", "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": "[Circular]", "browser": "[Circular]", "browserslist": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" } }, "devDependencies": { "babel-cli": "^6.26.0", "babel-core": "^6.26.3", "babel-env": "^2.4.1", "babel-jest": "^23.0.0", "babel-plugin-add-module-exports": "^1.0.0", "babel-plugin-precompile-charcodes": "^1.1.0", "coveralls": "^3.0.0", "eslint": "^5.3.0", "eslint-config-logux": "^26.0.0", "eslint-config-postcss": "^3.0.6", "eslint-config-standard": "^12.0.0", "eslint-plugin-import": "^2.12.0", "eslint-plugin-jest": "^21.22.0", "eslint-plugin-node": "^8.0.0", "eslint-plugin-prefer-let": "^1.0.1", "eslint-plugin-promise": "^4.0.0", "eslint-plugin-security": "^1.4.0", "eslint-plugin-standard": "^4.0.0", "greenkeeper-lockfile": "^1.15.1", "husky": "^1.0.0", "istanbul": "^0.4.5", "jest": "^22.4.3", "lint-staged": "^8.0.0", "postcss-parser-tests": "^6.2.1" }, "scripts": { "precommit": "yarn run test && lint-staged", "clean": "rm *.js || echo 'Already cleaned'", "build": "yarn run clean && babel -s inline -d ./ *.es6", "coveralls": "cat ./coverage/lcov.info | ./node_modules/.bin/coveralls", "prepublishOnly": "yarn run build && yarn run test", "pretest": "eslint *.es6 __tests__", "test": "jest" }, "eslintConfig": { "extends": "eslint-config-postcss", "parserOptions": { "ecmaVersion": 6, "sourceType": "module" }, "settings": { "node": { "tryExtensions": [ ".js", ".es6" ] } }, "rules": { "max-len": [ "error", 120 ] } }, "jest": { "collectCoverage": true, "moduleFileExtensions": [ "es6", "js", "json" ], "testPathIgnorePatterns": [ "<rootDir>/__tests__/utils" ], "testEnvironment": "node", "transform": { "^.+\\.es6$": "babel-jest" } }, "babel": { "presets": [ [ "env", { "targets": { "browsers": "last 1 version", "node": 6 }, "loose": true } ] ], "plugins": [ "precompile-charcodes" ] }, "lint-staged": { "*.es6": [ "eslint --fix", "git add" ] }, "main": "index.js", "_resolved": "https://registry.npmjs.org/postcss-sass/-/postcss-sass-0.3.5.tgz", "_integrity": "sha512-B5z2Kob4xBxFjcufFnhQ2HqJQ2y/Zs/ic5EZbCywCkxKd756Q40cIQ/veRDwSrw1BF6+4wUgmpm0sBASqVi65A==", "_from": "postcss-sass@0.3.5", "readme": "# postcss-sass\n\n[![Build Status](https://travis-ci.org/AleshaOleg/postcss-sass.svg?branch=master)](https://travis-ci.org/AleshaOleg/postcss-sass) [![Coverage Status](https://coveralls.io/repos/github/AleshaOleg/postcss-sass/badge.svg)](https://coveralls.io/github/AleshaOleg/postcss-sass) [![Greenkeeper badge](https://badges.greenkeeper.io/AleshaOleg/postcss-sass.svg)](https://greenkeeper.io/) [![Cult Of Martians](http://cultofmartians.com/assets/badges/badge.svg)](http://cultofmartians.com/tasks/postcss-sass.html)\n\nA [Sass](http://sass-lang.com/) parser for [PostCSS](https://github.com/postcss/postcss), using [gonzales-pe](https://github.com/tonyganch/gonzales-pe).\n\n**Not all Sass syntax supported. Parser under development.**\n\n**This module does not compile Sass.** It simply parses mixins as custom at-rules & variables as properties, so that PostCSS plugins can then transform Sass source code alongside CSS.\n\n## Install\n`npm i postcss-sass --save`\n\n## Usage\n```js\nvar postcssSass = require(\"postcss-sass\");\n\npostcss(plugins).process(sass, { syntax: postcssSass }).then(function (result) {\n result.content // Sass with transformations\n});\n```\n", "readmeFilename": "README.md", "_id": "postcss-sass@0.3.5", "_requested": { "type": "version", "registry": true, "raw": "postcss-sass@0.3.5", "name": "postcss-sass", "escapedName": "postcss-sass", "rawSpec": "0.3.5", "saveSpec": "[Circular]", "fetchSpec": "0.3.5" }, "_spec": "0.3.5", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-sass@0.3.5", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "gonzales-pe": "^4.2.3", "postcss": "^7.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-sass", "error": "[Circular]", "extraneous": false }, "postcss-scss": { "name": "postcss-scss", "version": "2.0.0", "description": "SCSS parser for PostCSS", "keywords": [ "css", "postcss", "postcss-syntax", "parser", "scss", "sass" ], "author": { "name": "Andrey Sitnik", "email": "andrey@sitnik.ru" }, "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/postcss/postcss-scss.git" }, "engines": { "node": ">=6.0.0" }, "dependencies": { "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": "[Circular]", "keywords": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://postcss.org/", "repository": "[Circular]", "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": "[Circular]", "browser": "[Circular]", "browserslist": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" } }, "main": "lib/scss-syntax", "_resolved": "https://registry.npmjs.org/postcss-scss/-/postcss-scss-2.0.0.tgz", "_integrity": "sha512-um9zdGKaDZirMm+kZFKKVsnKPF7zF7qBAtIfTSnZXD1jZ0JNZIxdB6TxQOjCnlSzLRInVl2v3YdBh/M881C4ug==", "_from": "postcss-scss@2.0.0", "readme": "# PostCSS SCSS Syntax [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n title=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\nA [SCSS] parser for [PostCSS].\n\n**This module does not compile SCSS.** It simply parses mixins as custom\nat-rules & variables as properties, so that PostCSS plugins can then transform\nSCSS source code alongside CSS.\n\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]: https://img.shields.io/travis/postcss/postcss-scss.svg\n[SCSS]: http://sass-lang.com/\n[ci]: https://travis-ci.org/postcss/postcss-scss\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n\n## Install\n\n```sh\nnpm --save install postcss-scss\n```\n\nor (if you use [Yarn](https://yarnpkg.com/))\n\n```sh\nyarn add --dev postcss-scss\n```\n\n\n## Usage\n\nThere are two ways to use this parser:\n\n### 1. SCSS Transformations\n\nThe main use case of this plugin is to apply PostCSS transformations directly\nto SCSS source code.\n\nFor example, you can lint SCSS source with [Stylelint]\nand linter will automatically fix issues in the source.\n\n```js\n// postcss.config.js\nmodule.exports = {\n syntax: 'postcss-scss',\n plugins: {\n …\n }\n}\n```\n\n[Stylelint]: http://stylelint.io/\n\n\n### 2. Inline Comments for PostCSS\n\nAlso you can use this parser just to add `//` single-line comment\nto your PostCSS project (without any Sass):\n\n```scss\n:root {\n // Main theme color\n --color: red;\n}\n```\n\nNote that you don’t need a special stringifier to handle the output; the default\none will automatically convert single line comments into block comments.\n\n```js\n// postcss.config.js\nmodule.exports = {\n parser: 'postcss-scss',\n plugins: {\n …\n }\n}\n```\n\nIf you want Sass behaviour with removing inline comments, you can use\n[postcss-strip-inline-comments] plugin.\n\n[postcss-strip-inline-comments]: https://github.com/mummybot/postcss-strip-inline-comments\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/postcss/postcss-scss/issues" }, "homepage": "https://github.com/postcss/postcss-scss#readme", "_id": "postcss-scss@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "postcss-scss@2.0.0", "name": "postcss-scss", "escapedName": "postcss-scss", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-scss@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "postcss": "^7.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-scss", "error": "[Circular]", "extraneous": false }, "postcss-syntax": { "name": "postcss-syntax", "version": "0.36.2", "description": "Automatically switch PostCSS syntax by file extensions", "repository": { "type": "git", "url": "git+https://github.com/gucong3000/postcss-syntax.git" }, "keywords": [ "postcss", "syntax", "switch", "extension" ], "author": { "name": "gucong" }, "license": "MIT", "bugs": { "url": "https://github.com/gucong3000/postcss-syntax/issues" }, "homepage": "https://github.com/gucong3000/postcss-syntax#readme", "nyc": { "reporter": [ "lcov", "text" ], "all": true, "cache": true, "check-coverage": true }, "scripts": { "mocha": "mocha --require ./test/fixtures/link --no-timeouts", "test": "nyc npm run mocha", "debug": "npm run mocha -- --inspect-brk" }, "extensions": [ ".css", ".pcss", ".postcss", ".acss", ".wxss", ".sass", ".scss", ".less", ".sss", ".js", ".es6", ".mjs", ".pac", ".jsx", ".ts", ".tsx", ".babel", ".flow", ".html", ".htm", ".shtml", ".xhtml", ".mdoc", ".jsp", ".asp", ".aspx", ".jshtm", ".volt", ".ejs", ".rhtml", ".xsl", ".xslt", ".vue", ".wpy", ".ux", ".php", ".php4", ".php5", ".phtml", ".ctp", ".twig", ".liquid", ".md", ".mdown", ".markdown", ".markdn", ".svelte" ], "peerDependencies": { "postcss": ">=5.0.0" }, "devDependencies": { "chai": "^4.2.0", "codecov": "^3.1.0", "mocha": "^5.2.0", "nyc": "^13.1.0", "postcss": "^7.0.7", "postcss-html": ">=0.36.0", "postcss-jsx": ">=0.36.0", "postcss-less": "^3.1.0", "postcss-markdown": ">=0.36.0", "postcss-safe-parser": "^4.0.1", "postcss-scss": "^2.0.0", "proxyquire": "^2.1.0", "sugarss": "^2.0.0" }, "_resolved": "https://registry.npmjs.org/postcss-syntax/-/postcss-syntax-0.36.2.tgz", "_integrity": "sha512-nBRg/i7E3SOHWxF3PpF5WnJM/jQ1YpY9000OaVXlAQj6Zp/kIqJxEDWIZ67tAd7NLuk7zqN4yqe9nc0oNAOs1w==", "_from": "postcss-syntax@0.36.2", "readme": "PostCSS Syntax\n====\n\n[![NPM version](https://img.shields.io/npm/v/postcss-syntax.svg?style=flat-square)](https://www.npmjs.com/package/postcss-syntax)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntax.svg)](https://travis-ci.org/gucong3000/postcss-syntax)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntaxes.svg?label=integration)](https://travis-ci.org/gucong3000/postcss-syntaxes)\n[![Codecov](https://img.shields.io/codecov/c/github/gucong3000/postcss-syntax.svg)](https://codecov.io/gh/gucong3000/postcss-syntax)\n[![David](https://img.shields.io/david/dev/gucong3000/postcss-syntax.svg)](https://david-dm.org/gucong3000/postcss-syntax?type=dev)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n\ttitle=\"Philosopher’s stone, logo of PostCSS\"\n\tsrc=\"http://postcss.github.io/postcss/logo.svg\">\n\npostcss-syntax can automatically switch the required [PostCSS](https://github.com/postcss/postcss) syntax by file extension/source\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```\nnpm install postcss-syntax --save-dev\n```\n\nIf you want support SCSS/SASS/LESS/SugarSS syntax, you need to install these module:\n\n- SCSS: [postcss-scss](https://github.com/postcss/postcss-scss)\n- SASS: [postcss-sass](https://github.com/aleshaoleg/postcss-sass)\n- LESS: [postcss-less](https://github.com/shellscape/postcss-less)\n- SugarSS: [sugarss](https://github.com/postcss/sugarss)\n\nIf you want support HTML (and HTML-like)/Markdown/CSS-in-JS file format, you need to install these module:\n\n- CSS-in-JS: [postcss-jsx](https://github.com/gucong3000/postcss-jsx)\n- HTML (and HTML-like): [postcss-html](https://github.com/gucong3000/postcss-html)\n- Markdown: [postcss-markdown](https://github.com/gucong3000/postcss-markdown)\n\n## Use Cases\n\n```js\nconst postcss = require('postcss');\nconst syntax = require('postcss-syntax')({\n\trules: [\n\t\t{\n\t\t\ttest: /\\.(?:[sx]?html?|[sx]ht|vue|ux|php)$/i,\n\t\t\textract: 'html',\n\t\t},\n\t\t{\n\t\t\ttest: /\\.(?:markdown|md)$/i,\n\t\t\textract: 'markdown',\n\t\t},\n\t\t{\n\t\t\ttest: /\\.(?:m?[jt]sx?|es\\d*|pac)$/i,\n\t\t\textract: 'jsx',\n\t\t},\n\t\t{\n\t\t\t// custom language for file extension\n\t\t\ttest: /\\.postcss$/i,\n\t\t\tlang: 'scss'\n\t\t},\n\t\t{\n\t\t\t// custom language for file extension\n\t\t\ttest: /\\.customcss$/i,\n\t\t\tlang: 'custom'\n\t\t},\n\t],\n\n\t// custom parser for CSS (using `postcss-safe-parser`)\n\tcss: 'postcss-safe-parser',\n\t// custom parser for SASS (PostCSS-compatible syntax.)\n\tsass: require('postcss-sass'),\n\t// custom parser for SCSS (by module name)\n\tscss: 'postcss-scss',\n\t// custom parser for LESS (by module path)\n\tless: './node_modules/postcss-less',\n\t// custom parser for SugarSS\n\tsugarss: require('sugarss'),\n\t// custom parser for custom language\n\tcustom: require('postcss-custom-syntax'),\n\n});\npostcss(plugins).process(source, { syntax: syntax }).then(function (result) {\n\t// An alias for the result.css property. Use it with syntaxes that generate non-CSS output.\n\tresult.content\n});\n```\n", "readmeFilename": "README.md", "_id": "postcss-syntax@0.36.2", "_requested": { "type": "version", "registry": true, "raw": "postcss-syntax@0.36.2", "name": "postcss-syntax", "escapedName": "postcss-syntax", "rawSpec": "0.36.2", "saveSpec": "[Circular]", "fetchSpec": "0.36.2" }, "_spec": "0.36.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-syntax@0.36.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-syntax", "error": "[Circular]", "extraneous": false }, "postcss-value-parser": { "name": "postcss-value-parser", "version": "3.3.1", "description": "Transforms css values and at-rule params into the tree", "main": "lib/index.js", "files": "[Circular]", "devDependencies": "[Circular]", "scripts": "[Circular]", "eslintConfig": "[Circular]", "lint-staged": "[Circular]", "husky": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://github.com/TrySound/postcss-value-parser", "repository": "[Circular]", "keywords": "[Circular]", "bugs": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz", "_integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==", "_from": "postcss-value-parser@3.3.1", "readme": "# postcss-value-parser\n\n[![Travis CI](https://travis-ci.org/TrySound/postcss-value-parser.svg)](https://travis-ci.org/TrySound/postcss-value-parser)\n\nTransforms CSS declaration values and at-rule parameters into a tree of nodes, and provides a simple traversal API.\n\n## Usage\n\n```js\nvar valueParser = require('postcss-value-parser');\nvar cssBackgroundValue = 'url(foo.png) no-repeat 40px 73%';\nvar parsedValue = valueParser(cssBackgroundValue);\n// parsedValue exposes an API described below,\n// e.g. parsedValue.walk(..), parsedValue.toString(), etc.\n```\n\nFor example, parsing the value `rgba(233, 45, 66, .5)` will return the following:\n\n```js\n{\n nodes: [\n {\n type: 'function',\n value: 'rgba',\n before: '',\n after: '',\n nodes: [\n { type: 'word', value: '233' },\n { type: 'div', value: ',', before: '', after: ' ' },\n { type: 'word', value: '45' },\n { type: 'div', value: ',', before: '', after: ' ' },\n { type: 'word', value: '66' },\n { type: 'div', value: ',', before: ' ', after: '' },\n { type: 'word', value: '.5' }\n ]\n }\n ]\n}\n```\n\nIf you wanted to convert each `rgba()` value in `sourceCSS` to a hex value, you could do so like this:\n\n```js\nvar valueParser = require('postcss-value-parser');\n\nvar parsed = valueParser(sourceCSS);\n\n// walk() will visit all the of the nodes in the tree,\n// invoking the callback for each.\nparsed.walk(function (node) {\n\n // Since we only want to transform rgba() values,\n // we can ignore anything else.\n if (node.type !== 'function' && node.value !== 'rgba') return;\n\n // We can make an array of the rgba() arguments to feed to a\n // convertToHex() function\n var color = node.nodes.filter(function (node) {\n return node.type === 'word';\n }).map(function (node) {\n return Number(node.value);\n }); // [233, 45, 66, .5]\n\n // Now we will transform the existing rgba() function node\n // into a word node with the hex value\n node.type = 'word';\n node.value = convertToHex(color);\n})\n\nparsed.toString(); // #E92D42\n```\n\n## Nodes\n\nEach node is an object with these common properties:\n\n- **type**: The type of node (`word`, `string`, `div`, `space`, `comment`, or `function`).\n Each type is documented below.\n- **value**: Each node has a `value` property; but what exactly `value` means\n is specific to the node type. Details are documented for each type below.\n- **sourceIndex**: The starting index of the node within the original source\n string. For example, given the source string `10px 20px`, the `word` node\n whose value is `20px` will have a `sourceIndex` of `5`.\n\n### word\n\nThe catch-all node type that includes keywords (e.g. `no-repeat`),\nquantities (e.g. `20px`, `75%`, `1.5`), and hex colors (e.g. `#e6e6e6`).\n\nNode-specific properties:\n\n- **value**: The \"word\" itself.\n\n### string\n\nA quoted string value, e.g. `\"something\"` in `content: \"something\";`.\n\nNode-specific properties:\n\n- **value**: The text content of the string.\n- **quote**: The quotation mark surrounding the string, either `\"` or `'`.\n- **unclosed**: `true` if the string was not closed properly. e.g. `\"unclosed string `.\n\n### div\n\nA divider, for example\n\n- `,` in `animation-duration: 1s, 2s, 3s`\n- `/` in `border-radius: 10px / 23px`\n- `:` in `(min-width: 700px)`\n\nNode-specific properties:\n\n- **value**: The divider character. Either `,`, `/`, or `:` (see examples above).\n- **before**: Whitespace before the divider.\n- **after**: Whitespace after the divider.\n\n### space\n\nWhitespace used as a separator, e.g. ` ` occurring twice in `border: 1px solid black;`.\n\nNode-specific properties:\n\n- **value**: The whitespace itself.\n\n### comment\n\nA CSS comment starts with `/*` and ends with `*/`\n\nNode-specific properties:\n\n- **value**: The comment value without `/*` and `*/`\n- **unclosed**: `true` if the comment was not closed properly. e.g. `/* comment without an end `.\n\n### function\n\nA CSS function, e.g. `rgb(0,0,0)` or `url(foo.bar)`.\n\nFunction nodes have nodes nested within them: the function arguments.\n\nAdditional properties:\n\n- **value**: The name of the function, e.g. `rgb` in `rgb(0,0,0)`.\n- **before**: Whitespace after the opening parenthesis and before the first argument,\n e.g. ` ` in `rgb( 0,0,0)`.\n- **after**: Whitespace before the closing parenthesis and after the last argument,\n e.g. ` ` in `rgb(0,0,0 )`.\n- **nodes**: More nodes representing the arguments to the function.\n- **unclosed**: `true` if the parentheses was not closed properly. e.g. `( unclosed-function `.\n\nMedia features surrounded by parentheses are considered functions with an\nempty value. For example, `(min-width: 700px)` parses to these nodes:\n\n```js\n[\n {\n type: 'function', value: '', before: '', after: '',\n nodes: [\n { type: 'word', value: 'min-width' },\n { type: 'div', value: ':', before: '', after: ' ' },\n { type: 'word', value: '700px' }\n ]\n }\n]\n```\n\n`url()` functions can be parsed a little bit differently depending on\nwhether the first character in the argument is a quotation mark.\n\n`url( /gfx/img/bg.jpg )` parses to:\n\n```js\n{ type: 'function', sourceIndex: 0, value: 'url', before: ' ', after: ' ', nodes: [\n { type: 'word', sourceIndex: 5, value: '/gfx/img/bg.jpg' }\n] }\n```\n\n`url( \"/gfx/img/bg.jpg\" )`, on the other hand, parses to:\n\n```js\n{ type: 'function', sourceIndex: 0, value: 'url', before: ' ', after: ' ', nodes: [\n type: 'string', sourceIndex: 5, quote: '\"', value: '/gfx/img/bg.jpg' },\n] }\n```\n\n## API\n\n```\nvar valueParser = require('postcss-value-parser');\n```\n\n### valueParser.unit(quantity)\n\nParses `quantity`, distinguishing the number from the unit. Returns an object like the following:\n\n```js\n// Given 2rem\n{\n number: '2',\n unit: 'rem'\n}\n```\n\nIf the `quantity` argument cannot be parsed as a number, returns `false`.\n\n*This function does not parse complete values*: you cannot pass it `1px solid black` and expect `px` as\nthe unit. Instead, you should pass it single quantities only. Parse `1px solid black`, then pass it\nthe stringified `1px` node (a `word` node) to parse the number and unit.\n\n### valueParser.stringify(nodes[, custom])\n\nStringifies a node or array of nodes.\n\nThe `custom` function is called for each `node`; return a string to override the default behaviour.\n\n### valueParser.walk(nodes, callback[, bubble])\n\nWalks each provided node, recursively walking all descendent nodes within functions.\n\nReturning `false` in the `callback` will prevent traversal of descendent nodes (within functions).\nYou can use this feature to for shallow iteration, walking over only the *immediate* children.\n*Note: This only applies if `bubble` is `false` (which is the default).*\n\nBy default, the tree is walked from the outermost node inwards.\nTo reverse the direction, pass `true` for the `bubble` argument.\n\nThe `callback` is invoked with three arguments: `callback(node, index, nodes)`.\n\n- `node`: The current node.\n- `index`: The index of the current node.\n- `nodes`: The complete nodes array passed to `walk()`.\n\nReturns the `valueParser` instance.\n\n### var parsed = valueParser(value)\n\nReturns the parsed node tree.\n\n### parsed.nodes\n\nThe array of nodes.\n\n### parsed.toString()\n\nStringifies the node tree.\n\n### parsed.walk(callback[, bubble])\n\nWalks each node inside `parsed.nodes`. See the documentation for `valueParser.walk()` above.\n\n# License\n\nMIT © [Bogdan Chadkin](mailto:trysound@yandex.ru)\n", "readmeFilename": "README.md", "_id": "postcss-value-parser@3.3.1", "_requested": { "type": "version", "registry": true, "raw": "postcss-value-parser@3.3.1", "name": "postcss-value-parser", "escapedName": "postcss-value-parser", "rawSpec": "3.3.1", "saveSpec": "[Circular]", "fetchSpec": "3.3.1" }, "_spec": "3.3.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss-value-parser", "error": "[Circular]", "extraneous": false, "_deduped": "postcss-value-parser" }, "signal-exit": { "name": "signal-exit", "version": "3.0.2", "description": "when you want to fire an event no matter how a process exits.", "main": "index.js", "scripts": { "pretest": "standard", "test": "tap --timeout=240 ./test/*.js --cov", "coverage": "nyc report --reporter=text-lcov | coveralls", "release": "standard-version" }, "files": [ "index.js", "signals.js" ], "repository": { "type": "git", "url": "git+https://github.com/tapjs/signal-exit.git" }, "keywords": [ "signal", "exit" ], "author": { "name": "Ben Coe", "email": "ben@npmjs.com" }, "license": "ISC", "bugs": { "url": "https://github.com/tapjs/signal-exit/issues" }, "homepage": "https://github.com/tapjs/signal-exit", "devDependencies": { "chai": "^3.5.0", "coveralls": "^2.11.10", "nyc": "^8.1.0", "standard": "^7.1.2", "standard-version": "^2.3.0", "tap": "^8.0.1" }, "_resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz", "_integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=", "_from": "signal-exit@3.0.2", "readme": "# signal-exit\n\n[![Build Status](https://travis-ci.org/tapjs/signal-exit.png)](https://travis-ci.org/tapjs/signal-exit)\n[![Coverage](https://coveralls.io/repos/tapjs/signal-exit/badge.svg?branch=master)](https://coveralls.io/r/tapjs/signal-exit?branch=master)\n[![NPM version](https://img.shields.io/npm/v/signal-exit.svg)](https://www.npmjs.com/package/signal-exit)\n[![Windows Tests](https://img.shields.io/appveyor/ci/bcoe/signal-exit/master.svg?label=Windows%20Tests)](https://ci.appveyor.com/project/bcoe/signal-exit)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\nWhen you want to fire an event no matter how a process exits:\n\n* reaching the end of execution.\n* explicitly having `process.exit(code)` called.\n* having `process.kill(pid, sig)` called.\n* receiving a fatal signal from outside the process\n\nUse `signal-exit`.\n\n```js\nvar onExit = require('signal-exit')\n\nonExit(function (code, signal) {\n console.log('process exited!')\n})\n```\n\n## API\n\n`var remove = onExit(function (code, signal) {}, options)`\n\nThe return value of the function is a function that will remove the\nhandler.\n\nNote that the function *only* fires for signals if the signal would\ncause the proces to exit. That is, there are no other listeners, and\nit is a fatal signal.\n\n## Options\n\n* `alwaysLast`: Run this handler after any other signal or exit\n handlers. This causes `process.emit` to be monkeypatched.\n", "readmeFilename": "README.md", "_id": "signal-exit@3.0.2", "_requested": { "type": "version", "registry": true, "raw": "signal-exit@3.0.2", "name": "signal-exit", "escapedName": "signal-exit", "rawSpec": "3.0.2", "saveSpec": "[Circular]", "fetchSpec": "3.0.2" }, "_spec": "3.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "signal-exit@3.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/signal-exit", "error": "[Circular]", "extraneous": false }, "specificity": { "name": "specificity", "version": "0.4.1", "description": "Calculate the specificity of a CSS selector", "keywords": [ "CSS", "specificity" ], "homepage": "https://github.com/keeganstreet/specificity", "author": { "name": "Keegan Street", "url": "http://keegan.st" }, "repository": { "type": "git", "url": "git+https://github.com/keeganstreet/specificity.git" }, "license": "MIT", "bugs": { "url": "https://github.com/keeganstreet/specificity/issues" }, "main": "dist/specificity", "module": "dist/specificity.mjs", "bin": { "specificity": "./bin/specificity" }, "scripts": { "prepare": "rollup --config", "test": "mocha test/test.js --require esm" }, "devDependencies": { "esm": "^3.0.71", "mocha": "^5.2.0", "rollup": "^0.62.0" }, "types": "specificity.d.ts", "_resolved": "https://registry.npmjs.org/specificity/-/specificity-0.4.1.tgz", "_integrity": "sha512-1klA3Gi5PD1Wv9Q0wUoOQN1IWAuPu0D1U03ThXTr0cJ20+/iq2tHSDnK7Kk/0LXJ1ztUB2/1Os0wKmfyNgUQfg==", "_from": "specificity@0.4.1", "readme": "# Specificity Calculator\n\nA JavaScript module for calculating and comparing the [specificity of CSS selectors](https://www.w3.org/TR/selectors-3/#specificity). The module is used on the [Specificity Calculator](https://specificity.keegan.st/) website.\n\nSpecificity Calculator is built for CSS Selectors Level 3. Specificity Calculator isn’t a CSS validator. If you enter invalid selectors it will return incorrect results. For example, the [negation pseudo-class](https://www.w3.org/TR/selectors-3/#negation) may only take a simple selector as an argument. Using a psuedo-element or combinator as an argument for `:not()` is invalid CSS so Specificity Calculator will return incorrect results.\n\n## Supported runtime environments\n\nThe module is provided in two formats: an ECMAScript (ES) module in `dist/specificity.mjs`, and a Universal Module Definition (UMD) in `dist/specificity.js`. This enables support for the following runtime environments:\n\n**Browser**\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Directly loaded ES module\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps ES module in a precompiled script (using a bundler like Webpack or Rollup)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global variable\n\n**Node.js**\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps ES module\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps CommonJS module\n\n### Browser usage as a directly loaded ES module\n\n```html\n<script type=\"module\">\n import { calculate } from './specificity/dist/specificity.mjs';\n\n calculate('ul#nav li.active a');\n</script>\n```\n\n### Browser usage as an ES module in a precompiled script\n\nBundlers like [Webpack and Rollup](https://github.com/rollup/rollup/wiki/pkg.module) import from the `module` field in `package.json`, which is set to the ES module artefact, `dist/specificity.mjs`.\n\n```js\nimport { calculate } from 'specificity';\n\ncalculate('ul#nav li.active a');\n```\n\n### Browser usage as a global variable\n\nThe UMD artefact, `dist/specificity.js`, sets a global variable, `SPECIFICITY`.\n\n```html\n<script src=\"./specificity/dist/specificity.js\"></script>\n\n<script>\n SPECIFICITY.calculate('ul#nav li.active a');\n</script>\n```\n\n### Node.js usage as an ES module\n\nThe `main` field in `package.json` has an extensionless value, `dist/specificity`. This allows Node.js to use either the ES module, in `dist/specificity.mjs`, or the CommonJS module, in `dist/specificity.js`.\n\nWhen Node.js is run with the `--experimental-modules` [flag](https://nodejs.org/api/esm.html) or an [ES module loader](https://www.npmjs.com/package/esm), it will use the ES module artefact.\n\n```js\nimport { calculate } from 'specificity';\n\ncalculate('ul#nav li.active a');\n```\n\n### Node.js usage as a CommonJS module\n\nOtherwise, Node.js will use the UMD artefact, which contains a CommonJS module definition.\n\n```js\nconst { calculate } = require('specificity');\n\ncalculate('ul#nav li.active a');\n```\n\n## Calculate function\n\nThe `calculate` function returns an array containing a result object for each selector input. Each result object has the following properties:\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `selector`: the input\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `specificity`: the result as a string e.g. `0,1,0,0`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `specificityArray`: the result as an array of numbers e.g. `[0, 1, 0, 0]`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `parts`: array with details about each part of the selector that counts towards the specificity\n\n## Example\n\n```js\ncalculate('ul#nav li.active a');\n\n/*\n[\n {\n selector: 'ul#nav li.active a',\n specificity: '0,1,1,3',\n specificityArray: [0, 1, 1, 3],\n parts: [\n { selector: 'ul', type: 'c', index: 0, length: 2 },\n { selector: '#nav', type: 'a', index: 2, length: 4 },\n { selector: 'li', type: 'c', index: 5, length: 2 },\n { selector: '.active', type: 'b', index: 8, length: 7 },\n { selector: 'a', type: 'c', index: 13, length: 1 }\n ]\n }\n]\n*/\n```\n\nYou can use comma separation to pass in multiple selectors:\n\n```js\ncalculate('ul#nav li.active a, body.ie7 .col_3 h2 ~ h2');\n\n/*\n[\n {\n selector: 'ul#nav li.active a',\n specificity: '0,1,1,3',\n ...\n },\n {\n selector: 'body.ie7 .col_3 h2 ~ h2',\n specificity: '0,0,2,3',\n ...\n }\n]\n*/\n```\n\n## Comparing two selectors\n\nSpecificity Calculator also exports a `compare` function. This function accepts two CSS selectors or specificity arrays, `a` and `b`.\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps It returns `-1` if `a` has a lower specificity than `b`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps It returns `1` if `a` has a higher specificity than `b`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps It returns `0` if `a` has the same specificity than `b`\n\n```js\ncompare('div', '.active'); // -1\ncompare('#main', 'div'); // 1\ncompare('span', 'div'); // 0\ncompare('span', [0, 0, 0, 1]); // 0\ncompare('#main > div', [0, 1, 0, 1]); // 0\n```\n\n## Ordering an array of selectors by specificity\n\nYou can pass the `compare` function to `Array.prototype.sort` to sort an array of CSS selectors by specificity.\n\n```js\nimport { compare } from 'specificity';\n\n['#main', 'p', '.active'].sort(compare); // ['p', '.active', '#main']\n```\n\n## Command-line usage\n\nRun `npm install specificity` to install the module locally, or `npm install -g specificity` for global installation. Run `specificity` without arguments to learn about its usage:\n\n```bash\n$ specificity\nUsage: specificity <selector>\nComputes specificity of a CSS selector.\n```\n\nPass a selector as the first argument to get its specificity computed:\n\n```bash\n$ specificity \"ul#nav li.active a\"\n0,1,1,3\n```\n\n## Testing\n\nTo install dependencies, run: `npm install`\n\nThen to test, run: `npm test`\n", "readmeFilename": "readme.md", "_id": "specificity@0.4.1", "_requested": { "type": "version", "registry": true, "raw": "specificity@0.4.1", "name": "specificity", "escapedName": "specificity", "rawSpec": "0.4.1", "saveSpec": "[Circular]", "fetchSpec": "0.4.1" }, "_spec": "0.4.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "specificity@0.4.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/specificity", "error": "[Circular]", "extraneous": false }, "style-search": { "name": "style-search", "version": "0.1.0", "description": "Search CSS(-like) strings", "main": "index.js", "scripts": { "test": "tape test.js" }, "repository": { "type": "git", "url": "git+https://github.com/davidtheclark/style-search.git" }, "keywords": [ "css", "search", "stylelint" ], "author": { "name": "David Clark" }, "license": "ISC", "bugs": { "url": "https://github.com/davidtheclark/style-search/issues" }, "homepage": "https://github.com/davidtheclark/style-search#readme", "devDependencies": { "tape": "^4.5.1" }, "_resolved": "https://registry.npmjs.org/style-search/-/style-search-0.1.0.tgz", "_integrity": "sha1-eVjHk+R+MuB9K1yv5cC/jhLneQI=", "_from": "style-search@0.1.0", "readme": "# style-search [![CircleCI](https://circleci.com/gh/davidtheclark/style-search.svg?style=svg)](https://circleci.com/gh/davidtheclark/style-search)\n\nSearch CSS (and CSS-like) strings, with sensitivity to whether matches occur inside strings, comments, and functions.\n\n## Usage\n\n```js\nvar styleSearch = require('style-search');\n\nstyleSearch(options, callback);\n```\n\n**By default, the search ignores strings, comments, and function names.** You can use the options to change this behavior or introduce other restrictions. That is what makes this module more useful for many searches than `indexOf()` or a `RegExp`.\n\nHowever, if you need more detailed parsing, you should consider using the real parsers [PostCSS](https://github.com/postcss/postcss), [`postcss-selector-parser`](https://github.com/postcss/postcss-selector-parser), and [`postcss-value-parser`](https://github.com/TrySound/postcss-value-parser).\n\n### Example\n\n```css\n/* Here is some pink */\na { color: pink; }\na::before { content: \"pink\" }\nb { color: shadesOfPink(7); }\n```\n\n```js\nstyleSearch({\n source: theCssStringAbove,\n target: \"pink\",\n}, function(match, count) {\n /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old Only the \"pink\" in `color: pink` will be\n reported as a match */\n});\n```\n\n### Reporting matches\n\nFor every match found your `callback` is invoked. It is passed two arguments:\n\n- A `match` object with the following properties:\n - `startIndex`: where the match begins\n - `endIndex`: where the match ends\n - `target`: what got matched (useful if your `target` option is an array instead of a single string)\n - `insideFunctionArguments`: whether the match is inside a function — *this includes the parentheses around the arguments*\n - `insideComment`: whether the match is inside a comment\n - `insideString`: whether the match is inside a string\n- The count of how many matches have been found up to this point.\n\n### Options\n\nBelow you'll see that syntax feature options all accept three keywords: `\"skip\"`, `\"check\"`, `\"only\"`. An error will be thrown if you use `\"only\"` more than once.\n\n#### source\n\nString. *Required.*\n\nThe source string to search through.\n\n#### target\n\nString or array of strings. *Required.*\n\nThe target of the search. Can be\n- a single character\n- a string with some length\n- an array of strings, all of which count as matches (the `match` object passed to the `callback` will differentiate which string in the array got matched via its `target` property)\n\n#### once\n\nBoolean. Default: `false`.\n\nIf `true`, the search will stop after one match is found.\n\n#### comments\n\n`\"skip\"` | `\"check\"` | `\"only\"`. Default: `\"skip\"`.\n\nThis includes both standard `/* CSS comments */` and non-standard but widely used `// single line comments`.\n\n#### strings\n\n`\"skip\"` | `\"check\"` | `\"only\"`. Default: `\"skip\"`.\n\n#### functionNames\n\n`\"skip\"` | `\"check\"` | `\"only\"`. Default: `\"skip\"`.\n\n#### functionArguments\n\n`\"skip\"` | `\"check\"` | `\"only\"`. Default: `\"check\"`.\n\n#### parentheticals\n\n`\"skip\"` | `\"check\"` | `\"only\"`. Default: `\"check\"`.\n\nThis designates anything inside parentheses, which includes standard functions, but also Sass maps and other non-standard constructs. `parentheticals` is a broader category than `functionArguments`.\n", "readmeFilename": "README.md", "_id": "style-search@0.1.0", "_requested": { "type": "version", "registry": true, "raw": "style-search@0.1.0", "name": "style-search", "escapedName": "style-search", "rawSpec": "0.1.0", "saveSpec": "[Circular]", "fetchSpec": "0.1.0" }, "_spec": "0.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "style-search@0.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/style-search", "error": "[Circular]", "extraneous": false }, "chalk": { "name": "chalk", "version": "2.4.2", "description": "Terminal string styling done right", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/chalk.git" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && tsc --project types && flow --max-warnings=0 && nyc ava", "bench": "matcha benchmark.js", "coveralls": "nyc report --reporter=text-lcov | coveralls" }, "files": [ "index.js", "templates.js", "types/index.d.ts", "index.js.flow" ], "keywords": [ "color", "colour", "colors", "terminal", "console", "cli", "string", "str", "ansi", "style", "styles", "tty", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text" ], "dependencies": { "escape-string-regexp": { "name": "escape-string-regexp", "version": "1.0.5", "description": "Escape RegExp special characters", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "maintainers": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "_resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz", "_integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=", "_from": "escape-string-regexp@1.0.5", "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install --save escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme", "_id": "escape-string-regexp@1.0.5", "_requested": { "type": "version", "registry": true, "raw": "escape-string-regexp@1.0.5", "name": "escape-string-regexp", "escapedName": "escape-string-regexp", "rawSpec": "1.0.5", "saveSpec": "[Circular]", "fetchSpec": "1.0.5" }, "_spec": "1.0.5", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/escape-string-regexp", "error": "[Circular]", "extraneous": false, "_deduped": "escape-string-regexp" }, "ansi-styles": { "name": "ansi-styles", "version": "3.2.1", "description": "ANSI escape codes for styling strings in the terminal", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/ansi-styles.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava", "screenshot": "svg-term --command='node screenshot' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor" }, "files": [ "index.js" ], "keywords": [ "ansi", "styles", "color", "colour", "colors", "terminal", "console", "cli", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text" ], "dependencies": { "color-convert": { "name": "color-convert", "description": "Plain color conversion functions", "version": "1.9.3", "author": "[Circular]", "license": "MIT", "repository": "[Circular]", "scripts": "[Circular]", "keywords": "[Circular]", "files": "[Circular]", "xo": "[Circular]", "devDependencies": "[Circular]", "dependencies": {}, "_resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz", "_integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==", "_from": "color-convert@1.9.3", "readme": "# color-convert\n\n[![Build Status](https://travis-ci.org/Qix-/color-convert.svg?branch=master)](https://travis-ci.org/Qix-/color-convert)\n\nColor-convert is a color conversion library for JavaScript and node.\nIt converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, `ansi`, `ansi16`, `hex` strings, and CSS `keyword`s (will round to closest):\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hsl(140, 200, 100); // [96, 48, 59]\nconvert.keyword.rgb('blue'); // [0, 0, 255]\n\nvar rgbChannels = convert.rgb.channels; // 3\nvar cmykChannels = convert.cmyk.channels; // 4\nvar ansiChannels = convert.ansi16.channels; // 1\n```\n\n# Install\n\n```console\n$ npm install color-convert\n```\n\n# API\n\nSimply get the property of the _from_ and _to_ conversion that you're looking for.\n\nAll functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on `.raw` to the function.\n\nAll 'from' functions have a hidden property called `.channels` that indicates the number of channels the function expects (not including alpha).\n\n```js\nvar convert = require('color-convert');\n\n// Hex to LAB\nconvert.hex.lab('DEADBF'); // [ 76, 21, -2 ]\nconvert.hex.lab.raw('DEADBF'); // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ]\n\n// RGB to CMYK\nconvert.rgb.cmyk(167, 255, 4); // [ 35, 0, 98, 0 ]\nconvert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]\n```\n\n### Arrays\nAll functions that accept multiple arguments also support passing an array.\n\nNote that this does **not** apply to functions that convert from a color that only requires one value (e.g. `keyword`, `ansi256`, `hex`, etc.)\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hex(123, 45, 67); // '7B2D43'\nconvert.rgb.hex([123, 45, 67]); // '7B2D43'\n```\n\n## Routing\n\nConversions that don't have an _explicitly_ defined conversion (in [conversions.js](conversions.js)), but can be converted by means of sub-conversions (e.g. XYZ -> **RGB** -> CMYK), are automatically routed together. This allows just about any color model supported by `color-convert` to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> **LAB** -> **XYZ** -> **RGB** -> Hex).\n\nKeep in mind that extensive conversions _may_ result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see [conversions.js](conversions.js).\n\n# Contribute\n\nIf there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.\n\n# License\nCopyright &copy; 2011-2016, Heather Arthur and Josh Junon. Licensed under the [MIT License](LICENSE).\n", "readmeFilename": "README.md", "bugs": "[Circular]", "homepage": "https://github.com/Qix-/color-convert#readme", "_id": "color-convert@1.9.3", "_requested": { "type": "version", "registry": true, "raw": "color-convert@1.9.3", "name": "color-convert", "escapedName": "color-convert", "rawSpec": "1.9.3", "saveSpec": "[Circular]", "fetchSpec": "1.9.3" }, "_spec": "1.9.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/color-convert", "error": "[Circular]", "extraneous": false, "_deduped": "color-convert" } }, "devDependencies": { "ava": "*", "babel-polyfill": "^6.23.0", "svg-term-cli": "^2.1.1", "xo": "*" }, "ava": { "require": "babel-polyfill" }, "_resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz", "_integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==", "_from": "ansi-styles@3.2.1", "readme": "# ansi-styles [![Build Status](https://travis-ci.org/chalk/ansi-styles.svg?branch=master)](https://travis-ci.org/chalk/ansi-styles)\n\n> [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles) for styling strings in the terminal\n\nYou probably want the higher-level [chalk](https://github.com/chalk/chalk) module for styling your strings.\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n\n## Install\n\n```\n$ npm install ansi-styles\n```\n\n\n## Usage\n\n```js\nconst style = require('ansi-styles');\n\nconsole.log(`${style.green.open}Hello world!${style.green.close}`);\n\n\n// Color conversion between 16/256/truecolor\n// NOTE: If conversion goes to 16 colors or 256 colors, the original color\n// may be degraded to fit that color palette. This means terminals\n// that do not support 16 million colors will best-match the\n// original color.\nconsole.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close);\nconsole.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close);\nconsole.log(style.color.ansi16m.hex('#ABCDEF') + 'Hello world!' + style.color.close);\n```\n\n## API\n\nEach style has an `open` and `close` property.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Advanced usage\n\nBy default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\n- `style.modifier`\n- `style.color`\n- `style.bgColor`\n\n###### Example\n\n```js\nconsole.log(style.color.green.open);\n```\n\nRaw escape codes (i.e. without the CSI escape prefix `\\u001B[` and render mode postfix `m`) are available under `style.codes`, which returns a `Map` with the open codes as keys and close codes as values.\n\n###### Example\n\n```js\nconsole.log(style.codes.get(36));\n//=> 39\n```\n\n\n## [256 / 16 million (TrueColor) support](https://gist.github.com/XVilka/8346728)\n\n`ansi-styles` uses the [`color-convert`](https://github.com/Qix-/color-convert) package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors.\n\nTo use these, call the associated conversion function with the intended output, for example:\n\n```js\nstyle.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code\nstyle.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code\n\nstyle.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\nstyle.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\n\nstyle.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code\nstyle.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code\n```\n\n\n## Related\n\n- [ansi-escapes](https://github.com/sindresorhus/ansi-escapes) - ANSI escape codes for manipulating the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/ansi-styles/issues" }, "homepage": "https://github.com/chalk/ansi-styles#readme", "_id": "ansi-styles@3.2.1", "_requested": { "type": "version", "registry": true, "raw": "ansi-styles@3.2.1", "name": "ansi-styles", "escapedName": "ansi-styles", "rawSpec": "3.2.1", "saveSpec": "[Circular]", "fetchSpec": "3.2.1" }, "_spec": "3.2.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ansi-styles@3.2.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "color-convert": "^1.9.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/ansi-styles", "error": "[Circular]", "extraneous": false }, "supports-color": { "name": "supports-color", "version": "5.5.0", "description": "Detect whether a terminal supports color", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/supports-color.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js", "browser.js" ], "keywords": [ "color", "colour", "colors", "terminal", "console", "cli", "ansi", "styles", "tty", "rgb", "256", "shell", "xterm", "command-line", "support", "supports", "capability", "detect", "truecolor", "16m" ], "dependencies": { "has-flag": { "name": "has-flag", "version": "3.0.0", "description": "Check if argv has a specific flag", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "_resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz", "_integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=", "_from": "has-flag@3.0.0", "readme": "# has-flag [![Build Status](https://travis-ci.org/sindresorhus/has-flag.svg?branch=master)](https://travis-ci.org/sindresorhus/has-flag)\n\n> Check if [`argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) has a specific flag\n\nCorrectly stops looking after an `--` argument terminator.\n\n\n## Install\n\n```\n$ npm install has-flag\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=> true\n\nhasFlag('--unicorn');\n//=> true\n\nhasFlag('f');\n//=> true\n\nhasFlag('-f');\n//=> true\n\nhasFlag('foo=bar');\n//=> true\n\nhasFlag('foo');\n//=> false\n\nhasFlag('rainbow');\n//=> false\n```\n\n```\n$ node foo.js -f --unicorn --foo=bar -- --rainbow\n```\n\n\n## API\n\n### hasFlag(flag, [argv])\n\nReturns a boolean for whether the flag exists.\n\n#### flag\n\nType: `string`\n\nCLI flag to look for. The `--` prefix is optional.\n\n#### argv\n\nType: `string[]`<br>\nDefault: `process.argv`\n\nCLI arguments.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/has-flag#readme", "_id": "has-flag@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "has-flag@3.0.0", "name": "has-flag", "escapedName": "has-flag", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/has-flag", "error": "[Circular]", "extraneous": false, "_deduped": "has-flag" } }, "devDependencies": { "ava": "^0.25.0", "import-fresh": "^2.0.0", "xo": "^0.20.0" }, "browser": "browser.js", "_resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz", "_integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==", "_from": "supports-color@5.5.0", "readme": "# supports-color [![Build Status](https://travis-ci.org/chalk/supports-color.svg?branch=master)](https://travis-ci.org/chalk/supports-color)\n\n> Detect whether a terminal supports color\n\n\n## Install\n\n```\n$ npm install supports-color\n```\n\n\n## Usage\n\n```js\nconst supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n\tconsole.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n\tconsole.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n\tconsole.log('Terminal stderr supports 16 million colors (truecolor)');\n}\n```\n\n\n## API\n\nReturns an `Object` with a `stdout` and `stderr` property for testing either streams. Each property is an `Object`, or `false` if color is not supported.\n\nThe `stdout`/`stderr` objects specifies a level of support for color through a `.level` property and a corresponding flag:\n\n- `.level = 1` and `.hasBasic = true`: Basic color support (16 colors)\n- `.level = 2` and `.has256 = true`: 256 color support\n- `.level = 3` and `.has16m = true`: Truecolor support (16 million colors)\n\n\n## Info\n\nIt obeys the `--color` and `--no-color` CLI flags.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Related\n\n- [supports-color-cli](https://github.com/chalk/supports-color-cli) - CLI for this module\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/supports-color/issues" }, "homepage": "https://github.com/chalk/supports-color#readme", "_id": "supports-color@5.5.0", "_requested": { "type": "version", "registry": true, "raw": "supports-color@5.5.0", "name": "supports-color", "escapedName": "supports-color", "rawSpec": "5.5.0", "saveSpec": "[Circular]", "fetchSpec": "5.5.0" }, "_spec": "5.5.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "supports-color@5.5.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "has-flag": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/supports-color", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "coveralls": "^3.0.0", "execa": "^0.9.0", "flow-bin": "^0.68.0", "import-fresh": "^2.0.0", "matcha": "^0.7.0", "nyc": "^11.0.2", "resolve-from": "^4.0.0", "typescript": "^2.5.3", "xo": "*" }, "types": "types/index.d.ts", "xo": { "envs": [ "node", "mocha" ], "ignores": [ "test/_flow.js" ] }, "_resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz", "_integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==", "_from": "chalk@2.4.2", "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\n### [See what's new in Chalk 2](https://github.com/chalk/chalk/releases/tag/v2.0.0)\n\n<img src=\"https://cdn.rawgit.com/chalk/ansi-styles/8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" alt=\"\" width=\"900\">\n\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~23,000 packages](https://www.npmjs.com/browse/depended/chalk) as of December 31, 2017\n\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n<a href=\"https://www.patreon.com/sindresorhus\">\n\t<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"160\">\n</a>\n\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, as is the level (see `chalk.level`). However, if you'd like to simply enable/disable Chalk, you can do so via the `.enabled` property.\n\nChalk is enabled by default unless explicitly disabled via the constructor or `chalk.level` is `0`.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.level\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.constructor({level: 0});\n```\n\nLevels are as follows:\n\n0. All colors disabled\n1. Basic color support (16 colors)\n2. 256 color support\n3. Truecolor support (16 million colors)\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add the environment variable `FORCE_COLOR=1` to forcefully enable color or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n- `visible` (Text is emitted only if enabled)\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(On Windows the bright version is used since normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray` (\"bright black\")\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright`\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](http://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 5280;\n\nconsole.log(chalk`\n There are {bold 5280 feet} in a mile.\n In {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following two statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model) - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- `ansi16`\n- `ansi256`\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://cmder.net/) instead of `cmd.exe`.\n\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/chalk/issues" }, "homepage": "https://github.com/chalk/chalk#readme", "_id": "chalk@2.4.2", "_requested": { "type": "version", "registry": true, "raw": "chalk@2.4.2", "name": "chalk", "escapedName": "chalk", "rawSpec": "2.4.2", "saveSpec": "[Circular]", "fetchSpec": "2.4.2" }, "_spec": "2.4.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "chalk@2.4.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ansi-styles": "^3.2.1", "escape-string-regexp": "^1.0.5", "supports-color": "^5.3.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/chalk", "error": "[Circular]", "extraneous": false }, "debug": { "name": "debug", "version": "4.1.1", "repository": { "type": "git", "url": "git://github.com/visionmedia/debug.git" }, "description": "small debugging utility", "keywords": [ "debug", "log", "debugger" ], "files": [ "src", "dist/debug.js", "LICENSE", "README.md" ], "author": { "name": "TJ Holowaychuk", "email": "tj@vision-media.ca" }, "contributors": [ { "name": "Nathan Rajlich", "email": "nathan@tootallnate.net", "url": "http://n8.io" }, { "name": "Andrew Rhyne", "email": "rhyneandrew@gmail.com" } ], "license": "MIT", "scripts": { "lint": "xo", "test": "npm run test:node && npm run test:browser", "test:node": "istanbul cover _mocha -- test.js", "pretest:browser": "npm run build", "test:browser": "karma start --single-run", "prebuild:debug": "mkdir -p dist && browserify --standalone debug -o dist/debug.es6.js .", "build:debug": "babel -o dist/debug.js dist/debug.es6.js > dist/debug.js", "build:test": "babel -d dist test.js", "build": "npm run build:debug && npm run build:test", "clean": "rimraf dist coverage", "test:coverage": "cat ./coverage/lcov.info | coveralls" }, "dependencies": { "ms": { "name": "ms", "version": "2.1.1", "description": "Tiny millisecond conversion utility", "repository": { "type": "git", "url": "git+https://github.com/zeit/ms.git" }, "main": "./index", "files": [ "index.js" ], "scripts": { "precommit": "lint-staged", "lint": "eslint lib/* bin/*", "test": "mocha tests.js" }, "eslintConfig": { "extends": "eslint:recommended", "env": { "node": true, "es6": true } }, "lint-staged": { "*.js": [ "npm run lint", "prettier --single-quote --write", "git add" ] }, "license": "MIT", "devDependencies": { "eslint": "4.12.1", "expect.js": "0.3.1", "husky": "0.14.3", "lint-staged": "5.0.0", "mocha": "4.0.1" }, "_resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz", "_integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==", "_from": "ms@2.1.1", "readme": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Slack Channel](http://zeit-slackin.now.sh/badge.svg)](https://zeit.chat/)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days') // 172800000\nms('1d') // 86400000\nms('10h') // 36000000\nms('2.5 hrs') // 9000000\nms('2h') // 7200000\nms('1m') // 60000\nms('5s') // 5000\nms('1y') // 31557600000\nms('100') // 100\nms('-3 days') // -259200000\nms('-1h') // -3600000\nms('-200') // -200\n```\n\n### Convert from Milliseconds\n\n```js\nms(60000) // \"1m\"\nms(2 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 60000) // \"2m\"\nms(-3 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 60000) // \"-3m\"\nms(ms('10 hours')) // \"10h\"\n```\n\n### Time Format Written-Out\n\n```js\nms(60000, { long: true }) // \"1 minute\"\nms(2 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 60000, { long: true }) // \"2 minutes\"\nms(-3 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 60000, { long: true }) // \"-3 minutes\"\nms(ms('10 hours'), { long: true }) // \"10 hours\"\n```\n\n## Features\n\n- Works both in [Node.js](https://nodejs.org) and in the browser\n- If a number is supplied to `ms`, a string with a unit is returned\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`)\n- If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned\n\n## Related Packages\n\n- [ms.macro](https://github.com/knpwrs/ms.macro) - Run `ms` as a macro at build-time.\n\n## Caught a Bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, Node.js will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/zeit/ms/issues" }, "homepage": "https://github.com/zeit/ms#readme", "_id": "ms@2.1.1", "_requested": { "type": "version", "registry": true, "raw": "ms@2.1.1", "name": "ms", "escapedName": "ms", "rawSpec": "2.1.1", "saveSpec": "[Circular]", "fetchSpec": "2.1.1" }, "_spec": "2.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ms@2.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/ms", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "@babel/cli": "^7.0.0", "@babel/core": "^7.0.0", "@babel/preset-env": "^7.0.0", "browserify": "14.4.0", "chai": "^3.5.0", "concurrently": "^3.1.0", "coveralls": "^3.0.2", "istanbul": "^0.4.5", "karma": "^3.0.0", "karma-chai": "^0.1.0", "karma-mocha": "^1.3.0", "karma-phantomjs-launcher": "^1.0.2", "mocha": "^5.2.0", "mocha-lcov-reporter": "^1.2.0", "rimraf": "^2.5.4", "xo": "^0.23.0" }, "main": "./src/index.js", "browser": "./src/browser.js", "unpkg": "./dist/debug.js", "_resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz", "_integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==", "_from": "debug@4.1.1", "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug) [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master) [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers)\n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nA tiny JavaScript debugging utility modelled after Node.js core's debugging\ntechnique. Works in Node.js and web browsers.\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample [_app.js_](./examples/node/app.js):\n\n```js\nvar debug = require('debug')('http')\n , http = require('http')\n , name = 'My App';\n\n// fake app\n\ndebug('booting %o', name);\n\nhttp.createServer(function(req, res){\n debug(req.method + ' ' + req.url);\n res.end('hello\\n');\n}).listen(3000, function(){\n debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample [_worker.js_](./examples/node/worker.js):\n\n```js\nvar a = require('debug')('worker:a')\n , b = require('debug')('worker:b');\n\nfunction work() {\n a('doing lots of uninteresting work');\n setTimeout(work, Math.random() 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 1000);\n}\n\nwork();\n\nfunction workb() {\n b('doing some work');\n setTimeout(workb, Math.random() 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 2000);\n}\n\nworkb();\n```\n\nThe `DEBUG` environment variable is then used to enable these based on space or\ncomma-delimited names.\n\nHere are some examples:\n\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 04 pm\" src=\"https://user-images.githubusercontent.com/71256/29091703-a6302cdc-7c38-11e7-8304-7c0b3bc600cd.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 38 pm\" src=\"https://user-images.githubusercontent.com/71256/29091700-a62a6888-7c38-11e7-800b-db911291ca2b.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 25 pm\" src=\"https://user-images.githubusercontent.com/71256/29091701-a62ea114-7c38-11e7-826a-2692bedca740.png\">\n\n#### Windows command prompt notes\n\n##### CMD\n\nOn Windows the environment variable is set using the `set` command.\n\n```cmd\nset DEBUG=*,-not_this\n```\n\nExample:\n\n```cmd\nset DEBUG=* & node app.js\n```\n\n##### PowerShell (VS Code default)\n\nPowerShell uses different syntax to set environment variables.\n\n```cmd\n$env:DEBUG = \"*,-not_this\"\n```\n\nExample:\n\n```cmd\n$env:DEBUG='app';node app.js\n```\n\nThen, run the program to be debugged as usual.\n\nnpm script example:\n```js\n \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\",\n```\n\n## Namespace Colors\n\nEvery debug instance has a color generated for it based on its namespace name.\nThis helps when visually parsing the debug output to identify which debug instance\na debug line belongs to.\n\n#### Node.js\n\nIn Node.js, colors are enabled when stderr is a TTY. You also _should_ install\nthe [`supports-color`](https://npmjs.org/supports-color) module alongside debug,\notherwise debug will only use a small handful of basic colors.\n\n<img width=\"521\" src=\"https://user-images.githubusercontent.com/71256/29092181-47f6a9e6-7c3a-11e7-9a14-1928d8a711cd.png\">\n\n#### Web Browser\n\nColors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\noption. These are WebKit web inspectors, Firefox ([since version\n31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\nand the Firebug plugin for Firefox (any version).\n\n<img width=\"524\" src=\"https://user-images.githubusercontent.com/71256/29092033-b65f9f2e-7c39-11e7-8e32-f6f0d8e865c1.png\">\n\n\n## Millisecond diff\n\nWhen actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nWhen stdout is not a TTY, `Date#toISOString()` is used, making it more useful for logging the debug information as shown below:\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091956-6bd78372-7c39-11e7-8c55-c948396d6edd.png\">\n\n\n## Conventions\n\nIf you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\". If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable. You can then use it for normal output as well as debug output.\n\n## Wildcards\n\nThe `*` character may be used as a wildcard. Suppose for example your library has\ndebuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\",\ninstead of listing all three with\n`DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do\n`DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\nYou can also exclude specific debuggers by prefixing them with a \"-\" character.\nFor example, `DEBUG=*,-connect:*` would include all debuggers except those\nstarting with \"connect:\".\n\n## Environment Variables\n\nWhen running through Node.js, you can set a few environment variables that will\nchange the behavior of the debug logging:\n\n| Name | Purpose |\n|-----------|-------------------------------------------------|\n| `DEBUG` | Enables/disables specific debugging namespaces. |\n| `DEBUG_HIDE_DATE` | Hide date from debug output (non-TTY). |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth. |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n__Note:__ The environment variables beginning with `DEBUG_` end up being\nconverted into an Options object that gets used with `%o`/`%O` formatters.\nSee the Node.js documentation for\n[`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\nfor the complete list.\n\n## Formatters\n\nDebug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting.\nBelow are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O` | Pretty-print an Object on multiple lines. |\n| `%o` | Pretty-print an Object all on a single line. |\n| `%s` | String. |\n| `%d` | Number (both integer and float). |\n| `%j` | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%` | Single percent sign ('%'). This does not consume an argument. |\n\n\n### Custom formatters\n\nYou can add custom formatters by extending the `debug.formatters` object.\nFor example, if you wanted to add support for rendering a Buffer as hex with\n`%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n return v.toString('hex')\n}\n\n// …elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n// foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n\n## Browser Support\n\nYou can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\nor just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\nif you don't want to build it yourself.\n\nDebug's enable state is currently persisted by `localStorage`.\nConsider the situation shown below where you have `worker:a` and `worker:b`,\nand wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n b('doing some work');\n}, 1200);\n```\n\n\n## Output streams\n\n By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample [_stdout.js_](./examples/node/stdout.js):\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n## Extend\nYou can simply extend debugger \n```js\nconst log = require('debug')('auth');\n\n//creates new debug instance with extended namespace\nconst logSign = log.extend('sign');\nconst logLogin = log.extend('login');\n\nlog('hello'); // auth hello\nlogSign('hello'); //auth:sign hello\nlogLogin('hello'); //auth:login hello\n```\n\n## Set dynamically\n\nYou can also enable debug dynamically by calling the `enable()` method :\n\n```js\nlet debug = require('debug');\n\nconsole.log(1, debug.enabled('test'));\n\ndebug.enable('test');\nconsole.log(2, debug.enabled('test'));\n\ndebug.disable();\nconsole.log(3, debug.enabled('test'));\n\n```\n\nprint : \n```\n1 false\n2 true\n3 false\n```\n\nUsage : \n`enable(namespaces)` \n`namespaces` can include modes separated by a colon and wildcards.\n \nNote that calling `enable()` completely overrides previously set DEBUG variable : \n\n```\n$ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))'\n=> false\n```\n\n`disable()`\n\nWill disable all namespaces. The functions returns the namespaces currently\nenabled (and skipped). This can be useful if you want to disable debugging\ntemporarily without knowing what was enabled to begin with.\n\nFor example:\n\n```js\nlet debug = require('debug');\ndebug.enable('foo:*,-foo:bar');\nlet namespaces = debug.disable();\ndebug.enable(namespaces);\n```\n\nNote: There is no guarantee that the string will be identical to the initial\nenable string, but semantically they will be identical.\n\n## Checking whether a debug target is enabled\n\nAfter you've created a debug instance, you can determine whether or not it is\nenabled by checking the `enabled` property:\n\n```javascript\nconst debug = require('debug')('http');\n\nif (debug.enabled) {\n // do stuff...\n}\n```\n\nYou can also manually toggle this property to force the debug instance to be\nenabled or disabled.\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2017 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/visionmedia/debug/issues" }, "homepage": "https://github.com/visionmedia/debug#readme", "_id": "debug@4.1.1", "_requested": { "type": "version", "registry": true, "raw": "debug@4.1.1", "name": "debug", "escapedName": "debug", "rawSpec": "4.1.1", "saveSpec": "[Circular]", "fetchSpec": "4.1.1" }, "_spec": "4.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "debug@4.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ms": "^2.1.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/debug", "error": "[Circular]", "extraneous": false }, "get-stdin": { "name": "get-stdin", "version": "7.0.0", "description": "Get stdin as a string or buffer", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/get-stdin.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=8" }, "scripts": { "test": "xo && ava test.js test-buffer.js && echo unicorns | node test-real.js && tsd" }, "files": [ "index.js", "index.d.ts" ], "keywords": [ "std", "stdin", "stdio", "concat", "buffer", "stream", "process", "read" ], "devDependencies": { "@types/node": "^11.13.4", "ava": "^1.4.1", "delay": "^4.2.0", "tsd": "^0.7.2", "xo": "^0.24.0" }, "_resolved": "https://registry.npmjs.org/get-stdin/-/get-stdin-7.0.0.tgz", "_integrity": "sha512-zRKcywvrXlXsA0v0i9Io4KDRaAw7+a1ZpjRwl9Wox8PFlVCCHra7E9c4kqXCoCM9nR5tBkaTTZRBoCm60bFqTQ==", "_from": "get-stdin@7.0.0", "readme": "# get-stdin [![Build Status](https://travis-ci.org/sindresorhus/get-stdin.svg?branch=master)](https://travis-ci.org/sindresorhus/get-stdin)\n\n> Get [stdin](https://nodejs.org/api/process.html#process_process_stdin) as a string or buffer\n\n\n## Install\n\n```\n$ npm install get-stdin\n```\n\n\n## Usage\n\n```js\n// example.js\nconst getStdin = require('get-stdin');\n\n(async () => {\n\tconsole.log(await getStdin());\n\t//=> 'unicorns'\n})();\n```\n\n```\n$ echo unicorns | node example.js\nunicorns\n```\n\n\n## API\n\nBoth methods returns a promise that is resolved when the `end` event fires on the `stdin` stream, indicating that there is no more data to be read.\n\n### getStdin()\n\nGet `stdin` as a `string`.\n\nIn a TTY context, a promise that resolves to an empty `string` is returned.\n\n### getStdin.buffer()\n\nGet `stdin` as a `Buffer`.\n\nIn a TTY context, a promise that resolves to an empty `Buffer` is returned.\n\n\n## Related\n\n- [get-stream](https://github.com/sindresorhus/get-stream) - Get a stream as a string or buffer\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/get-stdin/issues" }, "homepage": "https://github.com/sindresorhus/get-stdin#readme", "_id": "get-stdin@7.0.0", "_requested": { "type": "version", "registry": true, "raw": "get-stdin@7.0.0", "name": "get-stdin", "escapedName": "get-stdin", "rawSpec": "7.0.0", "saveSpec": "[Circular]", "fetchSpec": "7.0.0" }, "_spec": "7.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "get-stdin@7.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/get-stdin", "error": "[Circular]", "extraneous": false }, "globby": { "name": "globby", "version": "9.2.0", "description": "Extends `glob` with support for multiple patterns and exposes a Promise API", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/globby.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "bench": "npm update glob-stream fast-glob && matcha bench.js", "test": "xo && ava && tsd" }, "files": [ "index.js", "gitignore.js", "index.d.ts" ], "keywords": [ "all", "array", "directories", "dirs", "expand", "files", "filesystem", "filter", "find", "fnmatch", "folders", "fs", "glob", "globbing", "globs", "gulpfriendly", "match", "matcher", "minimatch", "multi", "multiple", "paths", "pattern", "patterns", "traverse", "util", "utility", "wildcard", "wildcards", "promise", "gitignore", "git" ], "dependencies": { "@types/glob": { "name": "@types/glob", "version": "7.1.1", "description": "TypeScript definitions for Glob", "license": "MIT", "contributors": [ { "name": "vvakame", "url": "https://github.com/vvakame" }, { "name": "voy", "url": "https://github.com/voy" }, { "name": "Klaus Meinhardt", "url": "https://github.com/ajafff" } ], "main": "", "repository": { "type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git" }, "scripts": {}, "dependencies": { "@types/events": { "name": "@types/events", "version": "3.0.0", "description": "TypeScript definitions for events", "license": "MIT", "contributors": [ { "name": "Yasunori Ohoka", "url": "https://github.com/yasupeke" }, { "name": "Shenwei Wang", "url": "https://github.com/weareoutman" } ], "main": "", "types": "index", "repository": { "type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git" }, "scripts": {}, "dependencies": {}, "typesPublisherContentHash": "ae078136220837864b64cc7c1c5267ca1ceb809166fb74569e637bc7de9f2e12", "typeScriptVersion": "2.0", "_resolved": "https://registry.npmjs.org/@types/events/-/events-3.0.0.tgz", "_integrity": "sha512-EaObqwIvayI5a8dCzhFrjKzVwKLxjoG9T6Ppd5CEo07LRKfQ8Yokw54r5+Wq7FaBQ+yXRvQAYPrHwya1/UFt9g==", "_from": "@types/events@3.0.0", "readme": "# Installation\r\n> `npm install --save @types/events`\r\n\r\n# Summary\r\nThis package contains type definitions for events (https://github.com/Gozala/events).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/events\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Thu, 24 Jan 2019 03:19:08 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by Yasunori Ohoka <https://github.com/yasupeke>, Shenwei Wang <https://github.com/weareoutman>.\r\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues" }, "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/events@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "@types/events@3.0.0", "name": "@types/events", "escapedName": "@types%2fevents", "scope": "@types", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@types/events@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/events", "error": "[Circular]", "extraneous": false }, "@types/minimatch": { "name": "@types/minimatch", "version": "3.0.3", "description": "TypeScript definitions for Minimatch", "license": "MIT", "contributors": [ { "name": "vvakame", "url": "https://github.com/vvakame" }, { "name": "Shant Marouti", "url": "https://github.com/shantmarouti" } ], "main": "", "repository": { "type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git" }, "scripts": {}, "dependencies": {}, "typesPublisherContentHash": "e768e36348874adcc93ac67e9c3c7b5fcbd39079c0610ec16e410b8f851308d1", "typeScriptVersion": "2.0", "_resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.3.tgz", "_integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA==", "_from": "@types/minimatch@3.0.3", "readme": "# Installation\r\n> `npm install --save @types/minimatch`\r\n\r\n# Summary\r\nThis package contains type definitions for Minimatch (https://github.com/isaacs/minimatch).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/minimatch\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Thu, 04 Jan 2018 23:26:01 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by vvakame <https://github.com/vvakame>, Shant Marouti <https://github.com/shantmarouti>.\r\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues" }, "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/minimatch@3.0.3", "_requested": { "type": "version", "registry": true, "raw": "@types/minimatch@3.0.3", "name": "@types/minimatch", "escapedName": "@types%2fminimatch", "scope": "@types", "rawSpec": "3.0.3", "saveSpec": "[Circular]", "fetchSpec": "3.0.3" }, "_spec": "3.0.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@types/minimatch@3.0.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/minimatch", "error": "[Circular]", "extraneous": false }, "@types/node": { "name": "@types/node", "version": "11.13.4", "description": "TypeScript definitions for Node.js", "license": "MIT", "contributors": "[Circular]", "main": "", "types": "index", "typesVersions": "[Circular]", "repository": "[Circular]", "scripts": "[Circular]", "dependencies": {}, "typesPublisherContentHash": "65764fe7ac3d472c68db335bc5a4ededefe76e9f1c2d7176dca805fba7084a52", "typeScriptVersion": "2.0", "_resolved": "https://registry.npmjs.org/@types/node/-/node-11.13.4.tgz", "_integrity": "sha512-+rabAZZ3Yn7tF/XPGHupKIL5EcAbrLxnTr/hgQICxbeuAfWtT0UZSfULE+ndusckBItcv4o6ZeOJplQikVcLvQ==", "_from": "@types/node@11.13.4", "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js ( http://nodejs.org/ ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Wed, 10 Apr 2019 17:39:58 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: none\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: Buffer, NodeJS, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, queueMicrotask, require, setImmediate, setInterval, setTimeout\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript <https://github.com/Microsoft>, DefinitelyTyped <https://github.com/DefinitelyTyped>, Alberto Schiabel <https://github.com/jkomyno>, Alexander T. <https://github.com/a-tarasyuk>, Alvis HT Tang <https://github.com/alvis>, Andrew Makarov <https://github.com/r3nya>, Benjamin Toueg <https://github.com/btoueg>, Bruno Scheufler <https://github.com/brunoscheufler>, Chigozirim C. <https://github.com/smac89>, Christian Vaagland Tellnes <https://github.com/tellnes>, David Junger <https://github.com/touffy>, Deividas Bakanas <https://github.com/DeividasBakanas>, Eugene Y. Q. Shen <https://github.com/eyqs>, Flarna <https://github.com/Flarna>, Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>, Hoàng Văn Khải <https://github.com/KSXGitHub>, Huw <https://github.com/hoo29>, Kelvin Jin <https://github.com/kjin>, Klaus Meinhardt <https://github.com/ajafff>, Lishude <https://github.com/islishude>, Mariusz Wiktorczyk <https://github.com/mwiktorczyk>, Matthieu Sieben <https://github.com/matthieusieben>, Mohsen Azimi <https://github.com/mohsen1>, Nicolas Even <https://github.com/n-e>, Nicolas Voigt <https://github.com/octo-sniffle>, Parambir Singh <https://github.com/parambirs>, Sebastian Silbermann <https://github.com/eps1lon>, Simon Schick <https://github.com/SimonSchick>, Thomas den Hollander <https://github.com/ThomasdenH>, Wilco Bakker <https://github.com/WilcoBakker>, wwwy3y3 <https://github.com/wwwy3y3>, Zane Hannan AU <https://github.com/ZaneHannanAU>, Jeremie Rodriguez <https://github.com/jeremiergz>, Samuel Ainsworth <https://github.com/samuela>, Kyle Uehlein <https://github.com/kuehlein>, Jordi Oliveras Rovira <https://github.com/j-oliveras>, Thanik Bhongbhibhat <https://github.com/bhongy>.\r\n", "readmeFilename": "README.md", "bugs": "[Circular]", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/node@11.13.4", "_requested": { "type": "version", "registry": true, "raw": "@types/node@11.13.4", "name": "@types/node", "escapedName": "@types%2fnode", "scope": "@types", "rawSpec": "11.13.4", "saveSpec": "[Circular]", "fetchSpec": "11.13.4" }, "_spec": "11.13.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/node", "error": "[Circular]", "extraneous": false, "_deduped": "@types/node" } }, "typesPublisherContentHash": "43019f2af91c7a4ca3453c4b806a01c521ca3008ffe1bfefd37c5f9d6135660e", "typeScriptVersion": "2.0", "_resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.1.tgz", "_integrity": "sha512-1Bh06cbWJUHMC97acuD6UMG29nMt0Aqz1vF3guLfG+kHHJhy3AyohZFFxYk2f7Q1SQIrNwvncxAE0N/9s70F2w==", "_from": "@types/glob@7.1.1", "readme": "# Installation\r\n> `npm install --save @types/glob`\r\n\r\n# Summary\r\nThis package contains type definitions for Glob (https://github.com/isaacs/node-glob).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/glob\r\n\r\nAdditional Details\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Last updated: Thu, 27 Sep 2018 12:34:19 GMT\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dependencies: events, minimatch, node\r\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Global values: none\r\n\r\n# Credits\r\nThese definitions were written by vvakame <https://github.com/vvakame>, voy <https://github.com/voy>, Klaus Meinhardt <https://github.com/ajafff>.\r\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues" }, "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "_id": "@types/glob@7.1.1", "_requested": { "type": "version", "registry": true, "raw": "@types/glob@7.1.1", "name": "@types/glob", "escapedName": "@types%2fglob", "scope": "@types", "rawSpec": "7.1.1", "saveSpec": "[Circular]", "fetchSpec": "7.1.1" }, "_spec": "7.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@types/glob@7.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "@types/events": "*", "@types/minimatch": "*", "@types/node": "*" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@types/glob", "error": "[Circular]", "extraneous": false }, "array-union": { "name": "array-union", "version": "1.0.2", "description": "Create an array of unique values, in order, from the input arrays", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/array-union.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "array", "arr", "set", "uniq", "unique", "duplicate", "remove", "union", "combine", "merge" ], "dependencies": {}, "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz", "_integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=", "_from": "array-union@1.0.2", "readme": "# array-union [![Build Status](https://travis-ci.org/sindresorhus/array-union.svg?branch=master)](https://travis-ci.org/sindresorhus/array-union)\n\n> Create an array of unique values, in order, from the input arrays\n\n\n## Install\n\n```\n$ npm install --save array-union\n```\n\n\n## Usage\n\n```js\nconst arrayUnion = require('array-union');\n\narrayUnion([1, 1, 2, 3], [2, 3]);\n//=> [1, 2, 3]\n\narrayUnion(['foo', 'foo', 'bar'], ['foo']);\n//=> ['foo', 'bar']\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/array-union/issues" }, "homepage": "https://github.com/sindresorhus/array-union#readme", "_id": "array-union@1.0.2", "_requested": { "type": "version", "registry": true, "raw": "array-union@1.0.2", "name": "array-union", "escapedName": "array-union", "rawSpec": "1.0.2", "saveSpec": "[Circular]", "fetchSpec": "1.0.2" }, "_spec": "1.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "array-union@1.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "array-uniq": "^1.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/array-union", "error": "[Circular]", "extraneous": false, "_deduped": "array-union" }, "dir-glob": { "name": "dir-glob", "version": "2.2.2", "description": "Convert directories to glob compatible strings", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/kevva/dir-glob.git" }, "author": { "name": "Kevin Mårtensson", "email": "kevinmartensson@gmail.com", "url": "github.com/kevva" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "convert", "directory", "extensions", "files", "glob" ], "dependencies": {}, "devDependencies": { "ava": "^0.25.0", "del": "^3.0.0", "make-dir": "^1.0.0", "rimraf": "^2.5.0", "xo": "^0.20.3" }, "_resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.2.2.tgz", "_integrity": "sha512-f9LBi5QWzIW3I6e//uxZoLBlUt9kcp66qo0sSCxL6YZKc75R1c4MFCoe/LaZiBGmgujvQdxc5Bn3QhfyvK5Hsw==", "_from": "dir-glob@2.2.2", "readme": "# dir-glob [![Build Status](https://travis-ci.org/kevva/dir-glob.svg?branch=master)](https://travis-ci.org/kevva/dir-glob)\n\n> Convert directories to glob compatible strings\n\n\n## Install\n\n```\n$ npm install dir-glob\n```\n\n\n## Usage\n\n```js\nconst dirGlob = require('dir-glob');\n\ndirGlob(['index.js', 'test.js', 'fixtures']).then(files => {\n\tconsole.log(files);\n\t//=> ['index.js', 'test.js', 'fixtures/**']\n});\n\ndirGlob(['index.js', 'inner_folder'], {\n\tcwd: 'fixtures'\n}).then(files => {\n\tconsole.log(files);\n\t//=> ['index.js', 'inner_folder/**']\n});\n\ndirGlob(['lib/**', 'fixtures'], {\n\tfiles: ['test', 'unicorn']\n\textensions: ['js']\n}).then(files => {\n\tconsole.log(files);\n\t//=> ['lib/**', 'fixtures/**/test.js', 'fixtures/**/unicorn.js']\n});\n\ndirGlob(['lib/**', 'fixtures'], {\n\tfiles: ['test', 'unicorn', '*.jsx'],\n\textensions: ['js', 'png']\n}).then(files => {\n\tconsole.log(files);\n\t//=> ['lib/**', 'fixtures/**/test.{js,png}', 'fixtures/**/unicorn.{js,png}', 'fixtures/**/*.jsx']\n});\n```\n\n\n## API\n\n### dirGlob(input, [options])\n\nReturns a `Promise` for an array of glob strings.\n\n### dirGlob.sync(input, [options])\n\nReturns an array of glob strings.\n\n#### input\n\nType: `Array` `string`\n\nA `string` or an `Array` of paths.\n\n#### options\n\n##### extensions\n\nType: `Array`\n\nAppend extensions to the end of your globs.\n\n##### files\n\nType: `Array`\n\nOnly glob for certain files.\n\n##### cwd\n\nType: `string`\n\nTest in specific directory.\n\n\n## License\n\nMIT © [Kevin Mårtensson](https://github.com/kevva)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/kevva/dir-glob/issues" }, "homepage": "https://github.com/kevva/dir-glob#readme", "_id": "dir-glob@2.2.2", "_requested": { "type": "version", "registry": true, "raw": "dir-glob@2.2.2", "name": "dir-glob", "escapedName": "dir-glob", "rawSpec": "2.2.2", "saveSpec": "[Circular]", "fetchSpec": "2.2.2" }, "_spec": "2.2.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "dir-glob@2.2.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "path-type": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/dir-glob", "error": "[Circular]", "extraneous": false, "_deduped": "dir-glob" }, "fast-glob": { "name": "fast-glob", "version": "2.2.6", "description": "Is a faster `node-glob` alternative", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/mrmlnc/fast-glob.git" }, "author": { "name": "Denis Malinochkin", "url": "canonium.com" }, "engines": { "node": ">=4.0.0" }, "main": "index.js", "typings": "index.d.ts", "keywords": [ "glob", "patterns", "fast", "implementation" ], "devDependencies": { "@types/bash-glob": "^2.0.0", "@types/compute-stdev": "^1.0.0", "@types/easy-table": "^0.0.32", "@types/execa": "^0.9.0", "@types/glob": "^7.1.1", "@types/glob-parent": "^3.1.0", "@types/glob-stream": "^6.1.0", "@types/globby": "^8.0.0", "@types/is-glob": "^4.0.0", "@types/merge2": "^1.1.4", "@types/micromatch": "^3.1.0", "@types/minimist": "^1.2.0", "@types/mocha": "^5.2.5", "@types/node": "^10.12.0", "@types/rimraf": "^2.0.2", "bash-glob": "^2.0.0", "compute-stdev": "^1.0.0", "easy-table": "^1.1.1", "execa": "^0.9.0", "fast-glob": "^2.2.0", "glob": "^7.1.2", "glob-stream": "^6.1.0", "globby": "^8.0.1", "minimist": "^1.2.0", "mocha": "^5.2.0", "rimraf": "^2.6.2", "tiny-glob": "^0.2.3", "tslint": "^5.11.0", "tslint-config-mrmlnc": "^1.0.0", "typescript": "^3.1.3" }, "dependencies": { "@mrmlnc/readdir-enhanced": { "name": "@mrmlnc/readdir-enhanced", "version": "2.2.1", "description": "fs.readdir with sync, async, and streaming APIs + filtering, recursion, absolute paths, etc.", "keywords": [ "fs", "readdir", "stream", "event", "recursive", "deep", "filter", "absolute" ], "author": { "name": "James Messinger", "url": "http://bigstickcarpet.com" }, "homepage": "https://github.com/bigstickcarpet/readdir-enhanced", "repository": { "type": "git", "url": "git+https://github.com/bigstickcarpet/readdir-enhanced.git" }, "license": "MIT", "main": "lib/index.js", "typings": "types.d.ts", "files": [ "lib", "types.d.ts" ], "scripts": { "lint": "eslint lib test --fix", "test": "mocha && npm run lint", "cover": "istanbul cover _mocha", "upgrade": "npm-check -u", "bump": "bump --prompt --tag --push --all", "release": "npm run upgrade && npm test && npm run bump && npm publish" }, "devDependencies": { "chai": "^4.1.2", "codacy-coverage": "^2.0.3", "coveralls": "^3.0.0", "del": "^3.0.0", "eslint": "^4.15.0", "eslint-config-modular": "^4.1.1", "istanbul": "^0.4.5", "mkdirp": "^0.5.1", "mocha": "^4.1.0", "npm-check": "^5.5.2", "through2": "^2.0.3", "version-bump-prompt": "^4.0.0" }, "dependencies": { "call-me-maybe": { "name": "call-me-maybe", "version": "1.0.1", "description": "Let your JS API users either give you a callback or receive a promise", "main": "index.js", "dependencies": {}, "devDependencies": { "mocha": "^2.3.2", "promise": "^7.0.4", "zuul": "^3.4.0" }, "scripts": { "test": "mocha" }, "repository": { "type": "git", "url": "git+https://github.com/limulus/call-me-maybe.git" }, "keywords": [ "promise", "callback", "denodeify", "promisify", "carlyraejepsen" ], "author": { "name": "Eric McCarthy", "email": "eric@limulus.net", "url": "http://www.limulus.net/" }, "license": "MIT", "bugs": { "url": "https://github.com/limulus/call-me-maybe/issues" }, "homepage": "https://github.com/limulus/call-me-maybe#readme", "_resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz", "_integrity": "sha1-JtII6onje1y95gJQoV8DHBak1ms=", "_from": "call-me-maybe@1.0.1", "readme": "# call-me-maybe [![Build Status](https://travis-ci.org/limulus/call-me-maybe.svg?branch=master)](https://travis-ci.org/limulus/call-me-maybe)\n\nLet your JS API users either give you a callback or receive a promise.\n\n## Usage\n\n```javascript\nvar maybe = require(\"call-me-maybe\")\n\nmodule.exports = function asyncFunc (cb) {\n return maybe(cb, new Promise(function(resolve, reject) {\n // ...\n }))\n}\n```\n\n## API\n\n### maybe(cb, promise)\n\nIf the callback `cb` is truthy, returns `undefined` and will call `cb` when `promise` is settled. The parameters passed to `cb` are standard error-first:\n\n - If `promise` is fulfilled, then it is called with the result of the promise: `cb(null, result)`\n - If `promise` is rejected, then it is called with the rejection error: `cb(err)`\n\nIf `cb` is falsey, then `promise` is retuned.\n", "readmeFilename": "README.md", "_id": "call-me-maybe@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "call-me-maybe@1.0.1", "name": "call-me-maybe", "escapedName": "call-me-maybe", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "call-me-maybe@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/call-me-maybe", "error": "[Circular]", "extraneous": false }, "glob-to-regexp": { "name": "glob-to-regexp", "version": "0.3.0", "description": "Convert globs to regular expressions", "main": "index.js", "scripts": { "test": "node test.js" }, "repository": { "type": "git", "url": "git+https://github.com/fitzgen/glob-to-regexp.git" }, "keywords": [ "regexp", "glob", "regexps", "regular expressions", "regular expression", "wildcard" ], "author": { "name": "Nick Fitzgerald", "email": "fitzgen@gmail.com" }, "license": "BSD", "_resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz", "_integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs=", "_from": "glob-to-regexp@0.3.0", "readme": "# Glob To Regular Expression\n\n[![Build Status](https://travis-ci.org/fitzgen/glob-to-regexp.png?branch=master)](https://travis-ci.org/fitzgen/glob-to-regexp)\n\nTurn a \\*-wildcard style glob (`\"*.min.js\"`) into a regular expression\n(`/^.*\\.min\\.js$/`)!\n\nTo match bash-like globs, eg. `?` for any single-character match, `[a-z]` for\ncharacter ranges, and `{*.html, *.js}` for multiple alternatives, call with\n`{ extended: true }`.\n\nTo obey [globstars `**`](https://github.com/isaacs/node-glob#glob-primer) rules set option `{globstar: true}`.\nNOTE: This changes the behavior of `*` when `globstar` is `true` as shown below:\nWhen `{globstar: true}`: `/foo/**` will match any string that starts with `/foo/`\nlike `/foo/index.htm`, `/foo/bar/baz.txt`, etc. Also, `/foo/**/*.txt` will match\nany string that starts with `/foo/` and ends with `.txt` like `/foo/bar.txt`,\n`/foo/bar/baz.txt`, etc.\nWhereas `/foo/*` (single `*`, not a globstar) will match strings that start with\n`/foo/` like `/foo/index.htm`, `/foo/baz.txt` but will not match strings that\ncontain a `/` to the right like `/foo/bar/baz.txt`, `/foo/bar/baz/qux.dat`, etc.\n\nSet flags on the resulting `RegExp` object by adding the `flags` property to the option object, eg `{ flags: \"i\" }` for ignoring case.\n\n## Install\n\n npm install glob-to-regexp\n\n## Usage\n```js\nvar globToRegExp = require('glob-to-regexp');\nvar re = globToRegExp(\"p*uck\");\nre.test(\"pot luck\"); // true\nre.test(\"pluck\"); // true\nre.test(\"puck\"); // true\n\nre = globToRegExp(\"*.min.js\");\nre.test(\"http://example.com/jquery.min.js\"); // true\nre.test(\"http://example.com/jquery.min.js.map\"); // false\n\nre = globToRegExp(\"*/www/*.js\");\nre.test(\"http://example.com/www/app.js\"); // true\nre.test(\"http://example.com/www/lib/factory-proxy-model-observer.js\"); // true\n\n// Extended globs\nre = globToRegExp(\"*/www/{*.js,*.html}\", { extended: true });\nre.test(\"http://example.com/www/app.js\"); // true\nre.test(\"http://example.com/www/index.html\"); // true\n```\n\n## License\n\nCopyright (c) 2013, Nick Fitzgerald\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n list of conditions and the following disclaimer in the documentation and/or\n other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/fitzgen/glob-to-regexp/issues" }, "homepage": "https://github.com/fitzgen/glob-to-regexp#readme", "_id": "glob-to-regexp@0.3.0", "_requested": { "type": "version", "registry": true, "raw": "glob-to-regexp@0.3.0", "name": "glob-to-regexp", "escapedName": "glob-to-regexp", "rawSpec": "0.3.0", "saveSpec": "[Circular]", "fetchSpec": "0.3.0" }, "_spec": "0.3.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "glob-to-regexp@0.3.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/glob-to-regexp", "error": "[Circular]", "extraneous": false } }, "engines": { "node": ">=4" }, "_resolved": "https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz", "_integrity": "sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==", "_from": "@mrmlnc/readdir-enhanced@2.2.1", "readme": "Enhanced `fs.readdir()`\n=======================\n\n> :warning: This is «fork» for original `readdir-enhanced` package but with some monkey fixes.\n\n[![Build Status](https://api.travis-ci.org/BigstickCarpet/readdir-enhanced.svg?branch=master)](https://travis-ci.org/BigstickCarpet/readdir-enhanced)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/bigstickcarpet/readdir-enhanced?svg=true&branch=master&failingText=Windows%20build%20failing&passingText=Windows%20build%20passing)](https://ci.appveyor.com/project/BigstickCarpet/readdir-enhanced/branch/master)\n\n[![Coverage Status](https://coveralls.io/repos/github/BigstickCarpet/readdir-enhanced/badge.svg?branch=master)](https://coveralls.io/github/BigstickCarpet/readdir-enhanced?branch=master)\n[![Codacy Score](https://api.codacy.com/project/badge/Grade/178a817b6c864de7813fef457c0ed5ae)](https://www.codacy.com/public/jamesmessinger/readdir-enhanced)\n[![Inline docs](http://inch-ci.org/github/BigstickCarpet/readdir-enhanced.svg?branch=master&style=shields)](http://inch-ci.org/github/BigstickCarpet/readdir-enhanced)\n[![Dependencies](https://david-dm.org/BigstickCarpet/readdir-enhanced.svg)](https://david-dm.org/BigstickCarpet/readdir-enhanced)\n\n[![npm](https://img.shields.io/npm/v/readdir-enhanced.svg?maxAge=43200)](https://www.npmjs.com/package/readdir-enhanced)\n[![License](https://img.shields.io/npm/l/readdir-enhanced.svg?maxAge=2592000)](LICENSE)\n\n`readdir-enhanced` is a [backward-compatible](#backward-compatible) drop-in replacement for [`fs.readdir()`](https://nodejs.org/api/fs.html#fs_fs_readdir_path_options_callback) and [`fs.readdirSync()`](https://nodejs.org/api/fs.html#fs_fs_readdirsync_path_options) with tons of extra features ([filtering](#filter), [recursion](#deep), [absolute paths](#basepath), [stats](#stats), and more) as well as additional APIs for Promises, Streams, and EventEmitters.\n\n\nPick Your API\n-----------------\n`readdir-enhanced` has multiple APIs, so you can pick whichever one you prefer. There are three main APIs:\n\n- **Synchronous API**<br>\naliases: `readdir.sync`, `readdir.readdirSync`<br>\nBlocks the thread until all directory contents are read, and then returns all the results.\n\n- **Async API**<br>\naliases: `readdir`, `readdir.async`, `readdir.readdirAsync`<br>\nReads the starting directory contents asynchronously and buffers all the results until all contents have been read. Supports callback or Promise syntax (see example below).\n\n- **Streaming API**<br>\naliases: `readdir.stream`, `readdir.readdirStream`<br>\nThe streaming API reads the starting directory asynchronously and returns the results in real-time as they are read. The results can be [piped](https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options) to other Node.js streams, or you can listen for specific events via the [EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter) interface. (see example below)\n\n```javascript\nvar readdir = require('readdir-enhanced');\nvar through2 = require('through2');\n\n// Synchronous API\nvar files = readdir.sync('my/directory');\n\n// Callback API\nreaddir.async('my/directory', function(err, files) { ... });\n\n// Promises API\nreaddir.async('my/directory')\n .then(function(files) { ... })\n .catch(function(err) { ... });\n\n// EventEmitter API\nreaddir.stream('my/directory')\n .on('data', function(path) { ... })\n .on('file', function(path) { ... })\n .on('directory', function(path) { ... })\n .on('symlink', function(path) { ... })\n .on('error', function(err) { ... });\n\n// Streaming API\nvar stream = readdir.stream('my/directory')\n .pipe(through2.obj(function(data, enc, next) {\n console.log(data);\n this.push(data);\n next();\n });\n```\n\n\n<a id=\"options\"></a>\nEnhanced Features\n-----------------\n`readdir-enhanced` adds several features to the built-in `fs.readdir()` function. All of the enhanced features are opt-in, which makes `readdir-enhanced` [fully backward compatible by default](#backward-compatible). You can enable any of the features by passing-in an `options` argument as the second parameter.\n\n\n<a id=\"deep\"></a>\n### Recursion\nBy default, `readdir-enhanced` will only return the top-level contents of the starting directory. But you can set the `deep` option to recursively traverse the subdirectories and return their contents as well.\n\n#### Crawl ALL subdirectories\n\nThe `deep` option can be set to `true` to traverse the entire directory structure.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\nreaddir('my/directory', {deep: true}, function(err, files) {\n console.log(files);\n // => subdir1\n // => subdir1/file.txt\n // => subdir1/subdir2\n // => subdir1/subdir2/file.txt\n // => subdir1/subdir2/subdir3\n // => subdir1/subdir2/subdir3/file.txt\n});\n```\n\n#### Crawl to a specific depth\nThe `deep` option can be set to a number to only traverse that many levels deep. For example, calling `readdir('my/directory', {deep: 2})` will return `subdir1/file.txt` and `subdir1/subdir2/file.txt`, but it _won't_ return `subdir1/subdir2/subdir3/file.txt`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\nreaddir('my/directory', {deep: 2}, function(err, files) {\n console.log(files);\n // => subdir1\n // => subdir1/file.txt\n // => subdir1/subdir2\n // => subdir1/subdir2/file.txt\n // => subdir1/subdir2/subdir3\n});\n```\n\n#### Crawl subdirectories by name\nFor simple use-cases, you can use a [regular expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) or a [glob pattern](https://github.com/isaacs/node-glob#glob-primer) to crawl only the directories whose path matches the pattern. The path is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath).\n\n> **NOTE:** Glob patterns [_always_ use forward-slashes](https://github.com/isaacs/node-glob#windows), even on Windows. This _does not_ apply to regular expressions though. Regular expressions should use the appropraite path separator for the environment. Or, you can match both types of separators using `[\\\\/]`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Only crawl the \"lib\" and \"bin\" subdirectories\n// (notice that the \"node_modules\" subdirectory does NOT get crawled)\nreaddir('my/directory', {deep: /lib|bin/}, function(err, files) {\n console.log(files);\n // => bin\n // => bin/cli.js\n // => lib\n // => lib/index.js\n // => node_modules\n // => package.json\n});\n```\n\n#### Custom recursion logic\nFor more advanced recursion, you can set the `deep` option to a function that accepts an [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object and returns a truthy value if the starting directory should be crawled.\n\n> **NOTE:** The [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object that's passed to the function has additional `path` and `depth` properties. The `path` is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath). The `depth` is the number of subdirectories beneath the base path (see [`options.deep`](#deep)).\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Crawl all subdirectories, except \"node_modules\"\nfunction ignoreNodeModules (stats) {\n return stats.path.indexOf('node_modules') === -1;\n}\n\nreaddir('my/directory', {deep: ignoreNodeModules}, function(err, files) {\n console.log(files);\n // => bin\n // => bin/cli.js\n // => lib\n // => lib/index.js\n // => node_modules\n // => package.json\n});\n```\n\n\n<a id=\"filter\"></a>\n### Filtering\nThe `filter` option lets you limit the results based on any criteria you want.\n\n#### Filter by name\nFor simple use-cases, you can use a [regular expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) or a [glob pattern](https://github.com/isaacs/node-glob#glob-primer) to filter items by their path. The path is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath).\n\n> **NOTE:** Glob patterns [_always_ use forward-slashes](https://github.com/isaacs/node-glob#windows), even on Windows. This _does not_ apply to regular expressions though. Regular expressions should use the appropraite path separator for the environment. Or, you can match both types of separators using `[\\\\/]`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Find all .txt files\nreaddir('my/directory', {filter: '*.txt'});\n\n// Find all package.json files\nreaddir('my/directory', {filter: '**/package.json', deep: true});\n\n// Find everything with at least one number in the name\nreaddir('my/directory', {filter: /\\d+/});\n```\n\n#### Custom filtering logic\nFor more advanced filtering, you can specify a filter function that accepts an [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object and returns a truthy value if the item should be included in the results.\n\n> **NOTE:** The [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object that's passed to the filter function has additional `path` and `depth` properties. The `path` is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath). The `depth` is the number of subdirectories beneath the base path (see [`options.deep`](#deep)).\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Only return file names containing an underscore\nfunction myFilter(stats) {\n return stats.isFile() && stats.path.indexOf('_') >= 0;\n}\n\nreaddir('my/directory', {filter: myFilter}, function(err, files) {\n console.log(files);\n // => __myFile.txt\n // => my_other_file.txt\n // => img_1.jpg\n // => node_modules\n});\n```\n\n\n<a id=\"basepath\"></a>\n### Base Path\nBy default all `readdir-enhanced` functions return paths that are relative to the starting directory. But you can use the `basePath` option to customize this. The `basePath` will be prepended to all of the returned paths. One common use-case for this is to set `basePath` to the absolute path of the starting directory, so that all of the returned paths will be absolute.\n\n```javascript\nvar readdir = require('readdir-enhanced');\nvar path = require('path');\n\n// Get absolute paths\nvar absPath = path.resolve('my/dir');\nreaddir('my/directory', {basePath: absPath}, function(err, files) {\n console.log(files);\n // => /absolute/path/to/my/directory/file1.txt\n // => /absolute/path/to/my/directory/file2.txt\n // => /absolute/path/to/my/directory/subdir\n});\n\n// Get paths relative to the working directory\nreaddir('my/directory', {basePath: 'my/directory'}, function(err, files) {\n console.log(files);\n // => my/directory/file1.txt\n // => my/directory/file2.txt\n // => my/directory/subdir\n});\n```\n\n\n<a id=\"sep\"></a>\n### Path Separator\nBy default, `readdir-enhanced` uses the correct path separator for your OS (`\\` on Windows, `/` on Linux & MacOS). But you can set the `sep` option to any separator character(s) that you want to use instead. This is usually used to ensure consistent path separators across different OSes.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Always use Windows path separators\nreaddir('my/directory', {sep: '\\\\', deep: true}, function(err, files) {\n console.log(files);\n // => subdir1\n // => subdir1\\file.txt\n // => subdir1\\subdir2\n // => subdir1\\subdir2\\file.txt\n // => subdir1\\subdir2\\subdir3\n // => subdir1\\subdir2\\subdir3\\file.txt\n});\n```\n\n<a id=\"fs\"></a>\n### Custom FS methods\nBy default, `readdir-enhanced` uses the default [Node.js FileSystem module](https://nodejs.org/api/fs.html) for methods like `fs.stat`, `fs.readdir` and `fs.lstat`. But in some situations, you can want to use your own FS methods (FTP, SSH, remote drive and etc). So you can provide your own implementation of FS methods by setting `options.fs` or specific methods, such as `options.fs.stat`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\nfunction myCustomReaddirMethod(dir, callback) {\n callback(null, ['__myFile.txt']);\n}\n\nvar options = {\n fs: {\n readdir: myCustomReaddirMethod\n }\n};\n\nreaddir('my/directory', options, function(err, files) {\n console.log(files);\n // => __myFile.txt\n});\n```\n\n<a id=\"stats\"></a>\nGet `fs.Stats` objects instead of strings\n------------------------\nAll of the `readdir-enhanced` functions listed above return an array of strings (paths). But in some situations, the path isn't enough information. So, `readdir-enhanced` provides alternative versions of each function, which return an array of [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) objects instead of strings. The `fs.Stats` object contains all sorts of useful information, such as the size, the creation date/time, and helper methods such as `isFile()`, `isDirectory()`, `isSymbolicLink()`, etc.\n\n> **NOTE:** The [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) objects that are returned also have additional `path` and `depth` properties. The `path` is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath). The `depth` is the number of subdirectories beneath the base path (see [`options.deep`](#deep)).\n\nTo get `fs.Stats` objects instead of strings, just add the word \"Stat\" to the function name. As with the normal functions, each one is aliased (e.g. `readdir.async.stat` is the same as `readdir.readdirAsyncStat`), so you can use whichever naming style you prefer.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Synchronous API\nvar stats = readdir.sync.stat('my/directory');\nvar stats = readdir.readdirSyncStat('my/directory');\n\n// Async API\nreaddir.async.stat('my/directory', function(err, stats) { ... });\nreaddir.readdirAsyncStat('my/directory', function(err, stats) { ... });\n\n// Streaming API\nreaddir.stream.stat('my/directory')\n .on('data', function(stat) { ... })\n .on('file', function(stat) { ... })\n .on('directory', function(stat) { ... })\n .on('symlink', function(stat) { ... });\n\nreaddir.readdirStreamStat('my/directory')\n .on('data', function(stat) { ... })\n .on('file', function(stat) { ... })\n .on('directory', function(stat) { ... })\n .on('symlink', function(stat) { ... });\n\n```\n\n<a id=\"backward-compatible\"></a>\nBackward Compatible\n--------------------\n`readdir-enhanced` is fully backward-compatible with Node.js' built-in `fs.readdir()` and `fs.readdirSync()` functions, so you can use it as a drop-in replacement in existing projects without affecting existing functionality, while still being able to use the enhanced features as needed.\n\n```javascript\nvar readdir = require('readdir-enhanced');\nvar readdirSync = readdir.sync;\n\n// Use it just like Node's built-in fs.readdir function\nreaddir('my/directory', function(err, files) { ... });\n\n// Use it just like Node's built-in fs.readdirSync function\nvar files = readdirSync('my/directory');\n```\n\n\n\nContributing\n--------------------------\nI welcome any contributions, enhancements, and bug-fixes. [File an issue](https://github.com/BigstickCarpet/readdir-enhanced/issues) on GitHub and [submit a pull request](https://github.com/BigstickCarpet/readdir-enhanced/pulls).\n\n#### Building\nTo build the project locally on your computer:\n\n1. __Clone this repo__<br>\n`git clone https://github.com/bigstickcarpet/readdir-enhanced.git`\n\n2. __Install dependencies__<br>\n`npm install`\n\n3. __Run the tests__<br>\n`npm test`\n\n\n\nLicense\n--------------------------\n`readdir-enhanced` is 100% free and open-source, under the [MIT license](LICENSE). Use it however you want.\n\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/bigstickcarpet/readdir-enhanced/issues" }, "_id": "@mrmlnc/readdir-enhanced@2.2.1", "_requested": { "type": "version", "registry": true, "raw": "@mrmlnc/readdir-enhanced@2.2.1", "name": "@mrmlnc/readdir-enhanced", "escapedName": "@mrmlnc%2freaddir-enhanced", "scope": "@mrmlnc", "rawSpec": "2.2.1", "saveSpec": "[Circular]", "fetchSpec": "2.2.1" }, "_spec": "2.2.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@mrmlnc/readdir-enhanced@2.2.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "call-me-maybe": "^1.0.1", "glob-to-regexp": "^0.3.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@mrmlnc/readdir-enhanced", "error": "[Circular]", "extraneous": false }, "@nodelib/fs.stat": { "name": "@nodelib/fs.stat", "version": "1.1.3", "description": "Get the status of a file with some features", "license": "MIT", "repository": { "type": "git", "url": "https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.stat" }, "keywords": [ "NodeLib", "fs", "FileSystem", "file system", "stat" ], "engines": { "node": ">= 6" }, "main": "out/index.js", "typings": "out/index.d.ts", "scripts": { "clean": "rimraf out", "lint": "tslint \"src/**/*.ts\" -p . -t stylish", "compile": "tsc -b .", "compile:watch": "tsc -p . --watch --sourceMap", "test": "mocha \"out/**/*.spec.js\" -s 0", "build": "npm run clean && npm run lint && npm run compile && npm test", "watch": "npm run clean && npm run compile:watch" }, "_resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz", "_integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw==", "_from": "@nodelib/fs.stat@1.1.3", "readme": "# @nodelib/fs.stat\n\n> Get the status of a file with some features.\n\n## :bulb: Highlights\n\nWrapper over standard methods ([`fs.lstat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_lstat_path_callback), [`fs.stat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_stat_path_callback)) with some features.\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps :beginner: Normally follows symlinks.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps :gear: Can safely work with broken symlinks (returns information about symlink instead of generating an error).\n\n## Install\n\n```\n$ npm install @nodelib/fs.stat\n```\n\n## Usage\n\n```js\nconst fsStat = require('@nodelib/fs.stat');\n\nfsStat.stat('path').then((stat) => {\n console.log(stat); // => fs.Stats\n});\n```\n\n## API\n\n### fsStat.stat(path, [options])\n\nReturns a [`Promise<fs.Stats>`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_class_fs_stats) for provided path.\n\n### fsStat.statSync(path, [options])\n\nReturns a [`fs.Stats`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_class_fs_stats) for provided path.\n\n### fsStat.statCallback(path, [options], callback)\n\nReturns a [`fs.Stats`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_class_fs_stats) for provided path with standard callback-style.\n\n#### path\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `string | Buffer | URL`\n\nThe `path` argument for [`fs.lstat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_lstat_path_callback) or [`fs.stat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_stat_path_callback) method.\n\n#### options\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `Object`\n\nSee [options](#options-1) section for more detailed information.\n\n## Options\n\n### throwErrorOnBrokenSymlinks\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nThrow an error or return information about symlink, when symlink is broken. When `false`, methods will be return lstat call for broken symlinks.\n\n### followSymlinks\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nBy default, the methods of this package follows symlinks. If you do not want it, set this option to `false` or use the standard method [`fs.lstat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_lstat_path_callback).\n\n### fs\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `FileSystemAdapter`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `built-in FS methods`\n\nBy default, the built-in Node.js module (`fs`) is used to work with the file system. You can replace each method with your own.\n\n```ts\ninterface FileSystemAdapter {\n\tlstat?: typeof fs.lstat;\n\tstat?: typeof fs.stat;\n\tlstatSync?: typeof fs.lstatSync;\n\tstatSync?: typeof fs.statSync;\n}\n```\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/nodelib/nodelib/releases) for changelogs for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license.\n", "readmeFilename": "README.md", "_id": "@nodelib/fs.stat@1.1.3", "_requested": { "type": "version", "registry": true, "raw": "@nodelib/fs.stat@1.1.3", "name": "@nodelib/fs.stat", "escapedName": "@nodelib%2ffs.stat", "scope": "@nodelib", "rawSpec": "1.1.3", "saveSpec": "[Circular]", "fetchSpec": "1.1.3" }, "_spec": "1.1.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "@nodelib/fs.stat@1.1.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "devDependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@nodelib/fs.stat", "error": "[Circular]", "extraneous": false }, "glob-parent": { "name": "glob-parent", "version": "3.1.0", "description": "Strips glob magic from a string to provide the parent directory path", "main": "index.js", "scripts": { "test": "istanbul test node_modules/mocha/bin/_mocha", "ci-test": "istanbul cover _mocha && cat ./coverage/lcov.info | coveralls" }, "repository": { "type": "git", "url": "git+https://github.com/es128/glob-parent.git" }, "keywords": [ "glob", "parent", "strip", "path", "dirname", "directory", "base", "wildcard" ], "files": [ "index.js" ], "author": { "name": "Elan Shanker", "url": "https://github.com/es128" }, "license": "ISC", "bugs": { "url": "https://github.com/es128/glob-parent/issues" }, "homepage": "https://github.com/es128/glob-parent", "dependencies": {}, "devDependencies": { "coveralls": "^2.11.2", "istanbul": "^0.3.5", "mocha": "^2.1.0" }, "_resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz", "_integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=", "_from": "glob-parent@3.1.0", "readme": "glob-parent [![Build Status](https://travis-ci.org/es128/glob-parent.svg)](https://travis-ci.org/es128/glob-parent) [![Coverage Status](https://img.shields.io/coveralls/es128/glob-parent.svg)](https://coveralls.io/r/es128/glob-parent?branch=master)\n======\nJavascript module to extract the non-magic parent path from a glob string.\n\n[![NPM](https://nodei.co/npm/glob-parent.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/glob-parent/)\n[![NPM](https://nodei.co/npm-dl/glob-parent.png?height=3&months=9)](https://nodei.co/npm-dl/glob-parent/)\n\nUsage\n-----\n```sh\nnpm install glob-parent --save\n```\n\n**Examples**\n\n```js\nvar globParent = require('glob-parent');\n\nglobParent('path/to/*.js'); // 'path/to'\nglobParent('/root/path/to/*.js'); // '/root/path/to'\nglobParent('/*.js'); // '/'\nglobParent('*.js'); // '.'\nglobParent('**/*.js'); // '.'\nglobParent('path/{to,from}'); // 'path'\nglobParent('path/!(to|from)'); // 'path'\nglobParent('path/?(to|from)'); // 'path'\nglobParent('path/+(to|from)'); // 'path'\nglobParent('path/*(to|from)'); // 'path'\nglobParent('path/@(to|from)'); // 'path'\nglobParent('path/**/*'); // 'path'\n\n// if provided a non-glob path, returns the nearest dir\nglobParent('path/foo/bar.js'); // 'path/foo'\nglobParent('path/foo/'); // 'path/foo'\nglobParent('path/foo'); // 'path' (see issue #3 for details)\n```\n\n## Escaping\n\nThe following characters have special significance in glob patterns and must be escaped if you want them to be treated as regular path characters:\n\n- `?` (question mark)\n- `*` (star)\n- `|` (pipe)\n- `(` (opening parenthesis)\n- `)` (closing parenthesis)\n- `{` (opening curly brace)\n- `}` (closing curly brace)\n- `[` (opening bracket)\n- `]` (closing bracket)\n\n**Example**\n\n```js\nglobParent('foo/[bar]/') // 'foo'\nglobParent('foo/\\\\[bar]/') // 'foo/[bar]'\n```\n\n## Limitations\n\n#### Braces & Brackets\nThis library attempts a quick and imperfect method of determining which path\nparts have glob magic without fully parsing/lexing the pattern. There are some\nadvanced use cases that can trip it up, such as nested braces where the outer\npair is escaped and the inner one contains a path separator. If you find\nyourself in the unlikely circumstance of being affected by this or need to\nensure higher-fidelity glob handling in your library, it is recommended that you\npre-process your input with [expand-braces] and/or [expand-brackets].\n\n#### Windows\nBackslashes are not valid path separators for globs. If a path with backslashes\nis provided anyway, for simple cases, glob-parent will replace the path\nseparator for you and return the non-glob parent path (now with\nforward-slashes, which are still valid as Windows path separators).\n\nThis cannot be used in conjunction with escape characters.\n\n```js\n// BAD\nglobParent('C:\\\\Program Files \\\\(x86\\\\)\\\\*.ext') // 'C:/Program Files /(x86/)'\n\n// GOOD\nglobParent('C:/Program Files\\\\(x86\\\\)/*.ext') // 'C:/Program Files (x86)'\n```\n\nIf you are using escape characters for a pattern without path parts (i.e.\nrelative to `cwd`), prefix with `./` to avoid confusing glob-parent.\n\n```js\n// BAD\nglobParent('foo \\\\[bar]') // 'foo '\nglobParent('foo \\\\[bar]*') // 'foo '\n\n// GOOD\nglobParent('./foo \\\\[bar]') // 'foo [bar]'\nglobParent('./foo \\\\[bar]*') // '.'\n```\n\n\nChange Log\n----------\n[See release notes page on GitHub](https://github.com/es128/glob-parent/releases)\n\nLicense\n-------\n[ISC](https://raw.github.com/es128/glob-parent/master/LICENSE)\n\n[expand-braces]: https://github.com/jonschlinkert/expand-braces\n[expand-brackets]: https://github.com/jonschlinkert/expand-brackets\n", "readmeFilename": "README.md", "_id": "glob-parent@3.1.0", "_requested": { "type": "version", "registry": true, "raw": "glob-parent@3.1.0", "name": "glob-parent", "escapedName": "glob-parent", "rawSpec": "3.1.0", "saveSpec": "[Circular]", "fetchSpec": "3.1.0" }, "_spec": "3.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "glob-parent@3.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-glob": "^3.1.0", "path-dirname": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/glob-parent", "error": "[Circular]", "extraneous": false, "_deduped": "glob-parent" }, "is-glob": { "name": "is-glob", "description": "Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.", "version": "4.0.1", "homepage": "https://github.com/micromatch/is-glob", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "Brian Woodward", "url": "https://twitter.com/doowb" }, { "name": "Daniel Perez", "url": "https://tuvistavie.com" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" } ], "repository": { "type": "git", "url": "git+https://github.com/micromatch/is-glob.git" }, "bugs": { "url": "https://github.com/micromatch/is-glob/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha" }, "dependencies": {}, "devDependencies": { "gulp-format-md": "^0.1.10", "mocha": "^3.0.2" }, "keywords": [ "bash", "braces", "check", "exec", "expression", "extglob", "glob", "globbing", "globstar", "is", "match", "matches", "pattern", "regex", "regular", "string", "test" ], "verb": { "layout": "default", "plugins": [ "gulp-format-md" ], "related": { "list": [ "assemble", "base", "update", "verb" ] }, "reflinks": [ "assemble", "bach", "base", "composer", "gulp", "has-glob", "is-valid-glob", "micromatch", "npm", "scaffold", "verb", "vinyl" ] }, "_resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz", "_integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==", "_from": "is-glob@4.0.1", "readme": "# is-glob [![NPM version](https://img.shields.io/npm/v/is-glob.svg?style=flat)](https://www.npmjs.com/package/is-glob) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-glob.svg?style=flat)](https://npmjs.org/package/is-glob) [![NPM total downloads](https://img.shields.io/npm/dt/is-glob.svg?style=flat)](https://npmjs.org/package/is-glob) [![Linux Build Status](https://img.shields.io/travis/micromatch/is-glob.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/is-glob) [![Windows Build Status](https://img.shields.io/appveyor/ci/micromatch/is-glob.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/micromatch/is-glob)\n\n> Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-glob\n```\n\nYou might also be interested in [is-valid-glob](https://github.com/jonschlinkert/is-valid-glob) and [has-glob](https://github.com/jonschlinkert/has-glob).\n\n## Usage\n\n```js\nvar isGlob = require('is-glob');\n```\n\n### Default behavior\n\n**True**\n\nPatterns that have glob characters or regex patterns will return `true`:\n\n```js\nisGlob('!foo.js');\nisGlob('*.js');\nisGlob('**/abc.js');\nisGlob('abc/*.js');\nisGlob('abc/(aaa|bbb).js');\nisGlob('abc/[a-z].js');\nisGlob('abc/{a,b}.js');\n//=> true\n```\n\nExtglobs\n\n```js\nisGlob('abc/@(a).js');\nisGlob('abc/!(a).js');\nisGlob('abc/+(a).js');\nisGlob('abc/*(a).js');\nisGlob('abc/?(a).js');\n//=> true\n```\n\n**False**\n\nEscaped globs or extglobs return `false`:\n\n```js\nisGlob('abc/\\\\@(a).js');\nisGlob('abc/\\\\!(a).js');\nisGlob('abc/\\\\+(a).js');\nisGlob('abc/\\\\*(a).js');\nisGlob('abc/\\\\?(a).js');\nisGlob('\\\\!foo.js');\nisGlob('\\\\*.js');\nisGlob('\\\\*\\\\*/abc.js');\nisGlob('abc/\\\\*.js');\nisGlob('abc/\\\\(aaa|bbb).js');\nisGlob('abc/\\\\[a-z].js');\nisGlob('abc/\\\\{a,b}.js');\n//=> false\n```\n\nPatterns that do not have glob patterns return `false`:\n\n```js\nisGlob('abc.js');\nisGlob('abc/def/ghi.js');\nisGlob('foo.js');\nisGlob('abc/@.js');\nisGlob('abc/+.js');\nisGlob('abc/?.js');\nisGlob();\nisGlob(null);\n//=> false\n```\n\nArrays are also `false` (If you want to check if an array has a glob pattern, use [has-glob](https://github.com/jonschlinkert/has-glob)):\n\n```js\nisGlob(['**/*.js']);\nisGlob(['foo.js']);\n//=> false\n```\n\n### Option strict\n\nWhen `options.strict === false` the behavior is less strict in determining if a pattern is a glob. Meaning that\nsome patterns that would return `false` may return `true`. This is done so that matching libraries like [micromatch](https://github.com/micromatch/micromatch) have a chance at determining if the pattern is a glob or not.\n\n**True**\n\nPatterns that have glob characters or regex patterns will return `true`:\n\n```js\nisGlob('!foo.js', {strict: false});\nisGlob('*.js', {strict: false});\nisGlob('**/abc.js', {strict: false});\nisGlob('abc/*.js', {strict: false});\nisGlob('abc/(aaa|bbb).js', {strict: false});\nisGlob('abc/[a-z].js', {strict: false});\nisGlob('abc/{a,b}.js', {strict: false});\n//=> true\n```\n\nExtglobs\n\n```js\nisGlob('abc/@(a).js', {strict: false});\nisGlob('abc/!(a).js', {strict: false});\nisGlob('abc/+(a).js', {strict: false});\nisGlob('abc/*(a).js', {strict: false});\nisGlob('abc/?(a).js', {strict: false});\n//=> true\n```\n\n**False**\n\nEscaped globs or extglobs return `false`:\n\n```js\nisGlob('\\\\!foo.js', {strict: false});\nisGlob('\\\\*.js', {strict: false});\nisGlob('\\\\*\\\\*/abc.js', {strict: false});\nisGlob('abc/\\\\*.js', {strict: false});\nisGlob('abc/\\\\(aaa|bbb).js', {strict: false});\nisGlob('abc/\\\\[a-z].js', {strict: false});\nisGlob('abc/\\\\{a,b}.js', {strict: false});\n//=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [assemble](https://www.npmjs.com/package/assemble): Get the rocks out of your socks! Assemble makes you fast at creating web projects… [more](https://github.com/assemble/assemble) | [homepage](https://github.com/assemble/assemble \"Get the rocks out of your socks! Assemble makes you fast at creating web projects. Assemble is used by thousands of projects for rapid prototyping, creating themes, scaffolds, boilerplates, e-books, UI components, API documentation, blogs, building websit\")\n* [base](https://www.npmjs.com/package/base): Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | [homepage](https://github.com/node-base/base \"Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks\")\n* [update](https://www.npmjs.com/package/update): Be scalable! Update is a new, open source developer framework and CLI for automating updates… [more](https://github.com/update/update) | [homepage](https://github.com/update/update \"Be scalable! Update is a new, open source developer framework and CLI for automating updates of any kind in code projects.\")\n* [verb](https://www.npmjs.com/package/verb): Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used… [more](https://github.com/verbose/verb) | [homepage](https://github.com/verbose/verb \"Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used on hundreds of projects of all sizes to generate everything from API docs to readmes.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- | \n| 47 | [jonschlinkert](https://github.com/jonschlinkert) | \n| 5 | [doowb](https://github.com/doowb) | \n| 1 | [phated](https://github.com/phated) | \n| 1 | [danhper](https://github.com/danhper) | \n| 1 | [paulmillr](https://github.com/paulmillr) | \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on March 27, 2019._", "readmeFilename": "README.md", "_id": "is-glob@4.0.1", "_requested": { "type": "version", "registry": true, "raw": "is-glob@4.0.1", "name": "is-glob", "escapedName": "is-glob", "rawSpec": "4.0.1", "saveSpec": "[Circular]", "fetchSpec": "4.0.1" }, "_spec": "4.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-glob@4.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-extglob": "^2.1.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-glob", "error": "[Circular]", "extraneous": false, "_deduped": "is-glob" }, "merge2": { "name": "merge2", "description": "Merge multiple streams into one stream in sequence or parallel.", "authors": [ "Yan Qing <admin@zensh.com>" ], "license": "MIT", "version": "1.2.3", "main": "./index", "jsnext:main": "index.mjs", "repository": { "type": "git", "url": "git+ssh://git@github.com/teambition/merge2.git" }, "homepage": "https://github.com/teambition/merge2", "keywords": [ "merge2", "multiple", "sequence", "parallel", "merge", "stream", "merge stream", "sync" ], "engines": { "node": ">= 4.5.0" }, "dependencies": {}, "devDependencies": { "@std/esm": "^0.26.0", "standard": "^12.0.1", "through2": "^2.0.3", "thunks": "^4.9.2", "tman": "^1.8.1", "to-through": "^2.0.0" }, "scripts": { "test": "standard && tman" }, "files": [ "README.md", "index.js", "index.mjs" ], "_resolved": "https://registry.npmjs.org/merge2/-/merge2-1.2.3.tgz", "_integrity": "sha512-gdUU1Fwj5ep4kplwcmftruWofEFt6lfpkkr3h860CXbAB9c3hGb55EOL2ali0Td5oebvW0E1+3Sr+Ur7XfKpRA==", "_from": "merge2@1.2.3", "readme": "# merge2\n\nMerge multiple streams into one stream in sequence or parallel.\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Downloads][downloads-image]][downloads-url]\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/merge2)\n\n```sh\nnpm install merge2\n```\n\n## Usage\n\n```js\nconst gulp = require('gulp')\nconst merge2 = require('merge2')\nconst concat = require('gulp-concat')\nconst minifyHtml = require('gulp-minify-html')\nconst ngtemplate = require('gulp-ngtemplate')\n\ngulp.task('app-js', function () {\n return merge2(\n gulp.src('static/src/tpl/*.html')\n .pipe(minifyHtml({empty: true}))\n .pipe(ngtemplate({\n module: 'genTemplates',\n standalone: true\n })\n ), gulp.src([\n 'static/src/js/app.js',\n 'static/src/js/locale_zh-cn.js',\n 'static/src/js/router.js',\n 'static/src/js/tools.js',\n 'static/src/js/services.js',\n 'static/src/js/filters.js',\n 'static/src/js/directives.js',\n 'static/src/js/controllers.js'\n ])\n )\n .pipe(concat('app.js'))\n .pipe(gulp.dest('static/dist/js/'))\n})\n```\n\n```js\nconst stream = merge2([stream1, stream2], stream3, {end: false})\n//...\nstream.add(stream4, stream5)\n//..\nstream.end()\n```\n\n```js\n// equal to merge2([stream1, stream2], stream3)\nconst stream = merge2()\nstream.add([stream1, stream2])\nstream.add(stream3)\n```\n\n```js\n// merge order:\n// 1. merge `stream1`;\n// 2. merge `stream2` and `stream3` in parallel after `stream1` merged;\n// 3. merge 'stream4' after `stream2` and `stream3` merged;\nconst stream = merge2(stream1, [stream2, stream3], stream4)\n\n// merge order:\n// 1. merge `stream5` and `stream6` in parallel after `stream4` merged;\n// 2. merge 'stream7' after `stream5` and `stream6` merged;\nstream.add([stream5, stream6], stream7)\n```\n\n```js\n// nest merge\n// equal to merge2(stream1, stream2, stream6, stream3, [stream4, stream5]);\nconst streamA = merge2(stream1, stream2)\nconst streamB = merge2(stream3, [stream4, stream5])\nconst stream = merge2(streamA, streamB)\nstreamA.add(stream6)\n```\n\n## API\n\n```js\nconst merge2 = require('merge2')\n```\n\n### merge2()\n\n### merge2(options)\n\n### merge2(stream1, stream2, ..., streamN)\n\n### merge2(stream1, stream2, ..., streamN, options)\n\n### merge2(stream1, [stream2, stream3, ...], streamN, options)\n\nreturn a duplex stream (mergedStream). streams in array will be merged in parallel.\n\n### mergedStream.add(stream)\n\n### mergedStream.add(stream1, [stream2, stream3, ...], ...)\n\nreturn the mergedStream.\n\n### mergedStream.on('queueDrain', function() {})\n\nIt will emit 'queueDrain' when all streams merged. If you set `end === false` in options, this event give you a notice that should add more streams to merge or end the mergedStream.\n\n#### stream\n\n*option*\nType: `Readable` or `Duplex` or `Transform` stream.\n\n#### options\n\n*option*\nType: `Object`.\n\n* **end** - `Boolean` - if `end === false` then mergedStream will not be auto ended, you should end by yourself. **Default:** `undefined`\n\n* **objectMode** - `Boolean` . **Default:** `true`\n\n`objectMode` and other options(`highWaterMark`, `defaultEncoding` ...) is same as Node.js `Stream`.\n\n## License\n\nMIT © [Teambition](https://www.teambition.com)\n\n[npm-url]: https://npmjs.org/package/merge2\n[npm-image]: http://img.shields.io/npm/v/merge2.svg\n\n[travis-url]: https://travis-ci.org/teambition/merge2\n[travis-image]: http://img.shields.io/travis/teambition/merge2.svg\n\n[downloads-url]: https://npmjs.org/package/merge2\n[downloads-image]: http://img.shields.io/npm/dm/merge2.svg?style=flat-square\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/teambition/merge2/issues" }, "_id": "merge2@1.2.3", "_requested": { "type": "version", "registry": true, "raw": "merge2@1.2.3", "name": "merge2", "escapedName": "merge2", "rawSpec": "1.2.3", "saveSpec": "[Circular]", "fetchSpec": "1.2.3" }, "_spec": "1.2.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "merge2@1.2.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/merge2", "error": "[Circular]", "extraneous": false }, "micromatch": { "name": "micromatch", "description": "Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.", "version": "3.1.10", "homepage": "https://github.com/micromatch/micromatch", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "Amila Welihinda", "url": "amilajack.com" }, { "name": "Bogdan Chadkin", "url": "https://github.com/TrySound" }, { "name": "Brian Woodward", "url": "https://twitter.com/doowb" }, { "name": "Devon Govett", "url": "http://badassjs.com" }, { "name": "Elan Shanker", "url": "https://github.com/es128" }, { "name": "Fabrício Matté", "url": "https://ultcombo.js.org" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Martin Kolárik", "url": "https://kolarik.sk" }, { "name": "Olsten Larck", "url": "https://i.am.charlike.online" }, { "name": "Paul Miller", "url": "paulmillr.com" }, { "name": "Tom Byrer", "url": "https://github.com/tomByrer" }, { "name": "Tyler Akins", "url": "http://rumkin.com" }, { "url": "https://github.com/DianeLooney" } ], "repository": { "type": "git", "url": "git+https://github.com/micromatch/micromatch.git" }, "bugs": { "url": "https://github.com/micromatch/micromatch/issues" }, "license": "MIT", "files": [ "index.js", "lib" ], "main": "index.js", "engines": { "node": ">=0.10.0" }, "scripts": { "test": "mocha" }, "dependencies": {}, "devDependencies": { "bash-match": "^1.0.2", "for-own": "^1.0.0", "gulp": "^3.9.1", "gulp-format-md": "^1.0.0", "gulp-istanbul": "^1.1.3", "gulp-mocha": "^5.0.0", "gulp-unused": "^0.2.1", "is-windows": "^1.0.2", "minimatch": "^3.0.4", "minimist": "^1.2.0", "mocha": "^3.5.3", "multimatch": "^2.1.0" }, "keywords": [ "bash", "expand", "expansion", "expression", "file", "files", "filter", "find", "glob", "globbing", "globs", "globstar", "match", "matcher", "matches", "matching", "micromatch", "minimatch", "multimatch", "path", "pattern", "patterns", "regex", "regexp", "regular", "shell", "wildcard" ], "lintDeps": { "dependencies": { "options": { "lock": { "snapdragon": "^0.8.1" } } }, "devDependencies": { "files": { "options": { "ignore": [ "benchmark/**" ] } } } }, "verb": { "toc": "collapsible", "layout": "default", "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "helpers": [ "./benchmark/helper.js" ], "related": { "list": [ "braces", "expand-brackets", "extglob", "fill-range", "nanomatch" ] }, "lint": { "reflinks": true }, "reflinks": [ "expand-brackets", "extglob", "glob-object", "minimatch", "multimatch", "snapdragon" ] }, "_resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz", "_integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==", "_from": "micromatch@3.1.10", "readme": "# micromatch [![NPM version](https://img.shields.io/npm/v/micromatch.svg?style=flat)](https://www.npmjs.com/package/micromatch) [![NPM monthly downloads](https://img.shields.io/npm/dm/micromatch.svg?style=flat)](https://npmjs.org/package/micromatch) [![NPM total downloads](https://img.shields.io/npm/dt/micromatch.svg?style=flat)](https://npmjs.org/package/micromatch) [![Linux Build Status](https://img.shields.io/travis/micromatch/micromatch.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/micromatch) [![Windows Build Status](https://img.shields.io/appveyor/ci/micromatch/micromatch.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/micromatch/micromatch)\n\n> Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n- [Install](#install)\n- [Quickstart](#quickstart)\n- [Why use micromatch?](#why-use-micromatch)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Matching features](#matching-features)\n- [Switching to micromatch](#switching-to-micromatch)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [From minimatch](#from-minimatch)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [From multimatch](#from-multimatch)\n- [API](#api)\n- [Options](#options)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.basename](#optionsbasename)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.bash](#optionsbash)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.cache](#optionscache)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.dot](#optionsdot)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.failglob](#optionsfailglob)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.ignore](#optionsignore)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.matchBase](#optionsmatchbase)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nobrace](#optionsnobrace)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nocase](#optionsnocase)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nodupes](#optionsnodupes)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.noext](#optionsnoext)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nonegate](#optionsnonegate)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.noglobstar](#optionsnoglobstar)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nonull](#optionsnonull)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nullglob](#optionsnullglob)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.snapdragon](#optionssnapdragon)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.sourcemap](#optionssourcemap)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.unescape](#optionsunescape)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.unixify](#optionsunixify)\n- [Extended globbing](#extended-globbing)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [extglobs](#extglobs)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [braces](#braces)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [regex character classes](#regex-character-classes)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [regex groups](#regex-groups)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [POSIX bracket expressions](#posix-bracket-expressions)\n- [Notes](#notes)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Bash 4.3 parity](#bash-43-parity)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Backslashes](#backslashes)\n- [Contributing](#contributing)\n- [Benchmarks](#benchmarks)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Running benchmarks](#running-benchmarks)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Latest results](#latest-results)\n- [About](#about)\n\n</details>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save micromatch\n```\n\n## Quickstart\n\n```js\nvar mm = require('micromatch');\nmm(list, patterns[, options]);\n```\n\nThe [main export](#micromatch) takes a list of strings and one or more glob patterns:\n\n```js\nconsole.log(mm(['foo', 'bar', 'qux'], ['f*', 'b*'])); \n//=> ['foo', 'bar']\n```\n\nUse [.isMatch()](#ismatch) to get true/false:\n\n```js\nconsole.log(mm.isMatch('foo', 'f*')); \n//=> true\n```\n\n[Switching](#switching-to-micromatch) from minimatch and multimatch is easy!\n\n## Why use micromatch?\n\n> micromatch is a [drop-in replacement](#switching-to-micromatch) for minimatch and multimatch\n\n* Supports all of the same matching features as [minimatch](https://github.com/isaacs/minimatch) and [multimatch](https://github.com/sindresorhus/multimatch)\n* Micromatch uses [snapdragon](https://github.com/jonschlinkert/snapdragon) for parsing and compiling globs, which provides granular control over the entire conversion process in a way that is easy to understand, reason about, and maintain.\n* More consistently accurate matching [than minimatch](https://github.com/yarnpkg/yarn/pull/3339), with more than 36,000 [test assertions](./test) to prove it.\n* More complete support for the Bash 4.3 specification than minimatch and multimatch. In fact, micromatch passes _all of the spec tests_ from bash, including some that bash still fails.\n* [Faster matching](#benchmarks), from a combination of optimized glob patterns, faster algorithms, and regex caching.\n* [Micromatch is safer](https://github.com/micromatch/braces#braces-is-safe), and is not subject to DoS with brace patterns, like minimatch and multimatch.\n* More reliable windows support than minimatch and multimatch.\n\n### Matching features\n\n* Support for multiple glob patterns (no need for wrappers like multimatch)\n* Wildcards (`**`, `*.js`)\n* Negation (`'!a/*.js'`, `'*!(b).js']`)\n* [extglobs](https://github.com/micromatch/extglob) (`+(x|y)`, `!(a|b)`)\n* [POSIX character classes](https://github.com/micromatch/expand-brackets) (`[[:alpha:][:digit:]]`)\n* [brace expansion](https://github.com/micromatch/braces) (`foo/{1..5}.md`, `bar/{a,b,c}.js`)\n* regex character classes (`foo-[1-5].js`)\n* regex logical \"or\" (`foo/(abc|xyz).js`)\n\nYou can mix and match these features to create whatever patterns you need!\n\n## Switching to micromatch\n\nThere is one notable difference between micromatch and minimatch in regards to how backslashes are handled. See [the notes about backslashes](#backslashes) for more information.\n\n### From minimatch\n\nUse [mm.isMatch()](#ismatch) instead of `minimatch()`:\n\n```js\nmm.isMatch('foo', 'b*');\n//=> false\n```\n\nUse [mm.match()](#match) instead of `minimatch.match()`:\n\n```js\nmm.match(['foo', 'bar'], 'b*');\n//=> 'bar'\n```\n\n### From multimatch\n\nSame signature:\n\n```js\nmm(['foo', 'bar', 'baz'], ['f*', '*z']);\n//=> ['foo', 'baz']\n```\n\n## API\n\n### [micromatch](index.js#L41)\n\nThe main function takes a list of strings and one or more glob patterns to use for matching.\n\n**Params**\n\n* `list` **{Array}**: A list of strings to match\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of matches\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm(list, patterns[, options]);\n\nconsole.log(mm(['a.js', 'a.txt'], ['*.js']));\n//=> [ 'a.js' ]\n```\n\n### [.match](index.js#L93)\n\nSimilar to the main function, but `pattern` must be a string.\n\n**Params**\n\n* `list` **{Array}**: Array of strings to match\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of matches\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.match(list, pattern[, options]);\n\nconsole.log(mm.match(['a.a', 'a.aa', 'a.b', 'a.c'], '*.a'));\n//=> ['a.a', 'a.aa']\n```\n\n### [.isMatch](index.js#L154)\n\nReturns true if the specified `string` matches the given glob `pattern`.\n\n**Params**\n\n* `string` **{String}**: String to match\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if the string matches the glob pattern.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.isMatch(string, pattern[, options]);\n\nconsole.log(mm.isMatch('a.a', '*.a'));\n//=> true\nconsole.log(mm.isMatch('a.b', '*.a'));\n//=> false\n```\n\n### [.some](index.js#L192)\n\nReturns true if some of the strings in the given `list` match any of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test. Returns as soon as the first match is found.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.some(list, patterns[, options]);\n\nconsole.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// true\nconsole.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.every](index.js#L228)\n\nReturns true if every string in the given `list` matches any of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.every(list, patterns[, options]);\n\nconsole.log(mm.every('foo.js', ['foo.js']));\n// true\nconsole.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n// true\nconsole.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// false\nconsole.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.any](index.js#L260)\n\nReturns true if **any** of the given glob `patterns` match the specified `string`.\n\n**Params**\n\n* `str` **{String|Array}**: The string to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.any(string, patterns[, options]);\n\nconsole.log(mm.any('a.a', ['b.*', '*.a']));\n//=> true\nconsole.log(mm.any('a.a', 'b.*'));\n//=> false\n```\n\n### [.all](index.js#L308)\n\nReturns true if **all** of the given `patterns` match the specified string.\n\n**Params**\n\n* `str` **{String|Array}**: The string to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.all(string, patterns[, options]);\n\nconsole.log(mm.all('foo.js', ['foo.js']));\n// true\n\nconsole.log(mm.all('foo.js', ['*.js', '!foo.js']));\n// false\n\nconsole.log(mm.all('foo.js', ['*.js', 'foo.js']));\n// true\n\nconsole.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n// true\n```\n\n### [.not](index.js#L340)\n\nReturns a list of strings that _**do not match any**_ of the given `patterns`.\n\n**Params**\n\n* `list` **{Array}**: Array of strings to match.\n* `patterns` **{String|Array}**: One or more glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of strings that **do not match** the given patterns.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.not(list, patterns[, options]);\n\nconsole.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n//=> ['b.b', 'c.c']\n```\n\n### [.contains](index.js#L376)\n\nReturns true if the given `string` contains the given pattern. Similar to [.isMatch](#isMatch) but the pattern can match any part of the string.\n\n**Params**\n\n* `str` **{String}**: The string to match.\n* `patterns` **{String|Array}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if the patter matches any part of `str`.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.contains(string, pattern[, options]);\n\nconsole.log(mm.contains('aa/bb/cc', '*b'));\n//=> true\nconsole.log(mm.contains('aa/bb/cc', '*d'));\n//=> false\n```\n\n### [.matchKeys](index.js#L432)\n\nFilter the keys of the given object with the given `glob` pattern and `options`. Does not attempt to match nested keys. If you need this feature, use [glob-object](https://github.com/jonschlinkert/glob-object) instead.\n\n**Params**\n\n* `object` **{Object}**: The object with keys to filter.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Object}**: Returns an object with only keys that match the given patterns.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.matchKeys(object, patterns[, options]);\n\nvar obj = { aa: 'a', ab: 'b', ac: 'c' };\nconsole.log(mm.matchKeys(obj, '*b'));\n//=> { ab: 'b' }\n```\n\n### [.matcher](index.js#L461)\n\nReturns a memoized matcher function from the given glob `pattern` and `options`. The returned function takes a string to match as its only argument and returns true if the string is a match.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed.\n* `returns` **{Function}**: Returns a matcher function.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.matcher(pattern[, options]);\n\nvar isMatch = mm.matcher('*.!(*a)');\nconsole.log(isMatch('a.a'));\n//=> false\nconsole.log(isMatch('a.b'));\n//=> true\n```\n\n### [.capture](index.js#L536)\n\nReturns an array of matches captured by `pattern` in `string, or`null` if the pattern did not match.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `string` **{String}**: String to match\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns an array of captures if the string matches the glob pattern, otherwise `null`.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.capture(pattern, string[, options]);\n\nconsole.log(mm.capture('test/*.js', 'test/foo.js'));\n//=> ['foo']\nconsole.log(mm.capture('test/*.js', 'foo/bar.css'));\n//=> null\n```\n\n### [.makeRe](index.js#L571)\n\nCreate a regular expression from the given glob `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: A glob pattern to convert to regex.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed.\n* `returns` **{RegExp}**: Returns a regex created from the given pattern.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.makeRe(pattern[, options]);\n\nconsole.log(mm.makeRe('*.js'));\n//=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n```\n\n### [.braces](index.js#L618)\n\nExpand the given brace `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: String with brace pattern to expand.\n* `options` **{Object}**: Any [options](#options) to change how expansion is performed. See the [braces](https://github.com/micromatch/braces) library for all available options.\n* `returns` **{Array}**\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nconsole.log(mm.braces('foo/{a,b}/bar'));\n//=> ['foo/(a|b)/bar']\n\nconsole.log(mm.braces('foo/{a,b}/bar', {expand: true}));\n//=> ['foo/(a|b)/bar']\n```\n\n### [.create](index.js#L685)\n\nParses the given glob `pattern` and returns an array of abstract syntax trees (ASTs), with the compiled `output` and optional source `map` on each AST.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern to parse and compile.\n* `options` **{Object}**: Any [options](#options) to change how parsing and compiling is performed.\n* `returns` **{Object}**: Returns an object with the parsed AST, compiled string and optional source map.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.create(pattern[, options]);\n\nconsole.log(mm.create('abc/*.js'));\n// [{ options: { source: 'string', sourcemap: true },\n// state: {},\n// compilers:\n// { ... },\n// output: '(\\\\.[\\\\\\\\\\\\/])?abc\\\\/(?!\\\\.)(?=.)[^\\\\/]*?\\\\.js',\n// ast:\n// { type: 'root',\n// errors: [],\n// nodes:\n// [ ... ],\n// dot: false,\n// input: 'abc/*.js' },\n// parsingErrors: [],\n// map:\n// { version: 3,\n// sources: [ 'string' ],\n// names: [],\n// mappings: 'AAAA,GAAG,EAAC,kBAAC,EAAC,EAAE',\n// sourcesContent: [ 'abc/*.js' ] },\n// position: { line: 1, column: 28 },\n// content: {},\n// files: {},\n// idx: 6 }]\n```\n\n### [.parse](index.js#L732)\n\nParse the given `str` with the given `options`.\n\n**Params**\n\n* `str` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an AST\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.parse(pattern[, options]);\n\nvar ast = mm.parse('a/{b,c}/d');\nconsole.log(ast);\n// { type: 'root',\n// errors: [],\n// input: 'a/{b,c}/d',\n// nodes:\n// [ { type: 'bos', val: '' },\n// { type: 'text', val: 'a/' },\n// { type: 'brace',\n// nodes:\n// [ { type: 'brace.open', val: '{' },\n// { type: 'text', val: 'b,c' },\n// { type: 'brace.close', val: '}' } ] },\n// { type: 'text', val: '/d' },\n// { type: 'eos', val: '' } ] }\n```\n\n### [.compile](index.js#L780)\n\nCompile the given `ast` or string with the given `options`.\n\n**Params**\n\n* `ast` **{Object|String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object that has an `output` property with the compiled string.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\nmm.compile(ast[, options]);\n\nvar ast = mm.parse('a/{b,c}/d');\nconsole.log(mm.compile(ast));\n// { options: { source: 'string' },\n// state: {},\n// compilers:\n// { eos: [Function],\n// noop: [Function],\n// bos: [Function],\n// brace: [Function],\n// 'brace.open': [Function],\n// text: [Function],\n// 'brace.close': [Function] },\n// output: [ 'a/(b|c)/d' ],\n// ast:\n// { ... },\n// parsingErrors: [] }\n```\n\n### [.clearCache](index.js#L801)\n\nClear the regex cache.\n\n**Example**\n\n```js\nmm.clearCache();\n```\n\n## Options\n\n* [basename](#optionsbasename)\n* [bash](#optionsbash)\n* [cache](#optionscache)\n* [dot](#optionsdot)\n* [failglob](#optionsfailglob)\n* [ignore](#optionsignore)\n* [matchBase](#optionsmatchBase)\n* [nobrace](#optionsnobrace)\n* [nocase](#optionsnocase)\n* [nodupes](#optionsnodupes)\n* [noext](#optionsnoext)\n* [noglobstar](#optionsnoglobstar)\n* [nonull](#optionsnonull)\n* [nullglob](#optionsnullglob)\n* [snapdragon](#optionssnapdragon)\n* [sourcemap](#optionssourcemap)\n* [unescape](#optionsunescape)\n* [unixify](#optionsunixify)\n\n### options.basename\n\nAllow glob patterns without slashes to match a file path based on its basename. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `matchBase`.\n\n**Type**: `Boolean`\n\n**Default**: `false`\n\n**Example**\n\n```js\nmm(['a/b.js', 'a/c.md'], '*.js');\n//=> []\n\nmm(['a/b.js', 'a/c.md'], '*.js', {matchBase: true});\n//=> ['a/b.js']\n```\n\n### options.bash\n\nEnabled by default, this option enforces bash-like behavior with stars immediately following a bracket expression. Bash bracket expressions are similar to regex character classes, but unlike regex, a star following a bracket expression **does not repeat the bracketed characters**. Instead, the star is treated the same as an other star.\n\n**Type**: `Boolean`\n\n**Default**: `true`\n\n**Example**\n\n```js\nvar files = ['abc', 'ajz'];\nconsole.log(mm(files, '[a-c]*'));\n//=> ['abc', 'ajz']\n\nconsole.log(mm(files, '[a-c]*', {bash: false}));\n```\n\n### options.cache\n\nDisable regex and function memoization.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.dot\n\nMatch dotfiles. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `dot`.\n\n**Type**: `Boolean`\n\n**Default**: `false`\n\n### options.failglob\n\nSimilar to the `--failglob` behavior in Bash, throws an error when no matches are found.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.ignore\n\nString or array of glob patterns to match files to ignore.\n\n**Type**: `String|Array`\n\n**Default**: `undefined`\n\n### options.matchBase\n\nAlias for [options.basename](#options-basename).\n\n### options.nobrace\n\nDisable expansion of brace patterns. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `nobrace`.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\nSee [braces](https://github.com/micromatch/braces) for more information about extended brace expansion.\n\n### options.nocase\n\nUse a case-insensitive regex for matching files. Same behavior as [minimatch](https://github.com/isaacs/minimatch).\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.nodupes\n\nRemove duplicate elements from the result array.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Example**\n\nExample of using the `unescape` and `nodupes` options together:\n\n```js\nmm.match(['a/b/c', 'a/b/c'], 'a/b/c');\n//=> ['a/b/c', 'a/b/c']\n\nmm.match(['a/b/c', 'a/b/c'], 'a/b/c', {nodupes: true});\n//=> ['abc']\n```\n\n### options.noext\n\nDisable extglob support, so that extglobs are regarded as literal characters.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Examples**\n\n```js\nmm(['a/z', 'a/b', 'a/!(z)'], 'a/!(z)');\n//=> ['a/b', 'a/!(z)']\n\nmm(['a/z', 'a/b', 'a/!(z)'], 'a/!(z)', {noext: true});\n//=> ['a/!(z)'] (matches only as literal characters)\n```\n\n### options.nonegate\n\nDisallow negation (`!`) patterns, and treat leading `!` as a literal character to match.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.noglobstar\n\nDisable matching with globstars (`**`).\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n```js\nmm(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**');\n//=> ['a/b', 'a/b/c', 'a/b/c/d']\n\nmm(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**', {noglobstar: true});\n//=> ['a/b']\n```\n\n### options.nonull\n\nAlias for [options.nullglob](#options-nullglob).\n\n### options.nullglob\n\nIf `true`, when no matches are found the actual (arrayified) glob pattern is returned instead of an empty array. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `nonull`.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.snapdragon\n\nPass your own instance of [snapdragon](https://github.com/jonschlinkert/snapdragon), to customize parsers or compilers.\n\n**Type**: `Object`\n\n**Default**: `undefined`\n\n### options.sourcemap\n\nGenerate a source map by enabling the `sourcemap` option with the `.parse`, `.compile`, or `.create` methods.\n\n_(Note that sourcemaps are currently not enabled for brace patterns)_\n\n**Examples**\n\n``` js\nvar mm = require('micromatch');\nvar pattern = '*(*(of*(a)x)z)';\n\nvar res = mm.create('abc/*.js', {sourcemap: true});\nconsole.log(res.map);\n// { version: 3,\n// sources: [ 'string' ],\n// names: [],\n// mappings: 'AAAA,GAAG,EAAC,iBAAC,EAAC,EAAE',\n// sourcesContent: [ 'abc/*.js' ] }\n\nvar ast = mm.parse('abc/**/*.js');\nvar res = mm.compile(ast, {sourcemap: true});\nconsole.log(res.map);\n// { version: 3,\n// sources: [ 'string' ],\n// names: [],\n// mappings: 'AAAA,GAAG,EAAC,2BAAE,EAAC,iBAAC,EAAC,EAAE',\n// sourcesContent: [ 'abc/**/*.js' ] }\n\nvar ast = mm.parse(pattern);\nvar res = mm.compile(ast, {sourcemap: true});\nconsole.log(res.map);\n// { version: 3,\n// sources: [ 'string' ],\n// names: [],\n// mappings: 'AAAA,CAAE,CAAE,EAAE,CAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC',\n// sourcesContent: [ '*(*(of*(a)x)z)' ] }\n```\n\n### options.unescape\n\nRemove backslashes from returned matches.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Example**\n\nIn this example we want to match a literal `*`:\n\n```js\nmm.match(['abc', 'a\\\\*c'], 'a\\\\*c');\n//=> ['a\\\\*c']\n\nmm.match(['abc', 'a\\\\*c'], 'a\\\\*c', {unescape: true});\n//=> ['a*c']\n```\n\n### options.unixify\n\nConvert path separators on returned files to posix/unix-style forward slashes.\n\n**Type**: `Boolean`\n\n**Default**: `true` on windows, `false` everywhere else\n\n**Example**\n\n```js\nmm.match(['a\\\\b\\\\c'], 'a/**');\n//=> ['a/b/c']\n\nmm.match(['a\\\\b\\\\c'], {unixify: false});\n//=> ['a\\\\b\\\\c']\n```\n\n## Extended globbing\n\nMicromatch also supports extended globbing features.\n\n### extglobs\n\nExtended globbing, as described by the bash man page:\n\n| **pattern** | **regex equivalent** | **description** | \n| --- | --- | --- |\n| `?(pattern)` | `(pattern)?` | Matches zero or one occurrence of the given patterns |\n| `*(pattern)` | `(pattern)*` | Matches zero or more occurrences of the given patterns |\n| `+(pattern)` | `(pattern)+` | Matches one or more occurrences of the given patterns |\n| `@(pattern)` | `(pattern)` <sup>*</sup> | Matches one of the given patterns |\n| `!(pattern)` | N/A (equivalent regex is much more complicated) | Matches anything except one of the given patterns |\n\n<sup><strong>*</strong></sup> Note that `@` isn't a RegEx character.\n\nPowered by [extglob](https://github.com/micromatch/extglob). Visit that library for the full range of options or to report extglob related issues.\n\n### braces\n\nBrace patterns can be used to match specific ranges or sets of characters. For example, the pattern `*/{1..3}/*` would match any of following strings:\n\n```\nfoo/1/bar\nfoo/2/bar\nfoo/3/bar\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n```\n\nVisit [braces](https://github.com/micromatch/braces) to see the full range of features and options related to brace expansion, or to create brace matching or expansion related issues.\n\n### regex character classes\n\nGiven the list: `['a.js', 'b.js', 'c.js', 'd.js', 'E.js']`:\n\n* `[ac].js`: matches both `a` and `c`, returning `['a.js', 'c.js']`\n* `[b-d].js`: matches from `b` to `d`, returning `['b.js', 'c.js', 'd.js']`\n* `[b-d].js`: matches from `b` to `d`, returning `['b.js', 'c.js', 'd.js']`\n* `a/[A-Z].js`: matches and uppercase letter, returning `['a/E.md']`\n\nLearn about [regex character classes](http://www.regular-expressions.info/charclass.html).\n\n### regex groups\n\nGiven `['a.js', 'b.js', 'c.js', 'd.js', 'E.js']`:\n\n* `(a|c).js`: would match either `a` or `c`, returning `['a.js', 'c.js']`\n* `(b|d).js`: would match either `b` or `d`, returning `['b.js', 'd.js']`\n* `(b|[A-Z]).js`: would match either `b` or an uppercase letter, returning `['b.js', 'E.js']`\n\nAs with regex, parens can be nested, so patterns like `((a|b)|c)/b` will work. Although brace expansion might be friendlier to use, depending on preference.\n\n### POSIX bracket expressions\n\nPOSIX brackets are intended to be more user-friendly than regex character classes. This of course is in the eye of the beholder.\n\n**Example**\n\n```js\nmm.isMatch('a1', '[[:alpha:][:digit:]]');\n//=> true\n\nmm.isMatch('a1', '[[:alpha:][:alpha:]]');\n//=> false\n```\n\nSee [expand-brackets](https://github.com/jonschlinkert/expand-brackets) for more information about bracket expressions.\n\n***\n\n## Notes\n\n### Bash 4.3 parity\n\nWhenever possible matching behavior is based on behavior Bash 4.3, which is mostly consistent with minimatch.\n\nHowever, it's suprising how many edge cases and rabbit holes there are with glob matching, and since there is no real glob specification, and micromatch is more accurate than both Bash and minimatch, there are cases where best-guesses were made for behavior. In a few cases where Bash had no answers, we used wildmatch (used by git) as a fallback.\n\n### Backslashes\n\nThere is an important, notable difference between minimatch and micromatch _in regards to how backslashes are handled_ in glob patterns.\n\n* Micromatch exclusively and explicitly reserves backslashes for escaping characters in a glob pattern, even on windows. This is consistent with bash behavior.\n* Minimatch converts all backslashes to forward slashes, which means you can't use backslashes to escape any characters in your glob patterns.\n\nWe made this decision for micromatch for a couple of reasons:\n\n* consistency with bash conventions.\n* glob patterns are not filepaths. They are a type of [regular language](https://en.wikipedia.org/wiki/Regular_language) that is converted to a JavaScript regular expression. Thus, when forward slashes are defined in a glob pattern, the resulting regular expression will match windows or POSIX path separators just fine.\n\n**A note about joining paths to globs**\n\nNote that when you pass something like `path.join('foo', '*')` to micromatch, you are creating a filepath and expecting it to still work as a glob pattern. This causes problems on windows, since the `path.sep` is `\\\\`.\n\nIn other words, since `\\\\` is reserved as an escape character in globs, on windows `path.join('foo', '*')` would result in `foo\\\\*`, which tells micromatch to match `*` as a literal character. This is the same behavior as bash.\n\n## Contributing\n\nAll contributions are welcome! Please read [the contributing guide](.github/contributing.md) to get started.\n\n**Bug reports**\n\nPlease create an issue if you encounter a bug or matching behavior that doesn't seem correct. If you find a matching-related issue, please:\n\n* [research existing issues first](../../issues) (open and closed)\n* visit the [GNU Bash documentation](https://www.gnu.org/software/bash/manual/) to see how Bash deals with the pattern\n* visit the [minimatch](https://github.com/isaacs/minimatch) documentation to cross-check expected behavior in node.js\n* if all else fails, since there is no real specification for globs we will probably need to discuss expected behavior and decide how to resolve it. which means any detail you can provide to help with this discussion would be greatly appreciated.\n\n**Platform issues**\n\nIt's important to us that micromatch work consistently on all platforms. If you encounter any platform-specific matching or path related issues, please let us know (pull requests are also greatly appreciated).\n\n## Benchmarks\n\n### Running benchmarks\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm run benchmark\n```\n\n### Latest results\n\nAs of February 18, 2018 (longer bars are better):\n\n```sh\n# braces-globstar-large-list (485691 bytes)\n micromatch ██████████████████████████████████████████████████ (517 ops/sec ±0.49%)\n minimatch █ (18.92 ops/sec ±0.54%)\n multimatch █ (18.94 ops/sec ±0.62%)\n\n micromatch is faster by an avg. of 2,733%\n\n# braces-multiple (3362 bytes)\n micromatch ██████████████████████████████████████████████████ (33,625 ops/sec ±0.45%)\n minimatch (2.92 ops/sec ±3.26%)\n multimatch (2.90 ops/sec ±2.76%)\n\n micromatch is faster by an avg. of 1,156,935%\n\n# braces-range (727 bytes)\n micromatch █████████████████████████████████████████████████ (155,220 ops/sec ±0.56%)\n minimatch ██████ (20,186 ops/sec ±1.27%)\n multimatch ██████ (19,809 ops/sec ±0.60%)\n\n micromatch is faster by an avg. of 776%\n\n# braces-set (2858 bytes)\n micromatch █████████████████████████████████████████████████ (24,354 ops/sec ±0.92%)\n minimatch █████ (2,566 ops/sec ±0.56%)\n multimatch ████ (2,431 ops/sec ±1.25%)\n\n micromatch is faster by an avg. of 975%\n\n# globstar-large-list (485686 bytes)\n micromatch █████████████████████████████████████████████████ (504 ops/sec ±0.45%)\n minimatch ███ (33.36 ops/sec ±1.08%)\n multimatch ███ (33.19 ops/sec ±1.35%)\n\n micromatch is faster by an avg. of 1,514%\n\n# globstar-long-list (90647 bytes)\n micromatch ██████████████████████████████████████████████████ (2,694 ops/sec ±1.08%)\n minimatch ████████████████ (870 ops/sec ±1.09%)\n multimatch ████████████████ (862 ops/sec ±0.84%)\n\n micromatch is faster by an avg. of 311%\n\n# globstar-short-list (182 bytes)\n micromatch ██████████████████████████████████████████████████ (328,921 ops/sec ±1.06%)\n minimatch █████████ (64,808 ops/sec ±1.42%)\n multimatch ████████ (57,991 ops/sec ±2.11%)\n\n micromatch is faster by an avg. of 536%\n\n# no-glob (701 bytes)\n micromatch █████████████████████████████████████████████████ (415,935 ops/sec ±0.36%)\n minimatch ███████████ (92,730 ops/sec ±1.44%)\n multimatch █████████ (81,958 ops/sec ±2.13%)\n\n micromatch is faster by an avg. of 476%\n\n# star-basename-long (12339 bytes)\n micromatch █████████████████████████████████████████████████ (7,963 ops/sec ±0.36%)\n minimatch ███████████████████████████████ (5,072 ops/sec ±0.83%)\n multimatch ███████████████████████████████ (5,028 ops/sec ±0.40%)\n\n micromatch is faster by an avg. of 158%\n\n# star-basename-short (349 bytes)\n micromatch ██████████████████████████████████████████████████ (269,552 ops/sec ±0.70%)\n minimatch ██████████████████████ (122,457 ops/sec ±1.39%)\n multimatch ████████████████████ (110,788 ops/sec ±1.99%)\n\n micromatch is faster by an avg. of 231%\n\n# star-folder-long (19207 bytes)\n micromatch █████████████████████████████████████████████████ (3,806 ops/sec ±0.38%)\n minimatch ████████████████████████████ (2,204 ops/sec ±0.32%)\n multimatch ██████████████████████████ (2,020 ops/sec ±1.07%)\n\n micromatch is faster by an avg. of 180%\n\n# star-folder-short (551 bytes)\n micromatch ██████████████████████████████████████████████████ (249,077 ops/sec ±0.40%)\n minimatch ███████████ (59,431 ops/sec ±1.67%)\n multimatch ███████████ (55,569 ops/sec ±1.43%)\n\n micromatch is faster by an avg. of 433%\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [braces](https://www.npmjs.com/package/braces): Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support… [more](https://github.com/micromatch/braces) | [homepage](https://github.com/micromatch/braces \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\")\n* [expand-brackets](https://www.npmjs.com/package/expand-brackets): Expand POSIX bracket expressions (character classes) in glob patterns. | [homepage](https://github.com/jonschlinkert/expand-brackets \"Expand POSIX bracket expressions (character classes) in glob patterns.\")\n* [extglob](https://www.npmjs.com/package/extglob): Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob… [more](https://github.com/micromatch/extglob) | [homepage](https://github.com/micromatch/extglob \"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.\")\n* [fill-range](https://www.npmjs.com/package/fill-range): Fill in a range of numbers or letters, optionally passing an increment or `step` to… [more](https://github.com/jonschlinkert/fill-range) | [homepage](https://github.com/jonschlinkert/fill-range \"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\")\n* [nanomatch](https://www.npmjs.com/package/nanomatch): Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash… [more](https://github.com/micromatch/nanomatch) | [homepage](https://github.com/micromatch/nanomatch \"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 457 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 12 | [es128](https://github.com/es128) |\n| 8 | [doowb](https://github.com/doowb) |\n| 3 | [paulmillr](https://github.com/paulmillr) |\n| 2 | [TrySound](https://github.com/TrySound) |\n| 2 | [MartinKolarik](https://github.com/MartinKolarik) |\n| 2 | [charlike-old](https://github.com/charlike-old) |\n| 1 | [amilajack](https://github.com/amilajack) |\n| 1 | [mrmlnc](https://github.com/mrmlnc) |\n| 1 | [devongovett](https://github.com/devongovett) |\n| 1 | [DianeLooney](https://github.com/DianeLooney) |\n| 1 | [UltCombo](https://github.com/UltCombo) |\n| 1 | [tomByrer](https://github.com/tomByrer) |\n| 1 | [fidian](https://github.com/fidian) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on February 18, 2018._", "readmeFilename": "README.md", "_id": "micromatch@3.1.10", "_requested": { "type": "version", "registry": true, "raw": "micromatch@3.1.10", "name": "micromatch", "escapedName": "micromatch", "rawSpec": "3.1.10", "saveSpec": "[Circular]", "fetchSpec": "3.1.10" }, "_spec": "3.1.10", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "micromatch@3.1.10", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "arr-diff": "^4.0.0", "array-unique": "^0.3.2", "braces": "^2.3.1", "define-property": "^2.0.2", "extend-shallow": "^3.0.2", "extglob": "^2.0.4", "fragment-cache": "^0.2.1", "kind-of": "^6.0.2", "nanomatch": "^1.2.9", "object.pick": "^1.3.0", "regex-not": "^1.0.0", "snapdragon": "^0.8.1", "to-regex": "^3.0.2" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/micromatch", "error": "[Circular]", "extraneous": false, "_deduped": "micromatch" } }, "scripts": { "clean": "rimraf out", "lint": "tslint \"src/**/*.ts\" -p . -t stylish", "compile": "tsc", "test": "mocha \"out/**/*.spec.js\" -s 0", "smoke": "mocha \"out/**/*.smoke.js\" -s 0", "build": "npm run clean && npm run lint && npm run compile && npm test", "watch": "npm run clean && npm run lint & npm run compile -- --sourceMap --watch", "bench-async-1": "node ./out/benchmark --depth 1", "bench-async-5": "node ./out/benchmark --depth 5", "bench-async-10": "node ./out/benchmark --depth 10", "bench-async-50": "node ./out/benchmark --depth 50", "bench-async-100": "node ./out/benchmark --depth 100", "bench-async": "npm run bench-async-1 && npm run bench-async-5 && npm run bench-async-10 && npm run bench-async-50 && npm run bench-async-100", "bench-sync-1": "node ./out/benchmark --depth 1 --type sync", "bench-sync-5": "node ./out/benchmark --depth 5 --type sync", "bench-sync-10": "node ./out/benchmark --depth 10 --type sync", "bench-sync-50": "node ./out/benchmark --depth 50 --type sync", "bench-sync-100": "node ./out/benchmark --depth 100 --type sync", "bench-sync": "npm run bench-sync-1 && npm run bench-sync-5 && npm run bench-sync-10 && npm run bench-sync-50 && npm run bench-sync-100", "bench": "npm run build && npm run bench-async && npm run bench-sync" }, "_resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.6.tgz", "_integrity": "sha512-0BvMaZc1k9F+MeWWMe8pL6YltFzZYcJsYU7D4JyDA6PAczaXvxqQQ/z+mDF7/4Mw01DeUc+i3CTKajnkANkV4w==", "_from": "fast-glob@2.2.6", "readme": "# :rocket: fast-glob\n\n> Is a faster [`node-glob`](https://github.com/isaacs/node-glob) alternative.\n\n## :bulb: Highlights\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps :rocket: Fast by using Streams and Promises. Used [readdir-enhanced](https://github.com/BigstickCarpet/readdir-enhanced) and [micromatch](https://github.com/jonschlinkert/micromatch).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps :beginner: User-friendly, since it supports multiple and negated patterns (`['*', '!*.md']`).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps :vertical_traffic_light: Rational, because it doesn't read excluded directories (`!**/node_modules/**`).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps :gear: Universal, because it supports Synchronous, Promise and Stream API.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps :money_with_wings: Economy, because it provides `fs.Stats` for matched path if you wanted.\n\n## Donate\n\nIf you want to thank me, or promote your Issue.\n\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://paypal.me/mrmlnc)\n\n> Sorry, but I have work and support for packages requires some time after work. I will be glad of your support and PR's.\n\n## Install\n\n```\n$ npm install --save fast-glob\n```\n\n## Usage\n\n#### Asynchronous\n\n```js\nconst fg = require('fast-glob');\n\nfg(['src/**/*.js', '!src/**/*.spec.js']).then((entries) => console.log(entries));\nfg.async(['src/**/*.js', '!src/**/*.spec.js']).then((entries) => console.log(entries));\n```\n\n#### Synchronous\n\n```js\nconst fg = require('fast-glob');\n\nconst entries = fg.sync(['src/**/*.js', '!src/**/*.spec.js']);\nconsole.log(entries);\n```\n\n#### Stream\n\n```js\nconst fg = require('fast-glob');\n\nconst stream = fg.stream(['src/**/*.js', '!src/**/*.spec.js']);\n\nconst entries = [];\n\nstream.on('data', (entry) => entries.push(entry));\nstream.once('error', console.log);\nstream.once('end', () => console.log(entries));\n```\n\n## API\n\n### fg(patterns, [options])\n### fg.async(patterns, [options])\n\nReturns a `Promise<Array>` of matching entries.\n\n#### patterns\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `string|string[]`\n\nThis package does not respect the order of patterns. First, all the negative patterns are applied, and only then the positive patterns.\n\n#### options\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `Object`\n\nSee [options](#options-1) section for more detailed information.\n\n### fg.sync(patterns, [options])\n\nReturns a `Array` of matching entries.\n\n### fg.stream(patterns, [options])\n\nReturns a [`ReadableStream`](https://nodejs.org/api/stream.html#stream_readable_streams).\n\n### fg.generateTasks(patterns, [options])\n\nReturn a set of tasks based on provided patterns. All tasks satisfy the `Task` interface:\n\n```ts\ninterface Task {\n /bin /run /sbin 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Parent directory for all patterns inside this task.\n */\n base: string;\n /bin /run /sbin 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Dynamic or static patterns are in this task.\n */\n dynamic: boolean;\n /bin /run /sbin 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps All patterns.\n */\n patterns: string[];\n /bin /run /sbin 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Only positive patterns.\n */\n positive: string[];\n /bin /run /sbin 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Only negative patterns without ! symbol.\n */\n negative: string[];\n}\n```\n\n## Options\n\n#### cwd\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `string`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `process.cwd()`\n\nThe current working directory in which to search.\n\n#### deep\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `number|boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nThe deep option can be set to `true` to traverse the entire directory structure, or it can be set to a *number* to only traverse that many levels deep.\n\nFor example, you have the following tree:\n\n```\ntest\n└── one\n └── two\n └── index.js\n```\n\n> :book: If you specify a pattern with some base directory, this directory will not participate in the calculation of the depth of the found directories. Think of it as a `cwd` option.\n\n```js\nfg('test/**', { onlyFiles: false, deep: 0 });\n// -> ['test/one']\nfg('test/**', { onlyFiles: false, deep: 1 });\n// -> ['test/one', 'test/one/two']\n\nfg('**', { onlyFiles: false, cwd: 'test', deep: 0 });\n// -> ['one']\nfg('**', { onlyFiles: false, cwd: 'test', deep: 1 });\n// -> ['one', 'one/two']\n```\n\n#### ignore\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `string[]`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `[]`\n\nAn array of glob patterns to exclude matches.\n\n#### dot\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nAllow patterns to match filenames starting with a period (files & directories), even if the pattern does not explicitly have a period in that spot.\n\n#### stats\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `number|boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nReturn `fs.Stats` with `path` property instead of file path.\n\n#### onlyFiles\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nReturn only files.\n\n#### onlyDirectories\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nReturn only directories.\n\n#### followSymlinkedDirectories\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nFollow symlinked directories when expanding `**` patterns.\n\n#### unique\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nPrevent duplicate results.\n\n#### markDirectories\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nAdd a `/` character to directory entries.\n\n#### absolute\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nReturn absolute paths for matched entries.\n\n> :book: Note that you need to use this option if you want to use absolute negative patterns like `${__dirname}/*.md`.\n\n#### nobrace\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nDisable expansion of brace patterns (`{a,b}`, `{1..3}`).\n\n#### brace\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nThe [`nobrace`](#nobrace) option without double-negation. This option has a higher priority then `nobrace`.\n\n#### noglobstar\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nDisable matching with globstars (`**`).\n\n#### globstar\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nThe [`noglobstar`](#noglobstar) option without double-negation. This option has a higher priority then `noglobstar`.\n\n#### noext\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nDisable extglob support (patterns like `+(a|b)`), so that extglobs are regarded as literal characters.\n\n#### extension\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nThe [`noext`](#noext) option without double-negation. This option has a higher priority then `noext`.\n\n#### nocase\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nDisable a case-insensitive regex for matching files.\n\n#### case\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `true`\n\nThe [`nocase`](#nocase) option without double-negation. This option has a higher priority then `nocase`.\n\n#### matchBase\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `boolean`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `false`\n\nAllow glob patterns without slashes to match a file path based on its basename. For example, `a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\n\n#### transform\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Type: `Function`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Default: `null`\n\nAllows you to transform a path or `fs.Stats` object before sending to the array.\n\n```js\nconst fg = require('fast-glob');\n\nconst entries1 = fg.sync(['**/*.scss']);\nconst entries2 = fg.sync(['**/*.scss'], { transform: (entry) => '_' + entry });\n\nconsole.log(entries1); // ['a.scss', 'b.scss']\nconsole.log(entries2); // ['_a.scss', '_b.scss']\n```\n\nIf you are using **TypeScript**, you probably want to specify your own type of the returned array.\n\n```ts\nimport 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps as fg from 'fast-glob';\n\ninterface IMyOwnEntry {\n\tpath: string;\n}\n\nconst entries: IMyOwnEntry[] = fg.sync<IMyOwnEntry>(['*.md'], {\n\ttransform: (entry) => typeof entry === 'string' ? { path: entry } : { path: entry.path }\n\t// Will throw compilation error for non-IMyOwnEntry types (boolean, for example)\n});\n```\n\n## How to exclude directory from reading?\n\nYou can use a negative pattern like this: `!**/node_modules` or `!**/node_modules/**`. Also you can use `ignore` option. Just look at the example below.\n\n```\nfirst/\n├── file.md\n└── second\n └── file.txt\n```\n\nIf you don't want to read the `second` directory, you must write the following pattern: `!**/second` or `!**/second/**`.\n\n```js\nfg.sync(['**/*.md', '!**/second']); // ['first/file.txt']\nfg.sync(['**/*.md'], { ignore: '**/second/**' }); // ['first/file.txt']\n```\n\n> :warning: When you write `!**/second/**/*` it means that the directory will be **read**, but all the entries will not be included in the results.\n\nYou have to understand that if you write the pattern to exclude directories, then the directory will not be read under any circumstances.\n\n## Compatible with `node-glob`?\n\nNot fully, because `fast-glob` does not implement all options of `node-glob`. See table below.\n\n| node-glob | fast-glob |\n| :----------: | :-------: |\n| `cwd` | [`cwd`](#cwd) |\n| `root` | – |\n| `dot` | [`dot`](#dot) |\n| `nomount` | – |\n| `mark` | [`markDirectories`](#markdirectories) |\n| `nosort` | – |\n| `nounique` | [`unique`](#unique) |\n| `nobrace` | [`nobrace`](#nobrace) or [`brace`](#brace) |\n| `noglobstar` | [`noglobstar`](#noglobstar) or [`globstar`](#globstar) |\n| `noext` | [`noext`](#noext) or [`extension`](#extension) |\n| `nocase` | [`nocase`](#nocase) or [`case`](#case) |\n| `matchBase` | [`matchbase`](#matchbase) |\n| `nodir` | [`onlyFiles`](#onlyfiles) |\n| `ignore` | [`ignore`](#ignore) |\n| `follow` | [`followSymlinkedDirectories`](#followsymlinkeddirectories) |\n| `realpath` | – |\n| `absolute` | [`absolute`](#absolute) |\n\n## Benchmarks\n\n**Tech specs:**\n\nServer: [Vultr Bare Metal](https://www.vultr.com/pricing/baremetal)\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Processor: E3-1270v6 (8 CPU)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps RAM: 32GB\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Disk: SSD\n\nYou can see results [here](https://gist.github.com/mrmlnc/f06246b197f53c356895fa35355a367c) for latest release.\n\n## Related\n\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [readdir-enhanced](https://github.com/BigstickCarpet/readdir-enhanced) – Fast functional replacement for `fs.readdir()`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [globby](https://github.com/sindresorhus/globby) – User-friendly glob matching.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [node-glob](https://github.com/isaacs/node-glob) – «Standard» glob functionality for Node.js\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [bash-glob](https://github.com/micromatch/bash-glob) – Bash-powered globbing for node.js.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [glob-stream](https://github.com/gulpjs/glob-stream) – A Readable Stream interface over node-glob that used in the [gulpjs](https://github.com/gulpjs/gulp).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [tiny-glob](https://github.com/terkelg/tiny-glob) – Tiny and extremely fast library to match files and folders using glob patterns.\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/mrmlnc/fast-glob/releases) for changelogs for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license.\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/mrmlnc/fast-glob/issues" }, "homepage": "https://github.com/mrmlnc/fast-glob#readme", "_id": "fast-glob@2.2.6", "_requested": { "type": "version", "registry": true, "raw": "fast-glob@2.2.6", "name": "fast-glob", "escapedName": "fast-glob", "rawSpec": "2.2.6", "saveSpec": "[Circular]", "fetchSpec": "2.2.6" }, "_spec": "2.2.6", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "fast-glob@2.2.6", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "@mrmlnc/readdir-enhanced": "^2.2.1", "@nodelib/fs.stat": "^1.1.2", "glob-parent": "^3.1.0", "is-glob": "^4.0.0", "merge2": "^1.2.3", "micromatch": "^3.1.10" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/fast-glob", "error": "[Circular]", "extraneous": false }, "glob": { "author": { "name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/" }, "name": "glob", "description": "a little globber", "version": "7.1.3", "repository": { "type": "git", "url": "git://github.com/isaacs/node-glob.git" }, "main": "glob.js", "files": [ "glob.js", "sync.js", "common.js" ], "engines": { "node": "*" }, "dependencies": {}, "devDependencies": { "mkdirp": "0", "rimraf": "^2.2.8", "tap": "^12.0.1", "tick": "0.0.6" }, "scripts": { "prepublish": "npm run benchclean", "profclean": "rm -f v8.log profile.txt", "test": "tap test/*.js --cov", "test-regen": "npm run profclean && TEST_REGEN=1 node test/00-setup.js", "bench": "bash benchmark.sh", "prof": "bash prof.sh && cat profile.txt", "benchclean": "node benchclean.js" }, "license": "ISC", "_resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz", "_integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==", "_from": "glob@7.1.3", "readme": "# Glob\n\nMatch files using the patterns the shell uses, like stars and stuff.\n\n[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch=master)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg=true)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github)](https://coveralls.io/github/isaacs/node-glob?branch=master)\n\nThis is a glob implementation in JavaScript. It uses the `minimatch`\nlibrary to do its matching.\n\n![](oh-my-glob.gif)\n\n## Usage\n\nInstall with npm\n\n```\nnpm i glob\n```\n\n```javascript\nvar glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n // files is an array of filenames.\n // If the `nonull` option is set, and nothing\n // was found, then files is [\"**/*.js\"]\n // er is an error object or null.\n})\n```\n\n## Glob Primer\n\n\"Globs\" are the patterns you type when you do stuff like `ls *.js` on\nthe command line, or put `build/*` in a `.gitignore` file.\n\nBefore parsing the path part patterns, braced sections are expanded\ninto a set. Braced sections start with `{` and end with `}`, with any\nnumber of comma-delimited sections within. Braced sections may contain\nslash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.\n\nThe following characters have special magic meaning when used in a\npath portion:\n\n* `*` Matches 0 or more characters in a single path portion\n* `?` Matches 1 character\n* `[...]` Matches a range of characters, similar to a RegExp range.\n If the first character of the range is `!` or `^` then it matches\n any character not in the range.\n* `!(pattern|pattern|pattern)` Matches anything that does not match\n any of the patterns provided.\n* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the\n patterns provided.\n* `+(pattern|pattern|pattern)` Matches one or more occurrences of the\n patterns provided.\n* `*(a|b|c)` Matches zero or more occurrences of the patterns provided\n* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns\n provided\n* `**` If a \"globstar\" is alone in a path portion, then it matches\n zero or more directories and subdirectories searching for matches.\n It does not crawl symlinked directories.\n\n### Dots\n\nIf a file or directory path portion has a `.` as the first character,\nthen it will not match any glob pattern unless that pattern's\ncorresponding path part also has a `.` as its first character.\n\nFor example, the pattern `a/.*/c` would match the file at `a/.b/c`.\nHowever the pattern `a/*/c` would not, because `*` does not start with\na dot character.\n\nYou can make glob treat dots as normal characters by setting\n`dot:true` in the options.\n\n### Basename Matching\n\nIf you set `matchBase:true` in the options, and the pattern has no\nslashes in it, then it will seek for any file anywhere in the tree\nwith a matching basename. For example, `*.js` would match\n`test/simple/basic.js`.\n\n### Empty Sets\n\nIf no matching files are found, then an empty array is returned. This\ndiffers from the shell, where the pattern itself is returned. For\nexample:\n\n $ echo a*s*d*f\n a*s*d*f\n\nTo get the bash-style behavior, set the `nonull:true` in the options.\n\n### See Also:\n\n* `man sh`\n* `man bash` (Search for \"Pattern Matching\")\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob.hasMagic(pattern, [options])\n\nReturns `true` if there are any special characters in the pattern, and\n`false` otherwise.\n\nNote that the options affect the results. If `noext:true` is set in\nthe options object, then `+(a|b)` will not be considered a magic\npattern. If the pattern has a brace expansion, like `a/{b/c,x/y}`\nthen that is considered magical, unless `nobrace:true` is set in the\noptions.\n\n## glob(pattern, [options], cb)\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* `cb` `{Function}`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `err` `{Error | null}`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `matches` `{Array<String>}` filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options])\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* return: `{Array<String>}` filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instantiating the `glob.Glob` class.\n\n```javascript\nvar Glob = require(\"glob\").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt's an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` `{String}` pattern to search for\n* `options` `{Object}`\n* `cb` `{Function}` Called when an error occurs, or matches are found\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `err` `{Error | null}`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `matches` `{Array<String>}` filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `aborted` Boolean which is set to true when calling `abort()`. There\n is no way at this time to continue a glob search after aborting, but\n you can re-use the statCache to avoid having to duplicate syscalls.\n* `cache` Convenience object. Each field has the following possible\n values:\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `false` - Path does not exist\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `true` - Path exists\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `'FILE'` - Path exists, and is not a directory\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `'DIR'` - Path exists, and is a directory\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `[file, entries, ...]` - Path exists, is a directory, and the\n array value is the results of `fs.readdir`\n* `statCache` Cache of `fs.stat` results, to prevent statting the same\n path multiple times.\n* `symlinks` A record of which paths are symbolic links, which is\n relevant in resolving `**` patterns.\n* `realpathCache` An optional object which is passed to `fs.realpath`\n to minimize unnecessary syscalls. It is stored on the instantiated\n Glob object, and may be re-used.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n matches found. If the `nonull` option is set, and no match was found,\n then the `matches` list contains the original pattern. The matches\n are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the specific\n thing that matched. It is not deduplicated or resolved to a realpath.\n* `error` Emitted when an unexpected error is encountered, or whenever\n any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `pause` Temporarily stop the search\n* `resume` Resume the search\n* `abort` Stop the search forever\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior. Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the Glob object, as well.\n\nIf you are running many `glob` operations, you can pass a Glob object\nas the `options` argument to a subsequent operation to shortcut some\n`stat` and `readdir` calls. At the very least, you may pass in shared\n`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that\nparallel glob operations will be sped up by sharing information about\nthe filesystem.\n\n* `cwd` The current working directory in which to search. Defaults\n to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n onto. Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix\n systems, and `C:\\` or some such on Windows.)\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\n Note that an explicit dot in a portion of the pattern will always\n match dot files.\n* `nomount` By default, a pattern starting with a forward-slash will be\n \"mounted\" onto the root setting, so that a valid filesystem path is\n returned. Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches. Note that this\n requires additional stat calls.\n* `nosort` Don't sort the results.\n* `stat` Set to true to stat *all* results. This reduces performance\n somewhat, and is completely unnecessary, unless `readdir` is presumed\n to be an untrustworthy indicator of file existence.\n* `silent` When an unusual error is encountered when attempting to\n read a directory, a warning will be printed to stderr. Set the\n `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered when attempting to\n read a directory, the process will just continue on in search of\n other matches. Set the `strict` option to raise an error in these\n cases.\n* `cache` See `cache` property above. Pass in a previously generated\n cache object to save some fs calls.\n* `statCache` A cache of results of filesystem information, to prevent\n unnecessary stat calls. While it should not normally be necessary\n to set this, you may pass the statCache from one glob() call to the\n options object of another, if you know that the filesystem will not\n change between calls. (See \"Race Conditions\" below.)\n* `symlinks` A cache of known symbolic links. You may pass in a\n previously generated `symlinks` object to save `lstat` calls when\n resolving `**` matches.\n* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.\n* `nounique` In some cases, brace-expanded patterns can result in the\n same file showing up multiple times in the result set. By default,\n this implementation prevents duplicates in the result set. Set this\n flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n containing the pattern itself. This is the default in glob(3).\n* `debug` Set to enable debug logging in minimatch and glob.\n* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.\n* `noglobstar` Do not match `**` against multiple filenames. (Ie,\n treat it as a normal `*` instead.)\n* `noext` Do not match `+(a|b)` \"extglob\" patterns.\n* `nocase` Perform a case-insensitive match. Note: on\n case-insensitive filesystems, non-magic patterns will match by\n default, since `stat` and `readdir` will not raise errors.\n* `matchBase` Perform a basename-only match if the pattern does not\n contain any slash characters. That is, `*.js` would be treated as\n equivalent to `**/*.js`, matching all js files in all directories.\n* `nodir` Do not match directories, only files. (Note: to match\n *only* directories, simply put a `/` at the end of the pattern.)\n* `ignore` Add a pattern or an array of glob patterns to exclude matches.\n Note: `ignore` patterns are *always* in `dot:true` mode, regardless\n of any other settings.\n* `follow` Follow symlinked directories when expanding `**` patterns.\n Note that this can result in a lot of duplicate references in the\n presence of cyclic links.\n* `realpath` Set to true to call `fs.realpath` on all of the results.\n In the case of a symlink that cannot be resolved, the full absolute\n path to the matched entry is returned (though it will usually be a\n broken symlink)\n* `absolute` Set to true to always receive absolute paths for matched\n files. Unlike `realpath`, this also affects the values returned in\n the `match` event.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set. This is supported in the manner of bsdglob\nand bash 4.3, where `**` only has special significance if it is the only\nthing in a path part. That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nNote that symlinked directories are not crawled as part of a `**`,\nthough their contents may match against subsequent portions of the\npattern. This prevents infinite loops and duplicates and the like.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes. For example,\n`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`. This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern. Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity. Since those two are valid, matching proceeds.\n\n### Comments and Negation\n\nPreviously, this module let you mark a pattern as a \"comment\" if it\nstarted with a `#` character, or a \"negated\" pattern if it started\nwith a `!` character.\n\nThese options were deprecated in version 5, and removed in version 6.\n\nTo specify things that should not match, use the `ignore` option.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation. You must use\nforward-slashes **only** in glob expressions. Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`. On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead. However, this also makes it even more susceptible to races,\nespecially if the cache or statCache objects are reused between glob\ncalls.\n\nUsers are thus advised not to use a glob result as a guarantee of\nfilesystem state in the face of rapid changes. For the vast majority\nof operations, this is never a problem.\n\n## Contributing\n\nAny change to behavior (including bugfixes) must come with a test.\n\nPatches that fail tests or reduce performance will be rejected.\n\n```\n# to run tests\nnpm test\n\n# to re-generate test fixtures\nnpm run test-regen\n\n# to benchmark against bash/zsh\nnpm run bench\n\n# to profile javascript\nnpm run prof\n```\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/isaacs/node-glob/issues" }, "homepage": "https://github.com/isaacs/node-glob#readme", "_id": "glob@7.1.3", "_requested": { "type": "version", "registry": true, "raw": "glob@7.1.3", "name": "glob", "escapedName": "glob", "rawSpec": "7.1.3", "saveSpec": "[Circular]", "fetchSpec": "7.1.3" }, "_spec": "7.1.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "glob@7.1.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "fs.realpath": "^1.0.0", "inflight": "^1.0.4", "inherits": "2", "minimatch": "^3.0.4", "once": "^1.3.0", "path-is-absolute": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/glob", "error": "[Circular]", "extraneous": false, "_deduped": "glob" }, "ignore": { "name": "ignore", "version": "4.0.6", "description": "Ignore is a manager and filter for .gitignore rules.", "files": [ "legacy.js", "index.js", "index.d.ts", "LICENSE-MIT" ], "scripts": { "prepublish": "npm run build", "build": "babel -o legacy.js index.js", "test:lint": "eslint .", "test:tsc": "tsc ./test/ts/simple.ts", "test:git": "tap test/git-check-ignore.js", "test:ignore": "tap test/ignore.js --coverage", "test-no-cov": "npm run test:lint && npm run test:tsc && tap test/*.js --coverage", "test": "npm run test-no-cov", "posttest": "tap --coverage-report=html && codecov" }, "repository": { "type": "git", "url": "git+ssh://git@github.com/kaelzhang/node-ignore.git" }, "keywords": [ "ignore", ".gitignore", "gitignore", "npmignore", "rules", "manager", "filter", "regexp", "regex", "fnmatch", "glob", "asterisks", "regular-expression" ], "author": { "name": "kael" }, "license": "MIT", "bugs": { "url": "https://github.com/kaelzhang/node-ignore/issues" }, "devDependencies": { "babel-cli": "^6.26.0", "babel-preset-env": "^1.7.0", "codecov": "^3.0.4", "eslint": "^5.3.0", "eslint-config-ostai": "^1.3.2", "eslint-plugin-import": "^2.13.0", "mkdirp": "^0.5.1", "pre-suf": "^1.1.0", "rimraf": "^2.6.2", "spawn-sync": "^2.0.0", "tap": "^12.0.1", "tmp": "0.0.33", "typescript": "^3.0.1" }, "engines": { "node": ">= 4" }, "_resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz", "_integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==", "_from": "ignore@4.0.6", "readme": "<table><thead>\n <tr>\n <th>Linux</th>\n <th>OS X</th>\n <th>Windows</th>\n <th>Coverage</th>\n <th>Downloads</th>\n </tr>\n</thead><tbody><tr>\n <td colspan=\"2\" align=\"center\">\n <a href=\"https://travis-ci.org/kaelzhang/node-ignore\">\n <img\n src=\"https://travis-ci.org/kaelzhang/node-ignore.svg?branch=master\"\n alt=\"Build Status\" /></a>\n </td>\n <td align=\"center\">\n <a href=\"https://ci.appveyor.com/project/kaelzhang/node-ignore\">\n <img\n src=\"https://ci.appveyor.com/api/projects/status/github/kaelzhang/node-ignore?branch=master&svg=true\"\n alt=\"Windows Build Status\" /></a>\n </td>\n <td align=\"center\">\n <a href=\"https://codecov.io/gh/kaelzhang/node-ignore\">\n <img\n src=\"https://codecov.io/gh/kaelzhang/node-ignore/branch/master/graph/badge.svg\"\n alt=\"Coverage Status\" /></a>\n </td>\n <td align=\"center\">\n <a href=\"https://www.npmjs.org/package/ignore\">\n <img\n src=\"http://img.shields.io/npm/dm/ignore.svg\"\n alt=\"npm module downloads per month\" /></a>\n </td>\n</tr></tbody></table>\n\n# ignore\n\n`ignore` is a manager, filter and parser which implemented in pure JavaScript according to the .gitignore [spec](http://git-scm.com/docs/gitignore).\n\nPay attention that [`minimatch`](https://www.npmjs.org/package/minimatch) does not work in the gitignore way. To filter filenames according to .gitignore file, I recommend this module.\n\n##### Tested on\n\n- Linux + Node: `0.8` - `7.x`\n- Windows + Node: `0.10` - `7.x`, node < `0.10` is not tested due to the lack of support of appveyor.\n\nActually, `ignore` does not rely on any versions of node specially.\n\nSince `4.0.0`, ignore will no longer support `node < 6` by default, to use in node < 6, `require('ignore/legacy')`. For details, see [CHANGELOG](https://github.com/kaelzhang/node-ignore/blob/master/CHANGELOG.md).\n\n## Table Of Main Contents\n\n- [Usage](#usage)\n- [`Pathname` Conventions](#pathname-conventions)\n- [Guide for 2.x -> 3.x](#upgrade-2x---3x)\n- [Guide for 3.x -> 4.x](#upgrade-3x---4x)\n- See Also:\n - [`glob-gitignore`](https://www.npmjs.com/package/glob-gitignore) matches files using patterns and filters them according to gitignore rules.\n\n## Usage\n\n```js\nimport ignore from 'ignore'\nconst ig = ignore().add(['.abc/*', '!.abc/d/'])\n```\n\n### Filter the given paths\n\n```js\nconst paths = [\n '.abc/a.js', // filtered out\n '.abc/d/e.js' // included\n]\n\nig.filter(paths) // ['.abc/d/e.js']\nig.ignores('.abc/a.js') // true\n```\n\n### As the filter function\n\n```js\npaths.filter(ig.createFilter()); // ['.abc/d/e.js']\n```\n\n### Win32 paths will be handled\n\n```js\nig.filter(['.abc\\\\a.js', '.abc\\\\d\\\\e.js'])\n// if the code above runs on windows, the result will be\n// ['.abc\\\\d\\\\e.js']\n```\n\n## Why another ignore?\n\n- `ignore` is a standalone module, and is much simpler so that it could easy work with other programs, unlike [isaacs](https://npmjs.org/~isaacs)'s [fstream-ignore](https://npmjs.org/package/fstream-ignore) which must work with the modules of the fstream family.\n\n- `ignore` only contains utility methods to filter paths according to the specified ignore rules, so\n - `ignore` never try to find out ignore rules by traversing directories or fetching from git configurations.\n - `ignore` don't cares about sub-modules of git projects.\n\n- Exactly according to [gitignore man page](http://git-scm.com/docs/gitignore), fixes some known matching issues of fstream-ignore, such as:\n - '`/*.js`' should only match '`a.js`', but not '`abc/a.js`'.\n - '`**/foo`' should match '`foo`' anywhere.\n - Prevent re-including a file if a parent directory of that file is excluded.\n - Handle trailing whitespaces:\n - `'a '`(one space) should not match `'a '`(two spaces).\n - `'a \\ '` matches `'a '`\n - All test cases are verified with the result of `git check-ignore`.\n\n# Methods\n\n## .add(pattern: string | Ignore): this\n## .add(patterns: Array<string | Ignore>): this\n\n- **pattern** `String | Ignore` An ignore pattern string, or the `Ignore` instance\n- **patterns** `Array<String | Ignore>` Array of ignore patterns.\n\nAdds a rule or several rules to the current manager.\n\nReturns `this`\n\nNotice that a line starting with `'#'`(hash) is treated as a comment. Put a backslash (`'\\'`) in front of the first hash for patterns that begin with a hash, if you want to ignore a file with a hash at the beginning of the filename.\n\n```js\nignore().add('#abc').ignores('#abc') // false\nignore().add('\\#abc').ignores('#abc') // true\n```\n\n`pattern` could either be a line of ignore pattern or a string of multiple ignore patterns, which means we could just `ignore().add()` the content of a ignore file:\n\n```js\nignore()\n.add(fs.readFileSync(filenameOfGitignore).toString())\n.filter(filenames)\n```\n\n`pattern` could also be an `ignore` instance, so that we could easily inherit the rules of another `Ignore` instance.\n\n## <strike>.addIgnoreFile(path)</strike>\n\nREMOVED in `3.x` for now.\n\nTo upgrade `ignore@2.x` up to `3.x`, use\n\n```js\nimport fs from 'fs'\n\nif (fs.existsSync(filename)) {\n ignore().add(fs.readFileSync(filename).toString())\n}\n```\n\ninstead.\n\n## .filter(paths: Array<Pathname>): Array<Pathname>\n\n```ts\ntype Pathname = string\n```\n\nFilters the given array of pathnames, and returns the filtered array.\n\n- **paths** `Array.<Pathname>` The array of `pathname`s to be filtered.\n\n### `Pathname` Conventions:\n\n#### 1. `Pathname` should be a `path.relative()`d pathname\n\n`Pathname` should be a string that have been `path.join()`ed, or the return value of `path.relative()` to the current directory.\n\n```js\n// WRONG\nig.ignores('./abc')\n\n// WRONG, for it will never happen.\n// If the gitignore rule locates at the root directory,\n// `'/abc'` should be changed to `'abc'`.\n// ```\n// path.relative('/', '/abc') -> 'abc'\n// ```\nig.ignores('/abc')\n\n// Right\nig.ignores('abc')\n\n// Right\nig.ignores(path.join('./abc')) // path.join('./abc') -> 'abc'\n```\n\nIn other words, each `Pathname` here should be a relative path to the directory of the gitignore rules.\n\nSuppose the dir structure is:\n\n```\n/path/to/your/repo\n |-- a\n | |-- a.js\n |\n |-- .b\n |\n |-- .c\n |-- .DS_store\n```\n\nThen the `paths` might be like this:\n\n```js\n[\n 'a/a.js'\n '.b',\n '.c/.DS_store'\n]\n```\n\nUsually, you could use [`glob`](http://npmjs.org/package/glob) with `option.mark = true` to fetch the structure of the current directory:\n\n```js\nimport glob from 'glob'\n\nglob('**', {\n // Adds a / character to directory matches.\n mark: true\n}, (err, files) => {\n if (err) {\n return console.error(err)\n }\n\n let filtered = ignore().add(patterns).filter(files)\n console.log(filtered)\n})\n```\n\n#### 2. filenames and dirnames\n\n`node-ignore` does NO `fs.stat` during path matching, so for the example below:\n\n```js\nig.add('config/')\n\n// `ig` does NOT know if 'config' is a normal file, directory or something\nig.ignores('config') // And it returns `false`\n\nig.ignores('config/') // returns `true`\n```\n\nSpecially for people who develop some library based on `node-ignore`, it is important to understand that.\n\n## .ignores(pathname: Pathname): boolean\n\n> new in 3.2.0\n\nReturns `Boolean` whether `pathname` should be ignored.\n\n```js\nig.ignores('.abc/a.js') // true\n```\n\n## .createFilter()\n\nCreates a filter function which could filter an array of paths with `Array.prototype.filter`.\n\nReturns `function(path)` the filter function.\n\n## `options.ignorecase` since 4.0.0\n\nSimilar as the `core.ignorecase` option of [git-config](https://git-scm.com/docs/git-config), `node-ignore` will be case insensitive if `options.ignorecase` is set to `true` (default value), otherwise case sensitive.\n\n```js\nconst ig = ignore({\n ignorecase: false\n})\n\nig.add('*.png')\n\nig.ignores('*.PNG') // false\n```\n\n****\n\n# Upgrade Guide\n\n## Upgrade 2.x -> 3.x\n\n- All `options` of 2.x are unnecessary and removed, so just remove them.\n- `ignore()` instance is no longer an [`EventEmitter`](nodejs.org/api/events.html), and all events are unnecessary and removed.\n- `.addIgnoreFile()` is removed, see the [.addIgnoreFile](#addignorefilepath) section for details.\n\n## Upgrade 3.x -> 4.x\n\nSince `4.0.0`, `ignore` will no longer support node < 6, to use `ignore` in node < 6:\n\n```js\nvar ignore = require('ignore/legacy')\n```\n\n****\n\n# Collaborators\n\n- [@whitecolor](https://github.com/whitecolor) *Alex*\n- [@SamyPesse](https://github.com/SamyPesse) *Samy Pessé*\n- [@azproduction](https://github.com/azproduction) *Mikhail Davydov*\n- [@TrySound](https://github.com/TrySound) *Bogdan Chadkin*\n- [@JanMattner](https://github.com/JanMattner) *Jan Mattner*\n- [@ntwb](https://github.com/ntwb) *Stephen Edgar*\n- [@kasperisager](https://github.com/kasperisager) *Kasper Isager*\n- [@sandersn](https://github.com/sandersn) *Nathan Shively-Sanders*\n", "readmeFilename": "README.md", "homepage": "https://github.com/kaelzhang/node-ignore#readme", "_id": "ignore@4.0.6", "_requested": { "type": "version", "registry": true, "raw": "ignore@4.0.6", "name": "ignore", "escapedName": "ignore", "rawSpec": "4.0.6", "saveSpec": "[Circular]", "fetchSpec": "4.0.6" }, "_spec": "4.0.6", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ignore@4.0.6", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/globby/node_modules/ignore", "error": "[Circular]", "extraneous": false }, "pify": { "name": "pify", "version": "4.0.1", "description": "Promisify a callback-style function", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/pify.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "test": "xo && ava", "optimization-test": "node --allow-natives-syntax optimization-test.js" }, "files": [ "index.js" ], "keywords": [ "promise", "promises", "promisify", "all", "denodify", "denodeify", "callback", "cb", "node", "then", "thenify", "convert", "transform", "wrap", "wrapper", "bind", "to", "async", "await", "es2015", "bluebird" ], "devDependencies": { "ava": "^0.25.0", "pinkie-promise": "^2.0.0", "v8-natives": "^1.1.0", "xo": "^0.23.0" }, "_resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz", "_integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==", "_from": "pify@4.0.1", "readme": "# pify [![Build Status](https://travis-ci.org/sindresorhus/pify.svg?branch=master)](https://travis-ci.org/sindresorhus/pify)\n\n> Promisify a callback-style function\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-pify?utm_source=npm-pify&utm_medium=referral&utm_campaign=readme\">Get professional support for 'pify' with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n---\n\n\n## Install\n\n```\n$ npm install pify\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst pify = require('pify');\n\n// Promisify a single function\npify(fs.readFile)('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n\n// Promisify all methods in a module\npify(fs).readFile('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n```\n\n\n## API\n\n### pify(input, [options])\n\nReturns a `Promise` wrapped version of the supplied function or module.\n\n#### input\n\nType: `Function` `Object`\n\nCallback-style function or module whose methods you want to promisify.\n\n#### options\n\n##### multiArgs\n\nType: `boolean`<br>\nDefault: `false`\n\nBy default, the promisified function will only return the second argument from the callback, which works fine for most APIs. This option can be useful for modules like `request` that return multiple arguments. Turning this on will make it return an array of all arguments from the callback, excluding the error argument, instead of just the second argument. This also applies to rejections, where it returns an array of all the callback arguments, including the error.\n\n```js\nconst request = require('request');\nconst pify = require('pify');\n\npify(request, {multiArgs: true})('https://sindresorhus.com').then(result => {\n\tconst [httpResponse, body] = result;\n});\n```\n\n##### include\n\nType: `string[]` `RegExp[]`\n\nMethods in a module to promisify. Remaining methods will be left untouched.\n\n##### exclude\n\nType: `string[]` `RegExp[]`<br>\nDefault: `[/.+(Sync|Stream)$/]`\n\nMethods in a module **not** to promisify. Methods with names ending with `'Sync'` are excluded by default.\n\n##### excludeMain\n\nType: `boolean`<br>\nDefault: `false`\n\nIf given module is a function itself, it will be promisified. Turn this option on if you want to promisify only methods of the module.\n\n```js\nconst pify = require('pify');\n\nfunction fn() {\n\treturn true;\n}\n\nfn.method = (data, callback) => {\n\tsetImmediate(() => {\n\t\tcallback(null, data);\n\t});\n};\n\n// Promisify methods but not `fn()`\nconst promiseFn = pify(fn, {excludeMain: true});\n\nif (promiseFn()) {\n\tpromiseFn.method('hi').then(data => {\n\t\tconsole.log(data);\n\t});\n}\n```\n\n##### errorFirst\n\nType: `boolean`<br>\nDefault: `true`\n\nWhether the callback has an error as the first argument. You'll want to set this to `false` if you're dealing with an API that doesn't have an error as the first argument, like `fs.exists()`, some browser APIs, Chrome Extension APIs, etc.\n\n##### promiseModule\n\nType: `Function`\n\nCustom promise module to use instead of the native one.\n\nCheck out [`pinkie-promise`](https://github.com/floatdrop/pinkie-promise) if you need a tiny promise polyfill.\n\n\n## Related\n\n- [p-event](https://github.com/sindresorhus/p-event) - Promisify an event by waiting for it to be emitted\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/pify/issues" }, "homepage": "https://github.com/sindresorhus/pify#readme", "_id": "pify@4.0.1", "_requested": { "type": "version", "registry": true, "raw": "pify@4.0.1", "name": "pify", "escapedName": "pify", "rawSpec": "4.0.1", "saveSpec": "[Circular]", "fetchSpec": "4.0.1" }, "_spec": "4.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "pify@4.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/pify", "error": "[Circular]", "extraneous": false, "_deduped": "stylelint/pify" }, "slash": { "name": "slash", "version": "2.0.0", "description": "Convert Windows backslash paths to slash paths", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/slash.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "path", "seperator", "sep", "slash", "backslash", "windows", "win" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz", "_integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==", "_from": "slash@2.0.0", "readme": "# slash [![Build Status](https://travis-ci.org/sindresorhus/slash.svg?branch=master)](https://travis-ci.org/sindresorhus/slash)\n\n> Convert Windows backslash paths to slash paths: `foo\\\\bar` ➔ `foo/bar`\n\n[Forward-slash paths can be used in Windows](http://superuser.com/a/176395/6877) as long as they're not extended-length paths and don't contain any non-ascii characters.\n\nThis was created since the `path` methods in Node outputs `\\\\` paths on Windows.\n\n\n## Install\n\n```\n$ npm install slash\n```\n\n\n## Usage\n\n```js\nconst path = require('path');\nconst slash = require('slash');\n\nconst str = path.join('foo', 'bar');\n// Unix => foo/bar\n// Windows => foo\\\\bar\n\nslash(str);\n// Unix => foo/bar\n// Windows => foo/bar\n```\n\n\n## API\n\n### slash(path)\n\nType: `string`\n\nAccepts a Windows backslash path and returns a slash path.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/slash/issues" }, "homepage": "https://github.com/sindresorhus/slash#readme", "_id": "slash@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "slash@2.0.0", "name": "slash", "escapedName": "slash", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "slash@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/slash", "error": "[Circular]", "extraneous": false, "_deduped": "stylelint/slash" } }, "devDependencies": { "ava": "^1.4.1", "glob-stream": "^6.1.0", "globby": "github:sindresorhus/globby#master", "matcha": "^0.7.0", "rimraf": "^2.6.3", "tsd": "^0.7.1", "xo": "^0.24.0" }, "xo": { "ignores": [ "fixtures" ] }, "_resolved": "https://registry.npmjs.org/globby/-/globby-9.2.0.tgz", "_integrity": "sha512-ollPHROa5mcxDEkwg6bPt3QbEf4pDQSNtd6JPL1YvOvAo/7/0VAm9TccUeoTmarjPw4pfUthSCqcyfNB1I3ZSg==", "_from": "globby@9.2.0", "readme": "# globby [![Build Status](https://travis-ci.org/sindresorhus/globby.svg?branch=master)](https://travis-ci.org/sindresorhus/globby)\n\n> User-friendly glob matching\n\nBased on [`fast-glob`](https://github.com/mrmlnc/fast-glob), but adds a bunch of useful features and a nicer API.\n\n\n## Features\n\n- Promise API\n- Multiple patterns\n- Negated patterns: `['foo*', '!foobar']`\n- Expands directories: `dir` → `dir/**/*`\n- Supports `.gitignore`\n\n\n## Install\n\n```\n$ npm install globby\n```\n\n\n## Usage\n\n```\n├── unicorn\n├── cake\n└── rainbow\n```\n\n```js\nconst globby = require('globby');\n\n(async () => {\n\tconst paths = await globby(['*', '!cake']);\n\n\tconsole.log(paths);\n\t//=> ['unicorn', 'rainbow']\n})();\n```\n\n\n## API\n\n### globby(patterns, [options])\n\nReturns a `Promise<Array>` of matching paths.\n\n#### patterns\n\nType: `string` `Array`\n\nSee supported `minimatch` [patterns](https://github.com/isaacs/minimatch#usage).\n\n#### options\n\nType: `Object`\n\nSee the [`fast-glob` options](https://github.com/mrmlnc/fast-glob#options-1) in addition to the ones below.\n\n##### expandDirectories\n\nType: `boolean` `Array` `Object`<br>\nDefault: `true`\n\nIf set to `true`, `globby` will automatically glob directories for you. If you define an `Array` it will only glob files that matches the patterns inside the `Array`. You can also define an `Object` with `files` and `extensions` like below:\n\n```js\n(async () => {\n\tconst paths = await globby('images', {\n\t\texpandDirectories: {\n\t\t\tfiles: ['cat', 'unicorn', '*.jpg'],\n\t\t\textensions: ['png']\n\t\t}\n\t});\n\n\tconsole.log(paths);\n\t//=> ['cat.png', 'unicorn.png', 'cow.jpg', 'rainbow.jpg']\n})();\n```\n\nNote that if you set this option to `false`, you won't get back matched directories unless you set `onlyFiles: false`.\n\n##### gitignore\n\nType: `boolean`<br>\nDefault: `false`\n\nRespect ignore patterns in `.gitignore` files that apply to the globbed files.\n\n### globby.sync(patterns, [options])\n\nReturns an `Array` of matching paths.\n\n### globby.generateGlobTasks(patterns, [options])\n\nReturns an `Array<Object>` in the format `{pattern: string, options: Object}`, which can be passed as arguments to [`fast-glob`](https://github.com/mrmlnc/fast-glob). This is useful for other globbing-related packages.\n\nNote that you should avoid running the same tasks multiple times as they contain a file system cache. Instead, run this method each time to ensure file system changes are taken into consideration.\n\n### globby.hasMagic(patterns, [options])\n\nReturns a `boolean` of whether there are any special glob characters in the `patterns`.\n\nNote that the options affect the results. If `noext: true` is set, then `+(a|b)` will not be considered a magic pattern. If the pattern has a brace expansion, like `a/{b/c,x/y}`, then that is considered magical, unless `nobrace: true` is set.\n\nThis function is backed by [`node-glob`](https://github.com/isaacs/node-glob#globhasmagicpattern-options)\n\n### globby.gitignore([options])\n\nReturns a `Promise<(path: string) => boolean>` indicating whether a given path is ignored via a `.gitignore` file.\n\nTakes `cwd?: string` and `ignore?: string[]` as options. `.gitignore` files matched by the ignore config are not\nused for the resulting filter function.\n\n```js\nconst {gitignore} = require('globby');\n\n(async () => {\n\tconst isIgnored = await gitignore();\n\tconsole.log(isIgnored('some/file'));\n})();\n```\n\n### globby.gitignore.sync([options])\n\nReturns a `(path: string) => boolean` indicating whether a given path is ignored via a `.gitignore` file.\n\nTakes the same options as `globby.gitignore`.\n\n\n## Globbing patterns\n\nJust a quick overview.\n\n- `*` matches any number of characters, but not `/`\n- `?` matches a single character, but not `/`\n- `**` matches any number of characters, including `/`, as long as it's the only thing in a path part\n- `{}` allows for a comma-separated list of \"or\" expressions\n- `!` at the beginning of a pattern will negate the match\n\n[Various patterns and expected matches.](https://github.com/sindresorhus/multimatch/blob/master/test/test.js)\n\n\n## Related\n\n- [multimatch](https://github.com/sindresorhus/multimatch) - Match against a list instead of the filesystem\n- [matcher](https://github.com/sindresorhus/matcher) - Simple wildcard matching\n- [del](https://github.com/sindresorhus/del) - Delete files and directories\n- [make-dir](https://github.com/sindresorhus/make-dir) - Make a directory and its parents if needed\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/globby/issues" }, "homepage": "https://github.com/sindresorhus/globby#readme", "_id": "globby@9.2.0", "_requested": { "type": "version", "registry": true, "raw": "globby@9.2.0", "name": "globby", "escapedName": "globby", "rawSpec": "9.2.0", "saveSpec": "[Circular]", "fetchSpec": "9.2.0" }, "_spec": "9.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "globby@9.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "@types/glob": "^7.1.1", "array-union": "^1.0.2", "dir-glob": "^2.2.2", "fast-glob": "^2.2.6", "glob": "^7.1.3", "ignore": "^4.0.3", "pify": "^4.0.1", "slash": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/globby", "error": "[Circular]", "extraneous": false }, "ignore": { "name": "ignore", "version": "5.1.0", "description": "Ignore is a manager and filter for .gitignore rules, the one used by eslint, gitbook and many others.", "files": [ "legacy.js", "index.js", "index.d.ts", "LICENSE-MIT" ], "scripts": { "prepublishOnly": "npm run build", "build": "babel -o legacy.js index.js", "test:lint": "eslint .", "test:tsc": "tsc ./test/ts/simple.ts", "test:ts": "node ./test/ts/simple.js", "test:git": "tap test/git-check-ignore.js", "test:ignore": "tap test/ignore.js", "test:others": "tap test/others.js", "test:cases": "tap test/*.js --coverage", "test-no-report": "npm run test:lint && npm run test:tsc && npm run test:ts && npm run test:cases", "test": "npm run test-no-report", "posttest": "tap --coverage-report=html && codecov" }, "repository": { "type": "git", "url": "git+ssh://git@github.com/kaelzhang/node-ignore.git" }, "keywords": [ "ignore", ".gitignore", "gitignore", "npmignore", "rules", "manager", "filter", "regexp", "regex", "fnmatch", "glob", "asterisks", "regular-expression" ], "author": { "name": "kael" }, "license": "MIT", "bugs": { "url": "https://github.com/kaelzhang/node-ignore/issues" }, "devDependencies": { "@babel/cli": "^7.2.3", "@babel/core": "^7.3.4", "@babel/preset-env": "^7.3.4", "codecov": "^3.2.0", "debug": "^4.1.1", "eslint": "^5.15.2", "eslint-config-ostai": "^2.0.0", "eslint-plugin-import": "^2.16.0", "mkdirp": "^0.5.1", "pre-suf": "^1.1.1", "rimraf": "^2.6.3", "spawn-sync": "^2.0.0", "tap": "^12.6.0", "tmp": "0.0.33", "typescript": "^3.3.3333" }, "engines": { "node": ">= 4" }, "_resolved": "https://registry.npmjs.org/ignore/-/ignore-5.1.0.tgz", "_integrity": "sha512-dJEmMwloo0gq40chdtDmE4tMp67ZGwN7MFTgjNqWi2VHEi5Ya6JkuvPWasjcAIm7lg+2if8xxn5R199wspcplg==", "_from": "ignore@5.1.0", "readme": "<table><thead>\n <tr>\n <th>Linux</th>\n <th>OS X</th>\n <th>Windows</th>\n <th>Coverage</th>\n <th>Downloads</th>\n </tr>\n</thead><tbody><tr>\n <td colspan=\"2\" align=\"center\">\n <a href=\"https://travis-ci.org/kaelzhang/node-ignore\">\n <img\n src=\"https://travis-ci.org/kaelzhang/node-ignore.svg?branch=master\"\n alt=\"Build Status\" /></a>\n </td>\n <td align=\"center\">\n <a href=\"https://ci.appveyor.com/project/kaelzhang/node-ignore\">\n <img\n src=\"https://ci.appveyor.com/api/projects/status/github/kaelzhang/node-ignore?branch=master&svg=true\"\n alt=\"Windows Build Status\" /></a>\n </td>\n <td align=\"center\">\n <a href=\"https://codecov.io/gh/kaelzhang/node-ignore\">\n <img\n src=\"https://codecov.io/gh/kaelzhang/node-ignore/branch/master/graph/badge.svg\"\n alt=\"Coverage Status\" /></a>\n </td>\n <td align=\"center\">\n <a href=\"https://www.npmjs.org/package/ignore\">\n <img\n src=\"http://img.shields.io/npm/dm/ignore.svg\"\n alt=\"npm module downloads per month\" /></a>\n </td>\n</tr></tbody></table>\n\n# ignore\n\n`ignore` is a manager, filter and parser which implemented in pure JavaScript according to the .gitignore [spec](http://git-scm.com/docs/gitignore).\n\nPay attention that [`minimatch`](https://www.npmjs.org/package/minimatch) does not work in the gitignore way. To filter filenames according to .gitignore file, I recommend this module.\n\n##### Tested on\n\n- Linux + Node: `0.8` - `7.x`\n- Windows + Node: `0.10` - `7.x`, node < `0.10` is not tested due to the lack of support of appveyor.\n\nActually, `ignore` does not rely on any versions of node specially.\n\nSince `4.0.0`, ignore will no longer support `node < 6` by default, to use in node < 6, `require('ignore/legacy')`. For details, see [CHANGELOG](https://github.com/kaelzhang/node-ignore/blob/master/CHANGELOG.md).\n\n## Table Of Main Contents\n\n- [Usage](#usage)\n- [`Pathname` Conventions](#pathname-conventions)\n- See Also:\n - [`glob-gitignore`](https://www.npmjs.com/package/glob-gitignore) matches files using patterns and filters them according to gitignore rules.\n- [Upgrade Guide](#upgrade-guide)\n\n## Usage\n\n```js\nimport ignore from 'ignore'\nconst ig = ignore().add(['.abc/*', '!.abc/d/'])\n```\n\n### Filter the given paths\n\n```js\nconst paths = [\n '.abc/a.js', // filtered out\n '.abc/d/e.js' // included\n]\n\nig.filter(paths) // ['.abc/d/e.js']\nig.ignores('.abc/a.js') // true\n```\n\n### As the filter function\n\n```js\npaths.filter(ig.createFilter()); // ['.abc/d/e.js']\n```\n\n### Win32 paths will be handled\n\n```js\nig.filter(['.abc\\\\a.js', '.abc\\\\d\\\\e.js'])\n// if the code above runs on windows, the result will be\n// ['.abc\\\\d\\\\e.js']\n```\n\n## Why another ignore?\n\n- `ignore` is a standalone module, and is much simpler so that it could easy work with other programs, unlike [isaacs](https://npmjs.org/~isaacs)'s [fstream-ignore](https://npmjs.org/package/fstream-ignore) which must work with the modules of the fstream family.\n\n- `ignore` only contains utility methods to filter paths according to the specified ignore rules, so\n - `ignore` never try to find out ignore rules by traversing directories or fetching from git configurations.\n - `ignore` don't cares about sub-modules of git projects.\n\n- Exactly according to [gitignore man page](http://git-scm.com/docs/gitignore), fixes some known matching issues of fstream-ignore, such as:\n - '`/*.js`' should only match '`a.js`', but not '`abc/a.js`'.\n - '`**/foo`' should match '`foo`' anywhere.\n - Prevent re-including a file if a parent directory of that file is excluded.\n - Handle trailing whitespaces:\n - `'a '`(one space) should not match `'a '`(two spaces).\n - `'a \\ '` matches `'a '`\n - All test cases are verified with the result of `git check-ignore`.\n\n# Methods\n\n## .add(pattern: string | Ignore): this\n## .add(patterns: Array<string | Ignore>): this\n\n- **pattern** `String | Ignore` An ignore pattern string, or the `Ignore` instance\n- **patterns** `Array<String | Ignore>` Array of ignore patterns.\n\nAdds a rule or several rules to the current manager.\n\nReturns `this`\n\nNotice that a line starting with `'#'`(hash) is treated as a comment. Put a backslash (`'\\'`) in front of the first hash for patterns that begin with a hash, if you want to ignore a file with a hash at the beginning of the filename.\n\n```js\nignore().add('#abc').ignores('#abc') // false\nignore().add('\\#abc').ignores('#abc') // true\n```\n\n`pattern` could either be a line of ignore pattern or a string of multiple ignore patterns, which means we could just `ignore().add()` the content of a ignore file:\n\n```js\nignore()\n.add(fs.readFileSync(filenameOfGitignore).toString())\n.filter(filenames)\n```\n\n`pattern` could also be an `ignore` instance, so that we could easily inherit the rules of another `Ignore` instance.\n\n## <strike>.addIgnoreFile(path)</strike>\n\nREMOVED in `3.x` for now.\n\nTo upgrade `ignore@2.x` up to `3.x`, use\n\n```js\nimport fs from 'fs'\n\nif (fs.existsSync(filename)) {\n ignore().add(fs.readFileSync(filename).toString())\n}\n```\n\ninstead.\n\n## .filter(paths: Array&lt;Pathname&gt;): Array&lt;Pathname&gt;\n\n```ts\ntype Pathname = string\n```\n\nFilters the given array of pathnames, and returns the filtered array.\n\n- **paths** `Array.<Pathname>` The array of `pathname`s to be filtered.\n\n### `Pathname` Conventions:\n\n#### 1. `Pathname` should be a `path.relative()`d pathname\n\n`Pathname` should be a string that have been `path.join()`ed, or the return value of `path.relative()` to the current directory,\n\n```js\n// WRONG, an error will be thrown\nig.ignores('./abc')\n\n// WRONG, for it will never happen, and an error will be thrown\n// If the gitignore rule locates at the root directory,\n// `'/abc'` should be changed to `'abc'`.\n// ```\n// path.relative('/', '/abc') -> 'abc'\n// ```\nig.ignores('/abc')\n\n// Right\nig.ignores('abc')\n\n// Right\nig.ignores(path.join('./abc')) // path.join('./abc') -> 'abc'\n```\n\nIn other words, each `Pathname` here should be a relative path to the directory of the gitignore rules.\n\nSuppose the dir structure is:\n\n```\n/path/to/your/repo\n |-- a\n | |-- a.js\n |\n |-- .b\n |\n |-- .c\n |-- .DS_store\n```\n\nThen the `paths` might be like this:\n\n```js\n[\n 'a/a.js'\n '.b',\n '.c/.DS_store'\n]\n```\n\n#### 2. filenames and dirnames\n\n`node-ignore` does NO `fs.stat` during path matching, so for the example below:\n\n```js\n// First, we add a ignore pattern to ignore a directory\nig.add('config/')\n\n// `ig` does NOT know if 'config', in the real world,\n// is a normal file, directory or something.\n\nig.ignores('config')\n// `ig` treats `config` as a file, so it returns `false`\n\nig.ignores('config/')\n// returns `true`\n```\n\nSpecially for people who develop some library based on `node-ignore`, it is important to understand that.\n\nUsually, you could use [`glob`](http://npmjs.org/package/glob) with `option.mark = true` to fetch the structure of the current directory:\n\n```js\nimport glob from 'glob'\n\nglob('**', {\n // Adds a / character to directory matches.\n mark: true\n}, (err, files) => {\n if (err) {\n return console.error(err)\n }\n\n let filtered = ignore().add(patterns).filter(files)\n console.log(filtered)\n})\n```\n\n## .ignores(pathname: Pathname): boolean\n\n> new in 3.2.0\n\nReturns `Boolean` whether `pathname` should be ignored.\n\n```js\nig.ignores('.abc/a.js') // true\n```\n\n## .createFilter()\n\nCreates a filter function which could filter an array of paths with `Array.prototype.filter`.\n\nReturns `function(path)` the filter function.\n\n## .test(pathname: Pathname) since 5.0.0\n\nReturns `TestResult`\n\n```ts\ninterface TestResult {\n ignored: boolean\n // true if the `pathname` is finally unignored by some negative pattern\n unignored: boolean\n}\n```\n\n- `{ignored: true, unignored: false}`: the `pathname` is ignored\n- `{ignored: false, unignored: true}`: the `pathname` is unignored\n- `{ignored: false, unignored: false}`: the `pathname` is never matched by any ignore rules.\n\n## `options.ignorecase` since 4.0.0\n\nSimilar as the `core.ignorecase` option of [git-config](https://git-scm.com/docs/git-config), `node-ignore` will be case insensitive if `options.ignorecase` is set to `true` (the default value), otherwise case sensitive.\n\n```js\nconst ig = ignore({\n ignorecase: false\n})\n\nig.add('*.png')\n\nig.ignores('*.PNG') // false\n```\n\n## static `ignore.isPathValid(pathname): boolean` since 5.0.0\n\nCheck whether the `pathname` is valid according to the [convention](#1-pathname-should-be-a-pathrelatived-pathname).\n\n```js\nignore.isPathValid('./foo') // false\n```\n\n****\n\n# Upgrade Guide\n\n## Upgrade 4.x -> 5.x\n\nSince `5.0.0`, if an invalid `Pathname` passed into `ig.ignores()`, an error will be thrown, while `ignore < 5.0.0` did not make sure what the return value was, as well as\n\n```ts\n.ignores(pathname: Pathname): boolean\n\n.filter(pathnames: Array<Pathname>): Array<Pathname>\n\n.createFilter(): (pathname: Pathname) => boolean\n\n.test(pathname: Pathname): {ignored: boolean, unignored: boolean}\n```\n\nSee the convention [here](#1-pathname-should-be-a-pathrelatived-pathname) for details.\n\nIf there are invalid pathnames, the conversion and filtration should be done by users.\n\n```js\nimport {isPathValid} from 'ignore' // introduced in 5.0.0\n\nconst paths = [\n // invalid\n //////////////////\n '',\n false,\n '../foo',\n '.',\n //////////////////\n\n // valid\n 'foo'\n]\n.filter(isValidPath)\n\nig.filter(paths)\n```\n\n## Upgrade 3.x -> 4.x\n\nSince `4.0.0`, `ignore` will no longer support node < 6, to use `ignore` in node < 6:\n\n```js\nvar ignore = require('ignore/legacy')\n```\n\n## Upgrade 2.x -> 3.x\n\n- All `options` of 2.x are unnecessary and removed, so just remove them.\n- `ignore()` instance is no longer an [`EventEmitter`](nodejs.org/api/events.html), and all events are unnecessary and removed.\n- `.addIgnoreFile()` is removed, see the [.addIgnoreFile](#addignorefilepath) section for details.\n\n****\n\n# Collaborators\n\n- [@whitecolor](https://github.com/whitecolor) *Alex*\n- [@SamyPesse](https://github.com/SamyPesse) *Samy Pessé*\n- [@azproduction](https://github.com/azproduction) *Mikhail Davydov*\n- [@TrySound](https://github.com/TrySound) *Bogdan Chadkin*\n- [@JanMattner](https://github.com/JanMattner) *Jan Mattner*\n- [@ntwb](https://github.com/ntwb) *Stephen Edgar*\n- [@kasperisager](https://github.com/kasperisager) *Kasper Isager*\n- [@sandersn](https://github.com/sandersn) *Nathan Shively-Sanders*\n", "readmeFilename": "README.md", "homepage": "https://github.com/kaelzhang/node-ignore#readme", "_id": "ignore@5.1.0", "_requested": { "type": "version", "registry": true, "raw": "ignore@5.1.0", "name": "ignore", "escapedName": "ignore", "rawSpec": "5.1.0", "saveSpec": "[Circular]", "fetchSpec": "5.1.0" }, "_spec": "5.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ignore@5.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/ignore", "error": "[Circular]", "extraneous": false }, "leven": { "name": "leven", "version": "3.1.0", "description": "Measure the difference between two strings using the fastest JS implementation of the Levenshtein distance algorithm", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/leven.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "test": "xo && ava && tsd", "bench": "matcha bench.js" }, "files": [ "index.js", "index.d.ts" ], "keywords": [ "leven", "levenshtein", "distance", "algorithm", "algo", "string", "difference", "diff", "fast", "fuzzy", "similar", "similarity", "compare", "comparison", "edit", "text", "match", "matching" ], "devDependencies": { "ava": "^1.4.1", "fast-levenshtein": "^2.0.6", "ld": "^0.1.0", "levdist": "^2.2.9", "levenshtein": "^1.0.5", "levenshtein-component": "^0.0.1", "levenshtein-edit-distance": "^2.0.3", "matcha": "^0.7.0", "natural": "^0.6.3", "talisman": "^0.21.0", "tsd": "^0.7.2", "xo": "^0.24.0" }, "_resolved": "https://registry.npmjs.org/leven/-/leven-3.1.0.tgz", "_integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==", "_from": "leven@3.1.0", "readme": "# leven [![Build Status](https://travis-ci.org/sindresorhus/leven.svg?branch=master)](https://travis-ci.org/sindresorhus/leven)\n\n> Measure the difference between two strings<br>\n> One of the fastest JS implementations of the [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance) algorithm\n\n\n## Install\n\n```\n$ npm install leven\n```\n\n\n## Usage\n\n```js\nconst leven = require('leven');\n\nleven('cat', 'cow');\n//=> 2\n```\n\n\n## Benchmark\n\n```\n$ npm run bench\n```\n\n```\n 165,926 op/s » leven\n 164,398 op/s » talisman\n 1,044 op/s » levenshtein-edit-distance\n 628 op/s » fast-levenshtein\n 497 op/s » levenshtein-component\n 195 op/s » ld\n 190 op/s » levenshtein\n 168 op/s » levdist\n 10 op/s » natural\n```\n\n\n## Related\n\n- [leven-cli](https://github.com/sindresorhus/leven-cli) - CLI for this module\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/leven/issues" }, "homepage": "https://github.com/sindresorhus/leven#readme", "_id": "leven@3.1.0", "_requested": { "type": "version", "registry": true, "raw": "leven@3.1.0", "name": "leven", "escapedName": "leven", "rawSpec": "3.1.0", "saveSpec": "[Circular]", "fetchSpec": "3.1.0" }, "_spec": "3.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "leven@3.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/leven", "error": "[Circular]", "extraneous": false }, "meow": { "name": "meow", "version": "5.0.0", "description": "CLI app helper", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/meow.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "cli", "bin", "util", "utility", "helper", "argv", "command", "line", "meow", "cat", "kitten", "parser", "option", "flags", "input", "cmd", "console" ], "dependencies": { "decamelize-keys": { "name": "decamelize-keys", "version": "1.1.0", "description": "Convert object keys from camelCase to lowercase with a custom separator", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/dsblv/decamelize-keys.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "http://sindresorhus.com" }, "contributors": [ { "name": "Dmirty Sobolev", "email": "disobolev@icloud.com", "url": "https://github.com/dsblv" } ], "engines": { "node": ">=0.10.0" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "map", "obj", "object", "key", "keys", "value", "values", "val", "iterate", "decamelize", "decamelcase", "lowercase", "camelcase", "camel-case", "camel", "case", "dash", "hyphen", "dot", "underscore", "separator", "string", "text", "convert" ], "devDependencies": { "ava": "*", "xo": "*" }, "dependencies": { "decamelize": { "name": "decamelize", "version": "1.2.0", "description": "Convert a camelized string into a lowercased one with a custom separator: unicornRainbow → unicorn_rainbow", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/decamelize.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "decamelize", "decamelcase", "camelcase", "lowercase", "case", "dash", "hyphen", "string", "str", "text", "convert" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz", "_integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=", "_from": "decamelize@1.2.0", "readme": "# decamelize [![Build Status](https://travis-ci.org/sindresorhus/decamelize.svg?branch=master)](https://travis-ci.org/sindresorhus/decamelize)\n\n> Convert a camelized string into a lowercased one with a custom separator<br>\n> Example: `unicornRainbow` → `unicorn_rainbow`\n\n\n## Install\n\n```\n$ npm install --save decamelize\n```\n\n\n## Usage\n\n```js\nconst decamelize = require('decamelize');\n\ndecamelize('unicornRainbow');\n//=> 'unicorn_rainbow'\n\ndecamelize('unicornRainbow', '-');\n//=> 'unicorn-rainbow'\n```\n\n\n## API\n\n### decamelize(input, [separator])\n\n#### input\n\nType: `string`\n\n#### separator\n\nType: `string`<br>\nDefault: `_`\n\n\n## Related\n\nSee [`camelcase`](https://github.com/sindresorhus/camelcase) for the inverse.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/decamelize/issues" }, "homepage": "https://github.com/sindresorhus/decamelize#readme", "_id": "decamelize@1.2.0", "_requested": { "type": "version", "registry": true, "raw": "decamelize@1.2.0", "name": "decamelize", "escapedName": "decamelize", "rawSpec": "1.2.0", "saveSpec": "[Circular]", "fetchSpec": "1.2.0" }, "_spec": "1.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "decamelize@1.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/decamelize", "error": "[Circular]", "extraneous": false, "_deduped": "decamelize" }, "map-obj": { "name": "map-obj", "version": "1.0.1", "description": "Map object keys and values into a new object", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/map-obj.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "node test.js" }, "files": [ "index.js" ], "keywords": [ "map", "obj", "object", "key", "keys", "value", "values", "val", "iterate", "iterator" ], "devDependencies": { "ava": "0.0.4" }, "_resolved": "https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz", "_integrity": "sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=", "_from": "map-obj@1.0.1", "readme": "# map-obj [![Build Status](https://travis-ci.org/sindresorhus/map-obj.svg?branch=master)](https://travis-ci.org/sindresorhus/map-obj)\n\n> Map object keys and values into a new object\n\n\n## Install\n\n```\n$ npm install --save map-obj\n```\n\n\n## Usage\n\n```js\nvar mapObj = require('map-obj');\n\nvar newObject = mapObj({foo: 'bar'}, function (key, value, object) {\n\t// first element is the new key and second is the new value\n\t// here we reverse the order\n\treturn [value, key];\n});\n//=> {bar: 'foo'}\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/map-obj/issues" }, "homepage": "https://github.com/sindresorhus/map-obj#readme", "_id": "map-obj@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "map-obj@1.0.1", "name": "map-obj", "escapedName": "map-obj", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "map-obj@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/map-obj", "error": "[Circular]", "extraneous": false, "_deduped": "map-obj" } }, "_resolved": "https://registry.npmjs.org/decamelize-keys/-/decamelize-keys-1.1.0.tgz", "_integrity": "sha1-0XGoeTMlKAfrPLYdwcFEXQeN8tk=", "_from": "decamelize-keys@1.1.0", "readme": "# decamelize-keys [![Build Status](https://travis-ci.org/dsblv/decamelize-keys.svg?branch=master)](https://travis-ci.org/dsblv/decamelize-keys)\n\n> Convert object keys from camelCase to lowercase with a custom separator using [`decamelize`](https://github.com/sindresorhus/decamelize)\n\n*This project was forked from [`camelcase-keys`](https://github.com/sindresorhus/camelcase-keys) and converted to do the opposite*\n\n\n## Install\n\n```sh\n$ npm install --save decamelize-keys\n```\n\n\n## Usage\n\n```js\nconst decamelizeKeys = require('decamelize-keys');\n\ndecamelizeKeys({fooBar: true}, '-');\n//=> {'foo-bar': true}\n```\n\n\n## API\n\n### decamelizeKeys(input, [separator], [options])\n\n### input\n\nType: `object` \n*Required*\n\nObject to decamelize.\n\n### separator\n\nType: `string` \nDefault: `_`\n\nA string to insert between words.\n\n### options\n\nType: `object`\n\n#### separator\n\nType: `string` \nDefault: `_`\n\nAlternative way to specify [separator](#separator).\n\n#### exclude\n\nType: `array` \nDefault: `[]`\n\nExclude keys from being decamelized.\n\n\n## Related\n\nSee [`camelcase-keys`](https://github.com/sindresorhus/camelcase-keys) for the inverse.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com), [Dmirty Sobolev](https://github.com/dsblv)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/dsblv/decamelize-keys/issues" }, "homepage": "https://github.com/dsblv/decamelize-keys#readme", "_id": "decamelize-keys@1.1.0", "_requested": { "type": "version", "registry": true, "raw": "decamelize-keys@1.1.0", "name": "decamelize-keys", "escapedName": "decamelize-keys", "rawSpec": "1.1.0", "saveSpec": "[Circular]", "fetchSpec": "1.1.0" }, "_spec": "1.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "decamelize-keys@1.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "decamelize": "^1.1.0", "map-obj": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/decamelize-keys", "error": "[Circular]", "extraneous": false }, "loud-rejection": { "name": "loud-rejection", "version": "1.6.0", "description": "Make unhandled promise rejections fail loudly instead of the default silent fail", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/loud-rejection.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "xo && nyc ava", "coveralls": "nyc report --reporter=text-lcov | coveralls" }, "files": [ "index.js", "register.js", "api.js" ], "keywords": [ "promise", "promises", "unhandled", "uncaught", "rejection", "loud", "fail", "catch", "throw", "handler", "exit", "debug", "debugging", "verbose" ], "dependencies": {}, "devDependencies": { "ava": "*", "bluebird": "^3.0.5", "coveralls": "^2.11.4", "delay": "^1.0.0", "execa": "^0.4.0", "get-stream": "^2.0.0", "nyc": "^6.2.1", "xo": "*" }, "nyc": { "exclude": [ "fixture.js" ] }, "_resolved": "https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz", "_integrity": "sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=", "_from": "loud-rejection@1.6.0", "readme": "# loud-rejection [![Build Status](https://travis-ci.org/sindresorhus/loud-rejection.svg?branch=master)](https://travis-ci.org/sindresorhus/loud-rejection) [![Coverage Status](https://coveralls.io/repos/github/sindresorhus/loud-rejection/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/loud-rejection?branch=master)\n\n> Make unhandled promise rejections fail loudly instead of the default [silent fail](https://gist.github.com/benjamingr/0237932cee84712951a2)\n\nBy default, promises fail silently if you don't attach a `.catch()` handler to them.\n\nUse this in top-level things like tests, CLI tools, apps, etc, **but not in reusable modules.**<br>\nNot needed in the browser as unhandled promises are shown in the console.\n\n\n## Install\n\n```\n$ npm install --save loud-rejection\n```\n\n\n## Usage\n\n```js\nconst loudRejection = require('loud-rejection');\nconst promiseFn = require('promise-fn');\n\n// Install the unhandledRejection listeners\nloudRejection();\n\npromiseFn();\n```\n\nWithout this module it's more verbose and you might even miss some that will fail silently:\n\n```js\nconst promiseFn = require('promise-fn');\n\nfunction error(err) {\n\tconsole.error(err.stack);\n\tprocess.exit(1);\n}\n\npromiseFn().catch(error);\n```\n\n### Register script\n\nAlternatively to the above, you may simply require `loud-rejection/register` and the unhandledRejection listener will be automagically installed for you.\n\nThis is handy for ES2015 imports:\n\n```js\nimport 'loud-rejection/register';\n```\n\n\n## API\n\n### loudRejection([log])\n\n#### log\n\nType: `Function`<br>\nDefault: `console.error`\n\nCustom logging function to print the rejected promise. Receives the error stack.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/loud-rejection/issues" }, "homepage": "https://github.com/sindresorhus/loud-rejection#readme", "_id": "loud-rejection@1.6.0", "_requested": { "type": "version", "registry": true, "raw": "loud-rejection@1.6.0", "name": "loud-rejection", "escapedName": "loud-rejection", "rawSpec": "1.6.0", "saveSpec": "[Circular]", "fetchSpec": "1.6.0" }, "_spec": "1.6.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "loud-rejection@1.6.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "currently-unhandled": "^0.4.1", "signal-exit": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/loud-rejection", "error": "[Circular]", "extraneous": false, "_deduped": "loud-rejection" }, "minimist-options": { "name": "minimist-options", "version": "3.0.2", "description": "Pretty options for minimist", "repository": { "type": "git", "url": "git+https://github.com/vadimdemedes/minimist-options.git" }, "author": { "name": "Vadim Demedes", "email": "vdemedes@gmail.com" }, "license": "MIT", "keywords": [ "minimist", "argv", "args" ], "scripts": { "test": "xo && ava" }, "engines": { "node": ">= 4" }, "files": [ "index.js" ], "dependencies": { "arrify": { "name": "arrify", "version": "1.0.1", "description": "Convert a value to an array", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/arrify.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "array", "arr", "arrify", "arrayify", "convert", "value" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz", "_integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=", "_from": "arrify@1.0.1", "readme": "# arrify [![Build Status](https://travis-ci.org/sindresorhus/arrify.svg?branch=master)](https://travis-ci.org/sindresorhus/arrify)\n\n> Convert a value to an array\n\n\n## Install\n\n```\n$ npm install --save arrify\n```\n\n\n## Usage\n\n```js\nconst arrify = require('arrify');\n\narrify('unicorn');\n//=> ['unicorn']\n\narrify(['unicorn']);\n//=> ['unicorn']\n\narrify(null);\n//=> []\n\narrify(undefined);\n//=> []\n```\n\n*Supplying `null` or `undefined` results in an empty array.*\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/arrify/issues" }, "homepage": "https://github.com/sindresorhus/arrify#readme", "_id": "arrify@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "arrify@1.0.1", "name": "arrify", "escapedName": "arrify", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "arrify@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/arrify", "error": "[Circular]", "extraneous": false }, "is-plain-obj": { "name": "is-plain-obj", "version": "1.1.0", "description": "Check if a value is a plain object", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "_resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz", "_integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4=", "_from": "is-plain-obj@1.1.0", "readme": "# is-plain-obj [![Build Status](https://travis-ci.org/sindresorhus/is-plain-obj.svg?branch=master)](https://travis-ci.org/sindresorhus/is-plain-obj)\n\n> Check if a value is a plain object\n\nAn object is plain if it's created by either `{}`, `new Object()` or `Object.create(null)`.\n\n\n## Install\n\n```\n$ npm install --save is-plain-obj\n```\n\n\n## Usage\n\n```js\nvar isPlainObj = require('is-plain-obj');\n\nisPlainObj({foo: 'bar'});\n//=> true\n\nisPlainObj([1, 2, 3]);\n//=> false\n```\n\n\n## Related\n\n- [is-obj](https://github.com/sindresorhus/is-obj) - Check if a value is an object\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/is-plain-obj#readme", "_id": "is-plain-obj@1.1.0", "_requested": { "type": "version", "registry": true, "raw": "is-plain-obj@1.1.0", "name": "is-plain-obj", "escapedName": "is-plain-obj", "rawSpec": "1.1.0", "saveSpec": "[Circular]", "fetchSpec": "1.1.0" }, "_spec": "1.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-plain-obj", "error": "[Circular]", "extraneous": false, "_deduped": "is-plain-obj" } }, "devDependencies": { "ava": "^0.18.2", "xo": "^0.18.2" }, "_resolved": "https://registry.npmjs.org/minimist-options/-/minimist-options-3.0.2.tgz", "_integrity": "sha512-FyBrT/d0d4+uiZRbqznPXqw3IpZZG3gl3wKWiX784FycUKVwBt0uLBFkQrtE4tZOrgo78nZp2jnKz3L65T5LdQ==", "_from": "minimist-options@3.0.2", "readme": "# minimist-options [![Build Status](https://travis-ci.org/vadimdemedes/minimist-options.svg?branch=master)](https://travis-ci.org/vadimdemedes/minimist-options)\n\n> Write options for [minimist](https://npmjs.org/package/minimist) in a comfortable way.\n\n## Installation\n\n```\n$ npm install --save minimist-options\n```\n\n## Usage\n\n```js\nconst buildOptions = require('minimist-options');\nconst minimist = require('minimist');\n\nconst options = buildOptions({\n\tname: {\n\t\ttype: 'string',\n\t\talias: 'n',\n\t\tdefault: 'john'\n\t},\n\n\tforce: {\n\t\ttype: 'boolean',\n\t\talias: ['f', 'o'],\n\t\tdefault: false\n\t},\n\n\tpublished: 'boolean',\n\n\t// special option for positional arguments (`_` in minimist)\n\targuments: 'string'\n});\n\nconst args = minimist(options);\n```\n\ninstead of:\n\n```js\nconst minimist = require('minimist');\n\nconst options = {\n\tstring: ['name', '_'],\n\tboolean: ['force', 'published'],\n\talias: {\n\t\tn: 'name',\n\t\tf: 'force',\n\t\to: 'force'\n\t},\n\tdefault: {\n\t\tname: 'john',\n\t\tf: false\n\t}\n};\n\nconst args = minimist(options);\n```\n\n## License\n\nMIT © [Vadim Demedes](https://vadimdemedes.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/vadimdemedes/minimist-options/issues" }, "homepage": "https://github.com/vadimdemedes/minimist-options#readme", "_id": "minimist-options@3.0.2", "_requested": { "type": "version", "registry": true, "raw": "minimist-options@3.0.2", "name": "minimist-options", "escapedName": "minimist-options", "rawSpec": "3.0.2", "saveSpec": "[Circular]", "fetchSpec": "3.0.2" }, "_spec": "3.0.2", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "minimist-options@3.0.2", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "arrify": "^1.0.1", "is-plain-obj": "^1.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/minimist-options", "error": "[Circular]", "extraneous": false }, "normalize-package-data": { "name": "normalize-package-data", "version": "2.5.0", "author": { "name": "Meryn Stol", "email": "merynstol@gmail.com" }, "description": "Normalizes data that can be found in package.json files.", "license": "BSD-2-Clause", "repository": { "type": "git", "url": "git://github.com/npm/normalize-package-data.git" }, "main": "lib/normalize.js", "scripts": { "test": "tap test/*.js" }, "dependencies": {}, "devDependencies": { "async": "^2.6.1", "tap": "^12.4.0", "underscore": "^1.8.3" }, "files": [ "lib/*.js", "lib/*.json", "AUTHORS" ], "_resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz", "_integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==", "_from": "normalize-package-data@2.5.0", "contributors": [ { "name": "Isaac Z. Schlueter", "email": "i@izs.me" }, { "name": "Meryn Stol", "email": "merynstol@gmail.com" }, { "name": "Robert Kowalski", "email": "rok@kowalski.gd" } ], "readme": "# normalize-package-data [![Build Status](https://travis-ci.org/npm/normalize-package-data.png?branch=master)](https://travis-ci.org/npm/normalize-package-data)\n\nnormalize-package-data exports a function that normalizes package metadata. This data is typically found in a package.json file, but in principle could come from any source - for example the npm registry.\n\nnormalize-package-data is used by [read-package-json](https://npmjs.org/package/read-package-json) to normalize the data it reads from a package.json file. In turn, read-package-json is used by [npm](https://npmjs.org/package/npm) and various npm-related tools.\n\n## Installation\n\n```\nnpm install normalize-package-data\n```\n\n## Usage\n\nBasic usage is really simple. You call the function that normalize-package-data exports. Let's call it `normalizeData`.\n\n```javascript\nnormalizeData = require('normalize-package-data')\npackageData = require(\"./package.json\")\nnormalizeData(packageData)\n// packageData is now normalized\n```\n\n#### Strict mode\n\nYou may activate strict validation by passing true as the second argument.\n\n```javascript\nnormalizeData = require('normalize-package-data')\npackageData = require(\"./package.json\")\nnormalizeData(packageData, true)\n// packageData is now normalized\n```\n\nIf strict mode is activated, only Semver 2.0 version strings are accepted. Otherwise, Semver 1.0 strings are accepted as well. Packages must have a name, and the name field must not have contain leading or trailing whitespace.\n\n#### Warnings\n\nOptionally, you may pass a \"warning\" function. It gets called whenever the `normalizeData` function encounters something that doesn't look right. It indicates less than perfect input data.\n\n```javascript\nnormalizeData = require('normalize-package-data')\npackageData = require(\"./package.json\")\nwarnFn = function(msg) { console.error(msg) }\nnormalizeData(packageData, warnFn)\n// packageData is now normalized. Any number of warnings may have been logged.\n```\n\nYou may combine strict validation with warnings by passing `true` as the second argument, and `warnFn` as third.\n\nWhen `private` field is set to `true`, warnings will be suppressed.\n\n### Potential exceptions\n\nIf the supplied data has an invalid name or version vield, `normalizeData` will throw an error. Depending on where you call `normalizeData`, you may want to catch these errors so can pass them to a callback.\n\n## What normalization (currently) entails\n\n* The value of `name` field gets trimmed (unless in strict mode).\n* The value of the `version` field gets cleaned by `semver.clean`. See [documentation for the semver module](https://github.com/isaacs/node-semver).\n* If `name` and/or `version` fields are missing, they are set to empty strings.\n* If `files` field is not an array, it will be removed.\n* If `bin` field is a string, then `bin` field will become an object with `name` set to the value of the `name` field, and `bin` set to the original string value.\n* If `man` field is a string, it will become an array with the original string as its sole member.\n* If `keywords` field is string, it is considered to be a list of keywords separated by one or more white-space characters. It gets converted to an array by splitting on `\\s+`.\n* All people fields (`author`, `maintainers`, `contributors`) get converted into objects with name, email and url properties.\n* If `bundledDependencies` field (a typo) exists and `bundleDependencies` field does not, `bundledDependencies` will get renamed to `bundleDependencies`.\n* If the value of any of the dependencies fields (`dependencies`, `devDependencies`, `optionalDependencies`) is a string, it gets converted into an object with familiar `name=>value` pairs.\n* The values in `optionalDependencies` get added to `dependencies`. The `optionalDependencies` array is left untouched.\n* As of v2: Dependencies that point at known hosted git providers (currently: github, bitbucket, gitlab) will have their URLs canonicalized, but protocols will be preserved.\n* As of v2: Dependencies that use shortcuts for hosted git providers (`org/proj`, `github:org/proj`, `bitbucket:org/proj`, `gitlab:org/proj`, `gist:docid`) will have the shortcut left in place. (In the case of github, the `org/proj` form will be expanded to `github:org/proj`.) THIS MARKS A BREAKING CHANGE FROM V1, where the shorcut was previously expanded to a URL.\n* If `description` field does not exist, but `readme` field does, then (more or less) the first paragraph of text that's found in the readme is taken as value for `description`.\n* If `repository` field is a string, it will become an object with `url` set to the original string value, and `type` set to `\"git\"`.\n* If `repository.url` is not a valid url, but in the style of \"[owner-name]/[repo-name]\", `repository.url` will be set to git+https://github.com/[owner-name]/[repo-name].git\n* If `bugs` field is a string, the value of `bugs` field is changed into an object with `url` set to the original string value.\n* If `bugs` field does not exist, but `repository` field points to a repository hosted on GitHub, the value of the `bugs` field gets set to an url in the form of https://github.com/[owner-name]/[repo-name]/issues . If the repository field points to a GitHub Gist repo url, the associated http url is chosen.\n* If `bugs` field is an object, the resulting value only has email and url properties. If email and url properties are not strings, they are ignored. If no valid values for either email or url is found, bugs field will be removed.\n* If `homepage` field is not a string, it will be removed.\n* If the url in the `homepage` field does not specify a protocol, then http is assumed. For example, `myproject.org` will be changed to `http://myproject.org`.\n* If `homepage` field does not exist, but `repository` field points to a repository hosted on GitHub, the value of the `homepage` field gets set to an url in the form of https://github.com/[owner-name]/[repo-name]#readme . If the repository field points to a GitHub Gist repo url, the associated http url is chosen.\n\n### Rules for name field\n\nIf `name` field is given, the value of the name field must be a string. The string may not:\n\n* start with a period.\n* contain the following characters: `/@\\s+%`\n* contain any characters that would need to be encoded for use in urls.\n* resemble the word `node_modules` or `favicon.ico` (case doesn't matter).\n\n### Rules for version field\n\nIf `version` field is given, the value of the version field must be a valid *semver* string, as determined by the `semver.valid` method. See [documentation for the semver module](https://github.com/isaacs/node-semver).\n\n### Rules for license field\n\nThe `license` field should be a valid *SPDX license expression* or one of the special values allowed by [validate-npm-package-license](https://npmjs.com/package/validate-npm-package-license). See [documentation for the license field in package.json](https://docs.npmjs.com/files/package.json#license).\n\n## Credits\n\nThis package contains code based on read-package-json written by Isaac Z. Schlueter. Used with permisson.\n\n## License\n\nnormalize-package-data is released under the [BSD 2-Clause License](http://opensource.org/licenses/MIT). \nCopyright (c) 2013 Meryn Stol \n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/npm/normalize-package-data/issues" }, "homepage": "https://github.com/npm/normalize-package-data#readme", "_id": "normalize-package-data@2.5.0", "_requested": { "type": "version", "registry": true, "raw": "normalize-package-data@2.5.0", "name": "normalize-package-data", "escapedName": "normalize-package-data", "rawSpec": "2.5.0", "saveSpec": "[Circular]", "fetchSpec": "2.5.0" }, "_spec": "2.5.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "normalize-package-data@2.5.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "hosted-git-info": "^2.1.4", "resolve": "^1.10.0", "semver": "2 || 3 || 4 || 5", "validate-npm-package-license": "^3.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/normalize-package-data", "error": "[Circular]", "extraneous": false, "_deduped": "normalize-package-data" }, "camelcase-keys": { "name": "camelcase-keys", "version": "4.2.0", "description": "Convert object keys to camelCase", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/camelcase-keys.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava", "bench": "matcha bench/bench.js" }, "files": [ "index.js" ], "keywords": [ "map", "obj", "object", "key", "keys", "value", "values", "val", "iterate", "camelcase", "camel-case", "camel", "case", "dash", "hyphen", "dot", "underscore", "separator", "string", "text", "convert", "deep", "recurse", "recursive" ], "dependencies": { "quick-lru": { "name": "quick-lru", "version": "1.1.0", "description": "Simple \"Least Recently Used\" (LRU) cache", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/quick-lru.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && nyc ava" }, "files": [ "index.js" ], "keywords": [ "lru", "quick", "cache", "caching", "least", "recently", "used", "fast", "map", "hash", "buffer" ], "devDependencies": { "ava": "*", "coveralls": "^2.12.0", "nyc": "^11.0.3", "xo": "*" }, "_resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-1.1.0.tgz", "_integrity": "sha1-Q2CxfGETatOAeDl/8RQW4Ybc+7g=", "_from": "quick-lru@1.1.0", "readme": "# quick-lru [![Build Status](https://travis-ci.org/sindresorhus/quick-lru.svg?branch=master)](https://travis-ci.org/sindresorhus/quick-lru) [![Coverage Status](https://coveralls.io/repos/github/sindresorhus/quick-lru/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/quick-lru?branch=master)\n\n> Simple [\"Least Recently Used\" (LRU) cache](https://en.m.wikipedia.org/wiki/Cache_replacement_policies#Least_Recently_Used_.28LRU.29)\n\nUseful when you need to cache something and limit memory usage.\n\nInspired by the [`haslru` algorithm](https://github.com/dominictarr/hashlru#algorithm), but instead uses [`Map`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map) to support keys of any type, not just strings, and values can be `undefined`.\n\n\n## Install\n\n```\n$ npm install quick-lru\n```\n\n\n## Usage\n\n```js\nconst QuickLRU = require('quick-lru');\n\nconst lru = new QuickLRU({maxSize: 1000});\n\nlru.set('🦄', '🌈');\n\nlru.has('🦄');\n//=> true\n\nlru.get('🦄');\n//=> '🌈'\n```\n\n\n## API\n\n### new QuickLRU([options])\n\nReturns a new instance.\n\n### options\n\nType: `Object`\n\n#### maxSize\n\n*Required*<br>\nType: `Object`\n\nMaximum number of items before evicting the least recently used items.\n\n### Instance\n\nThe instance is [`iterable`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Iteration_protocols) so you can use it directly in a [`for…of`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of) loop.\n\nBoth `key` and `value` can be of any type.\n\n#### .set(key, value)\n\nSet an item. Returns the instance.\n\n#### .get(key)\n\nGet an item.\n\n#### .has(key)\n\nCheck if an item exists.\n\n#### .peek(key)\n\nGet an item without marking it as recently used.\n\n#### .delete(key)\n\nDelete an item.\n\n#### .clear()\n\nDelete all items.\n\n#### .keys()\n\nIterable for all the keys.\n\n#### .values()\n\nIterable for all the values.\n\n#### .size\n\nGet the item count.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/quick-lru/issues" }, "homepage": "https://github.com/sindresorhus/quick-lru#readme", "_id": "quick-lru@1.1.0", "_requested": { "type": "version", "registry": true, "raw": "quick-lru@1.1.0", "name": "quick-lru", "escapedName": "quick-lru", "rawSpec": "1.1.0", "saveSpec": "[Circular]", "fetchSpec": "1.1.0" }, "_spec": "1.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "quick-lru@1.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/quick-lru", "error": "[Circular]", "extraneous": false }, "camelcase": { "name": "camelcase", "version": "4.1.0", "description": "Convert a dash/dot/underscore/space separated string to camelCase: foo-bar → fooBar", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/camelcase.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "camelcase", "camel-case", "camel", "case", "dash", "hyphen", "dot", "underscore", "separator", "string", "text", "convert" ], "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz", "_integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=", "_from": "camelcase@4.1.0", "readme": "# camelcase [![Build Status](https://travis-ci.org/sindresorhus/camelcase.svg?branch=master)](https://travis-ci.org/sindresorhus/camelcase)\n\n> Convert a dash/dot/underscore/space separated string to camelCase: `foo-bar` → `fooBar`\n\n\n## Install\n\n```\n$ npm install --save camelcase\n```\n\n\n## Usage\n\n```js\nconst camelCase = require('camelcase');\n\ncamelCase('foo-bar');\n//=> 'fooBar'\n\ncamelCase('foo_bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar');\n//=> 'fooBar'\n\ncamelCase('--foo.bar');\n//=> 'fooBar'\n\ncamelCase('__foo__bar__');\n//=> 'fooBar'\n\ncamelCase('foo bar');\n//=> 'fooBar'\n\nconsole.log(process.argv[3]);\n//=> '--foo-bar'\ncamelCase(process.argv[3]);\n//=> 'fooBar'\n\ncamelCase('foo', 'bar');\n//=> 'fooBar'\n\ncamelCase('__foo__', '--bar');\n//=> 'fooBar'\n```\n\n\n## Related\n\n- [decamelize](https://github.com/sindresorhus/decamelize) - The inverse of this module\n- [uppercamelcase](https://github.com/SamVerschueren/uppercamelcase) - Like this module, but to PascalCase instead of camelCase\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/camelcase/issues" }, "homepage": "https://github.com/sindresorhus/camelcase#readme", "_id": "camelcase@4.1.0", "_requested": { "type": "version", "registry": true, "raw": "camelcase@4.1.0", "name": "camelcase", "escapedName": "camelcase", "rawSpec": "4.1.0", "saveSpec": "[Circular]", "fetchSpec": "4.1.0" }, "_spec": "4.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "camelcase@4.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/camelcase", "error": "[Circular]", "extraneous": false }, "map-obj": { "name": "map-obj", "version": "2.0.0", "description": "Map object keys and values into a new object", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/map-obj.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "map", "obj", "object", "key", "keys", "value", "values", "val", "iterate", "iterator", "rename", "modify", "deep", "recurse", "recursive" ], "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/map-obj/-/map-obj-2.0.0.tgz", "_integrity": "sha1-plzSkIepJZi4eRJXpSPgISIqwfk=", "_from": "map-obj@2.0.0", "readme": "# map-obj [![Build Status](https://travis-ci.org/sindresorhus/map-obj.svg?branch=master)](https://travis-ci.org/sindresorhus/map-obj)\n\n> Map object keys and values into a new object\n\n\n## Install\n\n```\n$ npm install --save map-obj\n```\n\n\n## Usage\n\n```js\nconst mapObj = require('map-obj');\n\nconst newObject = mapObj({foo: 'bar'}, (key, value) => [value, key]);\n//=> {bar: 'foo'}\n```\n\n\n## API\n\n### mapObj(source, mapper, [options])\n\n#### source\n\nType: `Object`\n\nSource object to copy properties from.\n\n#### mapper\n\nType: `Function`\n\nMapping function.\n\n- It has signature `mapper(sourceKey, sourceValue, source)`.\n- It must return a two item array: `[targetKey, targetValue]`.\n\n#### deep\n\nType: `boolean`<br>\nDefault: `false`\n\nRecurse nested objects and objects in arrays.\n\n#### target\n\nType: `Object`<br>\nDefault: `{}`\n\nTarget object to map properties on to.\n\n\n## Related\n\n- [filter-obj](https://github.com/sindresorhus/filter-obj) - Filter object keys and values into a new object\n- [object-assign](https://github.com/sindresorhus/object-assign) - Copy enumerable own properties from one or more source objects to a target object\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/map-obj/issues" }, "homepage": "https://github.com/sindresorhus/map-obj#readme", "_id": "map-obj@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "map-obj@2.0.0", "name": "map-obj", "escapedName": "map-obj", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "map-obj@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/map-obj", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "matcha": "^0.7.0", "xo": "*" }, "xo": { "overrides": [ { "files": "bench/bench.js", "rules": { "import/no-unresolved": "off" } } ] }, "_resolved": "https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-4.2.0.tgz", "_integrity": "sha1-oqpfsa9oh1glnDLBQUJteJI7m3c=", "_from": "camelcase-keys@4.2.0", "readme": "# camelcase-keys [![Build Status](https://travis-ci.org/sindresorhus/camelcase-keys.svg?branch=master)](https://travis-ci.org/sindresorhus/camelcase-keys)\n\n> Convert object keys to camelCase using [`camelcase`](https://github.com/sindresorhus/camelcase)\n\n\n## Install\n\n```\n$ npm install --save camelcase-keys\n```\n\n\n## Usage\n\n```js\nconst camelcaseKeys = require('camelcase-keys');\n\n// Convert an object\ncamelcaseKeys({'foo-bar': true});\n//=> {fooBar: true}\n\n// Convert an array of objects\ncamelcaseKeys([{'foo-bar': true}, {'bar-foo': false}]);\n//=> [{fooBar: true}, {barFoo: false}]\n\ncamelcaseKeys({'foo-bar': true, nested: {unicorn_rainbow: true}}, {deep: true});\n//=> {fooBar: true, nested: {unicornRainbow: true}}\n```\n\n```js\nconst camelcaseKeys = require('camelcase-keys');\n\nconst argv = require('minimist')(process.argv.slice(2));\n//=> {_: [], 'foo-bar': true}\n\ncamelcaseKeys(argv);\n//=> {_: [], fooBar: true}\n```\n\n\n## API\n\n### camelcaseKeys(input, [options])\n\n#### input\n\nType: `Object` `Object[]`\n\nObject or array of objects to camelCase.\n\n#### options\n\nType: `Object`\n\n##### exclude\n\nType: `string[]` `RegExp[]`<br>\nDefault: `[]`\n\nExclude keys from being camelCased.\n\n##### deep\n\nType: `boolean`<br>\nDefault: `false`\n\nRecurse nested objects and objects in arrays.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/camelcase-keys/issues" }, "homepage": "https://github.com/sindresorhus/camelcase-keys#readme", "_id": "camelcase-keys@4.2.0", "_requested": { "type": "version", "registry": true, "raw": "camelcase-keys@4.2.0", "name": "camelcase-keys", "escapedName": "camelcase-keys", "rawSpec": "4.2.0", "saveSpec": "[Circular]", "fetchSpec": "4.2.0" }, "_spec": "4.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "camelcase-keys@4.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "camelcase": "^4.1.0", "map-obj": "^2.0.0", "quick-lru": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/camelcase-keys", "error": "[Circular]", "extraneous": false }, "read-pkg-up": { "name": "read-pkg-up", "version": "3.0.0", "description": "Read the closest package.json file", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/read-pkg-up.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "json", "read", "parse", "file", "fs", "graceful", "load", "pkg", "package", "find", "up", "find-up", "findup", "look-up", "look", "search", "match", "resolve", "parent", "parents", "folder", "directory", "dir", "walk", "walking", "path" ], "dependencies": { "read-pkg": { "name": "read-pkg", "version": "3.0.0", "description": "Read a package.json file", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/read-pkg.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "json", "read", "parse", "file", "fs", "graceful", "load", "pkg", "package", "normalize" ], "dependencies": {}, "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz", "_integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=", "_from": "read-pkg@3.0.0", "readme": "# read-pkg [![Build Status](https://travis-ci.org/sindresorhus/read-pkg.svg?branch=master)](https://travis-ci.org/sindresorhus/read-pkg)\n\n> Read a package.json file\n\n\n## Why\n\n- [Gracefully handles filesystem issues](https://github.com/isaacs/node-graceful-fs)\n- [Strips UTF-8 BOM](https://github.com/sindresorhus/strip-bom)\n- [Throws more helpful JSON errors](https://github.com/sindresorhus/parse-json)\n- [Normalizes the data](https://github.com/npm/normalize-package-data#what-normalization-currently-entails)\n\n\n## Install\n\n```\n$ npm install read-pkg\n```\n\n\n## Usage\n\n```js\nconst readPkg = require('read-pkg');\n\nreadPkg().then(pkg => {\n\tconsole.log(pkg);\n\t//=> {name: 'read-pkg', ...}\n});\n\nreadPkg(__dirname).then(pkg => {\n\tconsole.log(pkg);\n\t//=> {name: 'read-pkg', ...}\n});\n\nreadPkg(path.join('unicorn', 'package.json')).then(pkg => {\n\tconsole.log(pkg);\n\t//=> {name: 'read-pkg', ...}\n});\n```\n\n\n## API\n\n### readPkg([path], [options])\n\nReturns a `Promise` for the parsed JSON.\n\n### readPkg.sync([path], [options])\n\nReturns the parsed JSON.\n\n#### path\n\nType: `string`<br>\nDefault: `process.cwd()`\n\nPath to a `package.json` file or its directory.\n\n#### options\n\n##### normalize\n\nType: `boolean`<br>\nDefault: `true`\n\n[Normalize](https://github.com/npm/normalize-package-data#what-normalization-currently-entails) the package data.\n\n\n## Related\n\n- [read-pkg-up](https://github.com/sindresorhus/read-pkg-up) - Read the closest package.json file\n- [write-pkg](https://github.com/sindresorhus/write-pkg) - Write a `package.json` file\n- [load-json-file](https://github.com/sindresorhus/load-json-file) - Read and parse a JSON file\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/read-pkg/issues" }, "homepage": "https://github.com/sindresorhus/read-pkg#readme", "_id": "read-pkg@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "read-pkg@3.0.0", "name": "read-pkg", "escapedName": "read-pkg", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "read-pkg@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "load-json-file": "^4.0.0", "normalize-package-data": "^2.3.2", "path-type": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/read-pkg", "error": "[Circular]", "extraneous": false, "_deduped": "read-pkg" }, "find-up": { "name": "find-up", "version": "2.1.0", "description": "Find a file by walking up parent directories", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/find-up.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "find", "up", "find-up", "findup", "look-up", "look", "file", "search", "match", "package", "resolve", "parent", "parents", "folder", "directory", "dir", "walk", "walking", "path" ], "dependencies": { "locate-path": { "name": "locate-path", "version": "2.0.0", "description": "Get the first path that exists on disk of multiple paths", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/locate-path.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "locate", "path", "paths", "file", "files", "exists", "find", "finder", "search", "searcher", "array", "iterable", "iterator" ], "dependencies": { "path-exists": { "name": "path-exists", "version": "3.0.0", "description": "Check if a path exists", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/path-exists.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "path", "exists", "exist", "file", "filepath", "fs", "filesystem", "file-system", "access", "stat" ], "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz", "_integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=", "_from": "path-exists@3.0.0", "readme": "# path-exists [![Build Status](https://travis-ci.org/sindresorhus/path-exists.svg?branch=master)](https://travis-ci.org/sindresorhus/path-exists)\n\n> Check if a path exists\n\nBecause [`fs.exists()`](https://nodejs.org/api/fs.html#fs_fs_exists_path_callback) is being [deprecated](https://github.com/iojs/io.js/issues/103), but there's still a genuine use-case of being able to check if a path exists for other purposes than doing IO with it.\n\nNever use this before handling a file though:\n\n> In particular, checking if a file exists before opening it is an anti-pattern that leaves you vulnerable to race conditions: another process may remove the file between the calls to `fs.exists()` and `fs.open()`. Just open the file and handle the error when it's not there.\n\n\n## Install\n\n```\n$ npm install --save path-exists\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst pathExists = require('path-exists');\n\npathExists('foo.js').then(exists => {\n\tconsole.log(exists);\n\t//=> true\n});\n```\n\n\n## API\n\n### pathExists(path)\n\nReturns a promise for a boolean of whether the path exists.\n\n### pathExists.sync(path)\n\nReturns a boolean of whether the path exists.\n\n\n## Related\n\n- [path-exists-cli](https://github.com/sindresorhus/path-exists-cli) - CLI for this module\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/path-exists/issues" }, "homepage": "https://github.com/sindresorhus/path-exists#readme", "_id": "path-exists@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "path-exists@3.0.0", "name": "path-exists", "escapedName": "path-exists", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "path-exists@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/path-exists", "error": "[Circular]", "extraneous": false, "_deduped": "path-exists" }, "p-locate": { "name": "p-locate", "version": "2.0.0", "description": "Get the first fulfilled promise that satisfies the provided testing function", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/p-locate.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "promise", "locate", "find", "finder", "search", "searcher", "test", "array", "collection", "iterable", "iterator", "race", "fulfilled", "fastest", "async", "await", "promises", "bluebird" ], "dependencies": { "p-limit": { "name": "p-limit", "version": "1.3.0", "description": "Run multiple promise-returning & async functions with limited concurrency", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/p-limit.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "promise", "limit", "limited", "concurrency", "throttle", "throat", "rate", "batch", "ratelimit", "task", "queue", "async", "await", "promises", "bluebird" ], "dependencies": { "p-try": { "name": "p-try", "version": "1.0.0", "description": "`Promise#try()` ponyfill - Starts a promise chain", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/p-try.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "promise", "try", "resolve", "function", "catch", "async", "await", "promises", "settled", "ponyfill", "polyfill", "shim", "bluebird" ], "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz", "_integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=", "_from": "p-try@1.0.0", "readme": "# p-try [![Build Status](https://travis-ci.org/sindresorhus/p-try.svg?branch=master)](https://travis-ci.org/sindresorhus/p-try)\n\n> [`Promise#try()`](https://github.com/ljharb/proposal-promise-try) [ponyfill](https://ponyfill.com) - Starts a promise chain\n\n[How is it useful?](http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/)\n\n\n## Install\n\n```\n$ npm install --save p-try\n```\n\n\n## Usage\n\n```js\nconst pTry = require('p-try');\n\npTry(() => {\n\treturn synchronousFunctionThatMightThrow();\n}).then(value => {\n\tconsole.log(value);\n}).catch(error => {\n\tconsole.error(error);\n});\n```\n\n\n## Related\n\n- [p-finally](https://github.com/sindresorhus/p-finally) - `Promise#finally()` ponyfill - Invoked when the promise is settled regardless of outcome\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/p-try/issues" }, "homepage": "https://github.com/sindresorhus/p-try#readme", "_id": "p-try@1.0.0", "_requested": { "type": "version", "registry": true, "raw": "p-try@1.0.0", "name": "p-try", "escapedName": "p-try", "rawSpec": "1.0.0", "saveSpec": "[Circular]", "fetchSpec": "1.0.0" }, "_spec": "1.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "p-try@1.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/p-try", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "delay": "^2.0.0", "in-range": "^1.0.0", "random-int": "^1.0.0", "time-span": "^2.0.0", "xo": "*" }, "_resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz", "_integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==", "_from": "p-limit@1.3.0", "readme": "# p-limit [![Build Status](https://travis-ci.org/sindresorhus/p-limit.svg?branch=master)](https://travis-ci.org/sindresorhus/p-limit)\n\n> Run multiple promise-returning & async functions with limited concurrency\n\n\n## Install\n\n```\n$ npm install p-limit\n```\n\n\n## Usage\n\n```js\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n\tlimit(() => fetchSomething('foo')),\n\tlimit(() => fetchSomething('bar')),\n\tlimit(() => doSomething())\n];\n\n(async () => {\n\t// Only one promise is run at once\n\tconst result = await Promise.all(input);\n\tconsole.log(result);\n})();\n```\n\n\n## API\n\n### pLimit(concurrency)\n\nReturns a `limit` function.\n\n#### concurrency\n\nType: `number`<br>\nMinimum: `1`\n\nConcurrency limit.\n\n### limit(fn)\n\nReturns the promise returned by calling `fn`.\n\n#### fn\n\nType: `Function`\n\nPromise-returning/async function.\n\n\n## Related\n\n- [p-queue](https://github.com/sindresorhus/p-queue) - Promise queue with concurrency control\n- [p-throttle](https://github.com/sindresorhus/p-throttle) - Throttle promise-returning & async functions\n- [p-debounce](https://github.com/sindresorhus/p-debounce) - Debounce promise-returning & async functions\n- [p-all](https://github.com/sindresorhus/p-all) - Run promise-returning & async functions concurrently with optional limited concurrency\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/p-limit/issues" }, "homepage": "https://github.com/sindresorhus/p-limit#readme", "_id": "p-limit@1.3.0", "_requested": { "type": "version", "registry": true, "raw": "p-limit@1.3.0", "name": "p-limit", "escapedName": "p-limit", "rawSpec": "1.3.0", "saveSpec": "[Circular]", "fetchSpec": "1.3.0" }, "_spec": "1.3.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "p-limit@1.3.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "p-try": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/p-limit", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "delay": "^1.3.1", "in-range": "^1.0.0", "time-span": "^1.0.0", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz", "_integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=", "_from": "p-locate@2.0.0", "readme": "# p-locate [![Build Status](https://travis-ci.org/sindresorhus/p-locate.svg?branch=master)](https://travis-ci.org/sindresorhus/p-locate)\n\n> Get the first fulfilled promise that satisfies the provided testing function\n\nThink of it like an async version of [`Array#find`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n\n\n## Install\n\n```\n$ npm install --save p-locate\n```\n\n\n## Usage\n\nHere we find the first file that exists on disk, in array order.\n\n```js\nconst pathExists = require('path-exists');\nconst pLocate = require('p-locate');\n\nconst files = [\n\t'unicorn.png',\n\t'rainbow.png', // only this one actually exists on disk\n\t'pony.png'\n];\n\npLocate(files, file => pathExists(file)).then(foundPath => {\n\tconsole.log(foundPath);\n\t//=> 'rainbow'\n});\n```\n\n*The above is just an example. Use [`locate-path`](https://github.com/sindresorhus/locate-path) if you need this.*\n\n\n## API\n\n### pLocate(input, tester, [options])\n\nReturns a `Promise` that is fulfilled when `tester` resolves to `true` or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or `undefined` if `tester` never resolved to `true`.\n\n#### input\n\nType: `Iterable<Promise|any>`\n\n#### tester(element)\n\nType: `Function`\n\nExpected to return a `Promise<boolean>` or boolean.\n\n#### options\n\nType: `Object`\n\n##### concurrency\n\nType: `number`<br>\nDefault: `Infinity`<br>\nMinimum: `1`\n\nNumber of concurrently pending promises returned by `tester`.\n\n##### preserveOrder\n\nType: `boolean`<br>\nDefault: `true`\n\nPreserve `input` order when searching.\n\nDisable this to improve performance if you don't care about the order.\n\n\n## Related\n\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [p-filter](https://github.com/sindresorhus/p-filter) - Filter promises concurrently\n- [p-any](https://github.com/sindresorhus/p-any) - Wait for any promise to be fulfilled\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/p-locate/issues" }, "homepage": "https://github.com/sindresorhus/p-locate#readme", "_id": "p-locate@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "p-locate@2.0.0", "name": "p-locate", "escapedName": "p-locate", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "p-locate@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "p-limit": "^1.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/p-locate", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz", "_integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=", "_from": "locate-path@2.0.0", "readme": "# locate-path [![Build Status](https://travis-ci.org/sindresorhus/locate-path.svg?branch=master)](https://travis-ci.org/sindresorhus/locate-path)\n\n> Get the first path that exists on disk of multiple paths\n\n\n## Install\n\n```\n$ npm install --save locate-path\n```\n\n\n## Usage\n\nHere we find the first file that exists on disk, in array order.\n\n```js\nconst locatePath = require('locate-path');\n\nconst files = [\n\t'unicorn.png',\n\t'rainbow.png', // only this one actually exists on disk\n\t'pony.png'\n];\n\nlocatePath(files).then(foundPath => {\n\tconsole.log(foundPath);\n\t//=> 'rainbow'\n});\n```\n\n\n## API\n\n### locatePath(input, [options])\n\nReturns a `Promise` for the first path that exists or `undefined` if none exists.\n\n#### input\n\nType: `Iterable<string>`\n\nPaths to check.\n\n#### options\n\nType: `Object`\n\n##### concurrency\n\nType: `number`<br>\nDefault: `Infinity`<br>\nMinimum: `1`\n\nNumber of concurrently pending promises.\n\n##### preserveOrder\n\nType: `boolean`<br>\nDefault: `true`\n\nPreserve `input` order when searching.\n\nDisable this to improve performance if you don't care about the order.\n\n##### cwd\n\nType: `string`<br>\nDefault: `process.cwd()`\n\nCurrent working directory.\n\n### locatePath.sync(input, [options])\n\nReturns the first path that exists or `undefined` if none exists.\n\n#### input\n\nType: `Iterable<string>`\n\nPaths to check.\n\n#### options\n\nType: `Object`\n\n##### cwd\n\nSame as above.\n\n\n## Related\n\n- [path-exists](https://github.com/sindresorhus/path-exists) - Check if a path exists\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/locate-path/issues" }, "homepage": "https://github.com/sindresorhus/locate-path#readme", "_id": "locate-path@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "locate-path@2.0.0", "name": "locate-path", "escapedName": "locate-path", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "locate-path@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "p-locate": "^2.0.0", "path-exists": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/locate-path", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "tempfile": "^1.1.1", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz", "_integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=", "_from": "find-up@2.1.0", "readme": "# find-up [![Build Status: Linux and macOS](https://travis-ci.org/sindresorhus/find-up.svg?branch=master)](https://travis-ci.org/sindresorhus/find-up) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/l0cyjmvh5lq72vq2/branch/master?svg=true)](https://ci.appveyor.com/project/sindresorhus/find-up/branch/master)\n\n> Find a file by walking up parent directories\n\n\n## Install\n\n```\n$ npm install --save find-up\n```\n\n\n## Usage\n\n```\n/\n└── Users\n\t\t└── sindresorhus\n\t\t\t\t├── unicorn.png\n\t\t\t\t└── foo\n\t\t\t\t\t\t└── bar\n\t\t\t\t\t\t\t\t├── baz\n\t\t\t\t\t\t\t\t└── example.js\n```\n\n```js\n// example.js\nconst findUp = require('find-up');\n\nfindUp('unicorn.png').then(filepath => {\n\tconsole.log(filepath);\n\t//=> '/Users/sindresorhus/unicorn.png'\n});\n\nfindUp(['rainbow.png', 'unicorn.png']).then(filepath => {\n\tconsole.log(filepath);\n\t//=> '/Users/sindresorhus/unicorn.png'\n});\n```\n\n\n## API\n\n### findUp(filename, [options])\n\nReturns a `Promise` for the filepath or `null`.\n\n### findUp([filenameA, filenameB], [options])\n\nReturns a `Promise` for the first filepath found (by respecting the order) or `null`.\n\n### findUp.sync(filename, [options])\n\nReturns a filepath or `null`.\n\n### findUp.sync([filenameA, filenameB], [options])\n\nReturns the first filepath found (by respecting the order) or `null`.\n\n#### filename\n\nType: `string`\n\nFilename of the file to find.\n\n#### options\n\n##### cwd\n\nType: `string`<br>\nDefault: `process.cwd()`\n\nDirectory to start from.\n\n\n## Related\n\n- [find-up-cli](https://github.com/sindresorhus/find-up-cli) - CLI for this module\n- [pkg-up](https://github.com/sindresorhus/pkg-up) - Find the closest package.json file\n- [pkg-dir](https://github.com/sindresorhus/pkg-dir) - Find the root directory of an npm package\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/find-up/issues" }, "homepage": "https://github.com/sindresorhus/find-up#readme", "_id": "find-up@2.1.0", "_requested": { "type": "version", "registry": true, "raw": "find-up@2.1.0", "name": "find-up", "escapedName": "find-up", "rawSpec": "2.1.0", "saveSpec": "[Circular]", "fetchSpec": "2.1.0" }, "_spec": "2.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "find-up@2.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "locate-path": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/find-up", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-3.0.0.tgz", "_integrity": "sha1-PtSWaF26D4/hGNBpHcUfSh/5bwc=", "_from": "read-pkg-up@3.0.0", "readme": "# read-pkg-up [![Build Status](https://travis-ci.org/sindresorhus/read-pkg-up.svg?branch=master)](https://travis-ci.org/sindresorhus/read-pkg-up)\n\n> Read the closest package.json file\n\n\n## Why\n\n- [Finds the closest package.json](https://github.com/sindresorhus/find-up)\n- [Gracefully handles filesystem issues](https://github.com/isaacs/node-graceful-fs)\n- [Strips UTF-8 BOM](https://github.com/sindresorhus/strip-bom)\n- [Throws more helpful JSON errors](https://github.com/sindresorhus/parse-json)\n- [Normalizes the data](https://github.com/npm/normalize-package-data#what-normalization-currently-entails)\n\n\n## Install\n\n```\n$ npm install read-pkg-up\n```\n\n\n## Usage\n\n```js\nconst readPkgUp = require('read-pkg-up');\n\nreadPkgUp().then(result => {\n\tconsole.log(result);\n\t/*\n\t{\n\t\tpkg: {\n\t\t\tname: 'awesome-package',\n\t\t\tversion: '1.0.0',\n\t\t\t…\n\t\t},\n\t\tpath: '/Users/sindresorhus/dev/awesome-package/package.json'\n\t}\n\t*/\n});\n```\n\n\n## API\n\n### readPkgUp([options])\n\nReturns a `Promise` for the result object.\n\n### readPkgUp.sync([options])\n\nReturns the result object.\n\n#### options\n\n##### cwd\n\nType: `string`<br>\nDefault: `process.cwd()`\n\nDirectory to start looking for a package.json file.\n\n##### normalize\n\nType: `boolean`<br>\nDefault: `true`\n\n[Normalize](https://github.com/npm/normalize-package-data#what-normalization-currently-entails) the package data.\n\n\n## Related\n\n- [read-pkg](https://github.com/sindresorhus/read-pkg) - Read a package.json file\n- [pkg-up](https://github.com/sindresorhus/pkg-up) - Find the closest package.json file\n- [find-up](https://github.com/sindresorhus/find-up) - Find a file by walking up parent directories\n- [pkg-conf](https://github.com/sindresorhus/pkg-conf) - Get namespaced config from the closest package.json\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/read-pkg-up/issues" }, "homepage": "https://github.com/sindresorhus/read-pkg-up#readme", "_id": "read-pkg-up@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "read-pkg-up@3.0.0", "name": "read-pkg-up", "escapedName": "read-pkg-up", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "read-pkg-up@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "find-up": "^2.0.0", "read-pkg": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/read-pkg-up", "error": "[Circular]", "extraneous": false }, "redent": { "name": "redent", "version": "2.0.0", "description": "Strip redundant indentation and indent the string", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/redent.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "string", "str", "strip", "trim", "indent", "indentation", "add", "reindent", "normalize", "remove", "whitespace", "space" ], "dependencies": { "indent-string": { "name": "indent-string", "version": "3.2.0", "description": "Indent each line in a string", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/indent-string.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "indent", "string", "str", "pad", "align", "line", "text", "each", "every" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/indent-string/-/indent-string-3.2.0.tgz", "_integrity": "sha1-Sl/W0nzDMvN+VBmlBNu4NxBckok=", "_from": "indent-string@3.2.0", "readme": "# indent-string [![Build Status](https://travis-ci.org/sindresorhus/indent-string.svg?branch=master)](https://travis-ci.org/sindresorhus/indent-string)\n\n> Indent each line in a string\n\n\n## Install\n\n```\n$ npm install indent-string\n```\n\n\n## Usage\n\n```js\nconst indentString = require('indent-string');\n\nindentString('Unicorns\\nRainbows', 4);\n//=> ' Unicorns'\n//=> ' Rainbows'\n\nindentString('Unicorns\\nRainbows', 4, {indent: '♥'});\n//=> '♥♥♥♥Unicorns'\n//=> '♥♥♥♥Rainbows'\n```\n\n\n## API\n\n### indentString(input, [count], [options])\n\n#### input\n\nType: `string`\n\nString you want to indent.\n\n#### count\n\nType: `number`<br>\nDefault: `1`\n\nHow many times you want `indent` repeated.\n\n#### options\n\nType: `Object`<br>\n\n##### indent\n\nType: `string`<br>\nDefault: `' '`\n\nString to use for the indent.\n\n##### includeEmptyLines\n\nType: `boolean`<br>\nDefault: `false`\n\nAlso indent empty lines.\n\n\n## Related\n\n- [indent-string-cli](https://github.com/sindresorhus/indent-string-cli) - CLI for this module\n- [strip-indent](https://github.com/sindresorhus/strip-indent) - Strip leading whitespace from every line in a string\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/indent-string/issues" }, "homepage": "https://github.com/sindresorhus/indent-string#readme", "_id": "indent-string@3.2.0", "_requested": { "type": "version", "registry": true, "raw": "indent-string@3.2.0", "name": "indent-string", "escapedName": "indent-string", "rawSpec": "3.2.0", "saveSpec": "[Circular]", "fetchSpec": "3.2.0" }, "_spec": "3.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "indent-string@3.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/indent-string", "error": "[Circular]", "extraneous": false }, "strip-indent": { "name": "strip-indent", "version": "2.0.0", "description": "Strip leading whitespace from each line in a string", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/strip-indent.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "strip", "indent", "indentation", "normalize", "remove", "delete", "whitespace", "space", "tab", "string", "str" ], "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-2.0.0.tgz", "_integrity": "sha1-XvjbKV0B5u1sv3qrlpmNeCJSe2g=", "_from": "strip-indent@2.0.0", "readme": "# strip-indent [![Build Status](https://travis-ci.org/sindresorhus/strip-indent.svg?branch=master)](https://travis-ci.org/sindresorhus/strip-indent)\n\n> Strip leading whitespace from each line in a string\n\nThe line with the least number of leading whitespace, ignoring empty lines, determines the number to remove.\n\nUseful for removing redundant indentation.\n\n\n## Install\n\n```\n$ npm install --save strip-indent\n```\n\n\n## Usage\n\n```js\nconst stripIndent = require('strip-indent');\n\nconst str = '\\tunicorn\\n\\t\\tcake';\n/*\n\tunicorn\n\t\tcake\n*/\n\nstripIndent('\\tunicorn\\n\\t\\tcake');\n/*\nunicorn\n\tcake\n*/\n```\n\n\n## Related\n\n- [strip-indent-cli](https://github.com/sindresorhus/strip-indent-cli) - CLI for this module\n- [indent-string](https://github.com/sindresorhus/indent-string) - Indent each line in a string\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/strip-indent/issues" }, "homepage": "https://github.com/sindresorhus/strip-indent#readme", "_id": "strip-indent@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "strip-indent@2.0.0", "name": "strip-indent", "escapedName": "strip-indent", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "strip-indent@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/strip-indent", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/redent/-/redent-2.0.0.tgz", "_integrity": "sha1-wbIAe0LVfrE4kHmzyDM2OdXhzKo=", "_from": "redent@2.0.0", "readme": "# redent [![Build Status](https://travis-ci.org/sindresorhus/redent.svg?branch=master)](https://travis-ci.org/sindresorhus/redent)\n\n> [Strip redundant indentation](https://github.com/sindresorhus/strip-indent) and [indent the string](https://github.com/sindresorhus/indent-string)\n\n\n## Install\n\n```\n$ npm install --save redent\n```\n\n\n## Usage\n\n```js\nconst redent = require('redent');\n\nredent('\\n foo\\n bar\\n', 1);\n//=> '\\n foo\\n bar\\n'\n```\n\n\n## API\n\n### redent(input, [count], [indent])\n\n#### input\n\nType: `string`\n\n#### count\n\nType: `number`<br>\nDefault: `0`\n\nHow many times you want `indent` repeated.\n\n#### indent\n\nType: `string`<br>\nDefault: `' '`\n\nString to use for the indent.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/redent/issues" }, "homepage": "https://github.com/sindresorhus/redent#readme", "_id": "redent@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "redent@2.0.0", "name": "redent", "escapedName": "redent", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "redent@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "indent-string": "^3.0.0", "strip-indent": "^2.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/redent", "error": "[Circular]", "extraneous": false }, "trim-newlines": { "name": "trim-newlines", "version": "2.0.0", "description": "Trim newlines from the start and/or end of a string", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/trim-newlines.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "trim", "newline", "newlines", "linebreak", "lf", "crlf", "left", "right", "start", "end", "string", "str", "remove", "delete", "strip" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/trim-newlines/-/trim-newlines-2.0.0.tgz", "_integrity": "sha1-tAPQuRvlDDMd/EuC7s6yLD3hbSA=", "_from": "trim-newlines@2.0.0", "readme": "# trim-newlines [![Build Status](https://travis-ci.org/sindresorhus/trim-newlines.svg?branch=master)](https://travis-ci.org/sindresorhus/trim-newlines)\n\n> Trim [newlines](https://en.wikipedia.org/wiki/Newline) from the start and/or end of a string\n\n\n## Install\n\n```\n$ npm install --save trim-newlines\n```\n\n\n## Usage\n\n```js\nconst trimNewlines = require('trim-newlines');\n\ntrimNewlines('\\nunicorn\\r\\n');\n//=> 'unicorn'\n```\n\n\n## API\n\n### trimNewlines(input)\n\nTrim from the start and end of a string.\n\n### trimNewlines.start(input)\n\nTrim from the start of a string.\n\n### trimNewlines.end(input)\n\nTrim from the end of a string.\n\n\n## Related\n\n- [trim-left](https://github.com/sindresorhus/trim-left) - Similar to `String#trim()` but removes only whitespace on the left\n- [trim-right](https://github.com/sindresorhus/trim-right) - Similar to `String#trim()` but removes only whitespace on the right.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/trim-newlines/issues" }, "homepage": "https://github.com/sindresorhus/trim-newlines#readme", "_id": "trim-newlines@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "trim-newlines@2.0.0", "name": "trim-newlines", "escapedName": "trim-newlines", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "trim-newlines@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/trim-newlines", "error": "[Circular]", "extraneous": false }, "yargs-parser": { "name": "yargs-parser", "version": "10.1.0", "description": "the mighty option parser used by yargs", "main": "index.js", "scripts": { "test": "nyc mocha test/*.js", "posttest": "standard", "coverage": "nyc report --reporter=text-lcov | coveralls", "release": "standard-version" }, "repository": { "url": "git+ssh://git@github.com/yargs/yargs-parser.git" }, "keywords": [ "argument", "parser", "yargs", "command", "cli", "parsing", "option", "args", "argument" ], "author": { "name": "Ben Coe", "email": "ben@npmjs.com" }, "license": "ISC", "devDependencies": { "chai": "^3.5.0", "coveralls": "^2.11.12", "mocha": "^3.0.1", "nyc": "^11.4.1", "standard": "^10.0.2", "standard-version": "^4.3.0" }, "dependencies": { "camelcase": { "name": "camelcase", "version": "4.1.0", "description": "Convert a dash/dot/underscore/space separated string to camelCase: foo-bar → fooBar", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "xo": "[Circular]", "_resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz", "_integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=", "_from": "camelcase@4.1.0", "readme": "# camelcase [![Build Status](https://travis-ci.org/sindresorhus/camelcase.svg?branch=master)](https://travis-ci.org/sindresorhus/camelcase)\n\n> Convert a dash/dot/underscore/space separated string to camelCase: `foo-bar` → `fooBar`\n\n\n## Install\n\n```\n$ npm install --save camelcase\n```\n\n\n## Usage\n\n```js\nconst camelCase = require('camelcase');\n\ncamelCase('foo-bar');\n//=> 'fooBar'\n\ncamelCase('foo_bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar');\n//=> 'fooBar'\n\ncamelCase('--foo.bar');\n//=> 'fooBar'\n\ncamelCase('__foo__bar__');\n//=> 'fooBar'\n\ncamelCase('foo bar');\n//=> 'fooBar'\n\nconsole.log(process.argv[3]);\n//=> '--foo-bar'\ncamelCase(process.argv[3]);\n//=> 'fooBar'\n\ncamelCase('foo', 'bar');\n//=> 'fooBar'\n\ncamelCase('__foo__', '--bar');\n//=> 'fooBar'\n```\n\n\n## Related\n\n- [decamelize](https://github.com/sindresorhus/decamelize) - The inverse of this module\n- [uppercamelcase](https://github.com/SamVerschueren/uppercamelcase) - Like this module, but to PascalCase instead of camelCase\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/camelcase#readme", "_id": "camelcase@4.1.0", "_requested": { "type": "version", "registry": true, "raw": "camelcase@4.1.0", "name": "camelcase", "escapedName": "camelcase", "rawSpec": "4.1.0", "saveSpec": "[Circular]", "fetchSpec": "4.1.0" }, "_spec": "4.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/camelcase", "error": "[Circular]", "extraneous": false, "_deduped": "stylelint/camelcase" } }, "files": [ "lib", "index.js" ], "_resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-10.1.0.tgz", "_integrity": "sha512-VCIyR1wJoEBZUqk5PA+oOBF6ypbwh5aNB3I50guxAL/quggdfs4TtNHQrSazFA3fYZ+tEqfs0zIGlv0c/rgjbQ==", "_from": "yargs-parser@10.1.0", "readme": "# yargs-parser\n\n[![Build Status](https://travis-ci.org/yargs/yargs-parser.png)](https://travis-ci.org/yargs/yargs-parser)\n[![Coverage Status](https://coveralls.io/repos/yargs/yargs-parser/badge.svg?branch=)](https://coveralls.io/r/yargs/yargs-parser?branch=master)\n[![NPM version](https://img.shields.io/npm/v/yargs-parser.svg)](https://www.npmjs.com/package/yargs-parser)\n[![Windows Tests](https://img.shields.io/appveyor/ci/bcoe/yargs-parser/master.svg?label=Windows%20Tests)](https://ci.appveyor.com/project/bcoe/yargs-parser)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\n\nThe mighty option parser used by [yargs](https://github.com/yargs/yargs).\n\nvisit the [yargs website](http://yargs.js.org/) for more examples, and thorough usage instructions.\n\n<img width=\"250\" src=\"https://raw.githubusercontent.com/yargs/yargs-parser/master/yargs-logo.png\">\n\n## Example\n\n```sh\nnpm i yargs-parser --save\n```\n\n```js\nvar argv = require('yargs-parser')(process.argv.slice(2))\nconsole.log(argv)\n```\n\n```sh\nnode example.js --foo=33 --bar hello\n{ _: [], foo: 33, bar: 'hello' }\n```\n\n_or parse a string!_\n\n```js\nvar argv = require('./')('--foo=99 --bar=33')\nconsole.log(argv)\n```\n\n```sh\n{ _: [], foo: 99, bar: 33 }\n```\n\nConvert an array of mixed types before passing to `yargs-parser`:\n\n```js\nvar parse = require('yargs-parser')\nparse(['-f', 11, '--zoom', 55].join(' ')) // <-- array to string\nparse(['-f', 11, '--zoom', 55].map(String)) // <-- array of strings\n```\n\n## API\n\n### require('yargs-parser')(args, opts={})\n\nParses command line arguments returning a simple mapping of keys and values.\n\n**expects:**\n\n* `args`: a string or array of strings representing the options to parse.\n* `opts`: provide a set of hints indicating how `args` should be parsed:\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.alias`: an object representing the set of aliases for a key: `{alias: {foo: ['f']}}`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.array`: indicate that keys should be parsed as an array: `{array: ['foo', 'bar']}`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.boolean`: arguments should be parsed as booleans: `{boolean: ['x', 'y']}`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.config`: indicate a key that represents a path to a configuration file (this file will be loaded and parsed).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.coerce`: provide a custom synchronous function that returns a coerced value from the argument provided\n (or throws an error), e.g. `{coerce: {foo: function (arg) {return modifiedArg}}}`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.count`: indicate a key that should be used as a counter, e.g., `-vvv` = `{v: 3}`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.default`: provide default values for keys: `{default: {x: 33, y: 'hello world!'}}`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.envPrefix`: environment variables (`process.env`) with the prefix provided should be parsed.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.narg`: specify that a key requires `n` arguments: `{narg: {x: 2}}`.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.normalize`: `path.normalize()` will be applied to values set to this key.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.string`: keys should be treated as strings (even if they resemble a number `-x 33`).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.configuration`: provide configuration options to the yargs-parser (see: [configuration](#configuration)).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts.number`: keys should be treated as numbers.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `opts['--']`: arguments after the end-of-options flag `--` will be set to the `argv.['--']` array instead of being set to the `argv._` array.\n\n**returns:**\n\n* `obj`: an object representing the parsed value of `args`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `key/value`: key value pairs for each argument and their aliases.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `_`: an array representing the positional arguments.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [optional] `--`: an array with arguments after the end-of-options flag `--`.\n\n### require('yargs-parser').detailed(args, opts={})\n\nParses a command line string, returning detailed information required by the\nyargs engine.\n\n**expects:**\n\n* `args`: a string or array of strings representing options to parse.\n* `opts`: provide a set of hints indicating how `args`, inputs are identical to `require('yargs-parser')(args, opts={})`.\n\n**returns:**\n\n* `argv`: an object representing the parsed value of `args`\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `key/value`: key value pairs for each argument and their aliases.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps `_`: an array representing the positional arguments.\n* `error`: populated with an error object if an exception occurred during parsing.\n* `aliases`: the inferred list of aliases built by combining lists in `opts.alias`.\n* `newAliases`: any new aliases added via camel-case expansion.\n* `configuration`: the configuration loaded from the `yargs` stanza in package.json.\n\n<a name=\"configuration\"></a>\n\n### Configuration\n\nThe yargs-parser applies several automated transformations on the keys provided\nin `args`. These features can be turned on and off using the `configuration` field\nof `opts`.\n\n```js\nvar parsed = parser(['--no-dice'], {\n configuration: {\n 'boolean-negation': false\n }\n})\n```\n\n### short option groups\n\n* default: `true`.\n* key: `short-option-groups`.\n\nShould a group of short-options be treated as boolean flags?\n\n```sh\nnode example.js -abc\n{ _: [], a: true, b: true, c: true }\n```\n\n_if disabled:_\n\n```sh\nnode example.js -abc\n{ _: [], abc: true }\n```\n\n### camel-case expansion\n\n* default: `true`.\n* key: `camel-case-expansion`.\n\nShould hyphenated arguments be expanded into camel-case aliases?\n\n```sh\nnode example.js --foo-bar\n{ _: [], 'foo-bar': true, fooBar: true }\n```\n\n_if disabled:_\n\n```sh\nnode example.js --foo-bar\n{ _: [], 'foo-bar': true }\n```\n\n### dot-notation\n\n* default: `true`\n* key: `dot-notation`\n\nShould keys that contain `.` be treated as objects?\n\n```sh\nnode example.js --foo.bar\n{ _: [], foo: { bar: true } }\n```\n\n_if disabled:_\n\n```sh\nnode example.js --foo.bar\n{ _: [], \"foo.bar\": true }\n```\n\n### parse numbers\n\n* default: `true`\n* key: `parse-numbers`\n\nShould keys that look like numbers be treated as such?\n\n```sh\nnode example.js --foo=99.3\n{ _: [], foo: 99.3 }\n```\n\n_if disabled:_\n\n```sh\nnode example.js --foo=99.3\n{ _: [], foo: \"99.3\" }\n```\n\n### boolean negation\n\n* default: `true`\n* key: `boolean-negation`\n\nShould variables prefixed with `--no` be treated as negations?\n\n```sh\nnode example.js --no-foo\n{ _: [], foo: false }\n```\n\n_if disabled:_\n\n```sh\nnode example.js --no-foo\n{ _: [], \"no-foo\": true }\n```\n\n### combine arrays\n\n* default: `false`\n* key: `combine-arrays`\n\nShould arrays be combined when provided by both command line arguments and\na configuration file.\n\n### duplicate arguments array\n\n* default: `true`\n* key: `duplicate-arguments-array`\n\nShould arguments be coerced into an array when duplicated:\n\n```sh\nnode example.js -x 1 -x 2\n{ _: [], x: [1, 2] }\n```\n\n_if disabled:_\n\n```sh\nnode example.js -x 1 -x 2\n{ _: [], x: 2 }\n```\n\n### flatten duplicate arrays\n\n* default: `true`\n* key: `flatten-duplicate-arrays`\n\nShould array arguments be coerced into a single array when duplicated:\n\n```sh\nnode example.js -x 1 2 -x 3 4\n{ _: [], x: [1, 2, 3, 4] }\n```\n\n_if disabled:_\n\n```sh\nnode example.js -x 1 2 -x 3 4\n{ _: [], x: [[1, 2], [3, 4]] }\n```\n\n### negation prefix\n\n* default: `no-`\n* key: `negation-prefix`\n\nThe prefix to use for negated boolean variables.\n\n```sh\nnode example.js --no-foo\n{ _: [], foo: false }\n```\n\n_if set to `quux`:_\n\n```sh\nnode example.js --quuxfoo\n{ _: [], foo: false }\n```\n\n### populate --\n\n* default: `false`.\n* key: `populate--`\n\nShould unparsed flags be stored in `--` or `_`.\n\n_If disabled:_\n\n```sh\nnode example.js a -b -- x y\n{ _: [ 'a', 'x', 'y' ], b: true }\n```\n\n_If enabled:_\n\n```sh\nnode example.js a -b -- x y\n{ _: [ 'a' ], '--': [ 'x', 'y' ], b: true }\n```\n\n### set placeholder key\n\n* default: `false`.\n* key: `set-placeholder-key`.\n\nShould a placeholder be added for keys not set via the corresponding CLI argument?\n\n_If disabled:_\n\n```sh\nnode example.js -a 1 -c 2\n{ _: [], a: 1, c: 2 }\n```\n\n_If enabled:_\n\n```sh\nnode example.js -a 1 -c 2\n{ _: [], a: 1, b: undefined, c: 2 }\n```\n\n## Special Thanks\n\nThe yargs project evolves from optimist and minimist. It owes its\nexistence to a lot of James Halliday's hard work. Thanks [substack](https://github.com/substack) **beep** **boop** \\o/\n\n## License\n\nISC\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/yargs/yargs-parser/issues" }, "homepage": "https://github.com/yargs/yargs-parser#readme", "_id": "yargs-parser@10.1.0", "_requested": { "type": "version", "registry": true, "raw": "yargs-parser@10.1.0", "name": "yargs-parser", "escapedName": "yargs-parser", "rawSpec": "10.1.0", "saveSpec": "[Circular]", "fetchSpec": "10.1.0" }, "_spec": "10.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "yargs-parser@10.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "camelcase": "^4.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/yargs-parser", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "execa": "^0.10.0", "indent-string": "^3.0.0", "xo": "*" }, "xo": { "rules": { "unicorn/no-process-exit": "off" } }, "_resolved": "https://registry.npmjs.org/meow/-/meow-5.0.0.tgz", "_integrity": "sha512-CbTqYU17ABaLefO8vCU153ZZlprKYWDljcndKKDCFcYQITzWCXZAVk4QMFZPgvzrnUQ3uItnIE/LoUOwrT15Ig==", "_from": "meow@5.0.0", "readme": "# meow [![Build Status](https://travis-ci.org/sindresorhus/meow.svg?branch=master)](https://travis-ci.org/sindresorhus/meow)\n\n> CLI app helper\n\n![](meow.gif)\n\n\n## Features\n\n- Parses arguments\n- Converts flags to [camelCase](https://github.com/sindresorhus/camelcase)\n- Outputs version when `--version`\n- Outputs description and supplied help text when `--help`\n- Makes unhandled rejected promises [fail loudly](https://github.com/sindresorhus/loud-rejection) instead of the default silent fail\n- Sets the process title to the binary name defined in package.json\n\n\n## Install\n\n```\n$ npm install meow\n```\n\n\n## Usage\n\n```\n$ ./foo-app.js unicorns --rainbow\n```\n\n```js\n#!/usr/bin/env node\n'use strict';\nconst meow = require('meow');\nconst foo = require('.');\n\nconst cli = meow(`\n\tUsage\n\t $ foo <input>\n\n\tOptions\n\t --rainbow, -r Include a rainbow\n\n\tExamples\n\t $ foo unicorns --rainbow\n\t 🌈 unicorns 🌈\n`, {\n\tflags: {\n\t\trainbow: {\n\t\t\ttype: 'boolean',\n\t\t\talias: 'r'\n\t\t}\n\t}\n});\n/*\n{\n\tinput: ['unicorns'],\n\tflags: {rainbow: true},\n\t...\n}\n*/\n\nfoo(cli.input[0], cli.flags);\n```\n\n\n## API\n\n### meow(options, [minimistOptions])\n\nReturns an `Object` with:\n\n- `input` *(Array)* - Non-flag arguments\n- `flags` *(Object)* - Flags converted to camelCase\n- `pkg` *(Object)* - The `package.json` object\n- `help` *(string)* - The help text used with `--help`\n- `showHelp([code=2])` *(Function)* - Show the help text and exit with `code`\n- `showVersion()` *(Function)* - Show the version text and exit\n\n#### options\n\nType: `Object` `Array` `string`\n\nCan either be a string/array that is the `help` or an options object.\n\n##### flags\n\nType: `Object`\n\nDefine argument flags.\n\nThe key is the flag name and the value is an object with any of:\n\n- `type`: Type of value. (Possible values: `string` `boolean`)\n- `alias`: Usually used to define a short flag alias.\n- `default`: Default value when the flag is not specified.\n\nExample:\n\n```js\nflags: {\n\tunicorn: {\n\t\ttype: 'string',\n\t\talias: 'u',\n\t\tdefault: 'rainbow'\n\t}\n}\n```\n\n\n##### description\n\nType: `string` `boolean`<br>\nDefault: The package.json `\"description\"` property\n\nDescription to show above the help text.\n\nSet it to `false` to disable it altogether.\n\n##### help\n\nType: `string` `boolean`\n\nThe help text you want shown.\n\nThe input is reindented and starting/ending newlines are trimmed which means you can use a [template literal](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/template_strings) without having to care about using the correct amount of indent.\n\nThe description will be shown above your help text automatically.\n\n##### version\n\nType: `string` `boolean`<br>\nDefault: The package.json `\"version\"` property\n\nSet a custom version output.\n\n##### autoHelp\n\nType: `boolean`<br>\nDefault: `true`\n\nAutomatically show the help text when the `--help` flag is present. Useful to set this value to `false` when a CLI manages child CLIs with their own help text.\n\n##### autoVersion\n\nType: `boolean`<br>\nDefault: `true`\n\nAutomatically show the version text when the `--version` flag is present. Useful to set this value to `false` when a CLI manages child CLIs with their own version text.\n\n##### pkg\n\nType: `Object`<br>\nDefault: Closest package.json upwards\n\npackage.json as an `Object`.\n\n*You most likely don't need this option.*\n\n##### argv\n\nType: `Array`<br>\nDefault: `process.argv.slice(2)`\n\nCustom arguments object.\n\n##### inferType\n\nType: `boolean`<br>\nDefault: `false`\n\nInfer the argument type.\n\nBy default, the argument `5` in `$ foo 5` becomes a string. Enabling this would infer it as a number.\n\n##### booleanDefault\n\nType: `boolean` `null` `undefined`<br>\nDefault: `false`\n\nValue of `boolean` flags not defined in `argv`.\nIf set to `undefined` the flags not defined in `argv` will be excluded from the result.\nThe `default` value set in `boolean` flags take precedence over `booleanDefault`.\n\nExample:\n\n```js\nconst cli = meow(`\n\tUsage\n\t $ foo\n\n\tOptions\n\t --rainbow, -r Include a rainbow\n\t --unicorn, -r Include a unicorn\n\n\tExamples\n\t $ foo\n\t 🌈 unicorns 🌈\n`, {\n\tbooleanDefault: undefined,\n\tflags: {\n\t\trainbow: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t\talias: 'r'\n\t\t},\n\t\tunicorn: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t\talias: 'u'\n\t\t},\n\t\tcake: {\n\t\t\ttype: 'boolean',\n\t\t\talias: 'c'\n\t\t}\n\t}\n});\n/*\n{\n\tflags: {rainbow: true, unicorn: false},\n\t…\n}\n*/\n```\n\n## Promises\n\nMeow will make unhandled rejected promises [fail loudly](https://github.com/sindresorhus/loud-rejection) instead of the default silent fail. Meaning you don't have to manually `.catch()` promises used in your CLI.\n\n\n## Tips\n\nSee [`chalk`](https://github.com/chalk/chalk) if you want to colorize the terminal output.\n\nSee [`get-stdin`](https://github.com/sindresorhus/get-stdin) if you want to accept input from stdin.\n\nSee [`conf`](https://github.com/sindresorhus/conf) if you need to persist some data.\n\nSee [`update-notifier`](https://github.com/yeoman/update-notifier) if you want update notifications.\n\n[More useful CLI utilities…](https://github.com/sindresorhus/awesome-nodejs#command-line-utilities)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/meow/issues" }, "homepage": "https://github.com/sindresorhus/meow#readme", "_id": "meow@5.0.0", "_requested": { "type": "version", "registry": true, "raw": "meow@5.0.0", "name": "meow", "escapedName": "meow", "rawSpec": "5.0.0", "saveSpec": "[Circular]", "fetchSpec": "5.0.0" }, "_spec": "5.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "meow@5.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "camelcase-keys": "^4.0.0", "decamelize-keys": "^1.0.0", "loud-rejection": "^1.0.0", "minimist-options": "^3.0.1", "normalize-package-data": "^2.3.4", "read-pkg-up": "^3.0.0", "redent": "^2.0.0", "trim-newlines": "^2.0.0", "yargs-parser": "^10.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/meow", "error": "[Circular]", "extraneous": false }, "micromatch": { "name": "micromatch", "description": "Glob matching for javascript/node.js. A replacement and faster alternative to minimatch and multimatch.", "version": "4.0.1", "homepage": "https://github.com/micromatch/micromatch", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "url": "https://github.com/DianeLooney" }, { "name": "Amila Welihinda", "url": "amilajack.com" }, { "name": "Bogdan Chadkin", "url": "https://github.com/TrySound" }, { "name": "Brian Woodward", "url": "https://twitter.com/doowb" }, { "name": "Devon Govett", "url": "http://badassjs.com" }, { "name": "Elan Shanker", "url": "https://github.com/es128" }, { "name": "Fabrício Matté", "url": "https://ultcombo.js.org" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Martin Kolárik", "url": "https://kolarik.sk" }, { "name": "Olsten Larck", "url": "https://i.am.charlike.online" }, { "name": "Paul Miller", "url": "paulmillr.com" }, { "name": "Tom Byrer", "url": "https://github.com/tomByrer" }, { "name": "Tyler Akins", "url": "http://rumkin.com" } ], "repository": { "type": "git", "url": "git+https://github.com/micromatch/micromatch.git" }, "bugs": { "url": "https://github.com/micromatch/micromatch/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=8" }, "scripts": { "test": "mocha" }, "dependencies": { "picomatch": { "name": "picomatch", "description": "Blazing fast and accurate glob matcher written in JavaScript, with no dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions.", "version": "2.0.4", "homepage": "https://github.com/micromatch/picomatch", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "repository": { "type": "git", "url": "git+https://github.com/micromatch/picomatch.git" }, "bugs": { "url": "https://github.com/micromatch/picomatch/issues" }, "license": "MIT", "files": [ "index.js", "lib" ], "main": "index.js", "engines": { "node": ">=8" }, "scripts": { "test": "mocha", "cover": "nyc --reporter=text --reporter=html mocha" }, "devDependencies": { "fill-range": "^7.0.1", "gulp-format-md": "^2.0.0", "mocha": "^6.0.2", "nyc": "^13.3.0", "time-require": "github:jonschlinkert/time-require" }, "keywords": [ "glob", "match", "picomatch" ], "verb": { "toc": false, "layout": false, "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "lint": { "reflinks": true }, "related": { "list": [ "micromatch", "braces" ] }, "reflinks": [ "braces", "expand-brackets", "extglob", "fill-range", "micromatch", "minimatch", "nanomatch", "picomatch" ] }, "_resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.0.4.tgz", "_integrity": "sha512-lN1llt2d+xBz96Vp+yj0qMUVMyDsqvNSecdRDIEuh72kQi1N6ttkxPJ7zDVwKR4ehD2R3WhMKqdp/5LeRfc+PA==", "_from": "picomatch@2.0.4", "readme": "<h1 align=\"center\">Picomatch</h1>\n\n<p align=\"center\">\n<a href=\"https://npmjs.org/package/picomatch\">\n<img src=\"https://img.shields.io/npm/v/picomatch.svg\" alt=\"version\" />\n</a>\n<a href=\"https://travis-ci.org/micromatch/picomatch\">\n<img src=\"https://img.shields.io/travis/micromatch/picomatch.svg\" alt=\"travis\" />\n</a>\n<a href=\"https://npmjs.org/package/picomatch\">\n<img src=\"https://img.shields.io/npm/dm/picomatch.svg\" alt=\"downloads\" />\n</a>\n</p>\n\n<br>\n<br>\n\n<p align=\"center\">\n<strong>Blazing fast and accurate glob matcher written in JavaScript.</strong></br>\n<em>No dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions.</em>\n</p>\n\n<br>\n<br>\n\n## Why picomatch?\n\n* **Lightweight** - No dependencies\n* **Minimal** - Tiny API surface. Main export is a function that takes a glob pattern and returns a matcher function.\n* **Fast** - Loads in about 2ms (that's several times faster than a [single frame of a HD movie](http://www.endmemo.com/sconvert/framespersecondframespermillisecond.php) at 60fps)\n* **Performant** - Use the returned matcher function to speed up repeat matching (like when watching files)\n* **Accurate matching** - Using wildcards (`*` and `?`), globstars (`**`) for nested directories, [advanced globbing](#advanced-globbing) with extglobs, braces, and POSIX brackets, and support for escaping special characters with `\\` or quotes.\n* **Well tested** - Thousands of unit tests\n\nSee the [library comparison](#library-comparisons) to other libraries.\n\n<br>\n<br>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save picomatch\n```\n\n<br>\n\n## Usage\n\nThe main export is a function that takes a glob pattern and an options object and returns a function for matching strings.\n\n```js\nconst pm = require('picomatch');\nconst isMatch = pm('*.js');\n\nconsole.log(isMatch('abcd')); //=> false\nconsole.log(isMatch('a.js')); //=> true\nconsole.log(isMatch('a.md')); //=> false\nconsole.log(isMatch('a/b.js')); //=> false\n```\n\n<br>\n\n## API\n\n### [picomatch](lib/picomatch.js#L30)\n\nCreates a matcher function from one or more glob patterns. The returned function takes a string to match as its first argument, and returns true if the string is a match. The returned matcher function also takes a boolean as the second argument that, when true, returns an object with additional information.\n\n**Params**\n\n* `globs` **{String|Array}**: One or more glob patterns.\n* `options` **{Object=}**\n* `returns` **{Function=}**: Returns a matcher function.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch(glob[, options]);\n\nconst isMatch = picomatch('*.!(*a)');\nconsole.log(isMatch('a.a')); //=> false\nconsole.log(isMatch('a.b')); //=> true\n```\n\n### [.test](lib/picomatch.js#L109)\n\nTest `input` with the given `regex`. This is used by the main `picomatch()` function to test the input string.\n\n**Params**\n\n* `input` **{String}**: String to test.\n* `regex` **{RegExp}**\n* `returns` **{Object}**: Returns an object with matching info.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.test(input, regex[, options]);\n\nconsole.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n// { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n```\n\n### [.matchBase](lib/picomatch.js#L153)\n\nMatch the basename of a filepath.\n\n**Params**\n\n* `input` **{String}**: String to test.\n* `glob` **{RegExp|String}**: Glob pattern or regex created by [.makeRe](#makeRe).\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.matchBase(input, glob[, options]);\nconsole.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n```\n\n### [.isMatch](lib/picomatch.js#L175)\n\nReturns true if **any** of the given glob `patterns` match the specified `string`.\n\n**Params**\n\n* **{String|Array}**: str The string to test.\n* **{String|Array}**: patterns One or more glob patterns to use for matching.\n* **{Object}**: See available [options](#options).\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.isMatch(string, patterns[, options]);\n\nconsole.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\nconsole.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n```\n\n### [.parse](lib/picomatch.js#L191)\n\nParse a glob pattern to create the source string for a regular expression.\n\n**Params**\n\n* `glob` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with useful properties and output to be used as a regex source string.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\nconst result = picomatch.parse(glob[, options]);\n```\n\n### [.scan](lib/picomatch.js#L215)\n\nScan a glob pattern to separate the pattern into segments.\n\n**Params**\n\n* `input` **{String}**: Glob pattern to scan.\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.scan(input[, options]);\n\nconst result = picomatch.scan('!./foo/*.js');\nconsole.log(result);\n// { prefix: '!./',\n// input: '!./foo/*.js',\n// base: 'foo',\n// glob: '*.js',\n// negated: true,\n// isGlob: true }\n```\n\n### [.makeRe](lib/picomatch.js#L233)\n\nCreate a regular expression from a glob pattern.\n\n**Params**\n\n* `input` **{String}**: A glob pattern to convert to regex.\n* `options` **{Object}**\n* `returns` **{RegExp}**: Returns a regex created from the given pattern.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.makeRe(input[, options]);\n\nconsole.log(picomatch.makeRe('*.js'));\n//=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n```\n\n### [.toRegex](lib/picomatch.js#L294)\n\nCreate a regular expression from the given regex source string.\n\n**Params**\n\n* `source` **{String}**: Regular expression source string.\n* `options` **{Object}**\n* `returns` **{RegExp}**\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.toRegex(source[, options]);\n\nconst { output } = picomatch.parse('*.js');\nconsole.log(picomatch.toRegex(output));\n//=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n```\n\n<br>\n\n## Options\n\n| **Option** | **Type** | **Default value** | **Description** |\n| --- | --- | --- | --- |\n| `basename` | `boolean` | `false` | If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, `a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`. |\n| `bash` | `boolean` | `false` | Follow bash matching rules more strictly - disallows backslashes as escape characters, and treats single stars as globstars (`**`). |\n| `capture` | `boolean` | `undefined` | Return regex matches in supporting methods. |\n| `contains` | `boolean` | `undefined` | Allows glob to match any part of the given string(s). |\n| `cwd` | `string` | `process.cwd()` | Current working directory. Used by `picomatch.split()` |\n| `debug` | `boolean` | `undefined` | Debug regular expressions when an error is thrown. |\n| `dot` | `boolean` | `false` | Enable dotfile matching. By default, dotfiles are ignored unless a `.` is explicitly defined in the pattern, or `options.dot` is true |\n| `expandRange` | `function` | `undefined` | Custom function for expanding ranges in brace patterns, such as `{a..z}`. The function receives the range values as two arguments, and it must return a string to be used in the generated regex. It's recommended that returned strings be wrapped in parentheses. |\n| `failglob` | `boolean` | `false` | Throws an error if no matches are found. Based on the bash option of the same name. |\n| `fastpaths` | `boolean` | `true` | To speed up processing, full parsing is skipped for a handful common glob patterns. Disable this behavior by setting this option to `false`. |\n| `flags` | `boolean` | `undefined` | Regex flags to use in the generated regex. If defined, the `nocase` option will be overridden. |\n| [format](#optionsformat) | `function` | `undefined` | Custom function for formatting the returned string. This is useful for removing leading slashes, converting Windows paths to Posix paths, etc. |\n| `ignore` | `array\\|string` | `undefined` | One or more glob patterns for excluding strings that should not be matched from the result. |\n| `keepQuotes` | `boolean` | `false` | Retain quotes in the generated regex, since quotes may also be used as an alternative to backslashes. |\n| `literalBrackets` | `boolean` | `undefined` | When `true`, brackets in the glob pattern will be escaped so that only literal brackets will be matched. |\n| `lookbehinds` | `boolean` | `true` | Support regex positive and negative lookbehinds. Note that you must be using Node 8.1.10 or higher to enable regex lookbehinds. |\n| `matchBase` | `boolean` | `false` | Alias for `basename` |\n| `maxLength` | `boolean` | `65536` | Limit the max length of the input string. An error is thrown if the input string is longer than this value. |\n| `nobrace` | `boolean` | `false` | Disable brace matching, so that `{a,b}` and `{1..3}` would be treated as literal characters. |\n| `nobracket` | `boolean` | `undefined` | Disable matching with regex brackets. |\n| `nocase` | `boolean` | `false` | Make matching case-insensitive. Equivalent to the regex `i` flag. Note that this option is overridden by the `flags` option. |\n| `nodupes` | `boolean` | `true` | Deprecated, use `nounique` instead. This option will be removed in a future major release. By default duplicates are removed. Disable uniquification by setting this option to false. |\n| `noext` | `boolean` | `false` | Alias for `noextglob` |\n| `noextglob` | `boolean` | `false` | Disable support for matching with extglobs (like `+(a\\|b)`) |\n| `noglobstar` | `boolean` | `false` | Disable support for matching nested directories with globstars (`**`) |\n| `nonegate` | `boolean` | `false` | Disable support for negating with leading `!` |\n| `noquantifiers` | `boolean` | `false` | Disable support for regex quantifiers (like `a{1,2}`) and treat them as brace patterns to be expanded. |\n| [onIgnore](#optionsonIgnore) | `function` | `undefined` | Function to be called on ignored items. |\n| [onMatch](#optionsonMatch) | `function` | `undefined` | Function to be called on matched items. |\n| [onResult](#optionsonResult) | `function` | `undefined` | Function to be called on all items, regardless of whether or not they are matched or ignored. |\n| `posix` | `boolean` | `false` | Support POSX character classes (\"posix brackets\"). |\n| `posixSlashes` | `boolean` | `undefined` | Convert all slashes in file paths to forward slashes. This does not convert slashes in the glob pattern itself |\n| `prepend` | `boolean` | `undefined` | String to prepend to the generated regex used for matching. |\n| `regex` | `boolean` | `false` | Use regular expression rules for `+` (instead of matching literal `+`), and for stars that follow closing parentheses or brackets (as in `)*` and `]*`). |\n| `strictBrackets` | `boolean` | `undefined` | Throw an error if brackets, braces, or parens are imbalanced. |\n| `strictSlashes` | `boolean` | `undefined` | When true, picomatch won't match trailing slashes with single stars. |\n| `unescape` | `boolean` | `undefined` | Remove backslashes preceding escaped characters in the glob pattern. By default, backslashes are retained. |\n| `unixify` | `boolean` | `undefined` | Alias for `posixSlashes`, for backwards compatitibility. |\n\n<br>\n\n## Options Examples\n\n### options.expandRange\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for expanding ranges in brace patterns. The [fill-range](https://github.com/jonschlinkert/fill-range) library is ideal for this purpose, or you can use custom code to do whatever you need.\n\n**Example**\n\nThe following example shows how to create a glob that matches a folder\n\n```js\nconst fill = require('fill-range');\nconst regex = pm.makeRe('foo/{01..25}/bar', {\n expandRange(a, b) {\n return `(${fill(a, b, { toRegex: true })})`;\n }\n});\n\nconsole.log(regex);\n//=> /^(?:foo\\/((?:0[1-9]|1[0-9]|2[0-5]))\\/bar)$/\n\nconsole.log(regex.test('foo/00/bar')) // false\nconsole.log(regex.test('foo/01/bar')) // true\nconsole.log(regex.test('foo/10/bar')) // true\nconsole.log(regex.test('foo/22/bar')) // true\nconsole.log(regex.test('foo/25/bar')) // true\nconsole.log(regex.test('foo/26/bar')) // false\n```\n\n### options.format\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for formatting strings before they're matched.\n\n**Example**\n\n```js\n// strip leading './' from strings\nconst format = str => str.replace(/^\\.\\//, '');\nconst isMatch = picomatch('foo/*.js', { format });\nconsole.log(isMatch('./foo/bar.js')); //=> true\n```\n\n### options.onMatch\n\n```js\nconst onMatch = ({ glob, regex, input, output }) => {\n console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onMatch });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n### options.onIgnore\n\n```js\nconst onIgnore = ({ glob, regex, input, output }) => {\n console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onIgnore, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n### options.onResult\n\n```js\nconst onResult = ({ glob, regex, input, output }) => {\n console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onResult, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n<br>\n<br>\n\n# Globbing features\n\n* [Basic globbing](#basic-globbing) (Wildcard matching)\n* [Advanced globbing](#advanced-globbing) (extglobs, posix brackets, brace matching)\n\n## Basic globbing\n\n| **Character** | **Description** | \n| --- | --- | \n| `*` | Matches any character zero or more times, excluding path separators. Does _not match_ path separators or hidden files or directories (\"dotfiles\"), unless explicitly enabled by setting the `dot` option to `true`. | \n| `**` | Matches any character zero or more times, including path separators. Note that `**` will only match path separators (`/`, and `\\\\` on Windows) when they are the only characters in a path segment. Thus, `foo**/bar` is equivalent to `foo*/bar`, and `foo/a**b/bar` is equivalent to `foo/a*b/bar`, and _more than two_ consecutive stars in a glob path segment are regarded as _a single star_. Thus, `foo/***/bar` is equivalent to `foo/*/bar`. | \n| `?` | Matches any character excluding path separators one time. Does _not match_ path separators or leading dots. | \n| `[abc]` | Matches any characters inside the brackets. For example, `[abc]` would match the characters `a`, `b` or `c`, and nothing else. | \n\n### Matching behavior vs. Bash\n\nPicomatch's matching features and expected results in unit tests are based on Bash's unit tests and the Bash 4.3 specification, with the following exceptions:\n\n* Bash will match `foo/bar/baz` with `*`. Picomatch only matches nested directories with `**`.\n* Bash greedily matches with negated extglobs. For example, Bash 4.3 says that `!(foo)*` should match `foo` and `foobar`, since the trailing `*` bracktracks to match the preceding pattern. This is very memory-inefficient, and IMHO, also incorrect. Picomatch would return `false` for both `foo` and `foobar`.\n\n<br>\n\n## Advanced globbing\n\n* [extglobs](#extglobs)\n* [POSIX brackets](#posix-brackets)\n* [Braces](#brace-expansion)\n\n### Extglobs\n\n| **Pattern** | **Description** |\n| --- | --- | --- |\n| `@(pattern)` | Match _only one_ consecutive occurrence of `pattern` |\n| `*(pattern)` | Match _zero or more_ consecutive occurrences of `pattern` |\n| `+(pattern)` | Match _one or more_ consecutive occurrences of `pattern` |\n| `?(pattern)` | Match _zero or **one**_ consecutive occurrences of `pattern` |\n| `!(pattern)` | Match _anything but_ `pattern` |\n\n**Examples**\n\n```js\nconst pm = require('picomatch');\n\n// *(pattern) matches ZERO or more of \"pattern\"\nconsole.log(pm.isMatch('a', 'a*(z)')); // true\nconsole.log(pm.isMatch('az', 'a*(z)')); // true\nconsole.log(pm.isMatch('azzz', 'a*(z)')); // true\n\n// +(pattern) matches ONE or more of \"pattern\"\nconsole.log(pm.isMatch('a', 'a*(z)')); // true\nconsole.log(pm.isMatch('az', 'a*(z)')); // true\nconsole.log(pm.isMatch('azzz', 'a*(z)')); // true\n\n// supports multiple extglobs\nconsole.log(pm.isMatch('foo.bar', '!(foo).!(bar)')); // false\nconsole.log(pm.isMatch('foo.bar', '!(foo).!(bar)')); // false\nconsole.log(pm.isMatch('foo.bar', '!(foo).!(bar)')); // false\nconsole.log(pm.isMatch('foo.bar', '!(foo).!(bar)')); // true\n\n// supports nested extglobs \nconsole.log(pm.isMatch('foo.bar', '!(!(foo)).!(!(bar))')); // true\n```\n\n### POSIX brackets\n\nPOSIX classes are disabled by default. Enable this feature by setting the `posix` option to true.\n\n**Enable POSIX bracket support**\n\n```js\nconsole.log(pm.makeRe('[[:word:]]+', { posix: true }));\n//=> /^(?:(?=.)[A-Za-z0-9_]+\\/?)$/\n```\n\n**Supported POSIX classes**\n\nThe following named POSIX bracket expressions are supported:\n\n* `[:alnum:]` - Alphanumeric characters, equ `[a-zA-Z0-9]`\n* `[:alpha:]` - Alphabetical characters, equivalent to `[a-zA-Z]`.\n* `[:ascii:]` - ASCII characters, equivalent to `[\\\\x00-\\\\x7F]`.\n* `[:blank:]` - Space and tab characters, equivalent to `[ \\\\t]`.\n* `[:cntrl:]` - Control characters, equivalent to `[\\\\x00-\\\\x1F\\\\x7F]`.\n* `[:digit:]` - Numerical digits, equivalent to `[0-9]`.\n* `[:graph:]` - Graph characters, equivalent to `[\\\\x21-\\\\x7E]`.\n* `[:lower:]` - Lowercase letters, equivalent to `[a-z]`.\n* `[:print:]` - Print characters, equivalent to `[\\\\x20-\\\\x7E ]`.\n* `[:punct:]` - Punctuation and symbols, equivalent to `[\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~]`.\n* `[:space:]` - Extended space characters, equivalent to `[ \\\\t\\\\r\\\\n\\\\v\\\\f]`.\n* `[:upper:]` - Uppercase letters, equivalent to `[A-Z]`.\n* `[:word:]` - Word characters (letters, numbers and underscores), equivalent to `[A-Za-z0-9_]`.\n* `[:xdigit:]` - Hexadecimal digits, equivalent to `[A-Fa-f0-9]`.\n\nSee the [Bash Reference Manual](https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html) for more information.\n\n## Braces\n\nPicomatch does not do brace expansion. For [brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html) and advanced matching with braces, use [micromatch](https://github.com/micromatch/micromatch) instead. Picomatch has very basic support for braces.\n\n## Matching special characters as literals\n\nIf you wish to match the following special characters in a filepath, and you want to use these characters in your glob pattern, they must be escaped with backslashes or quotes:\n\n**Special Characters**\n\nSome characters that are used for matching in regular expressions are also regarded as valid file path characters on some platforms.\n\nTo match any of the following characters as literals: `$^*+?()[]\n\nExamples:\n\n```js\nconsole.log(pm.makeRe('foo/bar \\\\(1\\\\)'));\nconsole.log(pm.makeRe('foo/bar \\\\(1\\\\)'));\n```\n\n<br>\n<br>\n\n## Library Comparisons\n\nThe following table shows which features are supported by [minimatch](https://github.com/isaacs/minimatch), [micromatch](https://github.com/micromatch/micromatch), [picomatch](https://github.com/folder/picomatch), [nanomatch](https://github.com/micromatch/nanomatch), [extglob](https://github.com/micromatch/extglob), [braces](https://github.com/micromatch/braces), and [expand-brackets](https://github.com/micromatch/expand-brackets).\n\n| **Feature** | `minimatch` | `micromatch` | `picomatch` | `nanomatch` | `extglob` | `braces` | `expand-brackets` |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Wildcard matching (`*?+`) | ✔ | ✔ | ✔ | ✔ | - | - | - |\n| Advancing globbing | ✔ | ✔ | ✔ | - | - | - | - |\n| Brace _matching_ | ✔ | ✔ | ✔ | - | - | ✔ | - |\n| Brace _expansion_ | ✔ | ✔ | - | - | - | ✔ | - |\n| Extglobs | partial | ✔ | ✔ | - | ✔ | - | - |\n| Posix brackets | - | ✔ | ✔ | - | - | - | ✔ |\n| Regular expression syntax | - | ✔ | ✔ | ✔ | ✔ | - | ✔ |\n| File system operations | - | - | - | - | - | - | - |\n\n<br>\n<br>\n\n## Benchmarks\n\nPerformance comparison of picomatch and minimatch.\n\n```\n# .makeRe star\n picomatch x 1,993,050 ops/sec ±0.51% (91 runs sampled)\n minimatch x 627,206 ops/sec ±1.96% (87 runs sampled))\n\n# .makeRe star; dot=true\n picomatch x 1,436,640 ops/sec ±0.62% (91 runs sampled)\n minimatch x 525,876 ops/sec ±0.60% (88 runs sampled)\n\n# .makeRe globstar\n picomatch x 1,592,742 ops/sec ±0.42% (90 runs sampled)\n minimatch x 962,043 ops/sec ±1.76% (91 runs sampled)d)\n\n# .makeRe globstars\n picomatch x 1,615,199 ops/sec ±0.35% (94 runs sampled)\n minimatch x 477,179 ops/sec ±1.33% (91 runs sampled)\n\n# .makeRe with leading star\n picomatch x 1,220,856 ops/sec ±0.40% (92 runs sampled)\n minimatch x 453,564 ops/sec ±1.43% (94 runs sampled)\n\n# .makeRe - basic braces\n picomatch x 392,067 ops/sec ±0.70% (90 runs sampled)\n minimatch x 99,532 ops/sec ±2.03% (87 runs sampled))\n```\n\n<br>\n<br>\n\n## Philosophies\n\nThe goal of this library is to be blazing fast, without compromising on accuracy.\n\n**Accuracy**\n\nThe number one of goal of this libary is accuracy. However, it's not unusual for different glob implementations to have different rules for matching behavior, even with simple wildcard matching. It gets increasingly more complicated when combinations of different features are combined, like when extglobs are combined with globstars, braces, slashes, and so on: `!(**/{a,b,*/c})`.\n\nThus, given that there is no cannonical glob specification to use as a single source of truth when differences of opinion arise regarding behavior, sometimes we have to implement our best judgement and rely on feedback from users to make improvements.\n\n**Performance**\n\nAlthough this library performs well in benchmarks, and in most cases it's faster than other popular libraries we benchmarked against, we will always choose accuracy over performance. It's not helpful to anyone if our library is faster at returning the wrong answer.\n\n<br>\n<br>\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2017-present, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).", "readmeFilename": "README.md", "_id": "picomatch@2.0.4", "_requested": { "type": "version", "registry": true, "raw": "picomatch@2.0.4", "name": "picomatch", "escapedName": "picomatch", "rawSpec": "2.0.4", "saveSpec": "[Circular]", "fetchSpec": "2.0.4" }, "_spec": "2.0.4", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "picomatch@2.0.4", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/picomatch", "error": "[Circular]", "extraneous": false }, "braces": { "name": "braces", "description": "Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.", "version": "3.0.1", "homepage": "https://github.com/micromatch/braces", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "Brian Woodward", "url": "https://twitter.com/doowb" }, { "name": "Elan Shanker", "url": "https://github.com/es128" }, { "name": "Eugene Sharygin", "url": "https://github.com/eush77" }, { "name": "hemanth.hm", "url": "http://h3manth.com" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" } ], "repository": { "type": "git", "url": "git+https://github.com/micromatch/braces.git" }, "bugs": { "url": "https://github.com/micromatch/braces/issues" }, "license": "MIT", "files": [ "index.js", "lib" ], "main": "index.js", "engines": { "node": ">=8" }, "scripts": { "test": "mocha", "benchmark": "node benchmark" }, "dependencies": { "fill-range": { "name": "fill-range", "description": "Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`", "version": "7.0.1", "homepage": "https://github.com/jonschlinkert/fill-range", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "Edo Rivai", "url": "edo.rivai.nl" }, { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Paul Miller", "url": "paulmillr.com" }, { "name": "Rouven Weßling", "url": "www.rouvenwessling.de" }, { "url": "https://github.com/wtgtybhertgeghgtwtg" } ], "repository": { "type": "git", "url": "git+https://github.com/jonschlinkert/fill-range.git" }, "bugs": { "url": "https://github.com/jonschlinkert/fill-range/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=8" }, "scripts": { "test": "mocha" }, "dependencies": { "to-regex-range": { "name": "to-regex-range", "description": "Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.", "version": "5.0.1", "homepage": "https://github.com/micromatch/to-regex-range", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Rouven Weßling", "url": "www.rouvenwessling.de" } ], "repository": { "type": "git", "url": "git+https://github.com/micromatch/to-regex-range.git" }, "bugs": { "url": "https://github.com/micromatch/to-regex-range/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=8.0" }, "scripts": { "test": "mocha" }, "dependencies": { "is-number": { "name": "is-number", "description": "Returns true if a number or string value is a finite number. Useful for regex matches, parsing, user input, etc.", "version": "7.0.0", "homepage": "https://github.com/jonschlinkert/is-number", "author": { "name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert" }, "contributors": [ { "name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert" }, { "name": "Olsten Larck", "url": "https://i.am.charlike.online" }, { "name": "Rouven Weßling", "url": "www.rouvenwessling.de" } ], "repository": { "type": "git", "url": "git+https://github.com/jonschlinkert/is-number.git" }, "bugs": { "url": "https://github.com/jonschlinkert/is-number/issues" }, "license": "MIT", "files": [ "index.js" ], "main": "index.js", "engines": { "node": ">=0.12.0" }, "scripts": { "test": "mocha" }, "devDependencies": { "ansi": "^0.3.1", "benchmark": "^2.1.4", "gulp-format-md": "^1.0.0", "mocha": "^3.5.3" }, "keywords": [ "cast", "check", "coerce", "coercion", "finite", "integer", "is", "isnan", "is-nan", "is-num", "is-number", "isnumber", "isfinite", "istype", "kind", "math", "nan", "num", "number", "numeric", "parseFloat", "parseInt", "test", "type", "typeof", "value" ], "verb": { "toc": false, "layout": "default", "tasks": [ "readme" ], "related": { "list": [ "is-plain-object", "is-primitive", "isobject", "kind-of" ] }, "plugins": [ "gulp-format-md" ], "lint": { "reflinks": true } }, "_resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz", "_integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==", "_from": "is-number@7.0.0", "readme": "# is-number [![NPM version](https://img.shields.io/npm/v/is-number.svg?style=flat)](https://www.npmjs.com/package/is-number) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-number.svg?style=flat)](https://npmjs.org/package/is-number) [![NPM total downloads](https://img.shields.io/npm/dt/is-number.svg?style=flat)](https://npmjs.org/package/is-number) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-number.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-number)\n\n> Returns true if the value is a finite number.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-number\n```\n\n## Why is this needed?\n\nIn JavaScript, it's not always as straightforward as it should be to reliably check if a value is a number. It's common for devs to use `+`, `-`, or `Number()` to cast a string value to a number (for example, when values are returned from user input, regex matches, parsers, etc). But there are many non-intuitive edge cases that yield unexpected results:\n\n```js\nconsole.log(+[]); //=> 0\nconsole.log(+''); //=> 0\nconsole.log(+' '); //=> 0\nconsole.log(typeof NaN); //=> 'number'\n```\n\nThis library offers a performant way to smooth out edge cases like these.\n\n## Usage\n\n```js\nconst isNumber = require('is-number');\n```\n\nSee the [tests](./test.js) for more examples.\n\n### true\n\n```js\nisNumber(5e3); // true\nisNumber(0xff); // true\nisNumber(-1.1); // true\nisNumber(0); // true\nisNumber(1); // true\nisNumber(1.1); // true\nisNumber(10); // true\nisNumber(10.10); // true\nisNumber(100); // true\nisNumber('-1.1'); // true\nisNumber('0'); // true\nisNumber('012'); // true\nisNumber('0xff'); // true\nisNumber('1'); // true\nisNumber('1.1'); // true\nisNumber('10'); // true\nisNumber('10.10'); // true\nisNumber('100'); // true\nisNumber('5e3'); // true\nisNumber(parseInt('012')); // true\nisNumber(parseFloat('012')); // true\n```\n\n### False\n\nEverything else is false, as you would expect:\n\n```js\nisNumber(Infinity); // false\nisNumber(NaN); // false\nisNumber(null); // false\nisNumber(undefined); // false\nisNumber(''); // false\nisNumber(' '); // false\nisNumber('foo'); // false\nisNumber([1]); // false\nisNumber([]); // false\nisNumber(function () {}); // false\nisNumber({}); // false\n```\n\n## Release history\n\n### 7.0.0\n\n* Refactor. Now uses `.isFinite` if it exists.\n* Performance is about the same as v6.0 when the value is a string or number. But it's now 3x-4x faster when the value is not a string or number.\n\n### 6.0.0\n\n* Optimizations, thanks to @benaadams.\n\n### 5.0.0\n\n**Breaking changes**\n\n* removed support for `instanceof Number` and `instanceof String`\n\n## Benchmarks\n\nAs with all benchmarks, take these with a grain of salt. See the [benchmarks](./benchmark/index.js) for more detail.\n\n```\n# all\nv7.0 x 413,222 ops/sec ±2.02% (86 runs sampled)\nv6.0 x 111,061 ops/sec ±1.29% (85 runs sampled)\nparseFloat x 317,596 ops/sec ±1.36% (86 runs sampled)\nfastest is 'v7.0'\n\n# string\nv7.0 x 3,054,496 ops/sec ±1.05% (89 runs sampled)\nv6.0 x 2,957,781 ops/sec ±0.98% (88 runs sampled)\nparseFloat x 3,071,060 ops/sec ±1.13% (88 runs sampled)\nfastest is 'parseFloat,v7.0'\n\n# number\nv7.0 x 3,146,895 ops/sec ±0.89% (89 runs sampled)\nv6.0 x 3,214,038 ops/sec ±1.07% (89 runs sampled)\nparseFloat x 3,077,588 ops/sec ±1.07% (87 runs sampled)\nfastest is 'v6.0'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [is-primitive](https://www.npmjs.com/package/is-primitive): Returns `true` if the value is a primitive. | [homepage](https://github.com/jonschlinkert/is-primitive \"Returns `true` if the value is a primitive. \")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 49 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 5 | [charlike-old](https://github.com/charlike-old) |\n| 1 | [benaadams](https://github.com/benaadams) |\n| 1 | [realityking](https://github.com/realityking) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on June 15, 2018._", "readmeFilename": "README.md", "_id": "is-number@7.0.0", "_requested": { "type": "version", "registry": true, "raw": "is-number@7.0.0", "name": "is-number", "escapedName": "is-number", "rawSpec": "7.0.0", "saveSpec": "[Circular]", "fetchSpec": "7.0.0" }, "_spec": "7.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-number@7.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/is-number", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "fill-range": "^6.0.0", "gulp-format-md": "^2.0.0", "mocha": "^6.0.2", "text-table": "^0.2.0", "time-diff": "^0.3.1" }, "keywords": [ "bash", "date", "expand", "expansion", "expression", "glob", "match", "match date", "match number", "match numbers", "match year", "matches", "matching", "number", "numbers", "numerical", "range", "ranges", "regex", "regexp", "regular", "regular expression", "sequence" ], "verb": { "layout": "default", "toc": false, "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "lint": { "reflinks": true }, "helpers": { "examples": { "displayName": "examples" } }, "related": { "list": [ "expand-range", "fill-range", "micromatch", "repeat-element", "repeat-string" ] } }, "_resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz", "_integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==", "_from": "to-regex-range@5.0.1", "readme": "# to-regex-range [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/to-regex-range.svg?style=flat)](https://www.npmjs.com/package/to-regex-range) [![NPM monthly downloads](https://img.shields.io/npm/dm/to-regex-range.svg?style=flat)](https://npmjs.org/package/to-regex-range) [![NPM total downloads](https://img.shields.io/npm/dt/to-regex-range.svg?style=flat)](https://npmjs.org/package/to-regex-range) [![Linux Build Status](https://img.shields.io/travis/micromatch/to-regex-range.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/to-regex-range)\n\n> Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save to-regex-range\n```\n\n<details>\n<summary><strong>What does this do?</strong></summary>\n\n<br>\n\nThis libary generates the `source` string to be passed to `new RegExp()` for matching a range of numbers.\n\n**Example**\n\n```js\nconst toRegexRange = require('to-regex-range');\nconst regex = new RegExp(toRegexRange('15', '95'));\n```\n\nA string is returned so that you can do whatever you need with it before passing it to `new RegExp()` (like adding `^` or `$` boundaries, defining flags, or combining it another string).\n\n<br>\n\n</details>\n\n<details>\n<summary><strong>Why use this library?</strong></summary>\n\n<br>\n\n### Convenience\n\nCreating regular expressions for matching numbers gets deceptively complicated pretty fast.\n\nFor example, let's say you need a validation regex for matching part of a user-id, postal code, social security number, tax id, etc:\n\n* regex for matching `1` => `/1/` (easy enough)\n* regex for matching `1` through `5` => `/[1-5]/` (not bad...)\n* regex for matching `1` or `5` => `/(1|5)/` (still easy...)\n* regex for matching `1` through `50` => `/([1-9]|[1-4][0-9]|50)/` (uh-oh...)\n* regex for matching `1` through `55` => `/([1-9]|[1-4][0-9]|5[0-5])/` (no prob, I can do this...)\n* regex for matching `1` through `555` => `/([1-9]|[1-9][0-9]|[1-4][0-9]{2}|5[0-4][0-9]|55[0-5])/` (maybe not...)\n* regex for matching `0001` through `5555` => `/(0{3}[1-9]|0{2}[1-9][0-9]|0[1-9][0-9]{2}|[1-4][0-9]{3}|5[0-4][0-9]{2}|55[0-4][0-9]|555[0-5])/` (okay, I get the point!)\n\nThe numbers are contrived, but they're also really basic. In the real world you might need to generate a regex on-the-fly for validation.\n\n**Learn more**\n\nIf you're interested in learning more about [character classes](http://www.regular-expressions.info/charclass.html) and other regex features, I personally have always found [regular-expressions.info](http://www.regular-expressions.info/charclass.html) to be pretty useful.\n\n### Heavily tested\n\nAs of April 07, 2019, this library runs [>1m test assertions](./test/test.js) against generated regex-ranges to provide brute-force verification that results are correct.\n\nTests run in ~280ms on my MacBook Pro, 2.5 GHz Intel Core i7.\n\n### Optimized\n\nGenerated regular expressions are optimized:\n\n* duplicate sequences and character classes are reduced using quantifiers\n* smart enough to use `?` conditionals when number(s) or range(s) can be positive or negative\n* uses fragment caching to avoid processing the same exact string more than once\n\n<br>\n\n</details>\n\n## Usage\n\nAdd this library to your javascript application with the following line of code\n\n```js\nconst toRegexRange = require('to-regex-range');\n```\n\nThe main export is a function that takes two integers: the `min` value and `max` value (formatted as strings or numbers).\n\n```js\nconst source = toRegexRange('15', '95');\n//=> 1[5-9]|[2-8][0-9]|9[0-5]\n\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('14')); //=> false\nconsole.log(regex.test('50')); //=> true\nconsole.log(regex.test('94')); //=> true\nconsole.log(regex.test('96')); //=> false\n```\n\n## Options\n\n### options.capture\n\n**Type**: `boolean`\n\n**Deafault**: `undefined`\n\nWrap the returned value in parentheses when there is more than one regex condition. Useful when you're dynamically generating ranges.\n\n```js\nconsole.log(toRegexRange('-10', '10'));\n//=> -[1-9]|-?10|[0-9]\n\nconsole.log(toRegexRange('-10', '10', { capture: true }));\n//=> (-[1-9]|-?10|[0-9])\n```\n\n### options.shorthand\n\n**Type**: `boolean`\n\n**Deafault**: `undefined`\n\nUse the regex shorthand for `[0-9]`:\n\n```js\nconsole.log(toRegexRange('0', '999999'));\n//=> [0-9]|[1-9][0-9]{1,5}\n\nconsole.log(toRegexRange('0', '999999', { shorthand: true }));\n//=> \\d|[1-9]\\d{1,5}\n```\n\n### options.relaxZeros\n\n**Type**: `boolean`\n\n**Default**: `true`\n\nThis option relaxes matching for leading zeros when when ranges are zero-padded.\n\n```js\nconst source = toRegexRange('-0010', '0010');\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('-10')); //=> true\nconsole.log(regex.test('-010')); //=> true\nconsole.log(regex.test('-0010')); //=> true\nconsole.log(regex.test('10')); //=> true\nconsole.log(regex.test('010')); //=> true\nconsole.log(regex.test('0010')); //=> true\n```\n\nWhen `relaxZeros` is false, matching is strict:\n\n```js\nconst source = toRegexRange('-0010', '0010', { relaxZeros: false });\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('-10')); //=> false\nconsole.log(regex.test('-010')); //=> false\nconsole.log(regex.test('-0010')); //=> true\nconsole.log(regex.test('10')); //=> false\nconsole.log(regex.test('010')); //=> false\nconsole.log(regex.test('0010')); //=> true\n```\n\n## Examples\n\n| **Range** | **Result** | **Compile time** |\n| --- | --- | --- |\n| `toRegexRange(-10, 10)` | `-[1-9]\\|-?10\\|[0-9]` | _132μs_ |\n| `toRegexRange(-100, -10)` | `-1[0-9]\\|-[2-9][0-9]\\|-100` | _50μs_ |\n| `toRegexRange(-100, 100)` | `-[1-9]\\|-?[1-9][0-9]\\|-?100\\|[0-9]` | _42μs_ |\n| `toRegexRange(001, 100)` | `0{0,2}[1-9]\\|0?[1-9][0-9]\\|100` | _109μs_ |\n| `toRegexRange(001, 555)` | `0{0,2}[1-9]\\|0?[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]` | _51μs_ |\n| `toRegexRange(0010, 1000)` | `0{0,2}1[0-9]\\|0{0,2}[2-9][0-9]\\|0?[1-9][0-9]{2}\\|1000` | _31μs_ |\n| `toRegexRange(1, 50)` | `[1-9]\\|[1-4][0-9]\\|50` | _24μs_ |\n| `toRegexRange(1, 55)` | `[1-9]\\|[1-4][0-9]\\|5[0-5]` | _23μs_ |\n| `toRegexRange(1, 555)` | `[1-9]\\|[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]` | _30μs_ |\n| `toRegexRange(1, 5555)` | `[1-9]\\|[1-9][0-9]{1,2}\\|[1-4][0-9]{3}\\|5[0-4][0-9]{2}\\|55[0-4][0-9]\\|555[0-5]` | _43μs_ |\n| `toRegexRange(111, 555)` | `11[1-9]\\|1[2-9][0-9]\\|[2-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]` | _38μs_ |\n| `toRegexRange(29, 51)` | `29\\|[34][0-9]\\|5[01]` | _24μs_ |\n| `toRegexRange(31, 877)` | `3[1-9]\\|[4-9][0-9]\\|[1-7][0-9]{2}\\|8[0-6][0-9]\\|87[0-7]` | _32μs_ |\n| `toRegexRange(5, 5)` | `5` | _8μs_ |\n| `toRegexRange(5, 6)` | `5\\|6` | _11μs_ |\n| `toRegexRange(1, 2)` | `1\\|2` | _6μs_ |\n| `toRegexRange(1, 5)` | `[1-5]` | _15μs_ |\n| `toRegexRange(1, 10)` | `[1-9]\\|10` | _22μs_ |\n| `toRegexRange(1, 100)` | `[1-9]\\|[1-9][0-9]\\|100` | _25μs_ |\n| `toRegexRange(1, 1000)` | `[1-9]\\|[1-9][0-9]{1,2}\\|1000` | _31μs_ |\n| `toRegexRange(1, 10000)` | `[1-9]\\|[1-9][0-9]{1,3}\\|10000` | _34μs_ |\n| `toRegexRange(1, 100000)` | `[1-9]\\|[1-9][0-9]{1,4}\\|100000` | _36μs_ |\n| `toRegexRange(1, 1000000)` | `[1-9]\\|[1-9][0-9]{1,5}\\|1000000` | _42μs_ |\n| `toRegexRange(1, 10000000)` | `[1-9]\\|[1-9][0-9]{1,6}\\|10000000` | _42μs_ |\n\n## Heads up!\n\n**Order of arguments**\n\nWhen the `min` is larger than the `max`, values will be flipped to create a valid range:\n\n```js\ntoRegexRange('51', '29');\n```\n\nIs effectively flipped to:\n\n```js\ntoRegexRange('29', '51');\n//=> 29|[3-4][0-9]|5[0-1]\n```\n\n**Steps / increments**\n\nThis library does not support steps (increments). A pr to add support would be welcome.\n\n## History\n\n### v2.0.0 - 2017-04-21\n\n**New features**\n\nAdds support for zero-padding!\n\n### v1.0.0\n\n**Optimizations**\n\nRepeating ranges are now grouped using quantifiers. rocessing time is roughly the same, but the generated regex is much smaller, which should result in faster matching.\n\n## Attribution\n\nInspired by the python library [range-regex](https://github.com/dimka665/range-regex).\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [expand-range](https://www.npmjs.com/package/expand-range): Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used… [more](https://github.com/jonschlinkert/expand-range) | [homepage](https://github.com/jonschlinkert/expand-range \"Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used by micromatch.\")\n* [fill-range](https://www.npmjs.com/package/fill-range): Fill in a range of numbers or letters, optionally passing an increment or `step` to… [more](https://github.com/jonschlinkert/fill-range) | [homepage](https://github.com/jonschlinkert/fill-range \"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/micromatch/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n* [repeat-element](https://www.npmjs.com/package/repeat-element): Create an array by repeating the given value n times. | [homepage](https://github.com/jonschlinkert/repeat-element \"Create an array by repeating the given value n times.\")\n* [repeat-string](https://www.npmjs.com/package/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string. | [homepage](https://github.com/jonschlinkert/repeat-string \"Repeat the given string n times. Fastest implementation for repeating a string.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- | \n| 63 | [jonschlinkert](https://github.com/jonschlinkert) | \n| 3 | [doowb](https://github.com/doowb) | \n| 2 | [realityking](https://github.com/realityking) | \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\nPlease consider supporting me on Patreon, or [start your own Patreon page](https://patreon.com/invite/bxpbvm)!\n\n<a href=\"https://www.patreon.com/jonschlinkert\">\n<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" height=\"50\">\n</a>\n\n### License\n\nCopyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 07, 2019._", "readmeFilename": "README.md", "_id": "to-regex-range@5.0.1", "_requested": { "type": "version", "registry": true, "raw": "to-regex-range@5.0.1", "name": "to-regex-range", "escapedName": "to-regex-range", "rawSpec": "5.0.1", "saveSpec": "[Circular]", "fetchSpec": "5.0.1" }, "_spec": "5.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "to-regex-range@5.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-number": "^7.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/to-regex-range", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "gulp-format-md": "^2.0.0", "mocha": "^6.1.1" }, "keywords": [ "alpha", "alphabetical", "array", "bash", "brace", "expand", "expansion", "fill", "glob", "match", "matches", "matching", "number", "numerical", "range", "ranges", "regex", "sh" ], "verb": { "toc": false, "layout": "default", "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "lint": { "reflinks": true } }, "_resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz", "_integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==", "_from": "fill-range@7.0.1", "readme": "# fill-range [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/fill-range.svg?style=flat)](https://www.npmjs.com/package/fill-range) [![NPM monthly downloads](https://img.shields.io/npm/dm/fill-range.svg?style=flat)](https://npmjs.org/package/fill-range) [![NPM total downloads](https://img.shields.io/npm/dt/fill-range.svg?style=flat)](https://npmjs.org/package/fill-range) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/fill-range.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/fill-range)\n\n> Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save fill-range\n```\n\n## Usage\n\nExpands numbers and letters, optionally using a `step` as the last argument. _(Numbers may be defined as JavaScript numbers or strings)_.\n\n```js\nconst fill = require('fill-range');\n// fill(from, to[, step, options]);\n\nconsole.log(fill('1', '10')); //=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\nconsole.log(fill('1', '10', { toRegex: true })); //=> [1-9]|10\n```\n\n**Params**\n\n* `from`: **{String|Number}** the number or letter to start with\n* `to`: **{String|Number}** the number or letter to end with\n* `step`: **{String|Number|Object|Function}** Optionally pass a [step](#optionsstep) to use.\n* `options`: **{Object|Function}**: See all available [options](#options)\n\n## Examples\n\nBy default, an array of values is returned.\n\n**Alphabetical ranges**\n\n```js\nconsole.log(fill('a', 'e')); //=> ['a', 'b', 'c', 'd', 'e']\nconsole.log(fill('A', 'E')); //=> [ 'A', 'B', 'C', 'D', 'E' ]\n```\n\n**Numerical ranges**\n\nNumbers can be defined as actual numbers or strings.\n\n```js\nconsole.log(fill(1, 5)); //=> [ 1, 2, 3, 4, 5 ]\nconsole.log(fill('1', '5')); //=> [ 1, 2, 3, 4, 5 ]\n```\n\n**Negative ranges**\n\nNumbers can be defined as actual numbers or strings.\n\n```js\nconsole.log(fill('-5', '-1')); //=> [ '-5', '-4', '-3', '-2', '-1' ]\nconsole.log(fill('-5', '5')); //=> [ '-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5' ]\n```\n\n**Steps (increments)**\n\n```js\n// numerical ranges with increments\nconsole.log(fill('0', '25', 4)); //=> [ '0', '4', '8', '12', '16', '20', '24' ]\nconsole.log(fill('0', '25', 5)); //=> [ '0', '5', '10', '15', '20', '25' ]\nconsole.log(fill('0', '25', 6)); //=> [ '0', '6', '12', '18', '24' ]\n\n// alphabetical ranges with increments\nconsole.log(fill('a', 'z', 4)); //=> [ 'a', 'e', 'i', 'm', 'q', 'u', 'y' ]\nconsole.log(fill('a', 'z', 5)); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ]\nconsole.log(fill('a', 'z', 6)); //=> [ 'a', 'g', 'm', 's', 'y' ]\n```\n\n## Options\n\n### options.step\n\n**Type**: `number` (formatted as a string or number)\n\n**Default**: `undefined`\n\n**Description**: The increment to use for the range. Can be used with letters or numbers.\n\n**Example(s)**\n\n```js\n// numbers\nconsole.log(fill('1', '10', 2)); //=> [ '1', '3', '5', '7', '9' ]\nconsole.log(fill('1', '10', 3)); //=> [ '1', '4', '7', '10' ]\nconsole.log(fill('1', '10', 4)); //=> [ '1', '5', '9' ]\n\n// letters\nconsole.log(fill('a', 'z', 5)); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ]\nconsole.log(fill('a', 'z', 7)); //=> [ 'a', 'h', 'o', 'v' ]\nconsole.log(fill('a', 'z', 9)); //=> [ 'a', 'j', 's' ]\n```\n\n### options.strictRanges\n\n**Type**: `boolean`\n\n**Default**: `false`\n\n**Description**: By default, `null` is returned when an invalid range is passed. Enable this option to throw a `RangeError` on invalid ranges.\n\n**Example(s)**\n\nThe following are all invalid:\n\n```js\nfill('1.1', '2'); // decimals not supported in ranges\nfill('a', '2'); // incompatible range values\nfill(1, 10, 'foo'); // invalid \"step\" argument\n```\n\n### options.stringify\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\n**Description**: Cast all returned values to strings. By default, integers are returned as numbers.\n\n**Example(s)**\n\n```js\nconsole.log(fill(1, 5)); //=> [ 1, 2, 3, 4, 5 ]\nconsole.log(fill(1, 5, { stringify: true })); //=> [ '1', '2', '3', '4', '5' ]\n```\n\n### options.toRegex\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\n**Description**: Create a regex-compatible source string, instead of expanding values to an array.\n\n**Example(s)**\n\n```js\n// alphabetical range\nconsole.log(fill('a', 'e', { toRegex: true })); //=> '[a-e]'\n// alphabetical with step\nconsole.log(fill('a', 'z', 3, { toRegex: true })); //=> 'a|d|g|j|m|p|s|v|y'\n// numerical range\nconsole.log(fill('1', '100', { toRegex: true })); //=> '[1-9]|[1-9][0-9]|100'\n// numerical range with zero padding\nconsole.log(fill('000001', '100000', { toRegex: true }));\n//=> '0{5}[1-9]|0{4}[1-9][0-9]|0{3}[1-9][0-9]{2}|0{2}[1-9][0-9]{3}|0[1-9][0-9]{4}|100000'\n```\n\n### options.transform\n\n**Type**: `function`\n\n**Default**: `undefined`\n\n**Description**: Customize each value in the returned array (or [string](#optionstoRegex)). _(you can also pass this function as the last argument to `fill()`)_.\n\n**Example(s)**\n\n```js\n// add zero padding\nconsole.log(fill(1, 5, value => String(value).padStart(4, '0')));\n//=> ['0001', '0002', '0003', '0004', '0005']\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- | \n| 116 | [jonschlinkert](https://github.com/jonschlinkert) | \n| 4 | [paulmillr](https://github.com/paulmillr) | \n| 2 | [realityking](https://github.com/realityking) | \n| 2 | [bluelovers](https://github.com/bluelovers) | \n| 1 | [edorivai](https://github.com/edorivai) | \n| 1 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) | \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\nPlease consider supporting me on Patreon, or [start your own Patreon page](https://patreon.com/invite/bxpbvm)!\n\n<a href=\"https://www.patreon.com/jonschlinkert\">\n<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" height=\"50\">\n</a>\n\n### License\n\nCopyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._", "readmeFilename": "README.md", "_id": "fill-range@7.0.1", "_requested": { "type": "version", "registry": true, "raw": "fill-range@7.0.1", "name": "fill-range", "escapedName": "fill-range", "rawSpec": "7.0.1", "saveSpec": "[Circular]", "fetchSpec": "7.0.1" }, "_spec": "7.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "fill-range@7.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "to-regex-range": "^5.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/fill-range", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ansi-colors": "^3.2.4", "bash-path": "^2.0.1", "gulp-format-md": "^2.0.0", "mocha": "^6.1.1" }, "keywords": [ "alpha", "alphabetical", "bash", "brace", "braces", "expand", "expansion", "filepath", "fill", "fs", "glob", "globbing", "letter", "match", "matches", "matching", "number", "numerical", "path", "range", "ranges", "sh" ], "verb": { "toc": false, "layout": "default", "tasks": [ "readme" ], "lint": { "reflinks": true }, "plugins": [ "gulp-format-md" ] }, "_resolved": "https://registry.npmjs.org/braces/-/braces-3.0.1.tgz", "_integrity": "sha512-Vmyh3JAr5DRUKCdRrC+WyAAsWBez8HLnBmVb6Ux2VYbvC8DjqMC228WHx24fiQG5BiDOVo+otK1scdkK5S6YNg==", "_from": "braces@3.0.1", "readme": "# braces [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/braces.svg?style=flat)](https://www.npmjs.com/package/braces) [![NPM monthly downloads](https://img.shields.io/npm/dm/braces.svg?style=flat)](https://npmjs.org/package/braces) [![NPM total downloads](https://img.shields.io/npm/dt/braces.svg?style=flat)](https://npmjs.org/package/braces) [![Linux Build Status](https://img.shields.io/travis/micromatch/braces.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/braces)\n\n> Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save braces\n```\n\n## v3.0.0 Released!!\n\nSee the [changelog](CHANGELOG.md) for details.\n\n## Why use braces?\n\nBrace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters.\n\n* **Accurate** - complete support for the [Bash 4.3 Brace Expansion](www.gnu.org/software/bash/) specification (passes all of the Bash braces tests)\n* **[fast and performant](#benchmarks)** - Starts fast, runs fast and [scales well](#performance) as patterns increase in complexity.\n* **Organized code base** - The parser and compiler are easy to maintain and update when edge cases crop up.\n* **Well-tested** - Thousands of test assertions, and passes all of the Bash, minimatch, and [brace-expansion](https://github.com/juliangruber/brace-expansion) unit tests (as of the date this was written).\n* **Safer** - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see [catastrophic backtracking](https://www.regular-expressions.info/catastrophic.html)).\n* [Supports lists](#lists) - (aka \"sets\") `a/{b,c}/d` => `['a/b/d', 'a/c/d']`\n* [Supports sequences](#sequences) - (aka \"ranges\") `{01..03}` => `['01', '02', '03']`\n* [Supports steps](#steps) - (aka \"increments\") `{2..10..2}` => `['2', '4', '6', '8', '10']`\n* [Supports escaping](#escaping) - To prevent evaluation of special characters.\n\n## Usage\n\nThe main export is a function that takes one or more brace `patterns` and `options`.\n\n```js\nconst braces = require('braces');\n// braces(patterns[, options]);\n\nconsole.log(braces(['{01..05}', '{a..e}']));\n//=> ['(0[1-5])', '([a-e])']\n\nconsole.log(braces(['{01..05}', '{a..e}'], { expand: true }));\n//=> ['01', '02', '03', '04', '05', 'a', 'b', 'c', 'd', 'e']\n```\n\n### Brace Expansion vs. Compilation\n\nBy default, brace patterns are compiled into strings that are optimized for creating regular expressions and matching.\n\n**Compiled**\n\n```js\nconsole.log(braces('a/{x,y,z}/b')); \n//=> ['a/(x|y|z)/b']\nconsole.log(braces(['a/{01..20}/b', 'a/{1..5}/b'])); \n//=> [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ]\n```\n\n**Expanded**\n\nEnable brace expansion by setting the `expand` option to true, or by using [braces.expand()](#expand) (returns an array similar to what you'd expect from Bash, or `echo {1..5}`, or [minimatch](https://github.com/isaacs/minimatch)):\n\n```js\nconsole.log(braces('a/{x,y,z}/b', { expand: true }));\n//=> ['a/x/b', 'a/y/b', 'a/z/b']\n\nconsole.log(braces.expand('{01..10}'));\n//=> ['01','02','03','04','05','06','07','08','09','10']\n```\n\n### Lists\n\nExpand lists (like Bash \"sets\"):\n\n```js\nconsole.log(braces('a/{foo,bar,baz}/*.js'));\n//=> ['a/(foo|bar|baz)/*.js']\n\nconsole.log(braces.expand('a/{foo,bar,baz}/*.js'));\n//=> ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js']\n```\n\n### Sequences\n\nExpand ranges of characters (like Bash \"sequences\"):\n\n```js\nconsole.log(braces.expand('{1..3}')); // ['1', '2', '3']\nconsole.log(braces.expand('a/{1..3}/b')); // ['a/1/b', 'a/2/b', 'a/3/b']\nconsole.log(braces('{a..c}', { expand: true })); // ['a', 'b', 'c']\nconsole.log(braces('foo/{a..c}', { expand: true })); // ['foo/a', 'foo/b', 'foo/c']\n\n// supports zero-padded ranges\nconsole.log(braces('a/{01..03}/b')); //=> ['a/(0[1-3])/b']\nconsole.log(braces('a/{001..300}/b')); //=> ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b']\n```\n\nSee [fill-range](https://github.com/jonschlinkert/fill-range) for all available range-expansion options.\n\n### Steppped ranges\n\nSteps, or increments, may be used with ranges:\n\n```js\nconsole.log(braces.expand('{2..10..2}'));\n//=> ['2', '4', '6', '8', '10']\n\nconsole.log(braces('{2..10..2}'));\n//=> ['(2|4|6|8|10)']\n```\n\nWhen the [.optimize](#optimize) method is used, or [options.optimize](#optionsoptimize) is set to true, sequences are passed to [to-regex-range](https://github.com/jonschlinkert/to-regex-range) for expansion.\n\n### Nesting\n\nBrace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved.\n\n**\"Expanded\" braces**\n\n```js\nconsole.log(braces.expand('a{b,c,/{x,y}}/e'));\n//=> ['ab/e', 'ac/e', 'a/x/e', 'a/y/e']\n\nconsole.log(braces.expand('a/{x,{1..5},y}/c'));\n//=> ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c']\n```\n\n**\"Optimized\" braces**\n\n```js\nconsole.log(braces('a{b,c,/{x,y}}/e'));\n//=> ['a(b|c|/(x|y))/e']\n\nconsole.log(braces('a/{x,{1..5},y}/c'));\n//=> ['a/(x|([1-5])|y)/c']\n```\n\n### Escaping\n\n**Escaping braces**\n\nA brace pattern will not be expanded or evaluted if _either the opening or closing brace is escaped_:\n\n```js\nconsole.log(braces.expand('a\\\\{d,c,b}e'));\n//=> ['a{d,c,b}e']\n\nconsole.log(braces.expand('a{d,c,b\\\\}e'));\n//=> ['a{d,c,b}e']\n```\n\n**Escaping commas**\n\nCommas inside braces may also be escaped:\n\n```js\nconsole.log(braces.expand('a{b\\\\,c}d'));\n//=> ['a{b,c}d']\n\nconsole.log(braces.expand('a{d\\\\,c,b}e'));\n//=> ['ad,ce', 'abe']\n```\n\n**Single items**\n\nFollowing bash conventions, a brace pattern is also not expanded when it contains a single character:\n\n```js\nconsole.log(braces.expand('a{b}c'));\n//=> ['a{b}c']\n```\n\n## Options\n\n### options.maxLength\n\n**Type**: `Number`\n\n**Default**: `65,536`\n\n**Description**: Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera.\n\n```js\nconsole.log(braces('a/{b,c}/d', { maxLength: 3 })); //=> throws an error\n```\n\n### options.expand\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: Generate an \"expanded\" brace pattern (alternatively you can use the `braces.expand()` method, which does the same thing).\n\n```js\nconsole.log(braces('a/{b,c}/d', { expand: true }));\n//=> [ 'a/b/d', 'a/c/d' ]\n```\n\n### options.nodupes\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: Remove duplicates from the returned array.\n\n### options.rangeLimit\n\n**Type**: `Number`\n\n**Default**: `1000`\n\n**Description**: To prevent malicious patterns from being passed by users, an error is thrown when `braces.expand()` is used or `options.expand` is true and the generated range will exceed the `rangeLimit`.\n\nYou can customize `options.rangeLimit` or set it to `Inifinity` to disable this altogether.\n\n**Examples**\n\n```js\n// pattern exceeds the \"rangeLimit\", so it's optimized automatically\nconsole.log(braces.expand('{1..1000}'));\n//=> ['([1-9]|[1-9][0-9]{1,2}|1000)']\n\n// pattern does not exceed \"rangeLimit\", so it's NOT optimized\nconsole.log(braces.expand('{1..100}'));\n//=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']\n```\n\n### options.transform\n\n**Type**: `Function`\n\n**Default**: `undefined`\n\n**Description**: Customize range expansion.\n\n**Example: Transforming non-numeric values**\n\n```js\nconst alpha = braces.expand('x/{a..e}/y', {\n transform(value, index) {\n // When non-numeric values are passed, \"value\" is a character code.\n return 'foo/' + String.fromCharCode(value) + '-' + index;\n }\n});\nconsole.log(alpha);\n//=> [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ]\n```\n\n**Example: Transforming numeric values**\n\n```js\nconst numeric = braces.expand('{1..5}', {\n transform(value) {\n // when numeric values are passed, \"value\" is a number\n return 'foo/' + value 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps 2;\n }\n});\nconsole.log(numeric); \n//=> [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ]\n```\n\n### options.quantifiers\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, `a{1,3}` will match the letter `a` one to three times.\n\nUnfortunately, regex quantifiers happen to share the same syntax as [Bash lists](#lists)\n\nThe `quantifiers` option tells braces to detect when [regex quantifiers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#quantifiers) are defined in the given pattern, and not to try to expand them as lists.\n\n**Examples**\n\n```js\nconst braces = require('braces');\nconsole.log(braces('a/b{1,3}/{x,y,z}'));\n//=> [ 'a/b(1|3)/(x|y|z)' ]\nconsole.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true}));\n//=> [ 'a/b{1,3}/(x|y|z)' ]\nconsole.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true, expand: true}));\n//=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]\n```\n\n### options.unescape\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: Strip backslashes that were used for escaping from the result.\n\n## What is \"brace expansion\"?\n\nBrace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs).\n\nIn addition to \"expansion\", braces are also used for matching. In other words:\n\n* [brace expansion](#brace-expansion) is for generating new lists\n* [brace matching](#brace-matching) is for filtering existing lists\n\n<details>\n<summary><strong>More about brace expansion</strong> (click to expand)</summary>\n\nThere are two main types of brace expansion:\n\n1. **lists**: which are defined using comma-separated values inside curly braces: `{a,b,c}`\n2. **sequences**: which are defined using a starting value and an ending value, separated by two dots: `a{1..3}b`. Optionally, a third argument may be passed to define a \"step\" or increment to use: `a{1..100..10}b`. These are also sometimes referred to as \"ranges\".\n\nHere are some example brace patterns to illustrate how they work:\n\n**Sets**\n\n```\n{a,b,c} => a b c\n{a,b,c}{1,2} => a1 a2 b1 b2 c1 c2\n```\n\n**Sequences**\n\n```\n{1..9} => 1 2 3 4 5 6 7 8 9\n{4..-4} => 4 3 2 1 0 -1 -2 -3 -4\n{1..20..3} => 1 4 7 10 13 16 19\n{a..j} => a b c d e f g h i j\n{j..a} => j i h g f e d c b a\n{a..z..3} => a d g j m p s v y\n```\n\n**Combination**\n\nSets and sequences can be mixed together or used along with any other strings.\n\n```\n{a,b,c}{1..3} => a1 a2 a3 b1 b2 b3 c1 c2 c3\nfoo/{a,b,c}/bar => foo/a/bar foo/b/bar foo/c/bar\n```\n\nThe fact that braces can be \"expanded\" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases.\n\n## Brace matching\n\nIn addition to _expansion_, brace patterns are also useful for performing regular-expression-like matching.\n\nFor example, the pattern `foo/{1..3}/bar` would match any of following strings:\n\n```\nfoo/1/bar\nfoo/2/bar\nfoo/3/bar\n```\n\nBut not:\n\n```\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n```\n\nBraces can also be combined with [glob patterns](https://github.com/jonschlinkert/micromatch) to perform more advanced wildcard matching. For example, the pattern `*/{1..3}/*` would match any of following strings:\n\n```\nfoo/1/bar\nfoo/2/bar\nfoo/3/bar\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n```\n\n## Brace matching pitfalls\n\nAlthough brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of.\n\n### tldr\n\n**\"brace bombs\"**\n\n* brace expansion can eat up a huge amount of processing resources\n* as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially\n* users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)\n\nFor a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section.\n\n### The solution\n\nJump to the [performance section](#performance) to see how Braces solves this problem in comparison to other libraries.\n\n### Geometric complexity\n\nAt minimum, brace patterns with sets limited to two elements have quadradic or `O(n^2)` complexity. But the complexity of the algorithm increases exponentially as the number of sets, _and elements per set_, increases, which is `O(n^c)`.\n\nFor example, the following sets demonstrate quadratic (`O(n^2)`) complexity:\n\n```\n{1,2}{3,4} => (2X2) => 13 14 23 24\n{1,2}{3,4}{5,6} => (2X2X2) => 135 136 145 146 235 236 245 246\n```\n\nBut add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity:\n\n```\n{1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 \n 249 257 258 259 267 268 269 347 348 349 357 \n 358 359 367 368 369\n```\n\nNow, imagine how this complexity grows given that each element is a n-tuple:\n\n```\n{1..100}{1..100} => (100X100) => 10,000 elements (38.4 kB)\n{1..100}{1..100}{1..100} => (100X100X100) => 1,000,000 elements (5.76 MB)\n```\n\nAlthough these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control.\n\n**More information**\n\nInterested in learning more about brace expansion?\n\n* [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion)\n* [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion)\n* [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)\n\n</details>\n\n## Performance\n\nBraces is not only screaming fast, it's also more accurate the other brace expansion libraries.\n\n### Better algorithms\n\nFortunately there is a solution to the [\"brace bomb\" problem](#brace-matching-pitfalls): _don't expand brace patterns into an array when they're used for matching_.\n\nInstead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently.\n\n**The proof is in the numbers**\n\nMinimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using `braces()` and `minimatch.braceExpand()`, respectively.\n\n| **Pattern** | **braces** | **[minimatch][]** |\n| --- | --- | --- |\n| `{1..9007199254740991}`[^1] | `298 B` (5ms 459μs)| N/A (freezes) |\n| `{1..1000000000000000}` | `41 B` (1ms 15μs) | N/A (freezes) |\n| `{1..100000000000000}` | `40 B` (890μs) | N/A (freezes) |\n| `{1..10000000000000}` | `39 B` (2ms 49μs) | N/A (freezes) |\n| `{1..1000000000000}` | `38 B` (608μs) | N/A (freezes) |\n| `{1..100000000000}` | `37 B` (397μs) | N/A (freezes) |\n| `{1..10000000000}` | `35 B` (983μs) | N/A (freezes) |\n| `{1..1000000000}` | `34 B` (798μs) | N/A (freezes) |\n| `{1..100000000}` | `33 B` (733μs) | N/A (freezes) |\n| `{1..10000000}` | `32 B` (5ms 632μs) | `78.89 MB` (16s 388ms 569μs) |\n| `{1..1000000}` | `31 B` (1ms 381μs) | `6.89 MB` (1s 496ms 887μs) |\n| `{1..100000}` | `30 B` (950μs) | `588.89 kB` (146ms 921μs) |\n| `{1..10000}` | `29 B` (1ms 114μs) | `48.89 kB` (14ms 187μs) |\n| `{1..1000}` | `28 B` (760μs) | `3.89 kB` (1ms 453μs) |\n| `{1..100}` | `22 B` (345μs) | `291 B` (196μs) |\n| `{1..10}` | `10 B` (533μs) | `20 B` (37μs) |\n| `{1..3}` | `7 B` (190μs) | `5 B` (27μs) |\n\n### Faster algorithms\n\nWhen you need expansion, braces is still much faster.\n\n_(the following results were generated using `braces.expand()` and `minimatch.braceExpand()`, respectively)_\n\n| **Pattern** | **braces** | **[minimatch][]** |\n| --- | --- | --- |\n| `{1..10000000}` | `78.89 MB` (2s 698ms 642μs) | `78.89 MB` (18s 601ms 974μs) |\n| `{1..1000000}` | `6.89 MB` (458ms 576μs) | `6.89 MB` (1s 491ms 621μs) |\n| `{1..100000}` | `588.89 kB` (20ms 728μs) | `588.89 kB` (156ms 919μs) |\n| `{1..10000}` | `48.89 kB` (2ms 202μs) | `48.89 kB` (13ms 641μs) |\n| `{1..1000}` | `3.89 kB` (1ms 796μs) | `3.89 kB` (1ms 958μs) |\n| `{1..100}` | `291 B` (424μs) | `291 B` (211μs) |\n| `{1..10}` | `20 B` (487μs) | `20 B` (72μs) |\n| `{1..3}` | `5 B` (166μs) | `5 B` (27μs) |\n\nIf you'd like to run these comparisons yourself, see [test/support/generate.js](test/support/generate.js).\n\n## Benchmarks\n\n### Running benchmarks\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm benchmark\n```\n\n### Latest results\n\nBraces is more accurate, without sacrificing performance.\n\n```bash\n# range (expanded)\n braces x 29,040 ops/sec ±3.69% (91 runs sampled))\n minimatch x 4,735 ops/sec ±1.28% (90 runs sampled)\n\n# range (optimized for regex)\n braces x 382,878 ops/sec ±0.56% (94 runs sampled)\n minimatch x 1,040 ops/sec ±0.44% (93 runs sampled)\n\n# nested ranges (expanded)\n braces x 19,744 ops/sec ±2.27% (92 runs sampled))\n minimatch x 4,579 ops/sec ±0.50% (93 runs sampled)\n\n# nested ranges (optimized for regex)\n braces x 246,019 ops/sec ±2.02% (93 runs sampled)\n minimatch x 1,028 ops/sec ±0.39% (94 runs sampled)\n\n# set (expanded) \n braces x 138,641 ops/sec ±0.53% (95 runs sampled)\n minimatch x 219,582 ops/sec ±0.98% (94 runs sampled)\n\n# set (optimized for regex)\n braces x 388,408 ops/sec ±0.41% (95 runs sampled)\n minimatch x 44,724 ops/sec ±0.91% (89 runs sampled)\n\n# nested sets (expanded)\n braces x 84,966 ops/sec ±0.48% (94 runs sampled)\n minimatch x 140,720 ops/sec ±0.37% (95 runs sampled)\n\n# nested sets (optimized for regex)\n braces x 263,340 ops/sec ±2.06% (92 runs sampled)\n minimatch x 28,714 ops/sec ±0.40% (90 runs sampled)\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- | \n| 197 | [jonschlinkert](https://github.com/jonschlinkert) | \n| 4 | [doowb](https://github.com/doowb) | \n| 1 | [es128](https://github.com/es128) | \n| 1 | [eush77](https://github.com/eush77) | \n| 1 | [hemanth](https://github.com/hemanth) | \n| 1 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) | \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._", "readmeFilename": "README.md", "_id": "braces@3.0.1", "_requested": { "type": "version", "registry": true, "raw": "braces@3.0.1", "name": "braces", "escapedName": "braces", "rawSpec": "3.0.1", "saveSpec": "[Circular]", "fetchSpec": "3.0.1" }, "_spec": "3.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "braces@3.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "fill-range": "^7.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/braces", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "fill-range": "^7.0.1", "gulp-format-md": "^2.0.0", "minimatch": "^3.0.4", "mocha": "^5.2.0", "time-require": "github:jonschlinkert/time-require" }, "keywords": [ "bash", "bracket", "character-class", "expand", "expansion", "expression", "extglob", "extglobs", "file", "files", "filter", "find", "glob", "globbing", "globs", "globstar", "lookahead", "lookaround", "lookbehind", "match", "matcher", "matches", "matching", "micromatch", "minimatch", "multimatch", "negate", "negation", "path", "pattern", "patterns", "posix", "regex", "regexp", "regular", "shell", "star", "wildcard" ], "verb": { "toc": "collapsible", "layout": "default", "tasks": [ "readme" ], "plugins": [ "gulp-format-md" ], "lint": { "reflinks": true }, "related": { "list": [ "braces", "expand-brackets", "extglob", "fill-range", "nanomatch" ] }, "reflinks": [ "extglob", "fill-range", "glob-object", "minimatch", "multimatch" ] }, "_resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.1.tgz", "_integrity": "sha512-6yawNHAc4S9Dh81xZCkZ5sXKH0/ly0t1DiOc+rnqzi0OvwS4DgRZU+HYTNDIgULgZXTNw5N8Vhxh2va8nEO6BA==", "_from": "micromatch@4.0.1", "readme": "# micromatch [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/micromatch.svg?style=flat)](https://www.npmjs.com/package/micromatch) [![NPM monthly downloads](https://img.shields.io/npm/dm/micromatch.svg?style=flat)](https://npmjs.org/package/micromatch) [![NPM total downloads](https://img.shields.io/npm/dt/micromatch.svg?style=flat)](https://npmjs.org/package/micromatch) [![Linux Build Status](https://img.shields.io/travis/micromatch/micromatch.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/micromatch)\n\n> Glob matching for javascript/node.js. A replacement and faster alternative to minimatch and multimatch.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n- [Install](#install)\n- [Quickstart](#quickstart)\n- [Why use micromatch?](#why-use-micromatch)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Matching features](#matching-features)\n- [Switching to micromatch](#switching-to-micromatch)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [From minimatch](#from-minimatch)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [From multimatch](#from-multimatch)\n- [API](#api)\n- [Options](#options)\n- [Options Examples](#options-examples)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.basename](#optionsbasename)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.bash](#optionsbash)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.expandRange](#optionsexpandrange)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.format](#optionsformat)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.ignore](#optionsignore)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.matchBase](#optionsmatchbase)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.noextglob](#optionsnoextglob)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nonegate](#optionsnonegate)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.noglobstar](#optionsnoglobstar)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nonull](#optionsnonull)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.nullglob](#optionsnullglob)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.onIgnore](#optionsonignore)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.onMatch](#optionsonmatch)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.onResult](#optionsonresult)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.posixSlashes](#optionsposixslashes)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [options.unescape](#optionsunescape)\n- [Extended globbing](#extended-globbing)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Extglobs](#extglobs)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Braces](#braces)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Regex character classes](#regex-character-classes)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Regex groups](#regex-groups)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [POSIX bracket expressions](#posix-bracket-expressions)\n- [Notes](#notes)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Bash 4.3 parity](#bash-43-parity)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Backslashes](#backslashes)\n- [Benchmarks](#benchmarks)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Running benchmarks](#running-benchmarks)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Latest results](#latest-results)\n- [Contributing](#contributing)\n- [About](#about)\n\n</details>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save micromatch\n```\n\n## Quickstart\n\n```js\nconst micromatch = require('micromatch');\n// micromatch(list, patterns[, options]);\n```\n\nThe [main export](#micromatch) takes a list of strings and one or more glob patterns:\n\n```js\nconsole.log(micromatch(['foo', 'bar', 'baz', 'qux'], ['f*', 'b*'])) //=> ['foo', 'bar', 'baz']\nconsole.log(micromatch(['foo', 'bar', 'baz', 'qux'], ['*', '!b*'])) //=> ['foo', 'qux']\n```\n\nUse [.isMatch()](#ismatch) to for boolean matching:\n\n```js\nconsole.log(micromatch.isMatch('foo', 'f*')) //=> true\nconsole.log(micromatch.isMatch('foo', ['b*', 'f*'])) //=> true\n```\n\n[Switching](#switching-to-micromatch) from minimatch and multimatch is easy!\n\n<br>\n\n## Why use micromatch?\n\n> micromatch is a [replacement](#switching-to-micromatch) for minimatch and multimatch\n\n* Supports all of the same matching features as [minimatch](https://github.com/isaacs/minimatch) and [multimatch](https://github.com/sindresorhus/multimatch)\n* More complete support for the Bash 4.3 specification than minimatch and multimatch. Micromatch passes _all of the spec tests_ from bash, including some that bash still fails.\n* **Fast & Performant** - Loads in about 5ms and performs [fast matches](#benchmarks).\n* **Glob matching** - Using wildcards (`*` and `?`), globstars (`**`) for nested directories\n* **[Advanced globbing](#advanced-globbing)** - Supports [extglobs](#extglobs), [braces](#braces), and [POSIX brackets](#posix-bracket-expressions), and support for escaping special characters with `\\` or quotes.\n* **Accurate** - Covers more scenarios [than minimatch](https://github.com/yarnpkg/yarn/pull/3339)\n* **Well tested** - More than 5,000 [test assertions](./test)\n* **Windows support** - More reliable windows support than minimatch and multimatch.\n* **[Safe](https://github.com/micromatch/braces#braces-is-safe)** - Micromatch is not subject to DoS with brace patterns like minimatch and multimatch.\n\n### Matching features\n\n* Support for multiple glob patterns (no need for wrappers like multimatch)\n* Wildcards (`**`, `*.js`)\n* Negation (`'!a/*.js'`, `'*!(b).js']`)\n* [extglobs](#extglobs) (`+(x|y)`, `!(a|b)`)\n* [POSIX character classes](#posix-bracket-expressions) (`[[:alpha:][:digit:]]`)\n* [brace expansion](https://github.com/micromatch/braces) (`foo/{1..5}.md`, `bar/{a,b,c}.js`)\n* regex character classes (`foo-[1-5].js`)\n* regex logical \"or\" (`foo/(abc|xyz).js`)\n\nYou can mix and match these features to create whatever patterns you need!\n\n## Switching to micromatch\n\n_(There is one notable difference between micromatch and minimatch in regards to how backslashes are handled. See [the notes about backslashes](#backslashes) for more information.)_\n\n### From minimatch\n\nUse [micromatch.isMatch()](#ismatch) instead of `minimatch()`:\n\n```js\nconsole.log(micromatch.isMatch('foo', 'b*')); //=> false\n```\n\nUse [micromatch.match()](#match) instead of `minimatch.match()`:\n\n```js\nconsole.log(micromatch.match(['foo', 'bar'], 'b*')); //=> 'bar'\n```\n\n### From multimatch\n\nSame signature:\n\n```js\nconsole.log(micromatch(['foo', 'bar', 'baz'], ['f*', '*z'])); //=> ['foo', 'baz']\n```\n\n## API\n\n**Params**\n\n* **{String|Array<string>}**: list List of strings to match.\n* **{String|Array<string>}**: patterns One or more glob patterns to use for matching.\n* **{Object}**: options See available [options](#options)\n* `returns` **{Array}**: Returns an array of matches\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm(list, patterns[, options]);\n\nconsole.log(mm(['a.js', 'a.txt'], ['*.js']));\n//=> [ 'a.js' ]\n```\n\n### [.matcher](index.js#L98)\n\nReturns a matcher function from the given glob `pattern` and `options`. The returned function takes a string to match as its only argument and returns true if the string is a match.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern\n* `options` **{Object}**\n* `returns` **{Function}**: Returns a matcher function.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.matcher(pattern[, options]);\n\nconst isMatch = mm.matcher('*.!(*a)');\nconsole.log(isMatch('a.a')); //=> false\nconsole.log(isMatch('a.b')); //=> true\n```\n\n### [.isMatch](index.js#L117)\n\nReturns true if **any** of the given glob `patterns` match the specified `string`.\n\n**Params**\n\n* **{String}**: str The string to test.\n* **{String|Array}**: patterns One or more glob patterns to use for matching.\n* **{Object}**: See available [options](#options).\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.isMatch(string, patterns[, options]);\n\nconsole.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\nconsole.log(mm.isMatch('a.a', 'b.*')); //=> false\n```\n\n### [.not](index.js#L136)\n\nReturns a list of strings that _**do not match any**_ of the given `patterns`.\n\n**Params**\n\n* `list` **{Array}**: Array of strings to match.\n* `patterns` **{String|Array}**: One or more glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of strings that **do not match** the given patterns.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.not(list, patterns[, options]);\n\nconsole.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n//=> ['b.b', 'c.c']\n```\n\n### [.contains](index.js#L176)\n\nReturns true if the given `string` contains the given pattern. Similar to [.isMatch](#isMatch) but the pattern can match any part of the string.\n\n**Params**\n\n* `str` **{String}**: The string to match.\n* `patterns` **{String|Array}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if the patter matches any part of `str`.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\n// mm.contains(string, pattern[, options]);\n\nconsole.log(mm.contains('aa/bb/cc', '*b'));\n//=> true\nconsole.log(mm.contains('aa/bb/cc', '*d'));\n//=> false\n```\n\n### [.matchKeys](index.js#L218)\n\nFilter the keys of the given object with the given `glob` pattern and `options`. Does not attempt to match nested keys. If you need this feature, use [glob-object](https://github.com/jonschlinkert/glob-object) instead.\n\n**Params**\n\n* `object` **{Object}**: The object with keys to filter.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Object}**: Returns an object with only keys that match the given patterns.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.matchKeys(object, patterns[, options]);\n\nconst obj = { aa: 'a', ab: 'b', ac: 'c' };\nconsole.log(mm.matchKeys(obj, '*b'));\n//=> { ab: 'b' }\n```\n\n### [.some](index.js#L247)\n\nReturns true if some of the strings in the given `list` match any of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test. Returns as soon as the first match is found.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.some(list, patterns[, options]);\n\nconsole.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// true\nconsole.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.every](index.js#L283)\n\nReturns true if every string in the given `list` matches any of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.every(list, patterns[, options]);\n\nconsole.log(mm.every('foo.js', ['foo.js']));\n// true\nconsole.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n// true\nconsole.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// false\nconsole.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.all](index.js#L322)\n\nReturns true if **all** of the given `patterns` match the specified string.\n\n**Params**\n\n* `str` **{String|Array}**: The string to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.all(string, patterns[, options]);\n\nconsole.log(mm.all('foo.js', ['foo.js']));\n// true\n\nconsole.log(mm.all('foo.js', ['*.js', '!foo.js']));\n// false\n\nconsole.log(mm.all('foo.js', ['*.js', 'foo.js']));\n// true\n\nconsole.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n// true\n```\n\n### [.capture](index.js#L349)\n\nReturns an array of matches captured by `pattern` in `string, or`null` if the pattern did not match.\n\n**Params**\n\n* `glob` **{String}**: Glob pattern to use for matching.\n* `input` **{String}**: String to match\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.capture(pattern, string[, options]);\n\nconsole.log(mm.capture('test/*.js', 'test/foo.js'));\n//=> ['foo']\nconsole.log(mm.capture('test/*.js', 'foo/bar.css'));\n//=> null\n```\n\n### [.makeRe](index.js#L375)\n\nCreate a regular expression from the given glob `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: A glob pattern to convert to regex.\n* `options` **{Object}**\n* `returns` **{RegExp}**: Returns a regex created from the given pattern.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.makeRe(pattern[, options]);\n\nconsole.log(mm.makeRe('*.js'));\n//=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n```\n\n### [.scan](index.js#L391)\n\nScan a glob pattern to separate the pattern into segments. Used by the [split](#split) method.\n\n**Params**\n\n* `pattern` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with\n\n**Example**\n\n```js\nconst mm = require('micromatch');\nconst state = mm.scan(pattern[, options]);\n```\n\n### [.parse](index.js#L407)\n\nParse a glob pattern to create the source string for a regular expression.\n\n**Params**\n\n* `glob` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with useful properties and output to be used as regex source string.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\nconst state = mm(pattern[, options]);\n```\n\n### [.braces](index.js#L434)\n\nProcess the given brace `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: String with brace pattern to process.\n* `options` **{Object}**: Any [options](#options) to change how expansion is performed. See the [braces](https://github.com/micromatch/braces) library for all available options.\n* `returns` **{Array}**\n\n**Example**\n\n```js\nconst { braces } = require('micromatch');\nconsole.log(braces('foo/{a,b,c}/bar'));\n//=> [ 'foo/(a|b|c)/bar' ]\n\nconsole.log(braces('foo/{a,b,c}/bar', { expand: true }));\n//=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n```\n\n## Options\n\n| **Option** | **Type** | **Default value** | **Description** |\n| --- | --- | --- | --- |\n| `basename` | `boolean` | `false` | If set, then patterns without slashes will be matched against the basename of the path if it contains slashes. For example, `a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`. |\n| `bash` | `boolean` | `false` | Follow bash matching rules more strictly - disallows backslashes as escape characters, and treats single stars as globstars (`**`). |\n| `capture` | `boolean` | `undefined` | Return regex matches in supporting methods. |\n| `contains` | `boolean` | `undefined` | Allows glob to match any part of the given string(s). |\n| `cwd` | `string` | `process.cwd()` | Current working directory. Used by `picomatch.split()` |\n| `debug` | `boolean` | `undefined` | Debug regular expressions when an error is thrown. |\n| `dot` | `boolean` | `false` | Match dotfiles. Otherwise dotfiles are ignored unless a `.` is explicitly defined in the pattern. |\n| `expandRange` | `function` | `undefined` | Custom function for expanding ranges in brace patterns, such as `{a..z}`. The function receives the range values as two arguments, and it must return a string to be used in the generated regex. It's recommended that returned strings be wrapped in parentheses. This option is overridden by the `expandBrace` option. |\n| `failglob` | `boolean` | `false` | Similar to the `failglob` behavior in Bash, throws an error when no matches are found. Based on the bash option of the same name. |\n| `fastpaths` | `boolean` | `true` | To speed up processing, full parsing is skipped for a handful common glob patterns. Disable this behavior by setting this option to `false`. |\n| `flags` | `boolean` | `undefined` | Regex flags to use in the generated regex. If defined, the `nocase` option will be overridden. |\n| [format](#optionsformat) | `function` | `undefined` | Custom function for formatting the returned string. This is useful for removing leading slashes, converting Windows paths to Posix paths, etc. |\n| `ignore` | `array\\|string` | `undefined` | One or more glob patterns for excluding strings that should not be matched from the result. |\n| `keepQuotes` | `boolean` | `false` | Retain quotes in the generated regex, since quotes may also be used as an alternative to backslashes. |\n| `literalBrackets` | `boolean` | `undefined` | When `true`, brackets in the glob pattern will be escaped so that only literal brackets will be matched. |\n| `lookbehinds` | `boolean` | `true` | Support regex positive and negative lookbehinds. Note that you must be using Node 8.1.10 or higher to enable regex lookbehinds. |\n| `matchBase` | `boolean` | `false` | Alias for `basename` |\n| `maxLength` | `boolean` | `65536` | Limit the max length of the input string. An error is thrown if the input string is longer than this value. |\n| `nobrace` | `boolean` | `false` | Disable brace matching, so that `{a,b}` and `{1..3}` would be treated as literal characters. |\n| `nobracket` | `boolean` | `undefined` | Disable matching with regex brackets. |\n| `nocase` | `boolean` | `false` | Perform case-insensitive matching. Equivalent to the regex `i` flag. Note that this option is ignored when the `flags` option is defined. |\n| `nodupes` | `boolean` | `true` | Deprecated, use `nounique` instead. This option will be removed in a future major release. By default duplicates are removed. Disable uniquification by setting this option to false. |\n| `noext` | `boolean` | `false` | Alias for `noextglob` |\n| `noextglob` | `boolean` | `false` | Disable support for matching with [extglobs](#extglobs) (like `+(a\\|b)`) |\n| `noglobstar` | `boolean` | `false` | Disable support for matching nested directories with globstars (`**`) |\n| `nonegate` | `boolean` | `false` | Disable support for negating with leading `!` |\n| `noquantifiers` | `boolean` | `false` | Disable support for regex quantifiers (like `a{1,2}`) and treat them as brace patterns to be expanded. |\n| [onIgnore](#optionsonIgnore) | `function` | `undefined` | Function to be called on ignored items. |\n| [onMatch](#optionsonMatch) | `function` | `undefined` | Function to be called on matched items. |\n| [onResult](#optionsonResult) | `function` | `undefined` | Function to be called on all items, regardless of whether or not they are matched or ignored. |\n| `posix` | `boolean` | `false` | Support [POSIX character classes](#posix-bracket-expressions) (\"posix brackets\"). |\n| `posixSlashes` | `boolean` | `undefined` | Convert all slashes in file paths to forward slashes. This does not convert slashes in the glob pattern itself |\n| `prepend` | `boolean` | `undefined` | String to prepend to the generated regex used for matching. |\n| `regex` | `boolean` | `false` | Use regular expression rules for `+` (instead of matching literal `+`), and for stars that follow closing parentheses or brackets (as in `)*` and `]*`). |\n| `strictBrackets` | `boolean` | `undefined` | Throw an error if brackets, braces, or parens are imbalanced. |\n| `strictSlashes` | `boolean` | `undefined` | When true, picomatch won't match trailing slashes with single stars. |\n| `unescape` | `boolean` | `undefined` | Remove preceding backslashes from escaped glob characters before creating the regular expression to perform matches. |\n| `unixify` | `boolean` | `undefined` | Alias for `posixSlashes`, for backwards compatitibility. |\n\n## Options Examples\n\n### options.basename\n\nAllow glob patterns without slashes to match a file path based on its basename. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `matchBase`.\n\n**Type**: `Boolean`\n\n**Default**: `false`\n\n**Example**\n\n```js\nmicromatch(['a/b.js', 'a/c.md'], '*.js');\n//=> []\n\nmicromatch(['a/b.js', 'a/c.md'], '*.js', { basename: true });\n//=> ['a/b.js']\n```\n\n### options.bash\n\nEnabled by default, this option enforces bash-like behavior with stars immediately following a bracket expression. Bash bracket expressions are similar to regex character classes, but unlike regex, a star following a bracket expression **does not repeat the bracketed characters**. Instead, the star is treated the same as any other star.\n\n**Type**: `Boolean`\n\n**Default**: `true`\n\n**Example**\n\n```js\nconst files = ['abc', 'ajz'];\nconsole.log(micromatch(files, '[a-c]*'));\n//=> ['abc', 'ajz']\n\nconsole.log(micromatch(files, '[a-c]*', { bash: false }));\n```\n\n### options.expandRange\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for expanding ranges in brace patterns. The [fill-range](https://github.com/jonschlinkert/fill-range) library is ideal for this purpose, or you can use custom code to do whatever you need.\n\n**Example**\n\nThe following example shows how to create a glob that matches a numeric folder name between `01` and `25`, with leading zeros.\n\n```js\nconst fill = require('fill-range');\nconst regex = micromatch.makeRe('foo/{01..25}/bar', {\n expandRange(a, b) {\n return `(${fill(a, b, { toRegex: true })})`;\n }\n});\n\nconsole.log(regex)\n//=> /^(?:foo\\/((?:0[1-9]|1[0-9]|2[0-5]))\\/bar)$/\n\nconsole.log(regex.test('foo/00/bar')) // false\nconsole.log(regex.test('foo/01/bar')) // true\nconsole.log(regex.test('foo/10/bar')) // true\nconsole.log(regex.test('foo/22/bar')) // true\nconsole.log(regex.test('foo/25/bar')) // true\nconsole.log(regex.test('foo/26/bar')) // false\n```\n\n### options.format\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for formatting strings before they're matched.\n\n**Example**\n\n```js\n// strip leading './' from strings\nconst format = str => str.replace(/^\\.\\//, '');\nconst isMatch = picomatch('foo/*.js', { format });\nconsole.log(isMatch('./foo/bar.js')) //=> true\n```\n\n### options.ignore\n\nString or array of glob patterns to match files to ignore.\n\n**Type**: `String|Array`\n\n**Default**: `undefined`\n\n```js\nconst isMatch = micromatch.matcher('*', { ignore: 'f*' });\nconsole.log(isMatch('foo')) //=> false\nconsole.log(isMatch('bar')) //=> true\nconsole.log(isMatch('baz')) //=> true\n```\n\n### options.matchBase\n\nAlias for [options.basename](#options-basename).\n\n### options.noextglob\n\nDisable extglob support, so that [extglobs](#extglobs) are regarded as literal characters.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Examples**\n\n```js\nconsole.log(micromatch(['a/z', 'a/b', 'a/!(z)'], 'a/!(z)'));\n//=> ['a/b', 'a/!(z)']\n\nconsole.log(micromatch(['a/z', 'a/b', 'a/!(z)'], 'a/!(z)', { noextglob: true }));\n//=> ['a/!(z)'] (matches only as literal characters)\n```\n\n### options.nonegate\n\nDisallow negation (`!`) patterns, and treat leading `!` as a literal character to match.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.noglobstar\n\nDisable matching with globstars (`**`).\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n```js\nmicromatch(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**');\n//=> ['a/b', 'a/b/c', 'a/b/c/d']\n\nmicromatch(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**', {noglobstar: true});\n//=> ['a/b']\n```\n\n### options.nonull\n\nAlias for [options.nullglob](#options-nullglob).\n\n### options.nullglob\n\nIf `true`, when no matches are found the actual (arrayified) glob pattern is returned instead of an empty array. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `nonull`.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.onIgnore\n\n```js\nconst onIgnore = ({ glob, regex, input, output }) => {\n console.log({ glob, regex, input, output });\n // { glob: '*', regex: /^(?:(?!\\.)(?=.)[^\\/]*?\\/?)$/, input: 'foo', output: 'foo' }\n};\n\nconst isMatch = micromatch.matcher('*', { onIgnore, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n### options.onMatch\n\n```js\nconst onMatch = ({ glob, regex, input, output }) => {\n console.log({ input, output });\n // { input: 'some\\\\path', output: 'some/path' }\n // { input: 'some\\\\path', output: 'some/path' }\n // { input: 'some\\\\path', output: 'some/path' }\n};\n\nconst isMatch = micromatch.matcher('**', { onMatch, posixSlashes: true });\nisMatch('some\\\\path');\nisMatch('some\\\\path');\nisMatch('some\\\\path');\n```\n\n### options.onResult\n\n```js\nconst onResult = ({ glob, regex, input, output }) => {\n console.log({ glob, regex, input, output });\n};\n\nconst isMatch = micromatch('*', { onResult, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n### options.posixSlashes\n\nConvert path separators on returned files to posix/unix-style forward slashes. Aliased as `unixify` for backwards compatibility.\n\n**Type**: `Boolean`\n\n**Default**: `true` on windows, `false` everywhere else.\n\n**Example**\n\n```js\nconsole.log(micromatch.match(['a\\\\b\\\\c'], 'a/**'));\n//=> ['a/b/c']\n\nconsole.log(micromatch.match(['a\\\\b\\\\c'], { posixSlashes: false }));\n//=> ['a\\\\b\\\\c']\n```\n\n### options.unescape\n\nRemove backslashes from escaped glob characters before creating the regular expression to perform matches.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Example**\n\nIn this example we want to match a literal `*`:\n\n```js\nconsole.log(micromatch.match(['abc', 'a\\\\*c'], 'a\\\\*c'));\n//=> ['a\\\\*c']\n\nconsole.log(micromatch.match(['abc', 'a\\\\*c'], 'a\\\\*c', { unescape: true }));\n//=> ['a*c']\n```\n\n<br>\n<br>\n\n## Extended globbing\n\nMicromatch supports the following extended globbing features.\n\n### Extglobs\n\nExtended globbing, as described by the bash man page:\n\n| **pattern** | **regex equivalent** | **description** |\n| --- | --- | --- |\n| `?(pattern)` | `(pattern)?` | Matches zero or one occurrence of the given patterns |\n| `*(pattern)` | `(pattern)*` | Matches zero or more occurrences of the given patterns |\n| `+(pattern)` | `(pattern)+` | Matches one or more occurrences of the given patterns |\n| `@(pattern)` | `(pattern)` <sup>*</sup> | Matches one of the given patterns |\n| `!(pattern)` | N/A (equivalent regex is much more complicated) | Matches anything except one of the given patterns |\n\n<sup><strong>*</strong></sup> Note that `@` isn't a regex character.\n\n### Braces\n\nBrace patterns can be used to match specific ranges or sets of characters.\n\n**Example**\n\nThe pattern `{f,b}*/{1..3}/{b,q}*` would match any of following strings:\n\n```\nfoo/1/bar\nfoo/2/bar\nfoo/3/bar\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n```\n\nVisit [braces](https://github.com/micromatch/braces) to see the full range of features and options related to brace expansion, or to create brace matching or expansion related issues.\n\n### Regex character classes\n\nGiven the list: `['a.js', 'b.js', 'c.js', 'd.js', 'E.js']`:\n\n* `[ac].js`: matches both `a` and `c`, returning `['a.js', 'c.js']`\n* `[b-d].js`: matches from `b` to `d`, returning `['b.js', 'c.js', 'd.js']`\n* `[b-d].js`: matches from `b` to `d`, returning `['b.js', 'c.js', 'd.js']`\n* `a/[A-Z].js`: matches and uppercase letter, returning `['a/E.md']`\n\nLearn about [regex character classes](http://www.regular-expressions.info/charclass.html).\n\n### Regex groups\n\nGiven `['a.js', 'b.js', 'c.js', 'd.js', 'E.js']`:\n\n* `(a|c).js`: would match either `a` or `c`, returning `['a.js', 'c.js']`\n* `(b|d).js`: would match either `b` or `d`, returning `['b.js', 'd.js']`\n* `(b|[A-Z]).js`: would match either `b` or an uppercase letter, returning `['b.js', 'E.js']`\n\nAs with regex, parens can be nested, so patterns like `((a|b)|c)/b` will work. Although brace expansion might be friendlier to use, depending on preference.\n\n### POSIX bracket expressions\n\nPOSIX brackets are intended to be more user-friendly than regex character classes. This of course is in the eye of the beholder.\n\n**Example**\n\n```js\nconsole.log(micromatch.isMatch('a1', '[[:alpha:][:digit:]]')) //=> true\nconsole.log(micromatch.isMatch('a1', '[[:alpha:][:alpha:]]')) //=> false\n```\n\n***\n\n## Notes\n\n### Bash 4.3 parity\n\nWhenever possible matching behavior is based on behavior Bash 4.3, which is mostly consistent with minimatch.\n\nHowever, it's suprising how many edge cases and rabbit holes there are with glob matching, and since there is no real glob specification, and micromatch is more accurate than both Bash and minimatch, there are cases where best-guesses were made for behavior. In a few cases where Bash had no answers, we used wildmatch (used by git) as a fallback.\n\n### Backslashes\n\nThere is an important, notable difference between minimatch and micromatch _in regards to how backslashes are handled_ in glob patterns.\n\n* Micromatch exclusively and explicitly reserves backslashes for escaping characters in a glob pattern, even on windows, which is consistent with bash behavior. _More importantly, unescaping globs can result in unsafe regular expressions_.\n* Minimatch converts all backslashes to forward slashes, which means you can't use backslashes to escape any characters in your glob patterns.\n\nWe made this decision for micromatch for a couple of reasons:\n\n* Consistency with bash conventions.\n* Glob patterns are not filepaths. They are a type of [regular language](https://en.wikipedia.org/wiki/Regular_language) that is converted to a JavaScript regular expression. Thus, when forward slashes are defined in a glob pattern, the resulting regular expression will match windows or POSIX path separators just fine.\n\n**A note about joining paths to globs**\n\nNote that when you pass something like `path.join('foo', '*')` to micromatch, you are creating a filepath and expecting it to still work as a glob pattern. This causes problems on windows, since the `path.sep` is `\\\\`.\n\nIn other words, since `\\\\` is reserved as an escape character in globs, on windows `path.join('foo', '*')` would result in `foo\\\\*`, which tells micromatch to match `*` as a literal character. This is the same behavior as bash.\n\nTo solve this, you might be inspired to do something like `'foo\\\\*'.replace(/\\\\/g, '/')`, but this causes another, potentially much more serious, problem.\n\n## Benchmarks\n\n### Running benchmarks\n\nInstall dependencies for running benchmarks:\n\n```sh\n$ cd bench && npm install \n```\n\nRun the benchmarks:\n\n```sh\n$ npm run bench\n```\n\n### Latest results\n\nAs of April 10, 2019 (longer bars are better):\n\n```sh\n# .makeRe star\n micromatch x 1,724,735 ops/sec ±1.69% (87 runs sampled))\n minimatch x 649,565 ops/sec ±1.93% (91 runs sampled)\n\n# .makeRe star; dot=true\n micromatch x 1,302,127 ops/sec ±1.43% (92 runs sampled)\n minimatch x 556,242 ops/sec ±0.71% (86 runs sampled)\n\n# .makeRe globstar\n micromatch x 1,393,992 ops/sec ±0.71% (89 runs sampled)\n minimatch x 1,112,801 ops/sec ±2.02% (91 runs sampled)\n\n# .makeRe globstars\n micromatch x 1,419,097 ops/sec ±0.34% (94 runs sampled)\n minimatch x 541,207 ops/sec ±1.66% (93 runs sampled)\n\n# .makeRe with leading star\n micromatch x 1,247,825 ops/sec ±0.97% (94 runs sampled)\n minimatch x 489,660 ops/sec ±0.63% (94 runs sampled)\n\n# .makeRe - braces\n micromatch x 206,301 ops/sec ±1.62% (81 runs sampled))\n minimatch x 115,986 ops/sec ±0.59% (94 runs sampled)\n\n# .makeRe braces - range (expanded)\n micromatch x 27,782 ops/sec ±0.79% (88 runs sampled)\n minimatch x 4,683 ops/sec ±1.20% (92 runs sampled)\n\n# .makeRe braces - range (compiled)\n micromatch x 134,056 ops/sec ±2.73% (77 runs sampled))\n minimatch x 977 ops/sec ±0.85% (91 runs sampled)d)\n\n# .makeRe braces - nested ranges (expanded)\n micromatch x 18,353 ops/sec ±0.95% (91 runs sampled)\n minimatch x 4,514 ops/sec ±1.04% (93 runs sampled)\n\n# .makeRe braces - nested ranges (compiled)\n micromatch x 38,916 ops/sec ±1.85% (82 runs sampled)\n minimatch x 980 ops/sec ±0.54% (93 runs sampled)d)\n\n# .makeRe braces - set (compiled)\n micromatch x 141,088 ops/sec ±1.70% (70 runs sampled))\n minimatch x 43,385 ops/sec ±0.87% (93 runs sampled)\n\n# .makeRe braces - nested sets (compiled)\n micromatch x 87,272 ops/sec ±2.85% (71 runs sampled))\n minimatch x 25,327 ops/sec ±1.59% (86 runs sampled)\n```\n\n## Contributing\n\nAll contributions are welcome! Please read [the contributing guide](.github/contributing.md) to get started.\n\n**Bug reports**\n\nPlease create an issue if you encounter a bug or matching behavior that doesn't seem correct. If you find a matching-related issue, please:\n\n* [research existing issues first](../../issues) (open and closed)\n* visit the [GNU Bash documentation](https://www.gnu.org/software/bash/manual/) to see how Bash deals with the pattern\n* visit the [minimatch](https://github.com/isaacs/minimatch) documentation to cross-check expected behavior in node.js\n* if all else fails, since there is no real specification for globs we will probably need to discuss expected behavior and decide how to resolve it. which means any detail you can provide to help with this discussion would be greatly appreciated.\n\n**Platform issues**\n\nIt's important to us that micromatch work consistently on all platforms. If you encounter any platform-specific matching or path related issues, please let us know (pull requests are also greatly appreciated).\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [braces](https://www.npmjs.com/package/braces): Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support… [more](https://github.com/micromatch/braces) | [homepage](https://github.com/micromatch/braces \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\")\n* [expand-brackets](https://www.npmjs.com/package/expand-brackets): Expand POSIX bracket expressions (character classes) in glob patterns. | [homepage](https://github.com/micromatch/expand-brackets \"Expand POSIX bracket expressions (character classes) in glob patterns.\")\n* [extglob](https://www.npmjs.com/package/extglob): Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob… [more](https://github.com/micromatch/extglob) | [homepage](https://github.com/micromatch/extglob \"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.\")\n* [fill-range](https://www.npmjs.com/package/fill-range): Fill in a range of numbers or letters, optionally passing an increment or `step` to… [more](https://github.com/jonschlinkert/fill-range) | [homepage](https://github.com/jonschlinkert/fill-range \"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\")\n* [nanomatch](https://www.npmjs.com/package/nanomatch): Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash… [more](https://github.com/micromatch/nanomatch) | [homepage](https://github.com/micromatch/nanomatch \"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- | \n| 475 | [jonschlinkert](https://github.com/jonschlinkert) | \n| 12 | [es128](https://github.com/es128) | \n| 8 | [doowb](https://github.com/doowb) | \n| 3 | [paulmillr](https://github.com/paulmillr) | \n| 2 | [TrySound](https://github.com/TrySound) | \n| 2 | [MartinKolarik](https://github.com/MartinKolarik) | \n| 2 | [Tvrqvoise](https://github.com/Tvrqvoise) | \n| 2 | [tunnckoCore](https://github.com/tunnckoCore) | \n| 1 | [amilajack](https://github.com/amilajack) | \n| 1 | [mrmlnc](https://github.com/mrmlnc) | \n| 1 | [devongovett](https://github.com/devongovett) | \n| 1 | [DianeLooney](https://github.com/DianeLooney) | \n| 1 | [UltCombo](https://github.com/UltCombo) | \n| 1 | [tomByrer](https://github.com/tomByrer) | \n| 1 | [fidian](https://github.com/fidian) | \n| 1 | [simlu](https://github.com/simlu) | \n| 1 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) | \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 10, 2019._", "readmeFilename": "README.md", "_id": "micromatch@4.0.1", "_requested": { "type": "version", "registry": true, "raw": "micromatch@4.0.1", "name": "micromatch", "escapedName": "micromatch", "rawSpec": "4.0.1", "saveSpec": "[Circular]", "fetchSpec": "4.0.1" }, "_spec": "4.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "micromatch@4.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "braces": "^3.0.1", "picomatch": "^2.0.3" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/micromatch", "error": "[Circular]", "extraneous": false }, "pify": { "name": "pify", "version": "4.0.1", "description": "Promisify a callback-style function", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "_resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz", "_integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==", "_from": "pify@4.0.1", "readme": "# pify [![Build Status](https://travis-ci.org/sindresorhus/pify.svg?branch=master)](https://travis-ci.org/sindresorhus/pify)\n\n> Promisify a callback-style function\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-pify?utm_source=npm-pify&utm_medium=referral&utm_campaign=readme\">Get professional support for 'pify' with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n---\n\n\n## Install\n\n```\n$ npm install pify\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst pify = require('pify');\n\n// Promisify a single function\npify(fs.readFile)('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n\n// Promisify all methods in a module\npify(fs).readFile('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n```\n\n\n## API\n\n### pify(input, [options])\n\nReturns a `Promise` wrapped version of the supplied function or module.\n\n#### input\n\nType: `Function` `Object`\n\nCallback-style function or module whose methods you want to promisify.\n\n#### options\n\n##### multiArgs\n\nType: `boolean`<br>\nDefault: `false`\n\nBy default, the promisified function will only return the second argument from the callback, which works fine for most APIs. This option can be useful for modules like `request` that return multiple arguments. Turning this on will make it return an array of all arguments from the callback, excluding the error argument, instead of just the second argument. This also applies to rejections, where it returns an array of all the callback arguments, including the error.\n\n```js\nconst request = require('request');\nconst pify = require('pify');\n\npify(request, {multiArgs: true})('https://sindresorhus.com').then(result => {\n\tconst [httpResponse, body] = result;\n});\n```\n\n##### include\n\nType: `string[]` `RegExp[]`\n\nMethods in a module to promisify. Remaining methods will be left untouched.\n\n##### exclude\n\nType: `string[]` `RegExp[]`<br>\nDefault: `[/.+(Sync|Stream)$/]`\n\nMethods in a module **not** to promisify. Methods with names ending with `'Sync'` are excluded by default.\n\n##### excludeMain\n\nType: `boolean`<br>\nDefault: `false`\n\nIf given module is a function itself, it will be promisified. Turn this option on if you want to promisify only methods of the module.\n\n```js\nconst pify = require('pify');\n\nfunction fn() {\n\treturn true;\n}\n\nfn.method = (data, callback) => {\n\tsetImmediate(() => {\n\t\tcallback(null, data);\n\t});\n};\n\n// Promisify methods but not `fn()`\nconst promiseFn = pify(fn, {excludeMain: true});\n\nif (promiseFn()) {\n\tpromiseFn.method('hi').then(data => {\n\t\tconsole.log(data);\n\t});\n}\n```\n\n##### errorFirst\n\nType: `boolean`<br>\nDefault: `true`\n\nWhether the callback has an error as the first argument. You'll want to set this to `false` if you're dealing with an API that doesn't have an error as the first argument, like `fs.exists()`, some browser APIs, Chrome Extension APIs, etc.\n\n##### promiseModule\n\nType: `Function`\n\nCustom promise module to use instead of the native one.\n\nCheck out [`pinkie-promise`](https://github.com/floatdrop/pinkie-promise) if you need a tiny promise polyfill.\n\n\n## Related\n\n- [p-event](https://github.com/sindresorhus/p-event) - Promisify an event by waiting for it to be emitted\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/pify#readme", "_id": "pify@4.0.1", "_requested": { "type": "version", "registry": true, "raw": "pify@4.0.1", "name": "pify", "escapedName": "pify", "rawSpec": "4.0.1", "saveSpec": "[Circular]", "fetchSpec": "4.0.1" }, "_spec": "4.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/pify", "error": "[Circular]", "extraneous": false }, "postcss-selector-parser": { "name": "postcss-selector-parser", "version": "3.1.1", "devDependencies": { "ava": "^0.20.0", "babel-cli": "^6.4.0", "babel-core": "^6.4.0", "babel-plugin-add-module-exports": "^0.2.0", "babel-plugin-precompile-charcodes": "^1.0.0", "babel-preset-es2015": "^6.3.13", "babel-preset-es2015-loose": "^7.0.0", "babel-preset-stage-0": "^6.3.13", "babel-register": "^6.9.0", "coveralls": "^2.11.6", "del-cli": "^0.2.0", "eslint": "^3.0.0", "eslint-config-cssnano": "^3.0.0", "eslint-plugin-babel": "^3.3.0", "eslint-plugin-import": "^1.10.2", "glob": "^7.0.3", "minimist": "^1.2.0", "nyc": "^10.0.0", "postcss": "^6.0.6" }, "main": "dist/index.js", "types": "postcss-selector-parser.d.ts", "files": [ "API.md", "CHANGELOG.md", "LICENSE-MIT", "dist", "postcss-selector-parser.d.ts" ], "scripts": { "pretest": "eslint src", "prepublish": "del-cli dist && BABEL_ENV=publish babel src --out-dir dist --ignore /__tests__/", "report": "nyc report --reporter=html", "test": "nyc ava src/__tests__/*.js" }, "dependencies": { "dot-prop": { "name": "dot-prop", "version": "4.2.0", "description": "Get, set, or delete a property from a nested object using a dot path", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/dot-prop.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=4" }, "scripts": { "test": "xo && ava", "bench": "matcha bench.js" }, "files": [ "index.js" ], "keywords": [ "obj", "object", "prop", "property", "dot", "path", "get", "set", "delete", "del", "access", "notation", "dotty" ], "dependencies": { "is-obj": { "name": "is-obj", "version": "1.0.1", "description": "Check if a value is an object", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/is-obj.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=0.10.0" }, "scripts": { "test": "xo && ava" }, "files": [ "index.js" ], "keywords": [ "obj", "object", "is", "check", "test", "type" ], "devDependencies": { "ava": "*", "xo": "*" }, "_resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz", "_integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8=", "_from": "is-obj@1.0.1", "readme": "# is-obj [![Build Status](https://travis-ci.org/sindresorhus/is-obj.svg?branch=master)](https://travis-ci.org/sindresorhus/is-obj)\n\n> Check if a value is an object\n\nKeep in mind that array, function, regexp, etc, are objects in JavaScript.<br>\nSee [`is-plain-obj`](https://github.com/sindresorhus/is-plain-obj) if you want to check for plain objects.\n\n\n## Install\n\n```\n$ npm install --save is-obj\n```\n\n\n## Usage\n\n```js\nconst isObj = require('is-obj');\n\nisObj({foo: 'bar'});\n//=> true\n\nisObj([1, 2, 3]);\n//=> true\n\nisObj('foo');\n//=> false\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/is-obj/issues" }, "homepage": "https://github.com/sindresorhus/is-obj#readme", "_id": "is-obj@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "is-obj@1.0.1", "name": "is-obj", "escapedName": "is-obj", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-obj@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/is-obj", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "*", "matcha": "^0.7.0", "xo": "*" }, "xo": { "esnext": true }, "_resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-4.2.0.tgz", "_integrity": "sha512-tUMXrxlExSW6U2EXiiKGSBVdYgtV8qlHL+C10TsW4PURY/ic+eaysnSkwB4kA/mBlCyy/IKDJ+Lc3wbWeaXtuQ==", "_from": "dot-prop@4.2.0", "readme": "# dot-prop [![Build Status](https://travis-ci.org/sindresorhus/dot-prop.svg?branch=master)](https://travis-ci.org/sindresorhus/dot-prop)\n\n> Get, set, or delete a property from a nested object using a dot path\n\n\n## Install\n\n```\n$ npm install --save dot-prop\n```\n\n\n## Usage\n\n```js\nconst dotProp = require('dot-prop');\n\n// getter\ndotProp.get({foo: {bar: 'unicorn'}}, 'foo.bar');\n//=> 'unicorn'\n\ndotProp.get({foo: {bar: 'a'}}, 'foo.notDefined.deep');\n//=> undefined\n\ndotProp.get({foo: {bar: 'a'}}, 'foo.notDefined.deep', 'default value');\n//=> 'default value'\n\ndotProp.get({foo: {'dot.dot': 'unicorn'}}, 'foo.dot\\\\.dot');\n//=> 'unicorn'\n\n// setter\nconst obj = {foo: {bar: 'a'}};\ndotProp.set(obj, 'foo.bar', 'b');\nconsole.log(obj);\n//=> {foo: {bar: 'b'}}\n\nconst foo = dotProp.set({}, 'foo.bar', 'c');\nconsole.log(foo);\n//=> {foo: {bar: 'c'}}\n\ndotProp.set(obj, 'foo.baz', 'x');\nconsole.log(obj);\n//=> {foo: {bar: 'b', baz: 'x'}}\n\n// has\ndotProp.has({foo: {bar: 'unicorn'}}, 'foo.bar');\n//=> true\n\n// deleter\nconst obj = {foo: {bar: 'a'}};\ndotProp.delete(obj, 'foo.bar');\nconsole.log(obj);\n//=> {foo: {}}\n\nobj.foo.bar = {x: 'y', y: 'x'};\ndotProp.delete(obj, 'foo.bar.x');\nconsole.log(obj);\n//=> {foo: {bar: {y: 'x'}}}\n```\n\n\n## API\n\n### get(obj, path, [defaultValue])\n\n### set(obj, path, value)\n\nReturns the object.\n\n### has(obj, path)\n\n### delete(obj, path)\n\n#### obj\n\nType: `Object`\n\nObject to get, set, or delete the `path` value.\n\n#### path\n\nType: `string`\n\nPath of the property in the object, using `.` to separate each nested key.\n\nUse `\\\\.` if you have a `.` in the key.\n\n#### value\n\nType: `any`\n\nValue to set at `path`.\n\n#### defaultValue\n\nType: `any`\n\nDefault value.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/dot-prop/issues" }, "homepage": "https://github.com/sindresorhus/dot-prop#readme", "_id": "dot-prop@4.2.0", "_requested": { "type": "version", "registry": true, "raw": "dot-prop@4.2.0", "name": "dot-prop", "escapedName": "dot-prop", "rawSpec": "4.2.0", "saveSpec": "[Circular]", "fetchSpec": "4.2.0" }, "_spec": "4.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "dot-prop@4.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "is-obj": "^1.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/dot-prop", "error": "[Circular]", "extraneous": false }, "indexes-of": { "name": "indexes-of", "description": "line String/Array#indexOf but return all the indexes in an array", "version": "1.0.1", "homepage": "https://github.com/dominictarr/indexes-of", "repository": { "type": "git", "url": "git://github.com/dominictarr/indexes-of.git" }, "scripts": { "test": "node test.js" }, "author": { "name": "Dominic Tarr", "email": "dominic.tarr@gmail.com", "url": "dominictarr.com" }, "license": "MIT", "devDependencies": { "tape": "~2.1.0" }, "_resolved": "https://registry.npmjs.org/indexes-of/-/indexes-of-1.0.1.tgz", "_integrity": "sha1-8w9xbI4r00bHtn0985FVZqfAVgc=", "_from": "indexes-of@1.0.1", "readme": "# indexes-of\n\nlike Array/String#indexOf but return all the indexes in an array.\n\n``` js\nvar indexesOf = require('indexes-of')\n\nvar twosIndexes = indexesOf([1, 2, 3, 4, 5, 4, 3, 2, 1], 2)\n\nconsole.log(twosIndexes)\n\n// [1, 7]\n\n```\n\n# Haiku\n\n* A 5 line module.\n* But the tests are 40 lines.\n* npm publish.\n\n## License\n\nMIT\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/dominictarr/indexes-of/issues" }, "_id": "indexes-of@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "indexes-of@1.0.1", "name": "indexes-of", "escapedName": "indexes-of", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "indexes-of@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/indexes-of", "error": "[Circular]", "extraneous": false }, "uniq": { "name": "uniq", "version": "1.0.1", "description": "Removes duplicates from a sorted array in place", "main": "uniq.js", "directories": { "test": "test" }, "dependencies": {}, "devDependencies": { "tape": "^2.12.3" }, "scripts": { "test": "tape test/*.js" }, "repository": { "type": "git", "url": "git://github.com/mikolalysenko/uniq.git" }, "keywords": [ "array", "duplicate", "unique", "uniq", "remove", "sort", "in", "place", "no", "copy" ], "author": { "name": "Mikola Lysenko" }, "license": "MIT", "readmeFilename": "README.md", "gitHead": "e9828cfcb97e25a351f95b39fdf3c31876ff3985", "_resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz", "_integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8=", "_from": "uniq@1.0.1", "readme": "uniq\n====\nRemoves all duplicates from an array in place.\n\nUsage\n=====\nFirst install using npm:\n\n npm install uniq\n \nThen use it as follows:\n\n```javascript\n\nvar arr = [1, 1, 2, 2, 3, 5]\n\nrequire(\"uniq\")(arr)\nconsole.log(arr)\n\n//Prints:\n//\n// 1,2,3,5\n//\n```\n\n## `require(\"uniq\")(array[, compare, sorted])`\nRemoves all duplicates from a sorted array in place.\n\n* `array` is the array to remove items from\n* `compare` is an optional comparison function that returns 0 when two items are equal, and something non-zero when they are different. If unspecified, then the default equals will be used.\n* `sorted` if true, then assume array is already sorted\n\n**Returns:** A reference to `array`\n\n**Time Complexity:** `O(array.length 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps log(arra.length))` or `O(array.length)` if `sorted`\n\n\n## Why use this instead of underscore.uniq[ue]?\nA few reasons:\n\n* This library updates the array in place without making an extra copy (and so it is faster for large arrays)\n* It also accepts a custom comparison function so you can remove duplicates from arrays containing object\n* It is more modular in the sense that it doesn't come with a bazillion other utility grab bag functions.\n\n# Credits\n(c) 2013 Mikola Lysenko. MIT License\n", "bugs": { "url": "https://github.com/mikolalysenko/uniq/issues" }, "homepage": "https://github.com/mikolalysenko/uniq#readme", "_id": "uniq@1.0.1", "_requested": { "type": "version", "registry": true, "raw": "uniq@1.0.1", "name": "uniq", "escapedName": "uniq", "rawSpec": "1.0.1", "saveSpec": "[Circular]", "fetchSpec": "1.0.1" }, "_spec": "1.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "uniq@1.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/uniq", "error": "[Circular]", "extraneous": false } }, "license": "MIT", "engines": { "node": ">=4" }, "homepage": "https://github.com/postcss/postcss-selector-parser", "contributors": [ { "name": "Ben Briggs", "email": "beneb.info@gmail.com", "url": "http://beneb.info" }, { "name": "Chris Eppstein", "email": "chris@eppsteins.net", "url": "http://twitter.com/chriseppstein" } ], "repository": { "type": "git", "url": "git+https://github.com/postcss/postcss-selector-parser.git" }, "ava": { "require": "babel-register", "concurrency": 5 }, "nyc": { "exclude": [ "node_modules", "**/__tests__" ] }, "eslintConfig": { "extends": "cssnano" }, "_resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.1.tgz", "_integrity": "sha1-T4dfSvsMllc9XPTXQBGu4lCn6GU=", "_from": "postcss-selector-parser@3.1.1", "readme": "# postcss-selector-parser [![Build Status](https://travis-ci.org/postcss/postcss-selector-parser.svg?branch=master)](https://travis-ci.org/postcss/postcss-selector-parser)\n\n> Selector parser with built in methods for working with selector strings.\n\n## Install\n\nWith [npm](https://npmjs.com/package/postcss-selector-parser) do:\n\n```\nnpm install postcss-selector-parser\n```\n\n## Quick Start\n\n```js\nconst parser = require('postcss-selector-parser');\nconst transform = selectors => {\n selectors.walk(selector => {\n // do something with the selector\n console.log(String(selector))\n });\n};\n\nconst transformed = parser(transform).processSync('h1, h2, h3');\n```\n\nTo normalize selector whitespace:\n\n```js\nconst parser = require('postcss-selector-parser');\nconst normalized = parser().processSync('h1, h2, h3', {lossless: false});\n// -> h1,h2,h3\n```\n\nAsync support is provided through `parser.process` and will resolve a Promise\nwith the resulting selector string.\n\n## API\n\nPlease see [API.md](API.md).\n\n## Credits\n\n* Huge thanks to Andrey Sitnik (@ai) for work on PostCSS which helped\n accelerate this module's development.\n\n## License\n\nMIT\n", "readmeFilename": "README.md", "description": "> Selector parser with built in methods for working with selector strings.", "bugs": { "url": "https://github.com/postcss/postcss-selector-parser/issues" }, "_id": "postcss-selector-parser@3.1.1", "_requested": { "type": "version", "registry": true, "raw": "postcss-selector-parser@3.1.1", "name": "postcss-selector-parser", "escapedName": "postcss-selector-parser", "rawSpec": "3.1.1", "saveSpec": "[Circular]", "fetchSpec": "3.1.1" }, "_spec": "3.1.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "postcss-selector-parser@3.1.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "dot-prop": "^4.1.1", "indexes-of": "^1.0.1", "uniq": "^1.0.1" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/postcss-selector-parser", "error": "[Circular]", "extraneous": false }, "resolve-from": { "name": "resolve-from", "version": "5.0.0", "description": "Resolve the path of a module like `require.resolve()` but from a given path", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/resolve-from.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=8" }, "scripts": { "test": "xo && ava && tsd" }, "files": [ "index.js", "index.d.ts" ], "keywords": [ "require", "resolve", "path", "module", "from", "like", "import" ], "devDependencies": { "ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0" }, "_resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz", "_integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==", "_from": "resolve-from@5.0.0", "readme": "# resolve-from [![Build Status](https://travis-ci.org/sindresorhus/resolve-from.svg?branch=master)](https://travis-ci.org/sindresorhus/resolve-from)\n\n> Resolve the path of a module like [`require.resolve()`](https://nodejs.org/api/globals.html#globals_require_resolve) but from a given path\n\n\n## Install\n\n```\n$ npm install resolve-from\n```\n\n\n## Usage\n\n```js\nconst resolveFrom = require('resolve-from');\n\n// There is a file at `./foo/bar.js`\n\nresolveFrom('foo', './bar');\n//=> '/Users/sindresorhus/dev/test/foo/bar.js'\n```\n\n\n## API\n\n### resolveFrom(fromDirectory, moduleId)\n\nLike `require()`, throws when the module can't be found.\n\n### resolveFrom.silent(fromDirectory, moduleId)\n\nReturns `undefined` instead of throwing when the module can't be found.\n\n#### fromDirectory\n\nType: `string`\n\nDirectory to resolve from.\n\n#### moduleId\n\nType: `string`\n\nWhat you would use in `require()`.\n\n\n## Tip\n\nCreate a partial using a bound function if you want to resolve from the same `fromDirectory` multiple times:\n\n```js\nconst resolveFromFoo = resolveFrom.bind(null, 'foo');\n\nresolveFromFoo('./bar');\nresolveFromFoo('./baz');\n```\n\n\n## Related\n\n- [resolve-cwd](https://github.com/sindresorhus/resolve-cwd) - Resolve the path of a module from the current working directory\n- [import-from](https://github.com/sindresorhus/import-from) - Import a module from a given path\n- [import-cwd](https://github.com/sindresorhus/import-cwd) - Import a module from the current working directory\n- [resolve-pkg](https://github.com/sindresorhus/resolve-pkg) - Resolve the path of a package regardless of it having an entry point\n- [import-lazy](https://github.com/sindresorhus/import-lazy) - Import a module lazily\n- [resolve-global](https://github.com/sindresorhus/resolve-global) - Resolve the path of a globally installed module\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/resolve-from/issues" }, "homepage": "https://github.com/sindresorhus/resolve-from#readme", "_id": "resolve-from@5.0.0", "_requested": { "type": "version", "registry": true, "raw": "resolve-from@5.0.0", "name": "resolve-from", "escapedName": "resolve-from", "rawSpec": "5.0.0", "saveSpec": "[Circular]", "fetchSpec": "5.0.0" }, "_spec": "5.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "resolve-from@5.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/resolve-from", "error": "[Circular]", "extraneous": false }, "slash": { "name": "slash", "version": "2.0.0", "description": "Convert Windows backslash paths to slash paths", "license": "MIT", "repository": "[Circular]", "author": "[Circular]", "engines": "[Circular]", "scripts": "[Circular]", "files": "[Circular]", "keywords": "[Circular]", "devDependencies": "[Circular]", "_resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz", "_integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==", "_from": "slash@2.0.0", "readme": "# slash [![Build Status](https://travis-ci.org/sindresorhus/slash.svg?branch=master)](https://travis-ci.org/sindresorhus/slash)\n\n> Convert Windows backslash paths to slash paths: `foo\\\\bar` ➔ `foo/bar`\n\n[Forward-slash paths can be used in Windows](http://superuser.com/a/176395/6877) as long as they're not extended-length paths and don't contain any non-ascii characters.\n\nThis was created since the `path` methods in Node outputs `\\\\` paths on Windows.\n\n\n## Install\n\n```\n$ npm install slash\n```\n\n\n## Usage\n\n```js\nconst path = require('path');\nconst slash = require('slash');\n\nconst str = path.join('foo', 'bar');\n// Unix => foo/bar\n// Windows => foo\\\\bar\n\nslash(str);\n// Unix => foo/bar\n// Windows => foo/bar\n```\n\n\n## API\n\n### slash(path)\n\nType: `string`\n\nAccepts a Windows backslash path and returns a slash path.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": "[Circular]", "homepage": "https://github.com/sindresorhus/slash#readme", "_id": "slash@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "slash@2.0.0", "name": "slash", "escapedName": "slash", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "dependencies": {}, "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/slash", "error": "[Circular]", "extraneous": false }, "string-width": { "name": "string-width", "version": "4.1.0", "description": "Get the visual width of a string - the number of columns required to display it", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/string-width.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=8" }, "scripts": { "test": "xo && ava && tsd" }, "files": [ "index.js", "index.d.ts" ], "keywords": [ "string", "character", "unicode", "width", "visual", "column", "columns", "fullwidth", "full-width", "full", "ansi", "escape", "codes", "cli", "command-line", "terminal", "console", "cjk", "chinese", "japanese", "korean", "fixed-width" ], "dependencies": { "emoji-regex": { "name": "emoji-regex", "version": "8.0.0", "description": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.", "homepage": "https://mths.be/emoji-regex", "main": "index.js", "types": "index.d.ts", "keywords": [ "unicode", "regex", "regexp", "regular expressions", "code points", "symbols", "characters", "emoji" ], "license": "MIT", "author": { "name": "Mathias Bynens", "url": "https://mathiasbynens.be/" }, "repository": { "type": "git", "url": "git+https://github.com/mathiasbynens/emoji-regex.git" }, "bugs": { "url": "https://github.com/mathiasbynens/emoji-regex/issues" }, "files": [ "LICENSE-MIT.txt", "index.js", "index.d.ts", "text.js", "es2015/index.js", "es2015/text.js" ], "scripts": { "build": "rm -rf -- es2015; babel src -d .; NODE_ENV=es2015 babel src -d ./es2015; node script/inject-sequences.js", "test": "mocha", "test:watch": "npm run test -- --watch" }, "devDependencies": { "@babel/cli": "^7.2.3", "@babel/core": "^7.3.4", "@babel/plugin-proposal-unicode-property-regex": "^7.2.0", "@babel/preset-env": "^7.3.4", "mocha": "^6.0.2", "regexgen": "^1.3.0", "unicode-12.0.0": "^0.7.9" }, "_resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz", "_integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==", "_from": "emoji-regex@8.0.0", "readme": "# emoji-regex [![Build status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master)](https://travis-ci.org/mathiasbynens/emoji-regex)\n\n_emoji-regex_ offers a regular expression to match all emoji symbols (including textual representations of emoji) as per the Unicode Standard.\n\nThis repository contains a script that generates this regular expression based on [the data from Unicode v12](https://github.com/mathiasbynens/unicode-12.0.0). Because of this, the regular expression can easily be updated whenever new emoji are added to the Unicode standard.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install emoji-regex\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst emojiRegex = require('emoji-regex');\n// Note: because the regular expression has the global flag set, this module\n// exports a function that returns the regex rather than exporting the regular\n// expression itself, to make it impossible to (accidentally) mutate the\n// original regular expression.\n\nconst text = `\n\\u{231A}: ⌚ default emoji presentation character (Emoji_Presentation)\n\\u{2194}\\u{FE0F}: ↔️ default text presentation character rendered as emoji\n\\u{1F469}: 👩 emoji modifier base (Emoji_Modifier_Base)\n\\u{1F469}\\u{1F3FF}: 👩🏿 emoji modifier base followed by a modifier\n`;\n\nconst regex = emojiRegex();\nlet match;\nwhile (match = regex.exec(text)) {\n const emoji = match[0];\n console.log(`Matched sequence ${ emoji } — code points: ${ [...emoji].length }`);\n}\n```\n\nConsole output:\n\n```\nMatched sequence ⌚ — code points: 1\nMatched sequence ⌚ — code points: 1\nMatched sequence ↔️ — code points: 2\nMatched sequence ↔️ — code points: 2\nMatched sequence 👩 — code points: 1\nMatched sequence 👩 — code points: 1\nMatched sequence 👩🏿 — code points: 2\nMatched sequence 👩🏿 — code points: 2\n```\n\nTo match emoji in their textual representation as well (i.e. emoji that are not `Emoji_Presentation` symbols and that aren’t forced to render as emoji by a variation selector), `require` the other regex:\n\n```js\nconst emojiRegex = require('emoji-regex/text.js');\n```\n\nAdditionally, in environments which support ES2015 Unicode escapes, you may `require` ES2015-style versions of the regexes:\n\n```js\nconst emojiRegex = require('emoji-regex/es2015/index.js');\nconst emojiRegexText = require('emoji-regex/es2015/text.js');\n```\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_emoji-regex_ is available under the [MIT](https://mths.be/mit) license.\n", "readmeFilename": "README.md", "_id": "emoji-regex@8.0.0", "_requested": { "type": "version", "registry": true, "raw": "emoji-regex@8.0.0", "name": "emoji-regex", "escapedName": "emoji-regex", "rawSpec": "8.0.0", "saveSpec": "[Circular]", "fetchSpec": "8.0.0" }, "_spec": "8.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "emoji-regex@8.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/emoji-regex", "error": "[Circular]", "extraneous": false }, "is-fullwidth-code-point": { "name": "is-fullwidth-code-point", "version": "3.0.0", "description": "Check if the character represented by a given Unicode code point is fullwidth", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/sindresorhus/is-fullwidth-code-point.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=8" }, "scripts": { "test": "xo && ava && tsd-check" }, "files": [ "index.js", "index.d.ts" ], "keywords": [ "fullwidth", "full-width", "full", "width", "unicode", "character", "string", "codepoint", "code", "point", "is", "detect", "check" ], "devDependencies": { "ava": "^1.3.1", "tsd-check": "^0.5.0", "xo": "^0.24.0" }, "_resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz", "_integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==", "_from": "is-fullwidth-code-point@3.0.0", "readme": "# is-fullwidth-code-point [![Build Status](https://travis-ci.org/sindresorhus/is-fullwidth-code-point.svg?branch=master)](https://travis-ci.org/sindresorhus/is-fullwidth-code-point)\n\n> Check if the character represented by a given [Unicode code point](https://en.wikipedia.org/wiki/Code_point) is [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms)\n\n\n## Install\n\n```\n$ npm install is-fullwidth-code-point\n```\n\n\n## Usage\n\n```js\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\n\nisFullwidthCodePoint('谢'.codePointAt(0));\n//=> true\n\nisFullwidthCodePoint('a'.codePointAt(0));\n//=> false\n```\n\n\n## API\n\n### isFullwidthCodePoint(codePoint)\n\n#### codePoint\n\nType: `number`\n\nThe [code point](https://en.wikipedia.org/wiki/Code_point) of a character.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/is-fullwidth-code-point/issues" }, "homepage": "https://github.com/sindresorhus/is-fullwidth-code-point#readme", "_id": "is-fullwidth-code-point@3.0.0", "_requested": { "type": "version", "registry": true, "raw": "is-fullwidth-code-point@3.0.0", "name": "is-fullwidth-code-point", "escapedName": "is-fullwidth-code-point", "rawSpec": "3.0.0", "saveSpec": "[Circular]", "fetchSpec": "3.0.0" }, "_spec": "3.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "is-fullwidth-code-point@3.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/is-fullwidth-code-point", "error": "[Circular]", "extraneous": false }, "strip-ansi": { "name": "strip-ansi", "version": "5.2.0", "description": "Strip ANSI escape codes from a string", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/strip-ansi.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "test": "xo && ava && tsd-check" }, "files": [ "index.js", "index.d.ts" ], "keywords": [ "strip", "trim", "remove", "ansi", "styles", "color", "colour", "colors", "terminal", "console", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text" ], "dependencies": { "ansi-regex": { "name": "ansi-regex", "version": "4.1.0", "description": "Regular expression for matching ANSI escape codes", "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/chalk/ansi-regex.git" }, "author": { "name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com" }, "engines": { "node": ">=6" }, "scripts": { "test": "xo && ava", "view-supported": "node fixtures/view-codes.js" }, "files": [ "index.js" ], "keywords": [ "ansi", "styles", "color", "colour", "colors", "terminal", "console", "cli", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "command-line", "text", "regex", "regexp", "re", "match", "test", "find", "pattern" ], "devDependencies": { "ava": "^0.25.0", "xo": "^0.23.0" }, "_resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz", "_integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==", "_from": "ansi-regex@4.1.0", "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-ansi-regex?utm_source=npm-ansi-regex&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n---\n\n\n## Install\n\n```\n$ npm install ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001B[4mcake\\u001B[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex());\n//=> ['\\u001B[4m', '\\u001B[0m']\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex({onlyFirst: true}));\n//=> ['\\u001B[4m']\n\n'\\u001B]8;;https://github.com\\u0007click\\u001B]8;;\\u0007'.match(ansiRegex());\n//=> ['\\u001B]8;;https://github.com\\u0007', '\\u001B]8;;\\u0007']\n```\n\n\n## API\n\n### ansiRegex([options])\n\nReturns a regex for matching ANSI escape codes.\n\n#### options\n\n##### onlyFirst\n\nType: `boolean`<br>\nDefault: `false` *(Matches any ANSI escape codes in a string)*\n\nMatch only the first ANSI escape.\n\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## Security\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/ansi-regex/issues" }, "homepage": "https://github.com/chalk/ansi-regex#readme", "_id": "ansi-regex@4.1.0", "_requested": { "type": "version", "registry": true, "raw": "ansi-regex@4.1.0", "name": "ansi-regex", "escapedName": "ansi-regex", "rawSpec": "4.1.0", "saveSpec": "[Circular]", "fetchSpec": "4.1.0" }, "_spec": "4.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "ansi-regex@4.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "dependencies": {}, "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/ansi-regex", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "^1.3.1", "tsd-check": "^0.5.0", "xo": "^0.24.0" }, "_resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz", "_integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==", "_from": "strip-ansi@5.2.0", "readme": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-strip-ansi?utm_source=npm-strip-ansi&utm_medium=referral&utm_campaign=readme\">Get professional support for 'strip-ansi' with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n---\n\n## Install\n\n```\n$ npm install strip-ansi\n```\n\n\n## Usage\n\n```js\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'\n\nstripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n//=> 'Click'\n```\n\n\n## Security\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Streaming version of this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/chalk/strip-ansi/issues" }, "homepage": "https://github.com/chalk/strip-ansi#readme", "_id": "strip-ansi@5.2.0", "_requested": { "type": "version", "registry": true, "raw": "strip-ansi@5.2.0", "name": "strip-ansi", "escapedName": "strip-ansi", "rawSpec": "5.2.0", "saveSpec": "[Circular]", "fetchSpec": "5.2.0" }, "_spec": "5.2.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "strip-ansi@5.2.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ansi-regex": "^4.1.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/strip-ansi", "error": "[Circular]", "extraneous": false } }, "devDependencies": { "ava": "^1.4.1", "tsd": "^0.7.1", "xo": "^0.24.0" }, "_resolved": "https://registry.npmjs.org/string-width/-/string-width-4.1.0.tgz", "_integrity": "sha512-NrX+1dVVh+6Y9dnQ19pR0pP4FiEIlUvdTGn8pw6CKTNq5sgib2nIhmUNT5TAmhWmvKr3WcxBcP3E8nWezuipuQ==", "_from": "string-width@4.1.0", "readme": "# string-width [![Build Status](https://travis-ci.org/sindresorhus/string-width.svg?branch=master)](https://travis-ci.org/sindresorhus/string-width)\n\n> Get the visual width of a string - the number of columns required to display it\n\nSome Unicode characters are [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) and use double the normal width. [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) are stripped and doesn't affect the width.\n\nUseful to be able to measure the actual width of command-line output.\n\n\n## Install\n\n```\n$ npm install string-width\n```\n\n\n## Usage\n\n```js\nconst stringWidth = require('string-width');\n\nstringWidth('a');\n//=> 1\n\nstringWidth('古');\n//=> 2\n\nstringWidth('\\u001B[1m古\\u001B[22m');\n//=> 2\n```\n\n\n## Related\n\n- [string-width-cli](https://github.com/sindresorhus/string-width-cli) - CLI for this module\n- [string-length](https://github.com/sindresorhus/string-length) - Get the real length of a string\n- [widest-line](https://github.com/sindresorhus/widest-line) - Get the visual width of the widest line in a string\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n", "readmeFilename": "readme.md", "bugs": { "url": "https://github.com/sindresorhus/string-width/issues" }, "homepage": "https://github.com/sindresorhus/string-width#readme", "_id": "string-width@4.1.0", "_requested": { "type": "version", "registry": true, "raw": "string-width@4.1.0", "name": "string-width", "escapedName": "string-width", "rawSpec": "4.1.0", "saveSpec": "[Circular]", "fetchSpec": "4.1.0" }, "_spec": "4.1.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "string-width@4.1.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "emoji-regex": "^8.0.0", "is-fullwidth-code-point": "^3.0.0", "strip-ansi": "^5.2.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint/node_modules/string-width", "error": "[Circular]", "extraneous": false }, "sugarss": { "name": "sugarss", "version": "2.0.0", "description": "Indent-based CSS syntax for PostCSS", "keywords": [ "css", "postcss", "postcss-syntax", "syntax", "indent", "parser" ], "author": { "name": "Andrey Sitnik", "email": "andrey@sitnik.ru" }, "license": "MIT", "repository": { "type": "git", "url": "git+https://github.com/postcss/sugarss.git" }, "dependencies": { "postcss": { "name": "postcss", "version": "7.0.14", "description": "Tool for transforming styles with JS plugins", "engines": "[Circular]", "keywords": "[Circular]", "author": "[Circular]", "license": "MIT", "homepage": "https://postcss.org/", "repository": "[Circular]", "dependencies": {}, "main": "lib/postcss", "types": "lib/postcss.d.ts", "husky": "[Circular]", "browser": "[Circular]", "browserslist": "[Circular]", "_resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz", "_integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==", "_from": "postcss@7.0.14", "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n alt=\"Philosopher’s stone, logo of PostCSS\"\n src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]: https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support variables and mixins,\ntranspile future CSS syntax, inline images, and more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The [Autoprefixer] PostCSS plugin is one of the most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by transforming them into an [Abstract Syntax Tree]).\nThis API can then be used by [plugins] to do a lot of useful things,\ne.g. to find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:** [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:** [postcss](https://vk.com/postcss)<br>\n**中文翻译**: [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact [Evil Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract Syntax Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil Martians]: https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[plugins]: https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins — the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]: https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]: https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]: https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]: https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]: https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]: https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]: https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]: https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]: https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]: https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]: https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]: https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]: https://github.com/assetsjs/postcss-assets\n[`font-magician`]: https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]: https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]: https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]: https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]: https://github.com/postcss/postcss-use\n[`css-modules`]: https://github.com/css-modules/css-modules\n[`colorguard`]: https://github.com/SlexAxton/css-colorguard\n[`stylelint`]: https://github.com/stylelint/stylelint\n[`stylefmt`]: https://github.com/morishitter/stylefmt\n[`cssnano`]: http://cssnano.co\n[`precss`]: https://github.com/jonathantneal/precss\n[`doiuse`]: https://github.com/anandthakker/doiuse\n[`rtlcss`]: https://github.com/MohammadYounes/rtlcss\n[`short`]: https://github.com/jonathantneal/postcss-short\n[`lost`]: https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou can write a parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]: https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]: https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]: https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]: https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]: https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]: https://github.com/postcss/postcss-scss\n[`postcss-sass`]: https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]: https://github.com/webschik/postcss-less\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[`sugarss`]: https://github.com/postcss/sugarss\n[`midas`]: https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS… and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n exclude: /node_modules/,\n use: [\n {\n loader: 'style-loader',\n },\n {\n loader: 'css-loader',\n options: {\n importLoaders: 1,\n }\n },\n {\n loader: 'postcss-loader'\n }\n ]\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('precss'),\n require('autoprefixer')\n ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n module: {\n rules: [\n {\n test: /\\.css$/,\n use: ['style-loader', 'postcss-loader'],\n },\n {\n test: /\\.jsx?$/,\n use: ['babel-loader', 'astroturf/loader'],\n }\n ]\n }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-nested')\n ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n const postcss = require('gulp-postcss')\n const sourcemaps = require('gulp-sourcemaps')\n\n return gulp.src('src/**/*.css')\n .pipe( sourcemaps.init() )\n .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n .pipe( sourcemaps.write('.') )\n .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]: https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and transforms style objects.\n\n```js\nvar postcss = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]: http://browserify.org/\n[CSS-in-JS]: https://github.com/MicheleBertoli/css-in-js\n[webpack]: https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n postcss([precss, autoprefixer])\n .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n .then(result => {\n fs.writeFile('dest/app.css', result.css, () => true)\n if ( result.map ) {\n fs.writeFile('dest/app.css.map', result.map, () => true)\n }\n })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]: https://github.com/ben-eb/midas\n[SCSS]: https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n plugins: [\n require('autoprefixer'),\n require('postcss-fail-on-warn')\n ]\n}\n```\n\n\n## Editors & IDE Integration\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]: https://atom.io/packages/source-preview-postcss\n[`language-postcss`]: https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n", "readmeFilename": "README.md", "bugs": "[Circular]", "_id": "postcss@7.0.14", "_requested": { "type": "version", "registry": true, "raw": "postcss@7.0.14", "name": "postcss", "escapedName": "postcss", "rawSpec": "7.0.14", "saveSpec": "[Circular]", "fetchSpec": "7.0.14" }, "_spec": "7.0.14", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": "[Circular]", "devDependencies": "[Circular]", "optionalDependencies": "[Circular]", "_dependencies": "[Circular]", "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/postcss", "error": "[Circular]", "extraneous": false, "_deduped": "postcss" } }, "_resolved": "https://registry.npmjs.org/sugarss/-/sugarss-2.0.0.tgz", "_integrity": "sha512-WfxjozUk0UVA4jm+U1d736AUpzSrNsQcIbyOkoE364GrtWmIrFdk5lksEupgWMD4VaT/0kVx1dobpiDumSgmJQ==", "_from": "sugarss@2.0.0", "readme": "# SugarSS [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"120\" height=\"155\"\n title=\"SugarSS logo by Maria Keller\"\n src=\"http://postcss.github.io/sugarss/logo.svg\">\n\nIndent-based CSS syntax for [PostCSS].\n\n```sass\na\n color: blue\n\n.multiline,\n.selector\n box-shadow: 1px 0 9px rgba(0, 0, 0, .4),\n 1px 0 3px rgba(0, 0, 0, .6)\n\n// Mobile\n@media (max-width: 400px)\n .body\n padding: 0 10px\n```\n\nAs any PostCSS custom syntax, SugarSS has source map, [stylelint]\nand [postcss-sorting] support out-of-box.\n\nIt was designed to be used with [PreCSS] and [postcss-nested-props].\nBut you can use it with any PostCSS plugins\nor use it without any PostCSS plugins.\nWith [gulp-sass-to-postcss-mixins] you can use `+mixin` syntax as in Sass.\n\n<a href=\"https://evilmartians.com/?utm_source=sugarss\">\n <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[gulp-sass-to-postcss-mixins]: https://github.com/akella/gulp-sass-to-postcss-mixins\n[postcss-nested-props]: https://github.com/jedmao/postcss-nested-props\n[postcss-sorting]: https://github.com/hudochenkov/postcss-sorting\n[stylelint]: http://stylelint.io/\n[PostCSS]: https://github.com/postcss/postcss\n[PreCSS]: https://github.com/jonathantneal/precss\n[ci-img]: https://img.shields.io/travis/postcss/sugarss.svg\n[ci]: https://travis-ci.org/postcss/sugarss\n\n## Syntax\n\nSugarSS MIME-type is `text/x-sugarss` with `.sss` file extension.\n\n### Indent\n\nWe recommend 2 spaces indent. However, SugarSS autodetects indent\nand can be used with tabs or spaces.\n\nBut it is prohibited to mix spaces and tabs in SugarSS sources.\n\n### Multiline\n\nSugarSS was designed to have intuitively multiline selectors and declaration\nvalues.\n\nThere are 3 rules for any types of nodes:\n\n```sass\n// 1. New line inside brackets will be ignored\n@supports ( (display: flex) and\n (display: grid) )\n\n// 2. Comma at the end of the line\n@media (max-width: 400px),\n (max-height: 800px)\n\n// 3. Backslash before new line\n@media screen and \\\n (min-width: 600px)\n```\n\nIn selector you can put a new line anywhere. Just keep same indent\nfor every line of selector:\n\n```sass\n.parent >\n.child\n color: black\n```\n\nIn declaration value you can put new line anywhere. Just keep bigger indent\nfor value:\n\n```sass\n.one\n background: linear-gradient(rgba(0, 0, 0, 0), black)\n linear-gradient(red, rgba(255, 0, 0, 0))\n\n.two\n background:\n linear-gradient(rgba(0, 0, 0, 0), black)\n linear-gradient(red, rgba(255, 0, 0, 0))\n```\n\n### Comments\n\nSugarSS supports two types of comments:\n\n```sass\n/*\n Multiline comments\n */\n\n// Inline comments\n```\n\nThere is no “silent” comments in SugarSS. Output CSS will contain all comments\nfrom `.sss` source. But you can use [postcss-discard-comments]\nfor Sass’s silent/loud comments behaviour.\n\n[postcss-discard-comments]: https://www.npmjs.com/package/postcss-discard-comments\n\n### Rule and Declarations\n\nSugarSS separates selectors and declarations by `:\\s` or `:\\n` token.\n\nSo you must write a space after property name: `color: black` is good,\n`color:black` is prohibited.\n\n## Text Editors\n\n* SublimeText: [Syntax Highlighting for .SSS SugarSS]\n* Atom: [language-postcss], [source-preview-postcss] and index.html Vim: [vim-sugarss]\n\nWe are working on syntax highlight support in text editors.\n\nRight now, you can set `Sass` or `Stylus` syntax highlight for `.sss` files.\n\n[Syntax Highlighting for .SSS SugarSS]: https://packagecontrol.io/packages/Syntax%20Highlighting%20for%20SSS%20SugarSS\n[source-preview-postcss]: https://atom.io/packages/source-preview-postcss\n[language-postcss]: https://atom.io/packages/language-postcss\n[build-sugarss]: https://atom.io/packages/build-sugarss\n[vim-sugarss]: https://github.com/hhsnopek/vim-sugarss\n\n## Usage\n\nInstall SugarSS via npm:\n\n```sh\nnpm install sugarss --save-dev\n```\n\n### SugarSS to CSS\n\nJust set SugarSS to PostCSS `parser` option and PostCSS will compile\nSugarSS to CSS.\n\n[Gulp](https://github.com/postcss/gulp-postcss):\n\n```js\nvar sugarss = require('sugarss');\nvar postcss = require('gulp-postcss');\nvar rename = require('gulp-rename');\n\ngulp.task('style', function () {\n return gulp.src('src/**/*.sss')\n .pipe(postcss(plugins, { parser: sugarss }))\n .pipe(rename({ extname: '.css' }))\n .pipe(gulp.dest('build'));\n});\n```\n\n[Webpack](https://github.com/postcss/postcss-loader):\n\n```js\nmodule: {\n loaders: [\n {\n test: /\\.sss/,\n loader: \"style-loader!css-loader!postcss-loader?parser=sugarss\"\n }\n ]\n}\n```\n\n[CLI](https://github.com/postcss/postcss-cli):\n\n```\npostcss -u autoprefixer -p sugarss test.sss -o test.css\n```\n\n### SugarSS to SugarSS\n\nSometimes we use PostCSS not to build CSS, but to fix source file.\nFor example, to sort properties by [postcss-sorting].\n\nFor this cases, use `syntax` option, instead of `parser`:\n\n```js\ngulp.task('sort', function () {\n return gulp.src('src/**/*.sss')\n .pipe(postcss([sorting], { syntax: sugarss }))\n .pipe(gulp.dest('src'));\n});\n```\n\n[postcss-sorting]: https://github.com/hudochenkov/postcss-sorting\n\n### CSS to SugarSS\n\nYou can even compile existed CSS sources to SugarSS syntax.\nJust use `stringifier` option instead of `parser`:\n\n```js\npostcss().process(css, { stringifier: sugarss }).then(function (result) {\n result.content // Converted SugarSS content\n});\n```\n\n### Imports\n\n[postcss-import] doesn’t support `.sss` file extension, because this plugin\nimplements W3C specification. If you want smarter `@import`, you should\nuse [postcss-easy-import] with `extensions` option.\n\n```js\nvar postcssPlugin = [\n easyImport({ extensions: ['.sss'] })\n]\n```\n\n[postcss-easy-import]: https://github.com/TrySound/postcss-easy-import\n[postcss-import]: https://github.com/postcss/postcss-import\n\n## Thanks\n\nCute project logo was made by [Maria Keller](http://www.mariakellerac.com/).\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/postcss/sugarss/issues" }, "homepage": "https://github.com/postcss/sugarss#readme", "_id": "sugarss@2.0.0", "_requested": { "type": "version", "registry": true, "raw": "sugarss@2.0.0", "name": "sugarss", "escapedName": "sugarss", "rawSpec": "2.0.0", "saveSpec": "[Circular]", "fetchSpec": "2.0.0" }, "_spec": "2.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "sugarss@2.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "devDependencies": {}, "optionalDependencies": {}, "_dependencies": { "postcss": "^7.0.2" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/sugarss", "error": "[Circular]", "extraneous": false }, "svg-tags": { "name": "svg-tags", "version": "1.0.0", "description": "List of standard SVG tags.", "author": { "name": "Athan Reines", "email": "kgryte@gmail.com" }, "contributors": [ { "name": "Athan Reines", "email": "kgryte@gmail.com" } ], "scripts": { "test": "mocha", "test-cov": "istanbul cover ./node_modules/.bin/_mocha --dir ./reports/coverage -- -R spec", "coveralls": "istanbul cover ./node_modules/.bin/_mocha --dir ./reports/coveralls/coverage --report lcovonly -- -R spec && cat ./reports/coveralls/coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./reports/coveralls" }, "main": "./lib", "repository": { "type": "git", "url": "git://github.com/element-io/svg-tags.git" }, "keywords": [ "svg", "tags", "w3c" ], "bugs": { "url": "https://github.com/element-io/svg-tags/issues" }, "dependencies": {}, "devDependencies": { "chai": "1.x.x", "coveralls": "^2.11.1", "istanbul": "^0.3.0", "mocha": "1.x.x" }, "licenses": [ { "type": "MIT", "url": "http://www.opensource.org/licenses/MIT" } ], "_resolved": "https://registry.npmjs.org/svg-tags/-/svg-tags-1.0.0.tgz", "_integrity": "sha1-WPcc7jvVGbWdSyqEO2x95krAR2Q=", "_from": "svg-tags@1.0.0", "readme": "SVG Tags\n========\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage][coveralls-image]][coveralls-url] [![Dependencies][dependencies-image]][dependencies-url]\n\n> List of standard SVG tags.\n\nList built from the [SVG 1.1 specification](http://www.w3.org/TR/SVG/eltindex.html).\n\n\n## Installation\n\n``` bash\n$ npm install svg-tags --save\n```\n\n\n## Usage\n\nThe module is simply a JSON array, so use as you would a normal JavaScript array.\n\n``` javascript\nvar tags = require( 'svg-tags' );\n\nconsole.log( JSON.stringify( tags ) );\n/**\n* Returns:\n*\t[ 'a', 'altGlyph', ... ]\n*/\n\nconsole.log( tags.indexOf( 'desc' ) );\n// Returns [index]\n```\n\n## Examples\n\nTo run the example code from the top-level application directory,\n\n``` bash\n$ node ./examples/index.js\n```\n\n\n## Tests\n\n### Unit\n\nUnit tests use the [Mocha](http://visionmedia.github.io/mocha) test framework with [Chai](http://chaijs.com) assertions. To run the tests, execute the following command in the top-level application directory:\n\n``` bash\n$ make test\n```\n\nAll new feature development should have corresponding unit tests to validate correct functionality.\n\n\n### Test Coverage\n\nThis repository uses [Istanbul](https://github.com/gotwarlost/istanbul) as its code coverage tool. To generate a test coverage report, execute the following command in the top-level application directory:\n\n``` bash\n$ make test-cov\n```\n\nIstanbul creates a `./reports/coverage` directory. To access an HTML version of the report,\n\n``` bash\n$ open reports/coverage/lcov-report/index.html\n```\n\n\n## License\n\n[MIT license](http://opensource.org/licenses/MIT). \n\n\n---\n## Copyright\n\nCopyright &copy; 2014. Athan Reines.\n\n\n\n[npm-image]: http://img.shields.io/npm/v/svg-tags.svg\n[npm-url]: https://npmjs.org/package/svg-tags\n\n[travis-image]: http://img.shields.io/travis/element-io/svg-tags/master.svg\n[travis-url]: https://travis-ci.org/element-io/svg-tags\n\n[coveralls-image]: https://img.shields.io/coveralls/element-io/svg-tags/master.svg\n[coveralls-url]: https://coveralls.io/r/element-io/svg-tags?branch=master\n\n[dependencies-image]: http://img.shields.io/david/element-io/svg-tags.svg\n[dependencies-url]: https://david-dm.org/element-io/svg-tags\n\n[dev-dependencies-image]: http://img.shields.io/david/dev/element-io/svg-tags.svg\n[dev-dependencies-url]: https://david-dm.org/dev/element-io/svg-tags\n\n[github-issues-image]: http://img.shields.io/github/issues/element-io/svg-tags.svg\n[github-issues-url]: https://github.com/element-io/svg-tags/issues", "readmeFilename": "README.md", "homepage": "https://github.com/element-io/svg-tags#readme", "_id": "svg-tags@1.0.0", "_requested": { "type": "version", "registry": true, "raw": "svg-tags@1.0.0", "name": "svg-tags", "escapedName": "svg-tags", "rawSpec": "1.0.0", "saveSpec": "[Circular]", "fetchSpec": "1.0.0" }, "_spec": "1.0.0", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "svg-tags@1.0.0", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": {}, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/svg-tags", "error": "[Circular]", "extraneous": false }, "table": { "author": { "name": "Gajus Kuizinas", "email": "gajus@gajus.com", "url": "http://gajus.com" }, "dependencies": {}, "description": "Formats data into a string table.", "devDependencies": { "@babel/cli": "^7.2.3", "@babel/core": "^7.2.2", "@babel/node": "^7.2.2", "@babel/plugin-transform-flow-strip-types": "^7.2.3", "@babel/preset-env": "^7.3.1", "@babel/register": "^7.0.0", "ajv-cli": "^3.0.0", "ajv-keywords": "^3.4.0", "babel-plugin-istanbul": "^5.1.0", "babel-plugin-transform-export-default-name": "^2.0.4", "chai": "^4.2.0", "chalk": "^2.4.2", "coveralls": "^3.0.2", "eslint": "^5.13.0", "eslint-config-canonical": "^16.1.0", "flow-bin": "^0.92.1", "flow-copy-source": "^2.0.2", "gitdown": "^2.5.7", "husky": "^1.3.1", "mocha": "^5.2.0", "nyc": "^13.2.0", "semantic-release": "^15.13.3", "sinon": "^7.2.3" }, "engines": { "node": ">=6.0.0" }, "husky": { "hooks": { "post-commit": "npm run create-readme && git add README.md && git commit -m 'docs: generate docs' --no-verify", "pre-commit": "npm run lint && npm run test && npm run build" } }, "keywords": [ "ascii", "text", "table", "align", "ansi" ], "license": "BSD-3-Clause", "main": "./dist/index.js", "name": "table", "nyc": { "include": [ "src/**/*.js" ], "instrument": false, "reporter": [ "text-lcov" ], "require": [ "@babel/register" ], "sourceMap": false }, "repository": { "type": "git", "url": "git+https://github.com/gajus/table.git" }, "scripts": { "build": "rm -fr ./dist && NODE_ENV=production babel ./src --out-dir ./dist --copy-files --source-maps && npm run create-validators && flow-copy-source src dist", "create-readme": "gitdown ./.README/README.md --output-file ./README.md", "create-validators": "ajv compile --all-errors --inline-refs=false -s src/schemas/config -c ajv-keywords/keywords/typeof -o dist/validateConfig.js && ajv compile --all-errors --inline-refs=false -s src/schemas/streamConfig -c ajv-keywords/keywords/typeof -o dist/validateStreamConfig.js", "lint": "npm run build && eslint ./src ./test && flow", "test": "mocha --require @babel/register" }, "version": "5.2.3", "_resolved": "https://registry.npmjs.org/table/-/table-5.2.3.tgz", "_integrity": "sha512-N2RsDAMvDLvYwFcwbPyF3VmVSSkuF+G1e+8inhBLtHpvwXGw4QRPEZhihQNeEN0i1up6/f6ObCJXNdlRG3YVyQ==", "_from": "table@5.2.3", "readme": "<a name=\"table\"></a>\n# Table\n\n[![Travis build status](http://img.shields.io/travis/gajus/table/master.svg?style=flat-square)](https://travis-ci.org/gajus/table)\n[![Coveralls](https://img.shields.io/coveralls/gajus/table.svg?style=flat-square)](https://coveralls.io/github/gajus/table)\n[![NPM version](http://img.shields.io/npm/v/table.svg?style=flat-square)](https://www.npmjs.org/package/table)\n[![Canonical Code Style](https://img.shields.io/badge/code%20style-canonical-blue.svg?style=flat-square)](https://github.com/gajus/canonical)\n[![Twitter Follow](https://img.shields.io/twitter/follow/kuizinas.svg?style=social&label=Follow)](https://twitter.com/kuizinas)\n\n* [Table](#table)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Features](#table-features)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Usage](#table-usage)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Cell Content Alignment](#table-usage-cell-content-alignment)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Column Width](#table-usage-column-width)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Custom Border](#table-usage-custom-border)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Draw Horizontal Line](#table-usage-draw-horizontal-line)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Padding Cell Content](#table-usage-padding-cell-content)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Predefined Border Templates](#table-usage-predefined-border-templates)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Streaming](#table-usage-streaming)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Text Truncation](#table-usage-text-truncation)\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps [Text Wrapping](#table-usage-text-wrapping)\n\n\nProduces a string that represents array data in a text table.\n\n![Demo of table displaying a list of missions to the Moon.](./.README/demo.png)\n\n<a name=\"table-features\"></a>\n## Features\n\n* Works with strings containing [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) characters.\n* Works with strings containing [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code).\n* Configurable border characters.\n* Configurable content alignment per column.\n* Configurable content padding per column.\n* Configurable column width.\n* Text wrapping.\n\n<a name=\"table-usage\"></a>\n## Usage\n\nTable data is described using an array (rows) of array (cells).\n\n```js\nimport {\n table\n} from 'table';\n\n// Using commonjs?\n// const {table} = require('table');\n\nlet data,\n output;\n\ndata = [\n ['0A', '0B', '0C'],\n ['1A', '1B', '1C'],\n ['2A', '2B', '2C']\n];\n\n/**\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @typedef {string} table~cell\n */\n\n/**\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @typedef {table~cell[]} table~row\n */\n\n/**\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @typedef {Object} table~columns\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} alignment Cell content alignment (enum: left, center, right) (default: left).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {number} width Column width (default: auto).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {number} truncate Number of characters are which the content will be truncated (default: Infinity).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {number} paddingLeft Cell content padding width left (default: 1).\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {number} paddingRight Cell content padding width right (default: 1).\n */\n\n/**\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @typedef {Object} table~border\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} topBody\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} topJoin\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} topLeft\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} topRight\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} bottomBody\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} bottomJoin\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} bottomLeft\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} bottomRight\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} bodyLeft\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} bodyRight\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} bodyJoin\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} joinBody\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} joinLeft\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} joinRight\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {string} joinJoin\n */\n\n/**\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Used to dynamically tell table whether to draw a line separating rows or not.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps The default behavior is to always return true.\n app.info.deps.json app.info.json 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @typedef {function} drawHorizontalLine\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @param {number} index\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @param {number} size\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @return {boolean}\n */\n\n/**\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @typedef {Object} table~config\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {table~border} border\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {table~columns[]} columns Column specific configuration.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {table~columns} columnDefault Default values for all columns. Column specific settings overwrite the default values.\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @property {table~drawHorizontalLine} drawHorizontalLine\n */\n\n/**\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps Generates a text table.\n app.info.deps.json app.info.json 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @param {table~row[]} rows\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @param {table~config} config\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @return {String}\n */\noutput = table(data);\n\nconsole.log(output);\n```\n\n```\n╔════╤════╤════╗\n║ 0A │ 0B │ 0C ║\n╟────┼────┼────╢\n║ 1A │ 1B │ 1C ║\n╟────┼────┼────╢\n║ 2A │ 2B │ 2C ║\n╚════╧════╧════╝\n```\n\n\n<a name=\"table-usage-cell-content-alignment\"></a>\n### Cell Content Alignment\n\n`{string} config.columns[{number}].alignment` property controls content horizontal alignment within a cell.\n\nValid values are: \"left\", \"right\" and \"center\".\n\n```js\nlet config,\n data,\n output;\n\ndata = [\n ['0A', '0B', '0C'],\n ['1A', '1B', '1C'],\n ['2A', '2B', '2C']\n];\n\nconfig = {\n columns: {\n 0: {\n alignment: 'left',\n minWidth: 10\n },\n 1: {\n alignment: 'center',\n minWidth: 10\n },\n 2: {\n alignment: 'right',\n minWidth: 10\n }\n }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n╔════════════╤════════════╤════════════╗\n║ 0A │ 0B │ 0C ║\n╟────────────┼────────────┼────────────╢\n║ 1A │ 1B │ 1C ║\n╟────────────┼────────────┼────────────╢\n║ 2A │ 2B │ 2C ║\n╚════════════╧════════════╧════════════╝\n```\n\n<a name=\"table-usage-column-width\"></a>\n### Column Width\n\n`{number} config.columns[{number}].width` property restricts column width to a fixed width.\n\n```js\nlet data,\n output,\n options;\n\ndata = [\n ['0A', '0B', '0C'],\n ['1A', '1B', '1C'],\n ['2A', '2B', '2C']\n];\n\noptions = {\n columns: {\n 1: {\n width: 10\n }\n }\n};\n\noutput = table(data, options);\n\nconsole.log(output);\n```\n\n```\n╔════╤════════════╤════╗\n║ 0A │ 0B │ 0C ║\n╟────┼────────────┼────╢\n║ 1A │ 1B │ 1C ║\n╟────┼────────────┼────╢\n║ 2A │ 2B │ 2C ║\n╚════╧════════════╧════╝\n```\n\n<a name=\"table-usage-custom-border\"></a>\n### Custom Border\n\n`{object} config.border` property describes characters used to draw the table border.\n\n```js\nlet config,\n data,\n output;\n\ndata = [\n ['0A', '0B', '0C'],\n ['1A', '1B', '1C'],\n ['2A', '2B', '2C']\n];\n\nconfig = {\n border: {\n topBody: `─`,\n topJoin: `┬`,\n topLeft: `┌`,\n topRight: `┐`,\n\n bottomBody: `─`,\n bottomJoin: `┴`,\n bottomLeft: `└`,\n bottomRight: `┘`,\n\n bodyLeft: `│`,\n bodyRight: `│`,\n bodyJoin: `│`,\n\n joinBody: `─`,\n joinLeft: `├`,\n joinRight: `┤`,\n joinJoin: `┼`\n }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n┌────┬────┬────┐\n│ 0A │ 0B │ 0C │\n├────┼────┼────┤\n│ 1A │ 1B │ 1C │\n├────┼────┼────┤\n│ 2A │ 2B │ 2C │\n└────┴────┴────┘\n```\n\n<a name=\"table-usage-draw-horizontal-line\"></a>\n### Draw Horizontal Line\n\n`{function} config.drawHorizontalLine` property is a function that is called for every non-content row in the table. The result of the function `{boolean}` determines whether a row is drawn.\n\n```js\nlet data,\n output,\n options;\n\ndata = [\n ['0A', '0B', '0C'],\n ['1A', '1B', '1C'],\n ['2A', '2B', '2C'],\n ['3A', '3B', '3C'],\n ['4A', '4B', '4C']\n];\n\noptions = {\n /bin /run /sbin 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @typedef {function} drawHorizontalLine\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @param {number} index\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @param {number} size\n 58231b16fdee45a03a4ee3cf94a9f2c3 app.info.deps.json app.info.json fonts images index.html js sourcemaps @return {boolean}\n */\n drawHorizontalLine: (index, size) => {\n return index === 0 || index === 1 || index === size - 1 || index === size;\n }\n};\n\noutput = table(data, options);\n\nconsole.log(output);\n\n```\n\n```\n╔════╤════╤════╗\n║ 0A │ 0B │ 0C ║\n╟────┼────┼────╢\n║ 1A │ 1B │ 1C ║\n║ 2A │ 2B │ 2C ║\n║ 3A │ 3B │ 3C ║\n╟────┼────┼────╢\n║ 4A │ 4B │ 4C ║\n╚════╧════╧════╝\n\n```\n\n<a name=\"table-usage-padding-cell-content\"></a>\n### Padding Cell Content\n\n`{number} config.columns[{number}].paddingLeft` and `{number} config.columns[{number}].paddingRight` properties control content padding within a cell. Property value represents a number of whitespaces used to pad the content.\n\n```js\nlet config,\n data,\n output;\n\ndata = [\n ['0A', 'AABBCC', '0C'],\n ['1A', '1B', '1C'],\n ['2A', '2B', '2C']\n];\n\nconfig = {\n columns: {\n 0: {\n paddingLeft: 3\n },\n 1: {\n width: 2,\n paddingRight: 3\n }\n }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n╔══════╤══════╤════╗\n║ 0A │ AA │ 0C ║\n║ │ BB │ ║\n║ │ CC │ ║\n╟──────┼──────┼────╢\n║ 1A │ 1B │ 1C ║\n╟──────┼──────┼────╢\n║ 2A │ 2B │ 2C ║\n╚══════╧══════╧════╝\n```\n\n<a name=\"table-usage-predefined-border-templates\"></a>\n### Predefined Border Templates\n\nYou can load one of the predefined border templates using `getBorderCharacters` function.\n\n```js\nimport {\n table,\n getBorderCharacters\n} from 'table';\n\nlet config,\n data;\n\ndata = [\n ['0A', '0B', '0C'],\n ['1A', '1B', '1C'],\n ['2A', '2B', '2C']\n];\n\nconfig = {\n border: getBorderCharacters(`name of the template`)\n};\n\ntable(data, config);\n```\n\n```\n# honeywell\n\n╔════╤════╤════╗\n║ 0A │ 0B │ 0C ║\n╟────┼────┼────╢\n║ 1A │ 1B │ 1C ║\n╟────┼────┼────╢\n║ 2A │ 2B │ 2C ║\n╚════╧════╧════╝\n\n# norc\n\n┌────┬────┬────┐\n│ 0A │ 0B │ 0C │\n├────┼────┼────┤\n│ 1A │ 1B │ 1C │\n├────┼────┼────┤\n│ 2A │ 2B │ 2C │\n└────┴────┴────┘\n\n# ramac (ASCII; for use in terminals that do not support Unicode characters)\n\n+----+----+----+\n| 0A | 0B | 0C |\n|----|----|----|\n| 1A | 1B | 1C |\n|----|----|----|\n| 2A | 2B | 2C |\n+----+----+----+\n\n# void (no borders; see \"bordless table\" section of the documentation)\n\n 0A 0B 0C\n\n 1A 1B 1C\n\n 2A 2B 2C\n\n```\n\nRaise [an issue](https://github.com/gajus/table/issues) if you'd like to contribute a new border template.\n\n<a name=\"table-usage-predefined-border-templates-borderless-table\"></a>\n#### Borderless Table\n\nSimply using \"void\" border character template creates a table with a lot of unnecessary spacing.\n\nTo create a more plesant to the eye table, reset the padding and remove the joining rows, e.g.\n\n```js\nlet output;\n\noutput = table(data, {\n border: getBorderCharacters(`void`),\n columnDefault: {\n paddingLeft: 0,\n paddingRight: 1\n },\n drawHorizontalLine: () => {\n return false\n }\n});\n\nconsole.log(output);\n```\n\n```\n0A 0B 0C\n1A 1B 1C\n2A 2B 2C\n```\n\n<a name=\"table-usage-streaming\"></a>\n### Streaming\n\n`table` package exports `createStream` function used to draw a table and append rows.\n\n`createStream` requires `{number} columnDefault.width` and `{number} columnCount` configuration properties.\n\n```js\nimport {\n createStream\n} from 'table';\n\nlet config,\n stream;\n\nconfig = {\n columnDefault: {\n width: 50\n },\n columnCount: 1\n};\n\nstream = createStream(config);\n\nsetInterval(() => {\n stream.write([new Date()]);\n}, 500);\n```\n\n![Streaming current date.](./.README/streaming.gif)\n\n`table` package uses ANSI escape codes to overwrite the output of the last line when a new row is printed.\n\nThe underlying implementation is explained in this [Stack Overflow answer](http://stackoverflow.com/a/32938658/368691). \n\nStreaming supports all of the configuration properties and functionality of a static table (such as auto text wrapping, alignment and padding), e.g.\n\n```js\nimport {\n createStream\n} from 'table';\n\nimport _ from 'lodash';\n\nlet config,\n stream,\n i;\n\nconfig = {\n columnDefault: {\n width: 50\n },\n columnCount: 3,\n columns: {\n 0: {\n width: 10,\n alignment: 'right'\n },\n 1: {\n alignment: 'center',\n },\n 2: {\n width: 10\n }\n }\n};\n\nstream = createStream(config);\n\ni = 0;\n\nsetInterval(() => {\n let random;\n\n random = _.sample('abcdefghijklmnopqrstuvwxyz', _.random(1, 30)).join('');\n\n stream.write([i++, new Date(), random]);\n}, 500);\n```\n\n![Streaming random data.](./.README/streaming-random.gif)\n<a name=\"table-usage-text-truncation\"></a>\n### Text Truncation\n\nTo handle a content that overflows the container width, `table` package implements [text wrapping](#table-usage-text-wrapping). However, sometimes you may want to truncate content that is too long to be displayed in the table.\n\n`{number} config.columns[{number}].truncate` property (default: `Infinity`) truncates the text at the specified length.\n\n```js\nlet config,\n data,\n output;\n\ndata = [\n ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n columns: {\n 0: {\n width: 20,\n truncate: 100\n }\n }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n╔══════════════════════╗\n║ Lorem ipsum dolor si ║\n║ t amet, consectetur ║\n║ adipiscing elit. Pha ║\n║ sellus pulvinar nibh ║\n║ sed mauris conva... ║\n╚══════════════════════╝\n```\n\n<a name=\"table-usage-text-wrapping\"></a>\n### Text Wrapping\n\n`table` package implements auto text wrapping, i.e. text that has width greater than the container width will be separated into multiple lines, e.g.\n\n```js\nlet config,\n data,\n output;\n\ndata = [\n ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n columns: {\n 0: {\n width: 20\n }\n }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n╔══════════════════════╗\n║ Lorem ipsum dolor si ║\n║ t amet, consectetur ║\n║ adipiscing elit. Pha ║\n║ sellus pulvinar nibh ║\n║ sed mauris convallis ║\n║ dapibus. Nunc venena ║\n║ tis tempus nulla sit ║\n║ amet viverra. ║\n╚══════════════════════╝\n```\n\nWhen `wrapWord` is `true` the text is broken at the nearest space or one of the special characters (\"-\", \"_\", \"\\\", \"/\", \".\", \",\", \";\"), e.g.\n\n```js\nlet config,\n data,\n output;\n\ndata = [\n ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n columns: {\n 0: {\n width: 20,\n wrapWord: true\n }\n }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n╔══════════════════════╗\n║ Lorem ipsum dolor ║\n║ sit amet, ║\n║ consectetur ║\n║ adipiscing elit. ║\n║ Phasellus pulvinar ║\n║ nibh sed mauris ║\n║ convallis dapibus. ║\n║ Nunc venenatis ║\n║ tempus nulla sit ║\n║ amet viverra. ║\n╚══════════════════════╝\n```\n\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/gajus/table/issues" }, "homepage": "https://github.com/gajus/table#readme", "_id": "table@5.2.3", "_requested": { "type": "version", "registry": true, "raw": "table@5.2.3", "name": "table", "escapedName": "table", "rawSpec": "5.2.3", "saveSpec": "[Circular]", "fetchSpec": "5.2.3" }, "_spec": "5.2.3", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "table@5.2.3", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "ajv": "^6.9.1", "lodash": "^4.17.11", "slice-ansi": "^2.1.0", "string-width": "^3.0.0" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/table", "error": "[Circular]", "extraneous": false, "_deduped": "table" } }, "devDependencies": { "benchmark": "^2.1.4", "common-tags": "^1.8.0", "coveralls": "^3.0.3", "cp-file": "^6.2.0", "del": "^4.1.0", "eslint": "~5.16.0", "eslint-config-stylelint": "~11.0.0", "file-exists-promise": "^1.0.2", "flow-bin": "^0.97.0", "flow-typed": "^2.5.1", "husky": "^1.3.1", "jest": "^24.7.1", "jest-watch-typeahead": "^0.3.0", "lint-staged": "^8.1.5", "npm-run-all": "^4.1.5", "npmpub": "^4.1.0", "postcss-import": "^12.0.1", "prettier": "~1.17.0", "remark-cli": "^6.0.1", "remark-lint-no-missing-blank-lines": "^1.0.2", "remark-preset-lint-consistent": "^2.0.2", "remark-preset-lint-recommended": "^3.0.2", "remark-validate-links": "^8.0.2", "request": "^2.88.0", "strip-ansi": "^5.2.0" }, "scripts": { "benchmark-rule": "node scripts/benchmark-rule.js", "dry-release": "npmpub --dry --verbose", "flow": "flow", "flow-defs": "flow-typed install jest@24 lodash@4", "jest": "jest", "jest:detectleaks": "jest --detectLeaks", "lint:js": "eslint . --cache --max-warnings=0", "lint:md": "remark . --quiet --frail", "lint": "npm-run-all --parallel lint:*", "pretest": "npm-run-all --serial lint flow prettier:check", "prettier:check": "prettier '**/*.js' --list-different", "prettier:fix": "prettier '**/*.js' --write", "release": "npmpub", "test": "jest --coverage", "watch": "jest --watch" }, "husky": { "hooks": { "pre-commit": "lint-staged" } }, "lint-staged": { "linters": { "*.js": [ "prettier --write", "eslint --max-warnings=0 --fix", "git add" ], "*.md": [ "remark --quiet --frail" ] }, "ignore": [ "lib/utils/parseCalcExpression/parser.js" ] }, "eslintConfig": { "extends": [ "stylelint" ], "globals": { "testRule": true } }, "jest": { "clearMocks": true, "collectCoverage": false, "collectCoverageFrom": [ "lib/**/*.js", "!lib/vendor/**/*.js", "!lib/utils/parseCalcExpression/parser.js" ], "coverageDirectory": "./.coverage/", "coverageReporters": [ "lcov", "text-summary" ], "coverageThreshold": { "global": { "branches": 75, "functions": 75, "lines": 75, "statements": 75 } }, "setupFiles": [ "./jest-setup.js" ], "testEnvironment": "node", "roots": [ "lib", "system-tests" ], "testRegex": ".*\\.test\\.js$|rules/.*/__tests__/.*\\.js$", "watchPlugins": [ "jest-watch-typeahead/filename", "jest-watch-typeahead/testname" ] }, "remarkConfig": { "plugins": [ "preset-lint-recommended", "preset-lint-consistent", [ "lint-no-missing-blank-lines", { "exceptTightLists": true } ], [ "validate-links", { "repository": "stylelint/stylelint" } ] ] }, "_resolved": "https://registry.npmjs.org/stylelint/-/stylelint-10.0.1.tgz", "_integrity": "sha512-NbpD9BvQRmPe7QfaLB2OqhhDr5g6SAn43AAH2XLyqtQ9ZcioQECgadkIbormfhzxLhccAQWBZbVNiZz1oqEf8g==", "_from": "stylelint@10.0.1", "readme": "# stylelint\n\n[![NPM version](https://img.shields.io/npm/v/stylelint.svg)](https://www.npmjs.org/package/stylelint) [![Build Status](https://travis-ci.org/stylelint/stylelint.svg?branch=master)](https://travis-ci.org/stylelint/stylelint) [![Build status](https://ci.appveyor.com/api/projects/status/o60hlhki49t2333i/branch/master?svg=true)](https://ci.appveyor.com/project/stylelint/stylelint/branch/master) [![NPM Downloads](https://img.shields.io/npm/dm/stylelint.svg)](https://npmcharts.com/compare/stylelint?minimal=true) [![Backers on Open Collective](https://opencollective.com/stylelint/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/stylelint/sponsors/badge.svg)](#sponsors)\n\nA mighty, modern linter that helps you avoid errors and enforce conventions in your styles.\n\n## Features\n\nIt's mighty because it:\n\n- understands the **latest CSS syntax** including custom properties and level 4 selectors\n- extracts **embedded styles** from HTML, markdown and CSS-in-JS object & template literals\n- parses **CSS-like syntaxes** like SCSS, Sass, Less and SugarSS\n- has over **170 built-in rules** to catch errors, apply limits and enforce stylistic conventions\n- supports **plugins** so you can create your own rules or make use of plugins written by the community\n- automatically **fixes** some violations (*experimental feature*)\n- is **well tested** with over 10000 unit tests\n- supports **shareable configs** that you can extend or create your own of\n- is **unopinionated** so you can tailor the linter to your exact needs\n- has a **growing community** and is used by [Facebook](https://code.facebook.com/posts/879890885467584/improving-css-quality-at-facebook-and-beyond/), [GitHub](https://github.com/primer/stylelint-config-primer) and [WordPress](https://github.com/ntwb/stylelint-config-wordpress/)\n\n## Example output\n\n![Example](https://github.com/stylelint/stylelint/raw/master/example.png?raw=true)\n\n## Getting started\n\nIt's easy to get started.\n\nFirst, decide how you want to use stylelint:\n\n- [on the command line](docs/user-guide/cli.md)\n- [in your text editor](docs/user-guide/complementary-tools.md#editor-plugins), for example in VS Code\n- [in for your build tool](docs/user-guide/complementary-tools.md#build-tool-plugins), for example in webpack\n- [via the Node.js API](docs/user-guide/node-api.md)\n- [as a PostCSS plugin](docs/user-guide/postcss-plugin.md)\n\nThen create your [configuration object](docs/user-guide/configuration.md). You can either extend a shared configuration or craft your own.\n\n### Extend a shared configuration\n\nThis is the quickest way to get started. We suggest you extend either:\n\n- [`stylelint-config-recommended`](https://github.com/stylelint/stylelint-config-recommended)\n- [`stylelint-config-standard`](https://github.com/stylelint/stylelint-config-standard)\n\nThe recommended config turns on just the [possible error](docs/user-guide/rules.md#possible-errors) rules. The standard config extends it by turning on 60 [stylistic rules](docs/user-guide/rules.md#stylistic-issues). We suggest you extend the:\n\n- recommended config if you use a pretty printer like [prettier](https://prettier.io/)\n- standard config if you want stylelint to enforce stylistic conventions\n\nYou may want to add rules to your config that [limit language features](docs/user-guide/rules.md#limit-language-features) as these will be specific to your team and/or project.\n\n*If you use language extensions, for example `@if` and `@extends`, you can use a community config like [`stylelint-config-recommended-scss`](https://github.com/kristerkari/stylelint-config-recommended-scss) instead.*\n\n### Craft your own config\n\nAlternatively, you can [learn about the rules](docs/user-guide/about-rules.md) and then either:\n\n- start small and add only [the rules](docs/user-guide/rules.md) you want to turn on\n- copy, paste and adapt [this example configuration](docs/user-guide/example-config.md) which lists all of the rules and their primary options\n\n## Guides\n\nYou'll find detailed information on customising stylelint in our guides:\n\n- [user guide](docs/user-guide.md) - how to use and configure stylelint\n- [developer guide](docs/developer-guide.md) - how to develop for stylelint\n\n## Need help?\n\nRead our [FAQ](docs/user-guide/faq.md) first.\n\nIf the answer to your problem isn't there, then post it on [stackoverflow](https://stackoverflow.com/questions/tagged/stylelint).\n\nCreate a [new issue](https://github.com/stylelint/stylelint/issues/new/choose) if:\n\n- you think you've found a bug\n- you have a feature request\n\nIf you're upgrading, read our [CHANGELOG](CHANGELOG.md) to learn what changes to expect in the latest version.\n\n## Help out\n\nTo help out, you can:\n\n- get involved in any open [issue](https://github.com/stylelint/stylelint/issues) or [pull request](https://github.com/stylelint/stylelint/pulls)\n- create, enhance and debug rules using our [working on rules](docs/developer-guide/rules.md) guide\n- improve the [documentation](docs/)\n- add new tests to *absolutely anything*\n- improve the [performance of rules](docs/developer-guide/rules.md#improving-the-performance-of-a-rule)\n- open [new issues](https://github.com/stylelint/stylelint/issues/new/choose) about your ideas for making stylelint better\n- open [a pull request](https://github.com/stylelint/stylelint/compare) to show us how your idea works\n- create or contribute to [ecosystem tools](docs/user-guide/complementary-tools.md), for example the plugin for [VS Code](https://github.com/shinnn/vscode-stylelint)\n\nOur [VISION document](VISION.md) guides our work.\n\n## Semantic Versioning Policy\n\nWe have a [semantic versioning policy](docs/user-guide/semantic-versioning-policy.md). Any minor update may report more errors than the previous release. As such, we recommend using the tilde (`~`) in `package.json` e.g. `\"stylelint\": \"~7.2.0\"` to guarantee the results of your builds.\n\n## License\n\n[The MIT License](https://raw.githubusercontent.com/stylelint/stylelint/master/LICENSE).\n\n## Contributors\n\nThis project exists thanks to all these people. [Contribute](CONTRIBUTING.md).\n<a href=\"https://github.com/stylelint/stylelint/graphs/contributors\"><img src=\"https://opencollective.com/stylelint/contributors.svg?width=890\" /></a>\n\n## Backers\n\nThank you to all our backers! [Become a backer](https://opencollective.com/stylelint#backer).\n\n<a href=\"https://opencollective.com/stylelint#backers\" target=\"_blank\"><img src=\"https://opencollective.com/stylelint/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor](https://opencollective.com/stylelint#sponsor).\n\n<a href=\"https://opencollective.com/stylelint/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/stylelint/sponsor/0/avatar.svg\"></a>\n", "readmeFilename": "README.md", "bugs": { "url": "https://github.com/stylelint/stylelint/issues" }, "_id": "stylelint@10.0.1", "_requested": { "type": "version", "registry": true, "raw": "stylelint@10.0.1", "name": "stylelint", "escapedName": "stylelint", "rawSpec": "10.0.1", "saveSpec": "[Circular]", "fetchSpec": "10.0.1" }, "_spec": "10.0.1", "_where": "/home/travis/build/RedHatInsights/insights-advisor-frontend", "_development": true, "_args": [ [ "stylelint@10.0.1", "/home/travis/build/RedHatInsights/insights-advisor-frontend" ] ], "optionalDependencies": {}, "_dependencies": { "autoprefixer": "^9.5.1", "balanced-match": "^1.0.0", "chalk": "^2.4.2", "cosmiconfig": "^5.2.0", "debug": "^4.1.1", "execall": "^1.0.0", "file-entry-cache": "^5.0.1", "get-stdin": "^7.0.0", "global-modules": "^2.0.0", "globby": "^9.2.0", "globjoin": "^0.1.4", "html-tags": "^2.0.0", "ignore": "^5.0.6", "import-lazy": "^3.1.0", "imurmurhash": "^0.1.4", "known-css-properties": "^0.13.0", "leven": "^3.1.0", "lodash": "^4.17.11", "log-symbols": "^2.2.0", "mathml-tag-names": "^2.1.0", "meow": "^5.0.0", "micromatch": "^4.0.0", "normalize-selector": "^0.2.0", "pify": "^4.0.1", "postcss": "^7.0.14", "postcss-html": "^0.36.0", "postcss-jsx": "^0.36.0", "postcss-less": "^3.1.4", "postcss-markdown": "^0.36.0", "postcss-media-query-parser": "^0.2.3", "postcss-reporter": "^6.0.1", "postcss-resolve-nested-selector": "^0.1.1", "postcss-safe-parser": "^4.0.1", "postcss-sass": "^0.3.5", "postcss-scss": "^2.0.0", "postcss-selector-parser": "^3.1.0", "postcss-syntax": "^0.36.2", "postcss-value-parser": "^3.3.1", "resolve-from": "^5.0.0", "signal-exit": "^3.0.2", "slash": "^2.0.0", "specificity": "^0.4.1", "string-width": "^4.1.0", "style-search": "^0.1.0", "sugarss": "^2.0.0", "svg-tags": "^1.0.0", "table": "^5.2.3" }, "path": "/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/stylelint", "error": "[Circular]", "extraneous": false, "peerMissing": [ { "requiredBy": "stylelint-config-recommended-scss@3.2.0", "requires": "stylelint@^8.3.0 || ^9.0.0" }, { "requiredBy": "stylelint-scss@3.5.4", "requires": "stylelint@^8.0.0 || ^9.0.0" } ] }, "peerMissing": true }, "stylelint-config-recommended-scss": { "version": "3.2.0", "from": "stylelint-config-recommended-scss@3.2.0", "resolved": "https://registry.npmjs.org/stylelint-config-recommended-scss/-/stylelint-config-recommended-scss-3.2.0.tgz" }, "stylelint-scss": { "version": "3.5.4", "from": "stylelint-scss@3.5.4", "resolved": "https://registry.npmjs.org/stylelint-scss/-/stylelint-scss-3.5.4.tgz" }, "topojson": { "version": "3.0.2", "from": "topojson@3.0.2", "resolved": "https://registry.npmjs.org/topojson/-/topojson-3.0.2.tgz" }, "webpack": { "version": "4.30.0", "from": "webpack@4.30.0", "resolved": "https://registry.npmjs.org/webpack/-/webpack-4.30.0.tgz" }, "webpack-bundle-analyzer": { "version": "3.3.2", "from": "webpack-bundle-analyzer@3.3.2", "resolved": "https://registry.npmjs.org/webpack-bundle-analyzer/-/webpack-bundle-analyzer-3.3.2.tgz" }, "webpack-cli": { "version": "3.3.0", "from": "webpack-cli@3.3.0", "resolved": "https://registry.npmjs.org/webpack-cli/-/webpack-cli-3.3.0.tgz" }, "webpack-dev-server": { "version": "3.3.1", "from": "webpack-dev-server@3.3.1", "resolved": "https://registry.npmjs.org/webpack-dev-server/-/webpack-dev-server-3.3.1.tgz" }, "webpack-visualizer-plugin": { "version": "0.1.11", "from": "webpack-visualizer-plugin@0.1.11", "resolved": "https://registry.npmjs.org/webpack-visualizer-plugin/-/webpack-visualizer-plugin-0.1.11.tgz" }, "write-file-webpack-plugin": { "version": "4.5.0", "from": "write-file-webpack-plugin@4.5.0", "resolved": "https://registry.npmjs.org/write-file-webpack-plugin/-/write-file-webpack-plugin-4.5.0.tgz" } } }
