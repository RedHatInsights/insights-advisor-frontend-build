{"version":3,"file":"js/931.1649147579298.4d33c87c0d2716888c28.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Common/Common.js","webpack:///./src/PresentationalComponents/Inventory/Inventory.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nconst Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb = Breadcrumb;\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BreadcrumbItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst angle_right_icon_1 = tslib_1.__importDefault(require('@patternfly/react-icons/dist/js/icons/angle-right-icon'));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = react_styles_1.css(breadcrumb_1.default.breadcrumbLink, isActive && breadcrumb_1.default.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: react_styles_1.css(breadcrumb_1.default.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: breadcrumb_1.default.breadcrumbItemDivider },\n            React.createElement(angle_right_icon_1.default, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: react_styles_1.css(breadcrumb_1.default.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nexports.BreadcrumbItem = BreadcrumbItem;\nexports.BreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","import React, { useEffect, useState } from 'react';\n\nimport { Breadcrumb } from '@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb';\nimport { BreadcrumbItem } from '@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useGetRecQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\n\nconst Breadcrumbs = ({ current }) => {\n  const intl = useIntl();\n  const location = useLocation().pathname?.split('/');\n  const [items, setItems] = useState([]);\n  const skip =\n    !(location[1] === 'recommendations' && location.length === 4) ||\n    location[2] === 'pathways';\n  const { data, isFetching } = useGetRecQuery(\n    { ruleId: location[2] },\n    { skip }\n  );\n\n  useEffect(() => {\n    const buildBreadcrumbs = () => {\n      let crumbs = [];\n      // add base\n      crumbs.push({\n        title: `${intl.formatMessage(messages.insightsHeader)} ${location[1]}`,\n        navigate: `/${location[1]}`,\n      });\n\n      // if applicable, add :id breadcrumb\n      if (!skip) {\n        crumbs.push({\n          title: data?.description,\n          navigate: `/${location[1]}/${location[2]}`,\n        });\n      }\n\n      if (location[2] === 'pathways') {\n        crumbs = [\n          {\n            title: 'Advisor pathways',\n            navigate: '/recommendations/pathways',\n          },\n        ];\n      }\n\n      setItems(crumbs);\n    };\n\n    buildBreadcrumbs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      {!isFetching && items.length > 0 ? (\n        <Breadcrumb ouiaId=\"detail\">\n          {items.map((oneLink, key) => (\n            <BreadcrumbItem key={key}>\n              <Link to={oneLink.navigate}>{oneLink.title}</Link>\n            </BreadcrumbItem>\n          ))}\n          <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n        </Breadcrumb>\n      ) : (\n        intl.formatMessage(messages.loading)\n      )}\n    </React.Fragment>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  current: PropTypes.string,\n};\n\nexport default Breadcrumbs;\n","import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/js/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_secondary_color_100 } from '@patternfly/react-tokens';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    // eslint-disable-next-line no-console\n    onError: console.log,\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-c-icon-reboot-required'\n          : 'adv-c-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-text-system-reboot-message\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_secondary_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n","import './_Inventory.scss';\n\nimport {\n  BASE_URL,\n  RULES_FETCH_URL,\n  SYSTEMS_FETCH_URL,\n} from '../../AppConstants';\nimport React, { useEffect, useState } from 'react';\nimport { TableVariant, sortable, wrappable } from '@patternfly/react-table';\nimport {\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n  buildTagFilter,\n} from '../Common/Tables';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\n\nimport DisableRule from '../../PresentationalComponents/Modals/DisableRule';\nimport { Get } from '../../Utilities/Api';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { SYSTEM_FILTER_CATEGORIES as SFC } from '../../AppConstants';\nimport { mergeArraysByDiffKeys } from '../Common/Tables';\nimport messages from '../../Messages';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { systemReducer } from '../../Store/AppReducer';\nimport { updateReducers } from '../../Store';\nimport { useIntl } from 'react-intl';\nimport downloadReport from '../Common/DownloadHelper';\n\nconst Inventory = ({\n  tableProps,\n  rule,\n  afterDisableFn,\n  pathway,\n  selectedTags,\n  workloads,\n  SID,\n  permsExport,\n  exportTable,\n  showTags,\n}) => {\n  const store = useStore();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [selected, setSelected] = useState([]);\n  const [filters, setFilters] = useState({\n    limit: 20,\n    offset: 0,\n    sort: '-last_seen',\n    name: '',\n  });\n  const entities = useSelector(({ entities }) => entities || {});\n  const onSelectRows = (id, selected) =>\n    dispatch({ type: 'SELECT_ENTITY', payload: { id, selected } });\n  const addNotification = (data) => dispatch(notification(data));\n  const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n  const [bulkSelect, setBulkSelect] = useState();\n\n  const remediationDataProvider = async () => {\n    if (pathway) {\n      const pathways = (\n        await Get(\n          `${BASE_URL}/pathway/${encodeURI(pathway.slug)}/rules/`,\n          {},\n          {}\n        )\n      )?.data.data;\n      const issues = pathways.map((rec) => ({\n        id: `advisor:${rec.rule_id}`,\n        description: rec.description,\n      }));\n      return { issues, systems: selected };\n    } else {\n      return {\n        issues: [\n          {\n            id: `advisor:${rule.rule_id}`,\n            description: rule.description,\n          },\n        ],\n        systems: selected,\n      };\n    }\n  };\n\n  const onRemediationCreated = (result) => {\n    onSelectRows(-1, false);\n    try {\n      result.remediation && addNotification(result.getNotification());\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const handleModalToggle = (disableRuleModalOpen) => {\n    setDisableRuleModalOpen(disableRuleModalOpen);\n  };\n\n  const bulkSelectfn = () => {\n    setBulkSelect(true);\n    onSelectRows(0, true);\n  };\n\n  const calculateSelectedItems = () =>\n    bulkSelect\n      ? setBulkSelect(false)\n      : setSelected(\n          entities?.rows\n            ?.filter((entity) => entity.selected === true)\n            .map((entity) => entity.id)\n        );\n\n  const createColumns = (defaultColumns) => {\n    let lastSeenColumn = defaultColumns.filter(({ key }) => key === 'updated');\n    let displayName = defaultColumns.filter(\n      ({ key }) => key === 'display_name'\n    );\n    let systemProfile = defaultColumns.filter(\n      ({ key }) => key === 'system_profile'\n    );\n    let tags = defaultColumns.filter(({ key }) => key === 'tags');\n\n    displayName = {\n      ...displayName[0],\n      transforms: [sortable, wrappable],\n      props: { isStatic: true },\n    };\n\n    lastSeenColumn = {\n      ...lastSeenColumn[0],\n      transforms: [sortable, wrappable],\n      props: { width: 20 },\n    };\n\n    systemProfile = {\n      ...systemProfile[0],\n      transforms: [wrappable],\n    };\n\n    tags = {\n      ...tags[0],\n    };\n\n    return [displayName, tags, systemProfile, lastSeenColumn];\n  };\n\n  const handleRefresh = (options) => {\n    /* Rec table doesn't use the same sorting params as sys table, switching between the two results in the rec table blowing up cuz its trying to\n    read the endpoint with incorrect sorting params, if we hold of on updating the sysable url params when using the this component in pathways, it\n    solves this issue for the time being*/\n    const { name, display_name } = options;\n    const refreshedFilters = {\n      ...options,\n      ...(name && {\n        name,\n      }),\n      ...(display_name && {\n        display_name,\n      }),\n    };\n    !pathway && urlBuilder(refreshedFilters, selectedTags);\n  };\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    delete filter[param];\n    setFilters(filter);\n  };\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n  const filterConfigItems = [\n    {\n      label: SFC.rhel_version.title.toLowerCase(),\n      type: SFC.rhel_version.type,\n      id: SFC.rhel_version.urlParam,\n      value: `checkbox-${SFC.rhel_version.urlParam}`,\n      filterValues: {\n        key: `${SFC.rhel_version.urlParam}-filter`,\n        onChange: (_e, values) => {\n          addFilterParam(SFC.rhel_version.urlParam, values);\n        },\n        value: filters.rhel_version,\n        items: SFC.rhel_version.values,\n      },\n    },\n  ];\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, SFC);\n  };\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_e, itemsToRemove, isAll) => {\n      if (isAll) {\n        setFilters({\n          sort: filters.sort,\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  useEffect(() => {\n    entities?.rows?.length && calculateSelectedItems(entities.rows);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entities?.rows]);\n\n  return (\n    <React.Fragment>\n      {disableRuleModalOpen && (\n        <DisableRule\n          handleModalToggle={handleModalToggle}\n          isModalOpen={disableRuleModalOpen}\n          rule={rule}\n          afterFn={afterDisableFn}\n          hosts={selected}\n        />\n      )}\n      <InventoryTable\n        hasCheckbox\n        initialLoading\n        autoRefresh\n        hideFilters={{ all: true, name: false, tags: !showTags }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n        columns={(defaultColumns) => createColumns(defaultColumns)}\n        tableProps={{\n          variant: TableVariant.compact,\n          ...tableProps,\n        }}\n        customFilters={{\n          advisorFilters: filters,\n          selectedTags,\n          workloads,\n          SID,\n        }}\n        showTags={showTags}\n        getEntities={async (_items, config, showTags, defaultGetEntities) => {\n          const {\n            per_page,\n            page,\n            orderBy,\n            orderDirection,\n            advisorFilters,\n            filters,\n            workloads,\n            SID,\n          } = config;\n          const sort = `${orderDirection === 'ASC' ? '' : '-'}${\n            orderBy === 'updated' ? 'last_seen' : orderBy\n          }`;\n          let options = {\n            ...advisorFilters,\n            limit: per_page,\n            offset: page * per_page - per_page,\n            sort,\n            ...(config.filters.hostnameOrId &&\n              !pathway && {\n                name: config?.filters?.hostnameOrId,\n              }),\n            ...(config.filters.hostnameOrId &&\n              pathway && {\n                display_name: config?.filters?.hostnameOrId,\n              }),\n            ...(Array.isArray(advisorFilters.rhel_version) && {\n              rhel_version: advisorFilters.rhel_version?.join(','),\n            }),\n            ...(filters.tagFilters?.length &&\n              buildTagFilter(filters.tagFilters)),\n          };\n\n          workloads &&\n            (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n          handleRefresh(options);\n\n          const fetchedSystems = pathway\n            ? (\n                await Get(\n                  `${SYSTEMS_FETCH_URL}`,\n                  {},\n                  { ...options, pathway: pathway.slug }\n                )\n              )?.data\n            : (\n                await Get(\n                  `${RULES_FETCH_URL}${encodeURI(\n                    rule.rule_id\n                  )}/systems_detail/`,\n                  {},\n                  options\n                )\n              )?.data;\n\n          const results = await defaultGetEntities(\n            fetchedSystems.data.map((system) => system.system_uuid),\n            {\n              page,\n              per_page,\n              hasItems: true,\n              fields: { system_profile: ['operating_system'] },\n            },\n            showTags\n          );\n\n          return Promise.resolve({\n            results: mergeArraysByDiffKeys(\n              fetchedSystems.data,\n              results.results\n            ),\n            total: fetchedSystems.meta.count,\n          });\n        }}\n        dedicatedAction={\n          <RemediationButton\n            key=\"remediation-button\"\n            isDisabled={\n              selected.length === 0 || (!pathway && rule?.playbook_count === 0)\n            }\n            dataProvider={remediationDataProvider}\n            onRemediationCreated={(result) => onRemediationCreated(result)}\n          >\n            {intl.formatMessage(messages.remediate)}\n          </RemediationButton>\n        }\n        actionsConfig={{\n          actions: [\n            '',\n            {\n              label: intl.formatMessage(messages.disableRuleForSystems),\n              props: { isDisabled: selected.length === 0 },\n              onClick: () => handleModalToggle(true),\n            },\n          ],\n        }}\n        bulkSelect={{\n          count: selected.length,\n          items: [\n            {\n              title: intl.formatMessage(messages.selectNone),\n              onClick: () => {\n                onSelectRows(-1, false);\n              },\n            },\n            {\n              ...(entities?.rows?.length > filters.limit\n                ? {\n                    title: intl.formatMessage(messages.selectPage, {\n                      items: filters.limit,\n                    }),\n                    onClick: () => {\n                      onSelectRows(0, true);\n                    },\n                  }\n                : {}),\n            },\n            {\n              ...(entities?.rows?.length > 0\n                ? {\n                    title: intl.formatMessage(messages.selectAll, {\n                      items: entities?.total || 0,\n                    }),\n                    onClick: async () => {\n                      console.error(pathway);\n                      const allSystems = pathway\n                        ? (\n                            await Get(\n                              `${SYSTEMS_FETCH_URL}`,\n                              {},\n                              {\n                                pathway: pathway.slug,\n                                limit: pathway.impacted_systems_count,\n                              }\n                            )\n                          )?.data?.data?.map((system) => system.system_uuid)\n                        : (\n                            await Get(\n                              `${RULES_FETCH_URL}${encodeURI(\n                                rule.rule_id\n                              )}/systems/`,\n                              {},\n                              { name: filters.name }\n                            )\n                          )?.data?.host_ids;\n\n                      console.error(allSystems);\n                      setSelected(allSystems);\n                      bulkSelectfn();\n                    },\n                  }\n                : {}),\n            },\n          ],\n          checked:\n            (selected.length === entities?.rows?.length ||\n              selected.length === entities?.total) &&\n            entities?.total > 0\n              ? 1\n              : selected.length === filters.limit\n              ? null\n              : 0,\n          onSelect: () => {\n            selected.length > 0 ? onSelectRows(-1, false) : bulkSelectfn();\n            calculateSelectedItems();\n          },\n        }}\n        fallback={Loading}\n        onLoad={({\n          mergeWithEntities,\n          INVENTORY_ACTION_TYPES,\n          mergeWithDetail,\n        }) => {\n          store.replaceReducer(\n            updateReducers({\n              ...mergeWithEntities(systemReducer([], INVENTORY_ACTION_TYPES), {\n                page: Number(filters.offset / filters.limit + 1 || 1),\n                perPage: Number(filters.limit || 20),\n              }),\n              ...mergeWithDetail(),\n            })\n          );\n        }}\n        exportConfig={\n          permsExport && {\n            label: intl.formatMessage(messages.exportCsv),\n            // eslint-disable-next-line no-dupe-keys\n            label: intl.formatMessage(messages.exportJson),\n            onSelect: (_e, fileType) =>\n              downloadReport(\n                exportTable,\n                fileType,\n                { rule_id: rule.rule_id, ...filters },\n                selectedTags,\n                workloads,\n                SID,\n                dispatch\n              ),\n            isDisabled: !permsExport || entities?.rows?.length === 0,\n            tooltipText: permsExport\n              ? intl.formatMessage(messages.exportData)\n              : intl.formatMessage(messages.permsAction),\n          }\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nInventory.propTypes = {\n  tableProps: PropTypes.any,\n  rule: PropTypes.object,\n  afterDisableFn: PropTypes.func,\n  pathway: PropTypes.object,\n  selectedTags: PropTypes.any,\n  workloads: PropTypes.any,\n  SID: PropTypes.any,\n  permsExport: PropTypes.bool,\n  exportTable: PropTypes.string,\n  showTags: PropTypes.bool,\n};\n\nexport default Inventory;\n"],"names":["exports","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","useOUIAProps","createElement","Object","assign","css","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement","angle_right_icon_1","classNameProp","to","isActive","isDropdown","target","component","render","Component","ariaCurrent","undefined","breadcrumbLink","modifiers","current","breadcrumbItem","breadcrumbItemDivider","type","breadcrumbDropdown","href","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useEffect","console","error","concat","__assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Cmp","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","size","Breadcrumbs","intl","useIntl","location","useLocation","pathname","split","useState","items","setItems","skip","useGetRecQuery","ruleId","data","isFetching","crumbs","push","title","formatMessage","messages","navigate","description","oneLink","key","Link","PropTypes","cache","createIntlCache","locale","navigator","language","slice","createIntl","onError","log","RebootRequired","reboot_required","TextContent","Text","TextVariants","strong","str","status","QuestionTooltip","text","position","TooltipPosition","content","aria-label","color","global_secondary_color_100","Inventory","localFilters","tableProps","rule","afterDisableFn","pathway","selectedTags","workloads","SID","permsExport","exportTable","showTags","dispatch","useDispatch","selected","setSelected","limit","offset","sort","name","filters","setFilters","entities","useSelector","onSelectRows","id","payload","addNotification","notification","disableRuleModalOpen","setDisableRuleModalOpen","bulkSelect","setBulkSelect","remediationDataProvider","Get","BASE_URL","encodeURI","slug","pathways","issues","rec","rule_id","systems","handleModalToggle","bulkSelectfn","calculateSelectedItems","rows","filter","entity","handleRefresh","options","display_name","refreshedFilters","urlBuilder","removeFilterParam","param","filterConfigItems","label","SFC","value","filterValues","onChange","_e","values","addFilterParam","rhel_version","activeFiltersConfig","deleteTitle","pruneFilters","onDelete","itemsToRemove","isAll","item","newFilter","urlParam","Array","isArray","String","chips","isModalOpen","afterFn","hosts","hasCheckbox","initialLoading","autoRefresh","hideFilters","all","tags","filterConfig","columns","defaultColumns","lastSeenColumn","displayName","systemProfile","transforms","sortable","wrappable","isStatic","width","createColumns","variant","TableVariant","customFilters","advisorFilters","getEntities","_items","config","defaultGetEntities","per_page","page","orderBy","orderDirection","hostnameOrId","join","tagFilters","buildTagFilter","workloadQueryBuilder","SYSTEMS_FETCH_URL","RULES_FETCH_URL","fetchedSystems","system","system_uuid","hasItems","fields","system_profile","results","Promise","resolve","mergeArraysByDiffKeys","total","meta","count","dedicatedAction","isDisabled","playbook_count","dataProvider","onRemediationCreated","result","remediation","getNotification","dismissable","actionsConfig","actions","onClick","impacted_systems_count","host_ids","allSystems","checked","onSelect","Loading","onLoad","mergeWithEntities","INVENTORY_ACTION_TYPES","mergeWithDetail","replaceReducer","updateReducers","systemReducer","Number","perPage","exportConfig","fileType","downloadReport"],"sourceRoot":""}