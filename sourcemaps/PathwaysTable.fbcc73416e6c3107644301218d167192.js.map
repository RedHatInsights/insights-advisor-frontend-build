{"version":3,"file":"js/PathwaysTable.3cfbc9dd77853f7592cb.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/search-icon.js","webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js","webpack:///./src/PresentationalComponents/PathwaysTable/PathwaysTable.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SearchIcon = createIcon(SearchIconConfig);\n\nexport default SearchIcon;","import { Label } from '@patternfly/react-core/dist/esm/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const RecommendationLevel = ({ recLvl, isCompact }) => {\n  const intl = useIntl();\n  const label = (text, recLvl, color) => (\n    <Label color={color} isCompact>{`${text} - ${recLvl}%`}</Label>\n  );\n\n  if (recLvl >= 80) {\n    return label(intl.formatMessage(messages.high), recLvl, 'red', isCompact);\n  } else if (recLvl < 80 && recLvl >= 50) {\n    return label(\n      intl.formatMessage(messages.medium),\n      recLvl,\n      'orange',\n      isCompact\n    );\n  } else {\n    return label(intl.formatMessage(messages.low), recLvl, 'blue', isCompact);\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\nRecommendationLevel.defaultProps = {\n  isCompact: true,\n};\n\nexport default RecommendationLevel;\n","import {\n  DEBOUNCE_DELAY,\n  FILTER_CATEGORIES as FC,\n  PATHWAYS_FILTER_CATEGORIES as PFC,\n} from '../../AppConstants';\nimport { useLocation } from 'react-router-dom';\nimport Link from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/esm/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  info,\n  sortable,\n} from '@patternfly/react-table';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport Loading from '../Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport RuleLabels from '../Labels/RuleLabels';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport debounce from '../../Utilities/Debounce';\nimport messages from '../../Messages';\nimport { updatePathFilters } from '../../Services/Filters';\nimport { useGetPathwaysQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst PathwaysTable = ({ isTabActive }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.pathState);\n  const setFilters = (filters) => dispatch(updatePathFilters(filters));\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const {\n    data: pathways = [],\n    isFetching,\n    isLoading,\n    isError,\n  } = useGetPathwaysQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const cols = [\n    {\n      title: intl.formatMessage(messages.pathwaysName),\n      transforms: [sortable, cellWidth(45)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      // transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reboot),\n      // transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reclvl),\n      transforms: [\n        sortable,\n        cellWidth(20),\n        fitContent,\n        info({\n          tooltip: intl.formatMessage(messages.reclvldetails),\n          tooltipProps: {\n            isContentLeftAligned: true,\n          },\n        }),\n      ],\n    },\n  ];\n  const sortIndices = {\n    0: 'name',\n    // 1: 'category',\n    2: 'impacted_systems_count',\n    // 3: 'reboot_required',\n    4: 'recommendation_level',\n  };\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, { ...FC, ...PFC });\n  };\n\n  const rowBuilder = (pathways) =>\n    pathways.length === 0\n      ? [\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={SearchIcon}\n                    title={intl.formatMessage(messages.noResults)}\n                    text={intl.formatMessage(messages.adjustFilters)}\n                  />\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]\n      : pathways.flatMap((pathway, key) => [\n          {\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link\n                      key={key}\n                      to={`/recommendations/pathways/${pathway.slug}`}\n                    >\n                      {' '}\n                      {pathway.name}{' '}\n                    </Link>\n                    {pathway.has_incident && (\n                      <RuleLabels rule={{ tags: 'incident' }} isCompact />\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <CategoryLabel\n                    key={key}\n                    labelList={pathway.categories}\n                    isCompact\n                  />\n                ),\n              },\n              {\n                title: (\n                  <div\n                    key={key}\n                  >{`${pathway.impacted_systems_count.toLocaleString()}`}</div>\n                ),\n              },\n              {\n                title: (\n                  <span key={key}>\n                    {intl.formatMessage(\n                      pathway.reboot_required\n                        ? messages.required\n                        : messages.notRequired\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <RecommendationLevel\n                    key={key}\n                    recLvl={pathway.recommendation_level}\n                  />\n                ),\n              },\n            ],\n          },\n        ]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: PFC.has_incident.title,\n      type: PFC.has_incident.type,\n      id: PFC.has_incident.urlParam,\n      value: `checkbox-${PFC.has_incident.urlParam}`,\n      filterValues: {\n        key: `${PFC.has_incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.has_incident.urlParam, values),\n        value: filters.has_incident,\n        items: PFC.has_incident.values,\n      },\n    },\n    {\n      label: PFC.reboot_required.title,\n      type: PFC.reboot_required.type,\n      id: PFC.reboot_required.urlParam,\n      value: `checkbox-${PFC.reboot_required.urlParam}`,\n      filterValues: {\n        key: `${PFC.reboot_required.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.reboot_required.urlParam, values),\n        value: filters.reboot_required,\n        items: PFC.reboot_required.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  useEffect(() => {\n    if (isTabActive && search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ||\n        !Object.values(sortIndices).includes(paramsObject?.sort[0])\n          ? '-impacted_systems_count'\n          : paramsObject.sort[0];\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot_required !== undefined &&\n        !Array.isArray(paramsObject.reboot_required) &&\n        (paramsObject.reboot_required = [`${paramsObject.reboot_required}`]);\n\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (filters.sort !== undefined && sortIndices) {\n      let sortInput = filters.sort;\n      const sortIndex = Number(\n        Object.entries(sortIndices).find(\n          (item) => item[1] === sortInput || `-${item[1]}` === sortInput\n        )[0]\n      );\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: sortIndex, direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar\n        pagination={{\n          itemCount: pathways?.meta?.count || 0,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Table>\n          <ErrorState />\n        </Table>\n      ) : (\n        <Table\n          aria-label={'pathways-table'}\n          variant={TableVariant.compact}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rowBuilder(pathways?.data)}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <TableToolbar isFooter>\n        <Pagination\n          ouiaId=\"page\"\n          itemCount={pathways?.meta?.count || 0}\n          page={filters.offset / filters.limit + 1}\n          perPage={Number(filters.limit)}\n          onSetPage={(_e, page) => {\n            onSetPage(page);\n          }}\n          onPerPageSelect={(_e, perPage) => {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          }}\n          widgetId={`pagination-options-menu-bottom`}\n          variant={PaginationVariant.bottom}\n        />\n      </TableToolbar>\n    </React.Fragment>\n  );\n};\n\nPathwaysTable.propTypes = {\n  isTabActive: PropTypes.bool,\n};\n\nexport default PathwaysTable;\n"],"names":["SearchIconConfig","name","height","width","svgPath","yOffset","xOffset","SearchIcon","RecommendationLevel","_ref","recLvl","intl","isCompact","useIntl","label","text","color","React","Label","concat","formatMessage","messages","high","medium","low","propTypes","props","PropTypes","defaultProps","PathwaysTable","_pathways$meta","_pathways$meta2","isTabActive","dispatch","useDispatch","search","useLocation","selectedTags","useSelector","_ref2","filters","workloads","_ref3","SID","_ref4","_ref5","pathState","setFilters","updatePathFilters","options","length","_objectSpread","tags","join","workloadQueryBuilder","localFilters","_useGetPathwaysQuery","useGetPathwaysQuery","filterFetchBuilder","_useGetPathwaysQuery$","data","pathways","isFetching","isLoading","isError","cols","title","pathwaysName","transforms","sortable","cellWidth","category","systems","reboot","reclvl","fitContent","info","tooltip","reclvldetails","tooltipProps","isContentLeftAligned","sortIndices","_useState","useState","_useState2","_slicedToArray","sortBy","setSortBy","_useState3","_useState4","filterBuilding","setFilterBuilding","_useState5","_useState6","searchText","setSearchText","debouncedSearchText","debounce","DEBOUNCE_DELAY","onSetPage","pageNumber","newOffset","limit","offset","removeFilterParam","param","filter","addFilterParam","values","_defineProperty","filterConfigItems","toLowerCase","filterValues","key","onChange","_event","value","placeholder","filterBy","FC","type","id","urlParam","items","PFC","has_incident","reboot_required","activeFiltersConfig","deleteTitle","resetFilters","sort","pruneFilters","onDelete","itemsToRemove","isAll","map","item","newFilter","Array","isArray","String","chips","useEffect","urlBuilder","paramsObject","paramParser","undefined","Object","includes","Number","sortInput","sortIndex","entries","find","sortDirection","index","direction","PrimaryToolbar","pagination","itemCount","meta","count","page","perPage","onPerPageSelect","filterConfig","Loading","Table","ErrorState","variant","TableVariant","compact","onSort","orderParam","cells","rows","MessageState","icon","noResults","adjustFilters","colSpan","flatMap","pathway","Link","to","slug","RuleLabels","rule","CategoryLabel","labelList","categories","impacted_systems_count","toLocaleString","required","notRequired","recommendation_level","rowBuilder","isStickyHeader","TableHeader","TableBody","TableToolbar","isFooter","Pagination","ouiaId","_e","widgetId","PaginationVariant","bottom"],"sourceRoot":""}