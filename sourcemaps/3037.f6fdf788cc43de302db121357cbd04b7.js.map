{"version":3,"file":"js/3037.1643745443386.658325ddfe2da6e234bd.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Labels/CategoryLabel.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["import AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport { LabelGroup } from '@patternfly/react-core/dist/js/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CategoryLabel = ({ labelList }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const label = (icon, text) => (\n    <Label icon={icon} variant=\"outline\" color=\"blue\">\n      {text}\n    </Label>\n  );\n  const labels = (id) => {\n    if (id === 1) {\n      return label(\n        <AutomationIcon />,\n        intl.formatMessage(messages.availability)\n      );\n    }\n    if (id === 2) {\n      return label(<LockIcon />, intl.formatMessage(messages.security));\n    }\n    if (id === 3) {\n      return label(<CubeIcon />, intl.formatMessage(messages.stability));\n    }\n    if (id === 4) {\n      return label(<PortIcon />, intl.formatMessage(messages.performance));\n    }\n  };\n  return (\n    <LabelGroup numLabels={1}>\n      {sortedFrequencyList.map((id) => labels(Number(id[0])))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n};\n\nexport default CategoryLabel;\n","import './_RulesTable.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../Labels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useGetRecsQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RulesTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.added),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.riskofchange),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.remediation),\n      transforms: [sortable, cellWidth(15), fitContent],\n    },\n  ]);\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.recState);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n  const setFilters = (filters) => dispatch(updateRecFilters(filters));\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: rules = [],\n    isFetching,\n    isLoading,\n    isError,\n    refetch,\n  } = useGetRecsQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'resolution_risk',\n    6: 'impacted_count',\n    7: 'playbook_count',\n  };\n\n  const ruleResolutionRisk = (rule) => {\n    const resolution = rule.resolution_set.find(\n      (resolution) =>\n        resolution.system_type === AppConstants.SYSTEM_TYPES.rhel ||\n        AppConstants.SYSTEM_TYPES.ocp\n    );\n    return resolution ? resolution.resolution_risk.risk : undefined;\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n\n  const hideReports = async (rowId) => {\n    const rule = rows[rowId].rule;\n\n    try {\n      if (rule.rule_status === 'enabled') {\n        setSelectedRule(rule);\n        setDisableRuleOpen(true);\n      } else {\n        try {\n          await DeleteApi(`${AppConstants.BASE_URL}/ack/${rule.rule_id}/`);\n          addNotification({\n            variant: 'success',\n            timeout: true,\n            dismissable: true,\n            title: intl.formatMessage(messages.recSuccessfullyEnabled),\n          });\n          refetch();\n        } catch (error) {\n          addNotification({\n            variant: 'danger',\n            dismissable: true,\n            title: intl.formatMessage(messages.error),\n            description: `${error}`,\n          });\n        }\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title:\n          rule.rule_status === 'enabled'\n            ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n            : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  const noRuleHitsBodyMessage = (rule_status) => {\n    switch (rule_status) {\n      case 'enabled':\n        return messages.rulesTableNoRuleHitsEnabledRulesBody;\n      case 'disabled':\n        return messages.rulesTableNoRuleHitsDisabledRulesBody;\n      case 'rhdisabled':\n        return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n      default:\n        return messages.noRecommendations;\n    }\n  };\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n      paramsObject.has_playbook !== undefined &&\n        !Array.isArray(paramsObject.has_playbook) &&\n        (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot !== undefined &&\n        !Array.isArray(paramsObject.reboot) &&\n        (paramsObject.reboot = [`${paramsObject.reboot}`]);\n      paramsObject.impacting !== undefined &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sortIndex = Object.entries(sortIndices)?.find(\n      (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n    );\n    if (filters.sort !== undefined && sortIndex) {\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: Number(sortIndex[0]), direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows([\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={CheckCircleIcon}\n                    iconClass=\"ansibleCheck\"\n                    title={intl.formatMessage(\n                      messages.rulesTableNoRuleHitsTitle\n                    )}\n                    text={intl.formatMessage(\n                      noRuleHitsBodyMessage(filters.rule_status)\n                    )}\n                  >\n                    {filters.rule_status === 'enabled' && (\n                      <Button\n                        variant=\"link\"\n                        style={{ paddingTop: 24 }}\n                        onClick={() => toggleRulesDisabled('all')}\n                      >\n                        {intl.formatMessage(\n                          messages.rulesTableNoRuleHitsAddDisabledButton\n                        )}\n                      </Button>\n                    )}\n                  </MessageState>\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]);\n      } else {\n        const rows = rules.data.flatMap((value, key) => [\n          {\n            isOpen: isAllExpanded,\n            rule: value,\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                      {' '}\n                      {value.description}{' '}\n                    </Link>\n                    <RuleLabels rule={value} />\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <DateFormat\n                    key={key}\n                    date={value.publish_date}\n                    variant=\"relative\"\n                  />\n                ),\n              },\n              {\n                title: <CategoryLabel key={key} labelList={[value.category]} />,\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <Tooltip\n                      key={key}\n                      position={TooltipPosition.bottom}\n                      content={intl.formatMessage(\n                        messages.rulesDetailsTotalriskBody,\n                        {\n                          risk:\n                            AppConstants.TOTAL_RISK_LABEL_LOWER[\n                              value.total_risk\n                            ] || intl.formatMessage(messages.undefined),\n                          strong: (str) => strong(str),\n                        }\n                      )}\n                    >\n                      <InsightsLabel value={value.total_risk} />\n                    </Tooltip>\n                  </div>\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <InsightsLabel\n                      text={\n                        AppConstants.RISK_OF_CHANGE_LABEL[\n                          ruleResolutionRisk(value)\n                        ]\n                      }\n                      value={ruleResolutionRisk(value)}\n                      hideIcon\n                    />\n                    <div></div>\n                  </div>\n                ),\n              },\n              {\n                title:\n                  value.rule_status === 'rhdisabled' ? (\n                    <Tooltip\n                      content={intl.formatMessage(messages.byEnabling, {\n                        systems: value.impacted_systems_count,\n                      })}\n                    >\n                      <span>{intl.formatMessage(messages.nA)}</span>\n                    </Tooltip>\n                  ) : (\n                    <div\n                      key={key}\n                    >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                  ),\n              },\n              {\n                title: (\n                  <div className=\"ins-c-center-text \" key={key}>\n                    {value.playbook_count ? (\n                      <span>\n                        <AnsibeTowerIcon size=\"sm\" />{' '}\n                        {intl.formatMessage(messages.playbook)}\n                      </span>\n                    ) : (\n                      intl.formatMessage(messages.manual)\n                    )}\n                  </div>\n                ),\n              },\n            ],\n          },\n          {\n            parent: key * 2,\n            fullWidth: true,\n            cells: [\n              {\n                title: (\n                  <Main className=\"pf-m-light\">\n                    <Stack hasGutter>\n                      {value.hosts_acked_count ? (\n                        <StackItem>\n                          <BellSlashIcon size=\"sm\" />\n                          &nbsp;\n                          {value.hosts_acked_count &&\n                          !value.impacted_systems_count\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledForAllSystems\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledForSystemsBody,\n                                { systems: value.hosts_acked_count }\n                              )}\n                          &nbsp;{' '}\n                          <Button\n                            isInline\n                            variant=\"link\"\n                            ouiaId=\"viewSystem\"\n                            onClick={() => {\n                              setViewSystemsModalRule(value);\n                              setViewSystemsModalOpen(true);\n                            }}\n                          >\n                            {intl.formatMessage(messages.viewSystems)}\n                          </Button>\n                        </StackItem>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )}\n                      <RuleDetails\n                        rule={value}\n                        resolutionRisk={ruleResolutionRisk(value)}\n                        riskOfChangeDesc={\n                          AppConstants.RISK_OF_CHANGE_DESC[\n                            ruleResolutionRisk(value)\n                          ]\n                        }\n                      />\n                    </Stack>\n                  </Main>\n                ),\n              },\n            ],\n          },\n        ]);\n        setRows(rows);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rules]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (_event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const afterViewSystemsFn = () => {\n    refetch();\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={afterViewSystemsFn}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={refetch}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID\n            ),\n          isDisabled:\n            !permsExport ||\n            !filters.impacting ||\n            (Array.isArray(filters.impacting) &&\n              !filters.impacting.every((item) => item === 'true')),\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      ) : (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default RulesTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["CategoryLabel","arr","labelList","intl","useIntl","sortedFrequencyList","map","label","id","Object","entries","reduce","acc","curr","sort","a","b","icon","text","Label","variant","color","numLabels","formatMessage","messages","labels","Number","propTypes","PropTypes","dispatch","useDispatch","search","useLocation","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","useState","title","transforms","sortable","cellWidth","fitContent","cols","selectedTags","useSelector","filters","workloads","SID","recState","rows","setRows","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","addNotification","data","addNotificationAction","setFilters","updateRecFilters","options","length","tags","join","workloadQueryBuilder","useGetRecsQuery","filterFetchBuilder","rules","isFetching","isLoading","isError","refetch","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","6","7","ruleResolutionRisk","rule","resolution","resolution_set","find","system_type","resolution_risk","risk","undefined","useEffect","urlBuilder","onSetPage","pageNumber","newOffset","limit","offset","toggleRulesDisabled","rule_status","impacting","hideReports","rowId","DeleteApi","rule_id","timeout","dismissable","description","noRuleHitsBodyMessage","paramsObject","paramParser","has_playbook","Array","isArray","incident","reboot","sortIndex","item","sortDirection","index","direction","cells","CheckCircleIcon","iconClass","Button","style","paddingTop","onClick","props","colSpan","flatMap","value","key","isOpen","Link","to","date","publish_date","category","Tooltip","position","TooltipPosition","content","total_risk","strong","str","hideIcon","systems","impacted_systems_count","toLocaleString","className","playbook_count","size","parent","fullWidth","Stack","hasGutter","hosts_acked_count","StackItem","isInline","ouiaId","resolutionRisk","riskOfChangeDesc","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","toLowerCase","filterValues","onChange","_event","placeholder","FC","type","items","res_risk","impact","likelihood","e","activeFiltersConfig","deleteTitle","topic","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","urlParam","String","chips","handleModalToggle","toggleModal","isModalOpen","afterFn","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","fileType","downloadReport","every","filterConfig","message","Table","aria-label","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","orderParam","areActionsDisabled","isStickyHeader","TableHeader","TableBody","widgetId","PaginationVariant","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}