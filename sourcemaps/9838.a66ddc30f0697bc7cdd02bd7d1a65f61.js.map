{"version":3,"file":"js/9838.1647513979608.e66d85953003b41f5e83.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Services/Acks.js","webpack:///./src/Services/Filters.js","webpack:///./src/Services/Pathways.js","webpack:///./src/Services/Recs.js","webpack:///./src/Services/Topics.js","webpack:///./src/Store/AppReducer.js","webpack:///./src/Services/Systems.js","webpack:///./src/Store/index.js"],"sourcesContent":["import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst Recs = lazy(() =>\n  import(/* webpackChunkName: \"Recs\" */ './SmartComponents/Recs/Recs')\n);\nconst Systems = lazy(() =>\n  import(/* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems')\n);\nconst Topics = lazy(() =>\n  import(/* webpackChunkName: \"Topics\" */ './SmartComponents/Topics/Topics')\n);\n\nconst paths = [\n  { title: 'Recommendations', path: '/recommendations:?', component: Recs },\n  { title: 'Recommendations', path: '/recommendations', component: Recs },\n  {\n    title: 'Pathways',\n    path: '/recommendations/pathways',\n    component: Recs,\n  },\n  {\n    title: 'Pathways',\n    path: '/recommendations/pathways:?',\n    component: Recs,\n  },\n\n  { title: 'Systems', path: '/systems:?', component: Systems },\n  { title: 'Systems', path: '/systems', component: Systems },\n  { title: 'Topics', path: '/topics', component: Topics },\n];\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      {paths.map((path) => (\n        <Route\n          key={path.title}\n          path={path.path}\n          component={path.component}\n          rootClass={path.rootClass}\n        />\n      ))}\n      <Redirect path=\"/recommendations\" to={`${paths[1].path}`} push />\n      {/* Finally, catch all unmatched routes */}\n      <Redirect path=\"*\" to={`${paths[1].path}`} push />\n    </Switch>\n  </Suspense>\n);\n","import './App.scss';\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { updateSID, updateTags, updateWorkloads } from './Services/Filters';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from './PresentationalComponents/MessageState/MessageState';\nimport { PERMS } from './AppConstants';\nimport { Routes } from './Routes';\nimport messages from './Messages';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst App = () => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const { pathname } = useLocation();\n  const permsViewRecs = usePermissions('advisor', PERMS.viewRecs);\n  const [auth, setAuth] = useState(false);\n  const dispatch = useDispatch();\n  const appNavClick = useMemo(\n    () => ({\n      recommendations(redirect) {\n        insights.chrome.appNavClick({ id: 'recommendations', redirect });\n      },\n      systems(redirect) {\n        insights.chrome.appNavClick({ id: 'systems', redirect });\n      },\n      topics(redirect) {\n        insights.chrome.appNavClick({ id: 'topics', redirect });\n      },\n    }),\n    []\n  );\n\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => setAuth(true));\n    insights.chrome.identifyApp('advisor');\n    insights.chrome?.globalFilterScope?.('insights');\n    if (insights.chrome?.globalFilterScope) {\n      insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n        const [workloads, SID, selectedTags] =\n          insights.chrome?.mapGlobalFilter?.(data, false, true) || [];\n        batch(() => {\n          dispatch(updateWorkloads(workloads));\n          dispatch(updateTags(selectedTags));\n          dispatch(updateSID(SID));\n        });\n      });\n    }\n\n    const baseComponentUrl = pathname.split('/')[1];\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        push(`/${event.navId}`);\n        appNavClick[baseComponentUrl] !== undefined\n          ? appNavClick[baseComponentUrl](true)\n          : appNavClick.recommendations;\n      }\n    });\n\n    return () => unregister();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    auth &&\n    !permsViewRecs?.isLoading &&\n    (permsViewRecs?.hasAccess ? (\n      <Routes />\n    ) : (\n      <MessageState\n        variant=\"large\"\n        icon={LockIcon}\n        title={intl.formatMessage(messages.permsTitle)}\n        text={intl.formatMessage(messages.permsBody)}\n      />\n    ))\n  );\n};\n\nexport default App;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Acks = createApi({\n  reducerPath: 'acks',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  endpoints: (build) => ({\n    getRecAcks: build.query({\n      query: (options) => ({ url: `/ack/${options.ruleId}/` }),\n    }),\n    getHostAcks: build.query({\n      query: (options) => ({ url: `/hostack/`, options }),\n      transformResponse: (response) => response.data,\n    }),\n    setAck: build.mutation({\n      query: (options) => ({\n        url: `${options.type === 'RULE' ? '/ack/' : '/hostack/'}`,\n        options: options.options,\n        method: 'post',\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecAcksQuery, useGetHostAcksQuery, useSetAckMutation } =\n  Acks;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filtersInitialState = {\n  recState: {\n    impacting: ['true'],\n    rule_status: 'enabled',\n    sort: '-total_risk',\n    limit: 20,\n    offset: 0,\n  },\n  pathState: {\n    sort: '-impacted_systems_count',\n    limit: 20,\n    offset: 0,\n  },\n  sysState: { sort: '-last_seen', limit: 20, offset: 0 },\n  selectedTags: null,\n  workloads: {},\n  SID: [],\n};\n\nconst filters = createSlice({\n  name: 'filters',\n  initialState: filtersInitialState,\n  reducers: {\n    updateRecFilters(state, action) {\n      state.recState = action.payload;\n    },\n    updateSysFilters(state, action) {\n      state.sysState = action.payload;\n    },\n    updatePathFilters(state, action) {\n      state.pathState = action.payload;\n    },\n    updateTags(state, action) {\n      state.selectedTags = action.payload;\n    },\n    updateWorkloads(state, action) {\n      state.workloads = action.payload;\n    },\n    updateSID(state, action) {\n      state.SID = action.payload;\n    },\n  },\n});\n\nexport const {\n  updateRecFilters,\n  updateSysFilters,\n  updatePathFilters,\n  updateTags,\n  updateWorkloads,\n  updateSID,\n} = filters.actions;\n\nexport default filters.reducer;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Pathways = createApi({\n  reducerPath: 'pathways',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  endpoints: (build) => ({\n    getPathways: build.query({\n      query: (options) => ({ url: `/pathway/`, options }),\n    }),\n    getPathway: build.query({\n      query: (options) => ({ url: `/pathway/${options.slug}/`, options }),\n    }),\n    getPathwayRules: build.query({\n      query: (name) => ({ url: `/pathway/${name}/rules/` }),\n    }),\n    getPathwaySystems: build.query({\n      query: (name) => ({ url: `/pathway/${name}/systems/` }),\n    }),\n  }),\n});\n\nexport const {\n  useGetPathwaysQuery,\n  useGetPathwayQuery,\n  useGetPathwayRulesQuery,\n  useGetPathwaySystemsQuery,\n} = Pathways;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Recs = createApi({\n  reducerPath: 'recs',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  endpoints: (build) => ({\n    getRecs: build.query({\n      query: (options) => ({ url: `/rule/`, options }),\n    }),\n    getRec: build.query({\n      query: (options) => ({\n        url: `/rule/${options.ruleId}/`,\n        options,\n      }),\n    }),\n    getRecSystems: build.query({\n      query: (options, search) => ({\n        url: `/rule/${encodeURI(options.ruleId)}/systems/`,\n        options,\n        search,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecsQuery, useGetRecQuery, useGetRecsystemsQuery } = Recs;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Topics = createApi({\n  reducerPath: 'topics',\n  baseQuery: AxiosBaseQuery({\n    baseUrl: `${BASE_URL}`,\n  }),\n  endpoints: (build) => ({\n    getTopics: build.query({\n      query: (options) => ({ url: `/topic/`, options }),\n      // transformResponse: (response) => response.data,\n    }),\n    getTopicsAdmin: build.query({\n      query: (options) => ({ url: `/topic?show_disabled=true`, options }),\n    }),\n    getTopic: build.query({\n      query: (options) => ({\n        url: `/topic/${options.topicId}/`,\n        options,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetTopicsQuery, useGetTopicQuery, useGetTopicsAdminQuery } =\n  Topics;\n","import Advisor from '../SmartComponents/SystemAdvisor';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nexport function systemReducer(cols, INVENTORY_ACTION_TYPES) {\n  return applyReducerHash({\n    [`${INVENTORY_ACTION_TYPES.LOAD_ENTITIES}_FULFILLED`]: (state) => {\n      const { [state.columns.length - 1]: lastCol } = state.columns;\n      cols[cols.length - 1] = {\n        ...lastCol,\n        ...cols[cols.length - 1],\n      };\n      return {\n        ...state,\n        columns: cols.map((cell) => ({\n          ...cell,\n          ...state.columns.find(({ key }) => cell.key === key),\n        })),\n      };\n    },\n  });\n}\n\nexport function entitiesDetailsReducer(ActionTypes) {\n  return applyReducerHash(\n    {\n      [`${ActionTypes.LOAD_ENTITY}_FULFILLED`]: enableApplications,\n    },\n    {}\n  );\n}\n\nfunction enableApplications(state) {\n  return {\n    ...state,\n    loaded: true,\n    activeApps: [{ title: 'Insights', name: 'insights', component: Advisor }],\n  };\n}\n","import * as AppConst from '../AppConstants';\n\nimport { AxiosBaseQuery } from '../Utilities/Api';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Systems = createApi({\n  reducerPath: 'systems',\n  baseQuery: AxiosBaseQuery({ baseUrl: AppConst.BASE_URL }),\n  endpoints: (build) => ({\n    getSystems: build.query({\n      query: (options) => ({ url: `/system/`, options }),\n    }),\n    getSystem: build.query({\n      query: (ruleId, options, search) => ({\n        url: `/rule/${encodeURI(ruleId)}/systems/`,\n        options,\n        search,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetSystemsQuery,\n  useLazygetSystemsQuery,\n  useGetSystemQuery,\n  useLazygetSystemQuery,\n} = Systems;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { entitiesDetailsReducer, systemReducer } from './AppReducer';\n\nimport { Acks } from '../Services/Acks';\nimport { Pathways } from '../Services/Pathways';\nimport { Recs } from '../Services/Recs';\nimport { Systems } from '../Services/Systems';\nimport { Topics } from '../Services/Topics';\nimport filters from '../Services/Filters';\nimport logger from 'redux-logger';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nconst env = 'development';\nconst production = env !== 'production';\nconst reducer = {\n  [Pathways.reducerPath]: Pathways.reducer,\n  [Recs.reducerPath]: Recs.reducer,\n  [Topics.reducerPath]: Topics.reducer,\n  [Systems.reducerPath]: Systems.reducer,\n  [Acks.reducerPath]: Acks.reducer,\n  filters,\n  notifications: notificationsReducer,\n  systemReducer: systemReducer([], {}),\n  entitiesDetailsReducer: entitiesDetailsReducer({}),\n};\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        'LOAD_ENTITIES',\n        'LOAD_ENTITY',\n        'CLEAR_FILTERS',\n        'LOAD_ENTITY_FULFILLED',\n      ],\n    },\n    immutableCheck: {\n      ignoredPaths: ['entities'],\n    },\n  }).concat(\n    promiseMiddleware,\n    Pathways.middleware,\n    Recs.middleware,\n    Systems.middleware,\n    Topics.middleware,\n    Acks.middleware,\n    notificationsMiddleware({\n      errorTitleKey: ['message'],\n      errorDescriptionKey: ['response.data.detail'],\n    }),\n    production && logger\n  );\n\nconst getStore = () => {\n  return configureStore({\n    reducer,\n    middleware,\n    devTools: production,\n  });\n};\n\nconst updateReducers = (newReducers = {}) =>\n  combineReducers({\n    ...reducer,\n    ...newReducers,\n  });\n\nexport { getStore, updateReducers };\n"],"names":["Recs","lazy","Systems","paths","title","path","component","Routes","Suspense","fallback","Bullseye","Spinner","size","Switch","map","Route","key","rootClass","Redirect","to","push","intl","useIntl","useHistory","pathname","useLocation","permsViewRecs","usePermissions","PERMS","useState","auth","setAuth","dispatch","useDispatch","appNavClick","useMemo","recommendations","redirect","insights","chrome","id","systems","topics","useEffect","init","getUser","then","identifyApp","globalFilterScope","on","data","mapGlobalFilter","workloads","SID","selectedTags","batch","updateWorkloads","updateTags","updateSID","baseComponentUrl","split","unregister","event","domEvent","navId","undefined","isLoading","hasAccess","MessageState","variant","icon","LockIcon","formatMessage","messages","text","Acks","createApi","reducerPath","baseQuery","AxiosBaseQuery","baseUrl","BASE_URL","endpoints","build","getRecAcks","query","options","url","ruleId","getHostAcks","transformResponse","response","setAck","mutation","type","method","useGetRecAcksQuery","useGetHostAcksQuery","useSetAckMutation","filters","createSlice","name","initialState","recState","impacting","rule_status","sort","limit","offset","pathState","sysState","reducers","updateRecFilters","state","action","payload","updateSysFilters","updatePathFilters","actions","Pathways","getPathways","getPathway","slug","getPathwayRules","getPathwaySystems","useGetPathwaysQuery","useGetPathwayQuery","useGetPathwayRulesQuery","useGetPathwaySystemsQuery","getRecs","getRec","getRecSystems","search","encodeURI","useGetRecsQuery","useGetRecQuery","useGetRecsystemsQuery","Topics","getTopics","getTopicsAdmin","getTopic","topicId","useGetTopicsQuery","useGetTopicQuery","useGetTopicsAdminQuery","systemReducer","cols","INVENTORY_ACTION_TYPES","applyReducerHash","LOAD_ENTITIES","lastCol","columns","length","cell","find","entitiesDetailsReducer","ActionTypes","LOAD_ENTITY","enableApplications","loaded","activeApps","Advisor","AppConst","getSystems","getSystem","useGetSystemsQuery","useLazygetSystemsQuery","useGetSystemQuery","useLazygetSystemQuery","reducer","notificationsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","ignoredPaths","concat","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","logger","getStore","configureStore","devTools","env","updateReducers","newReducers","combineReducers"],"sourceRoot":""}