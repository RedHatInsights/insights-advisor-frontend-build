{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./src/PresentationalComponents/RulesCard/RulesCard.js"],"names":["_extends","module","exports","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","RulesCard","_ref","category","description","summary","ansible","impact","likelihood","totalRisk","riskOfChange","hitCount","ruleID","className","props","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","rulesCardClasses","classNames","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","widget-type","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","isMain","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_6__","unsupported","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","dangerouslySetInnerHTML","__html","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_12__","type","label","severity","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","to","concat","toLowerCase","aria-label","disabled","propTypes","string","number"],"mappings":"2EAAA,SAAAA,IAeA,OAdAC,EAAAC,QAAAF,EAAAG,OAAAC,QAAA,SAAAC,GACA,QAAAC,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IAAA,CACzC,IAAAG,EAAAF,UAAAD,GAEA,QAAAI,KAAAD,EACAN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KACAL,EAAAK,GAAAD,EAAAC,IAKA,OAAAL,GAGAL,EAAAc,MAAAC,KAAAR,WAGAN,EAAAC,QAAAF,yMCFMgB,UACN,SAAAC,GAaM,IAZFC,EAYED,EAZFC,SACAC,EAWEF,EAXFE,YACAC,EAUEH,EAVFG,QACAC,EASEJ,EATFI,QACAC,EAQEL,EARFK,OACAC,EAOEN,EAPFM,WACAC,EAMEP,EANFO,UACAC,EAKER,EALFQ,aACAC,EAIET,EAJFS,SACAC,EAGEV,EAHFU,OACAC,EAEEX,EAFFW,UACGC,EACDC,IAAAb,GAAA,gIAEEc,EAAmBC,IACnB,mBACA,aACA,kBACAJ,GAGJ,OACIK,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAWR,GAAQD,UAAcG,EAAmBO,cAAY,sBAC5DL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACM,EAAA,EAAD,SAAcvB,EAAd,OACAe,EAAAC,EAAAC,cAACM,EAAA,GAAUC,QAAM,GAAjB,IAAqBvB,EAArB,KACAc,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACIR,EAAAC,EAAAC,cAACQ,EAAA,SAAQC,YAAgBvB,OAIrCY,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACIZ,EAAAC,EAAAC,cAAA,OAAKW,yBAA4BC,OAAQ3B,MAE7Ca,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAAA,OAAKP,UAAU,iBACXK,EAAAC,EAAAC,cAACQ,EAAA,SAAQM,KAAK,0BACVhB,EAAAC,EAAAC,cAACQ,EAAA,SAAQO,MAAM,SAASC,SAAW7B,IACnCW,EAAAC,EAAAC,cAACQ,EAAA,SAAQO,MAAM,aAAaC,SAAW5B,IACvCU,EAAAC,EAAAC,cAACQ,EAAA,SAAQO,MAAM,aAAaC,SAAW3B,IACvCS,EAAAC,EAAAC,cAACQ,EAAA,SAAQO,MAAM,iBAAiBC,SAAW1B,KAE7CC,EAAW,GACTO,EAAAC,EAAAC,cAACiB,EAAA,GAAKC,GAAE,YAAAC,OAAepC,EAASqC,cAAxB,KAAAD,OAAyC3B,GAC7C6B,aAAA,GAAAF,OAAgB5B,EAAhB,oBAAA4B,OAA2C5B,EAAW,EAAI,IAAM,KADpE,2BACqGA,EADrG,MAGFA,GAAY,GACVO,EAAAC,EAAAC,cAAA,KAAGsB,UAAQ,EAACD,aAAW,uBAAvB,oCAQTxC,YAEfA,EAAU0C,WACN/B,OAAQ+B,IAAUC,OAClBzC,SAAUwC,IAAUC,OACpBxC,YAAauC,IAAUC,OACvBvC,QAASsC,IAAUC,OACnBtC,QAASqC,IAAUE,OACnBtC,OAAQoC,IAAUE,OAClBrC,WAAYmC,IAAUE,OACtBpC,UAAWkC,IAAUE,OACrBnC,aAAciC,IAAUE,OACxBlC,SAAUgC,IAAUE,OACpBhC,UAAW8B,IAAUC","file":"js/9.js","sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport classNames from 'classnames';\n\nimport { Ansible, Battery, Section } from '@red-hat-insights/insights-frontend-components';\nimport { Card, CardHeader, CardBody, CardFooter, Split, SplitItem } from '@patternfly/react-core';\n\nimport './_RulesCard.scss';\n\n/**\n * This is the card that displays information for the rules as well as links to the proper\n * url of systems impacted under that rule (if there are systems)\n */\n\nconst RulesCard =\n({\n    category,\n    description,\n    summary,\n    ansible,\n    impact,\n    likelihood,\n    totalRisk,\n    riskOfChange,\n    hitCount,\n    ruleID,\n    className,\n    ...props\n}) => {\n\n    let rulesCardClasses = classNames(\n        'ins-c-rules-card',\n        'pf-t-light',\n        'pf-m-opaque-100',\n        className\n    );\n\n    return (\n        <Card { ...props } className = { rulesCardClasses } widget-type='InsightsRulesCard'>\n            <CardHeader>\n                <Split>\n                    <SplitItem> { category } &gt; </SplitItem>\n                    <SplitItem isMain> { description } </SplitItem>\n                    <SplitItem>\n                        <Ansible unsupported = { ansible }/>\n                    </SplitItem>\n                </Split>\n            </CardHeader>\n            <CardBody>\n                <div dangerouslySetInnerHTML={ { __html: summary } }/>\n            </CardBody>\n            <CardFooter>\n                <div className='space-between'>\n                    <Section type='icon-group__with-major'>\n                        <Battery label='Impact' severity={ impact }/>\n                        <Battery label='Likelihood' severity={ likelihood }/>\n                        <Battery label='Total Risk' severity={ totalRisk }/>\n                        <Battery label='Risk Of Change' severity={ riskOfChange }/>\n                    </Section>\n                    { hitCount > 0 && (\n                        <Link to={ `/actions/${category.toLowerCase()}/${ruleID}` }\n                            aria-label={ `${hitCount} impacted system${hitCount > 1 ? 's' : ''}` }> View Impacted Systems ({ hitCount }) </Link>\n                    ) }\n                    { hitCount <= 0 && (\n                        <a disabled aria-label='No impacted systems'> View Impacted Systems (0) </a>\n                    ) }\n                </div>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default RulesCard;\n\nRulesCard.propTypes = {\n    ruleID: propTypes.string,\n    category: propTypes.string,\n    description: propTypes.string,\n    summary: propTypes.string,\n    ansible: propTypes.number,\n    impact: propTypes.number,\n    likelihood: propTypes.number,\n    totalRisk: propTypes.number,\n    riskOfChange: propTypes.number,\n    hitCount: propTypes.number,\n    className: propTypes.string\n};\n"],"sourceRoot":""}