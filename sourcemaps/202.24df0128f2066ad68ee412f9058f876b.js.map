{"version":3,"file":"js/202.fce7e459d221c943d962.js","mappings":"wQAoBMA,GAAQC,EAAAA,EAAAA,MACRC,EAASC,UAAUC,SAASC,MAAM,EAAG,GACrCC,GAAOC,EAAAA,EAAAA,GACX,CAEEC,QAASC,QAAQC,IACjBR,OAAAA,GAEFF,GAGIW,EAAiB,SAACC,GAAD,OACrB,0BAAMC,UAAU,+BACd,kBAAC,KAAD,CACEA,UACED,EACI,2BACA,gCAGR,kBAAC,EAAAE,YAAD,CAAaD,UAAU,wCACrB,kBAAC,EAAAE,KAAD,CAAMC,UAAWC,EAAAA,aAAAA,GACdX,EAAKY,cAAcC,EAAAA,EAAAA,aAAuB,CACzCC,OAAQ,SAACC,GAAD,OAASD,EAAAA,EAAAA,GAAOC,IACxBC,OAAQV,EACJN,EAAKY,cAAcC,EAAAA,EAAAA,IACnBb,EAAKY,cAAcC,EAAAA,EAAAA,aAO3BI,EAAkB,SAACC,GAAD,OACtB,kBAAC,IAAD,CACEC,IAAKD,EACLE,SAAUC,EAAAA,EAAAA,MACVC,QAAS,6BAAMJ,IAEf,0BAAMK,aAAW,UACf,kBAAC,KAAD,CAA4BC,MAAOC,EAAAA,sBAAAA","sources":["webpack:///./src/PresentationalComponents/Common/Common.js"],"sourcesContent":["import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/js/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_info_color_100 } from '@patternfly/react-tokens';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    // eslint-disable-next-line no-console\n    onError: console.log,\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-c-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-icon-reboot-required'\n          : 'adv-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-system-reboot-message__content\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_info_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n"],"names":["cache","createIntlCache","locale","navigator","language","slice","intl","createIntl","onError","console","log","RebootRequired","reboot_required","className","TextContent","Text","component","TextVariants","formatMessage","messages","strong","str","status","QuestionTooltip","text","key","position","TooltipPosition","content","aria-label","color","global_info_color_100"],"sourceRoot":""}