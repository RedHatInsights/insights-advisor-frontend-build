{"version":3,"sources":["webpack:///./src/PresentationalComponents/ConditionalLink/ConditionalLink.js"],"names":["ConditionalLink","condition","wrap","children","propTypes","PropTypes","any","isRequired"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;AAMA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,IAAd,QAAcA,IAAd;AAAA,MAAoBC,QAApB,QAAoBA,QAApB;AAAA,SAAmCF,SAAS,GAAGC,IAAI,CAACC,QAAD,CAAP,GAAoBA,QAAhE;AAAA,CAAxB;;AAEAH,eAAe,CAACI,SAAhB,GAA4B;AACxBH,WAAS,EAAEI,iDAAS,CAACC,GAAV,CAAcC,UADD;AAExBL,MAAI,EAAEG,iDAAS,CAACC,GAAV,CAAcC,UAFI;AAGxBJ,UAAQ,EAAEE,iDAAS,CAACC,GAAV,CAAcC;AAHA,CAA5B;AAMeP,8EAAf,E","file":"js/2.js","sourcesContent":["import PropTypes from 'prop-types';\n\n/**\n * This component conditionally wraps a child based on a condition\n * If the condition is true, then the component will wrap the child\n * If the condition is false, the component won't render, but the children will\n */\n\nconst ConditionalLink = ({ condition, wrap, children }) => condition ? wrap(children) : children;\n\nConditionalLink.propTypes = {\n    condition: PropTypes.any.isRequired,\n    wrap: PropTypes.any.isRequired,\n    children: PropTypes.any.isRequired\n};\n\nexport default ConditionalLink;\n"],"sourceRoot":""}