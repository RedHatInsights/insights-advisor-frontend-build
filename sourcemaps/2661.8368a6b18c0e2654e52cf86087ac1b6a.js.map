{"version":3,"file":"js/2661.1655395084550.fed6a75c534e01d9f5e5.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/RulesTable/Components/EmptyState.js","webpack:///./src/PresentationalComponents/RulesTable/helpers.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport FrownOpenIcon from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => (\n  <>\n    <Card className=\"adv-c-card-empty-rule\">\n      <CardHeader>\n        <FrownOpenIcon size=\"lg\" />\n      </CardHeader>\n      <CardBody>{message}</CardBody>\n    </Card>\n  </>\n);\n\nexport default Failed;\n\nFailed.propTypes = {\n  message: propTypes.string,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useDispatch } from 'react-redux';\nimport { useGetHostAcksQuery } from '../../Services/Acks';\nimport { useIntl } from 'react-intl';\n\nconst ViewHostAcks = ({ handleModalToggle, isModalOpen, rule, afterFn }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const addNotification = (data) => dispatch(notification(data));\n  const columns = [\n    intl.formatMessage(messages.systemName),\n    intl.formatMessage(messages.justificationNote),\n    intl.formatMessage(messages.dateDisabled),\n    '',\n  ];\n  const [rows, setRows] = useState([]);\n  const [unclean, setUnclean] = useState(false);\n  const {\n    data: hostAcks = [],\n    isFetching,\n    isLoading,\n    refetch,\n  } = useGetHostAcksQuery({\n    rule_id: rule.rule_id,\n    limit: rule.hosts_acked_count,\n  });\n  const deleteAck = async (host) => {\n    try {\n      await DeleteApi(`${BASE_URL}/hostack/${host.id}/`);\n      refetch();\n      setUnclean(true);\n    } catch (error) {\n      handleModalToggle(false);\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    const rows = hostAcks?.map((item) => ({\n      cells: [\n        item.display_name || item.system_uuid,\n        item.justification || intl.formatMessage(messages.none),\n        {\n          title: (\n            <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" />\n          ),\n        },\n        {\n          title: (\n            <Button\n              key={item.system_uuid}\n              isInline\n              variant=\"link\"\n              onClick={() => deleteAck(item)}\n            >\n              <OutlinedBellIcon size=\"sm\" />\n              {` ${intl.formatMessage(messages.enable)}`}\n            </Button>\n          ),\n        },\n      ],\n    }));\n\n    if (!isLoading && hostAcks.length === 0) {\n      afterFn();\n      handleModalToggle(false);\n    }\n\n    setRows(rows);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hostAcks]);\n\n  return (\n    <Modal\n      width={'75%'}\n      title={intl.formatMessage(messages.hostAckModalTitle)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        unclean && afterFn();\n        handleModalToggle(false);\n      }}\n    >\n      {!isFetching ? (\n        <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n          <TableHeader />\n          <TableBody />\n        </Table>\n      ) : (\n        <Table\n          aria-label=\"host-ack-table\"\n          rows={[\n            {\n              cells: [{ props: { colSpan: 3 }, title: <List /> }],\n            },\n          ]}\n          cells={columns}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n    </Modal>\n  );\n};\n\nViewHostAcks.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n};\n\nViewHostAcks.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  rule: {},\n  afterFn: () => undefined,\n};\n\nexport default ViewHostAcks;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\nimport MessageState from '../../MessageState/MessageState';\nimport { messageMapping } from '../helpers';\n\nconst EmptyState = ({ filters, toggleRulesDisabled }) => {\n  const message =\n    messageMapping()[filters.rule_status] || messageMapping().default;\n\n  return (\n    <MessageState\n      icon={CheckCircleIcon}\n      iconClass=\"ansibleCheck\"\n      title={message.title}\n      text={message.body}\n    >\n      {filters.rule_status === 'enabled' && (\n        <Button\n          variant=\"link\"\n          style={{ paddingTop: 24 }}\n          onClick={() => toggleRulesDisabled('all')}\n        >\n          <FormattedMessage id=\"rulestable.norulehits.adddisabledbutton\" />\n        </Button>\n      )}\n    </MessageState>\n  );\n};\n\nEmptyState.propTypes = {\n  filters: propTypes.object,\n  toggleRulesDisabled: propTypes.func,\n};\n\nexport default EmptyState;\n","import React from 'react';\nimport { Text } from '@patternfly/react-core';\nimport EmptyState from './Components/EmptyState';\nimport { FormattedMessage } from 'react-intl';\n\nexport const emptyRows = (filters, toggleRulesDisabled) => [\n  {\n    cells: [\n      {\n        title: <EmptyState {...{ filters, toggleRulesDisabled }} />,\n        props: { colSpan: 6 },\n      },\n    ],\n  },\n];\n\nexport const messageMapping = () => {\n  const title = <FormattedMessage id=\"rulestable.norulehits.title\" />;\n\n  return {\n    enabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    disabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    rhdisabled: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"rulestable.norules.redhatdisabledrulesbody\" />\n        </Text>\n      ),\n    },\n    default: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"noRecommendations\" />\n        </Text>\n      ),\n    },\n  };\n};\n","import './_RulesTable.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  ruleResolutionRisk,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  RuleDetails,\n  RuleDetailsMessagesKeys,\n  AdvisorProduct,\n} from '@redhat-cloud-services/frontend-components-advisor-components';\nimport RuleLabels from '../Labels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport {\n  formatMessages,\n  mapContentToValues,\n  strong,\n} from '../../Utilities/intlHelper';\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useGetRecsQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { emptyRows } from './helpers';\n\nconst RulesTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.modified),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.riskOfChange),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.remediation),\n      transforms: [sortable, cellWidth(15), fitContent],\n    },\n  ]);\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.recState);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n  const setFilters = (filters) => dispatch(updateRecFilters(filters));\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: rules = [],\n    isFetching,\n    isLoading,\n    isError,\n    refetch,\n  } = useGetRecsQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'resolution_risk',\n    6: 'impacted_count',\n    7: 'playbook_count',\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n\n  const hideReports = async (rowId) => {\n    const rule = rows[rowId].rule;\n\n    try {\n      if (rule.rule_status === 'enabled') {\n        setSelectedRule(rule);\n        setDisableRuleOpen(true);\n      } else {\n        try {\n          await DeleteApi(`${AppConstants.BASE_URL}/ack/${rule.rule_id}/`);\n          addNotification({\n            variant: 'success',\n            timeout: true,\n            dismissable: true,\n            title: intl.formatMessage(messages.recSuccessfullyEnabled),\n          });\n          refetch();\n        } catch (error) {\n          addNotification({\n            variant: 'danger',\n            dismissable: true,\n            title: intl.formatMessage(messages.error),\n            description: `${error}`,\n          });\n        }\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title:\n          rule.rule_status === 'enabled'\n            ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n            : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n      paramsObject.has_playbook !== undefined &&\n        !Array.isArray(paramsObject.has_playbook) &&\n        (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot !== undefined &&\n        !Array.isArray(paramsObject.reboot) &&\n        (paramsObject.reboot = [`${paramsObject.reboot}`]);\n      paramsObject.impacting !== undefined &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sortIndex = Object.entries(sortIndices)?.find(\n      (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n    );\n    if (filters.sort !== undefined && sortIndex) {\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: Number(sortIndex[0]), direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows(emptyRows(filters, toggleRulesDisabled));\n      } else {\n        const rows = rules.data.flatMap((value, key) => [\n          {\n            isOpen: isAllExpanded,\n            rule: value,\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                      {' '}\n                      {value.description}{' '}\n                    </Link>\n                    <RuleLabels rule={value} isCompact />\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <DateFormat\n                    key={key}\n                    date={value.publish_date}\n                    variant=\"relative\"\n                  />\n                ),\n              },\n              {\n                title: (\n                  <CategoryLabel\n                    key={key}\n                    labelList={[value.category]}\n                    isCompact\n                  />\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <Tooltip\n                      key={key}\n                      position={TooltipPosition.bottom}\n                      content={intl.formatMessage(\n                        messages.rulesDetailsTotalRiskBody,\n                        {\n                          risk:\n                            AppConstants.TOTAL_RISK_LABEL_LOWER[\n                              value.total_risk\n                            ] || intl.formatMessage(messages.undefined),\n                          strong: (str) => strong(str),\n                        }\n                      )}\n                    >\n                      <InsightsLabel value={value.total_risk} isCompact />\n                    </Tooltip>\n                  </div>\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <InsightsLabel\n                      text={\n                        AppConstants.RISK_OF_CHANGE_LABEL[\n                          ruleResolutionRisk(value)\n                        ]\n                      }\n                      value={ruleResolutionRisk(value)}\n                      hideIcon\n                      isCompact\n                    />\n                    <div></div>\n                  </div>\n                ),\n              },\n              {\n                title:\n                  value.rule_status === 'rhdisabled' ? (\n                    <Tooltip\n                      content={intl.formatMessage(messages.byEnabling, {\n                        systems: value.impacted_systems_count,\n                      })}\n                    >\n                      <span>{intl.formatMessage(messages.nA)}</span>\n                    </Tooltip>\n                  ) : (\n                    <div\n                      key={key}\n                    >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                  ),\n              },\n              {\n                title: (\n                  <div className=\"ins-c-center-text \" key={key}>\n                    {value.playbook_count ? (\n                      <span>\n                        <AnsibeTowerIcon size=\"sm\" />{' '}\n                        {intl.formatMessage(messages.playbook)}\n                      </span>\n                    ) : (\n                      intl.formatMessage(messages.manual)\n                    )}\n                  </div>\n                ),\n              },\n            ],\n          },\n          {\n            parent: key * 2,\n            fullWidth: true,\n            cells: [\n              {\n                title: (\n                  <Main className=\"pf-m-light\">\n                    <Stack hasGutter>\n                      {value.hosts_acked_count ? (\n                        <StackItem>\n                          <BellSlashIcon size=\"sm\" />\n                          &nbsp;\n                          {value.hosts_acked_count &&\n                          !value.impacted_systems_count\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledForAllSystems\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledForSystemsBody,\n                                { systems: value.hosts_acked_count }\n                              )}\n                          &nbsp;{' '}\n                          <Button\n                            isInline\n                            variant=\"link\"\n                            ouiaId=\"viewSystem\"\n                            onClick={() => {\n                              setViewSystemsModalRule(value);\n                              setViewSystemsModalOpen(true);\n                            }}\n                          >\n                            {intl.formatMessage(messages.viewSystems)}\n                          </Button>\n                        </StackItem>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )}\n                      <RuleDetails\n                        messages={formatMessages(\n                          intl,\n                          RuleDetailsMessagesKeys,\n                          mapContentToValues(intl, value)\n                        )}\n                        product={AdvisorProduct.rhel}\n                        rule={value}\n                        resolutionRisk={ruleResolutionRisk(value)}\n                        resolutionRiskDesc={\n                          AppConstants.RISK_OF_CHANGE_DESC[\n                            ruleResolutionRisk(value)\n                          ]\n                        }\n                        isDetailsPage={false}\n                        showViewAffected\n                        linkComponent={Link}\n                        knowledgebaseUrl={`https://access.redhat.com/node/${value.node_id}`}\n                      />\n                    </Stack>\n                  </Main>\n                ),\n              },\n            ],\n          },\n        ]);\n        setRows(rows);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rules]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (_event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    showDeleteButton: true,\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n          pathway: filters.pathway,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const afterViewSystemsFn = () => {\n    refetch();\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={afterViewSystemsFn}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={refetch}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID,\n              dispatch\n            ),\n          isDisabled: !permsExport,\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      ) : (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default RulesTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["Failed","message","Card","className","CardHeader","size","CardBody","propTypes","i","ViewHostAcks","handleModalToggle","isModalOpen","rule","afterFn","intl","useIntl","dispatch","useDispatch","columns","formatMessage","messages","useState","rows","setRows","unclean","setUnclean","useGetHostAcksQuery","rule_id","limit","hosts_acked_count","data","hostAcks","isFetching","isLoading","refetch","deleteAck","host","DeleteApi","BASE_URL","id","variant","dismissable","title","description","notification","useEffect","map","item","cells","display_name","system_uuid","justification","date","Date","updated_at","type","Button","key","isInline","onClick","length","width","isOpen","onClose","Table","props","colSpan","TableHeader","TableBody","PropTypes","defaultProps","EmptyState","filters","toggleRulesDisabled","messageMapping","rule_status","MessageState","icon","CheckCircleIcon","iconClass","text","body","style","paddingTop","enabled","Text","disabled","rhdisabled","default","search","useLocation","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","transforms","sortable","cellWidth","fitContent","cols","selectedTags","useSelector","workloads","SID","recState","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","addNotification","addNotificationAction","setFilters","updateRecFilters","options","tags","join","workloadQueryBuilder","useGetRecsQuery","filterFetchBuilder","rules","isError","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","urlBuilder","onSetPage","pageNumber","newOffset","offset","impacting","hideReports","rowId","timeout","paramsObject","paramParser","undefined","sort","has_playbook","Array","isArray","incident","Number","reboot","sortIndex","Object","entries","find","sortDirection","index","direction","emptyRows","flatMap","value","Link","to","RuleLabels","isCompact","DateFormat","publish_date","CategoryLabel","labelList","category","Tooltip","position","TooltipPosition","content","risk","total_risk","strong","str","InsightsLabel","ruleResolutionRisk","hideIcon","systems","impacted_systems_count","toLocaleString","playbook_count","parent","fullWidth","Main","Stack","hasGutter","StackItem","ouiaId","formatMessages","RuleDetailsMessagesKeys","mapContentToValues","product","AdvisorProduct","resolutionRisk","resolutionRiskDesc","isDetailsPage","showViewAffected","linkComponent","knowledgebaseUrl","node_id","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","label","toLowerCase","filterValues","onChange","_event","placeholder","FC","items","res_risk","impact","likelihood","e","activeFiltersConfig","deleteTitle","topic","pruneFilters","showDeleteButton","onDelete","itemsToRemove","isAll","pathway","newFilter","urlParam","String","chips","toggleModal","DisableRule","PrimaryToolbar","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","fileType","downloadReport","filterConfig","Loading","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","orderParam","areActionsDisabled","isStickyHeader","Pagination","widgetId","PaginationVariant","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}