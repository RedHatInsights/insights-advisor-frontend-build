{"version":3,"file":"js/4474.1659434742982.7467dbec2ebaa2d2f22c.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/Labels/CategoryLabel.js","webpack:///./src/PresentationalComponents/Modals/DisableRule.js"],"sourcesContent":["import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nimport { BASE_URL, exportNotifications } from '../../AppConstants';\nimport { Get } from '../../Utilities/Api';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst fileName = (exportTable) => {\n  const defaultParams = {\n    date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc',\n  };\n\n  return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (\n  exportTable,\n  format,\n  filters,\n  selectedTags,\n  workloads,\n  SID,\n  dispatch\n) => {\n  try {\n    let options = selectedTags?.length && { tags: selectedTags };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    dispatch(addNotification(exportNotifications.pending));\n    const data = (\n      await Get(\n        `${BASE_URL}/export/${exportTable}.${\n          format === 'json' ? 'json' : 'csv'\n        }`,\n        {},\n        { ...filters, ...options }\n      )\n        .then((result) => {\n          dispatch(addNotification(exportNotifications.success));\n          return result;\n        })\n        .catch(() => dispatch(addNotification(exportNotifications.error)))\n    ).data;\n\n    let formattedData = format === 'json' ? JSON.stringify(data) : data;\n    downloadFile(formattedData, fileName(exportTable), format);\n  } catch (error) {\n    throw `${error}`;\n  }\n};\n\nexport default downloadHelper;\n","import AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport { LabelGroup } from '@patternfly/react-core/dist/js/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CategoryLabel = ({ labelList, isCompact }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const label = (icon, text) => (\n    <Label icon={icon} variant=\"outline\" color=\"blue\" isCompact={isCompact}>\n      {text}\n    </Label>\n  );\n  const labels = (id, isCompact) => {\n    if (id === 1) {\n      return label(\n        <AutomationIcon />,\n        intl.formatMessage(messages.availability)\n      );\n    }\n    if (id === 2) {\n      return label(\n        <LockIcon />,\n        intl.formatMessage(messages.security),\n        isCompact\n      );\n    }\n    if (id === 3) {\n      return label(\n        <CubeIcon />,\n        intl.formatMessage(messages.stability),\n        isCompact\n      );\n    }\n    if (id === 4) {\n      return label(\n        <PortIcon />,\n        intl.formatMessage(messages.performance),\n        isCompact\n      );\n    }\n  };\n  return (\n    <LabelGroup numLabels={1} isCompact={isCompact}>\n      {sortedFrequencyList.map((id) => labels(Number(id[0]), isCompact))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n  isCompact: PropTypes.bool,\n};\n\nCategoryLabel.defaultProps = {\n  isCompact: false,\n};\n\nexport default CategoryLabel;\n","import React, { useState } from 'react';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Post } from '../../Utilities/Api';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport messages from '../../Messages';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { useSetAckMutation } from '../../Services/Acks';\n\nconst DisableRule = ({\n  handleModalToggle,\n  isModalOpen,\n  host,\n  hosts,\n  rule,\n  afterFn,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const notification = (data) => dispatch(addNotification(data));\n  const [justification, setJustificaton] = useState('');\n  const [singleSystem, setSingleSystem] = useState(\n    host !== undefined || hosts.length > 0\n  );\n\n  // eslint-disable-next-line no-unused-vars\n  const [setAck, { isLoading }] = useSetAckMutation();\n\n  const bulkHostActions = async () => {\n    const data = { systems: hosts, justification };\n    try {\n      await Post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`, {}, data);\n      !singleSystem &&\n        notification({\n          variant: 'success',\n          dismissable: true,\n          timeout: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabled),\n        });\n      afterFn && afterFn();\n    } catch (error) {\n      notification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const disableRule = async () => {\n    if (rule.rule_status === 'enabled' && !hosts.length) {\n      const options = singleSystem\n        ? {\n            type: 'HOST',\n            options: {\n              rule: rule.rule_id,\n              system_uuid: host.id,\n              justification,\n            },\n          }\n        : {\n            type: 'RULE',\n            options: {\n              rule_id: rule.rule_id,\n              ...(justification && { justification }),\n            },\n          };\n      try {\n        await setAck(options).unwrap();\n\n        notification({\n          variant: 'success',\n          timeout: true,\n          dismissable: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabled),\n        });\n\n        setJustificaton('');\n        afterFn && afterFn();\n      } catch (error) {\n        notification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${error}`,\n        });\n      }\n    } else {\n      bulkHostActions();\n    }\n\n    handleModalToggle(false);\n  };\n\n  return (\n    <Modal\n      variant=\"small\"\n      title={intl.formatMessage(messages.disableRule)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        handleModalToggle(false);\n        setJustificaton('');\n      }}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => disableRule()}\n          ouiaId=\"confirm\"\n        >\n          {intl.formatMessage(messages.save)}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={() => {\n            handleModalToggle(false);\n            setJustificaton('');\n          }}\n          ouiaId=\"cancel\"\n        >\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      {intl.formatMessage(messages.disableRuleBody)}\n      <Form>\n        <FormGroup fieldId=\"blank-form\" />\n        {(host !== undefined || hosts.length > 0) && (\n          <FormGroup fieldId=\"disable-rule-one-system\">\n            <Checkbox\n              isChecked={singleSystem}\n              onChange={() => {\n                setSingleSystem(!singleSystem);\n              }}\n              label={\n                hosts.length\n                  ? intl.formatMessage(messages.disableRuleForSystems)\n                  : intl.formatMessage(messages.disableRuleSingleSystem)\n              }\n              id=\"disable-rule-one-system\"\n              name=\"disable-rule-one-system\"\n            />\n          </FormGroup>\n        )}\n        <FormGroup\n          label={intl.formatMessage(messages.justificationNote)}\n          fieldId=\"disable-rule-justification\"\n        >\n          <TextInput\n            type=\"text\"\n            id=\"disable-rule-justification\"\n            aria-describedby=\"disable-rule-justification\"\n            value={justification}\n            onChange={(text) => setJustificaton(text)}\n            onKeyDown={(e) =>\n              e.key === 'Enter' && (e.preventDefault(), disableRule())\n            }\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nDisableRule.propTypes = {\n  isModalOpen: PropTypes.bool,\n  host: PropTypes.object,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n  hosts: PropTypes.array,\n};\n\nDisableRule.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  system: undefined,\n  rule: {},\n  afterFn: () => undefined,\n  host: undefined,\n  hosts: [],\n};\n\nexport default DisableRule;\n"],"names":["i","fileName","exportTable","defaultParams","date","Date","toISOString","replace","split","format","filters","selectedTags","workloads","SID","dispatch","options","length","tags","workloadQueryBuilder","addNotification","exportNotifications","Get","BASE_URL","then","result","data","formattedData","JSON","stringify","downloadFile","CategoryLabel","arr","labelList","isCompact","intl","useIntl","sortedFrequencyList","map","label","id","Object","entries","reduce","acc","curr","sort","a","b","icon","text","Label","variant","color","numLabels","formatMessage","messages","labels","Number","propTypes","PropTypes","defaultProps","DisableRule","handleModalToggle","isModalOpen","host","hosts","rule","afterFn","useDispatch","notification","useState","justification","setJustificaton","undefined","singleSystem","setSingleSystem","useSetAckMutation","setAck","bulkHostActions","isLoading","systems","Post","rule_id","dismissable","timeout","title","description","disableRule","rule_status","type","system_uuid","unwrap","isOpen","onClose","actions","Button","key","onClick","ouiaId","fieldId","isChecked","onChange","name","value","onKeyDown","e","preventDefault","system"],"sourceRoot":""}