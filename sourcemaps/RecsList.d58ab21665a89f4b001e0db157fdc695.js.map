{"version":3,"file":"js/RecsList.1683278795877.ccbeaf4fa79ec6d59050.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Cards/PathwayCard.js","webpack:///./src/PresentationalComponents/Common/Common.js","webpack:///./src/PresentationalComponents/ExecutiveReport/Download.js","webpack:///./src/PresentationalComponents/PathwaysPanel/PathwaysPanel.js","webpack:///./src/SmartComponents/Recs/List.js","webpack:///./src/PresentationalComponents/Cards/Pathways.scss","webpack:///./src/PresentationalComponents/Common/_Common.scss","webpack:///./src/PresentationalComponents/ExecutiveReport/_Download.scss","webpack:///./src/PresentationalComponents/PathwaysPanel/_PathwaysPanel.scss","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Content|./content.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Menu|./menu.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/TabContent|./tab-content.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Tabs|./tabs.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/layouts/Grid|./grid.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/iconv-lite/lib|./extend-node","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/iconv-lite/lib|./streams","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/readable-stream/lib|util"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport './Pathways.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { Text } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { RebootRequired } from '../Common/Common';\nimport RuleLabels from '../Labels/RuleLabels';\n\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const PathwayCard = ({\n  name,\n  categories,\n  impacted_systems_count,\n  description,\n  has_incident,\n  reboot_required,\n  slug,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100\"\n    >\n      <CardBody className=\"body\">\n        <Text className=\"pf-u-pb-sm pf-u-font-weight-bold\">{name}</Text>\n        <CategoryLabel key={name} labelList={categories} />{' '}\n        <Link\n          to={`/recommendations/pathways/systems/${slug}`}\n          className=\"pf-u-font-size-sm\"\n        >\n          {intl.formatMessage(messages.topicCardSystemsaffected, {\n            systems: impacted_systems_count,\n          })}\n        </Link>\n      </CardBody>\n      <CardBody className=\"body pf-u-font-size-sm\">{description}</CardBody>\n      <CardBody className=\"body pf-u-font-size-sm\">\n        {has_incident && <RuleLabels rule={{ tags: 'incident' }} isCompact />}{' '}\n        {RebootRequired(reboot_required)}\n      </CardBody>\n      <CardFooter className=\"footer pf-u-font-size-sm\">\n        <Link to={`/recommendations/pathways/${slug}`}>\n          {`${intl.formatMessage(messages.viewPathway)} `}\n          <ArrowRightIcon />\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n};\n","import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/esm/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_secondary_color_100 } from '@patternfly/react-tokens/dist/js/global_secondary_color_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-c-icon-reboot-required'\n          : 'adv-c-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-text-system-reboot-message pf-u-font-size-sm\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_secondary_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n","import './_Download.scss';\n\nimport {\n  RULES_FETCH_URL,\n  STATS_REPORTS_FETCH_URL,\n  STATS_SYSTEMS_FETCH_URL,\n  exportNotifications,\n} from '../../AppConstants';\nimport React, { useMemo, useState } from 'react';\n\nimport { DownloadButtonWrapper } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport ExportIcon from '@patternfly/react-icons/dist/esm/icons/export-icon';\nimport { Get } from '../../Utilities/Api';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nconst DownloadExecReport = ({ isDisabled }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const dataFetch = async () => {\n    setLoading(true);\n    const { BuildExecReport } = await import(\n      /* webpackChunkName: 'BuildExecReport' */ './BuildExecReport'\n    );\n    dispatch(addNotification(exportNotifications.pending));\n\n    try {\n      const [statsSystems, statsReports, topActiveRec] = await Promise.all([\n        (await Get(STATS_SYSTEMS_FETCH_URL)).data,\n        (await Get(STATS_REPORTS_FETCH_URL)).data,\n        (\n          await Get(\n            RULES_FETCH_URL,\n            {},\n            { limit: 3, sort: '-total_risk,-impacted_count', impacting: true }\n          )\n        ).data,\n      ]);\n\n      const report = BuildExecReport({\n        statsReports,\n        statsSystems,\n        topActiveRec,\n        intl,\n      });\n      setLoading(false);\n      dispatch(addNotification(exportNotifications.success));\n\n      return [report];\n    } catch (e) {\n      setLoading(false);\n      dispatch(addNotification(exportNotifications.error));\n\n      return [];\n    }\n  };\n\n  console.log('heeloo');\n  return useMemo(() => {\n    return (\n      <DownloadButtonWrapper\n        groupName={intl.formatMessage(messages.redHatInsights)}\n        label={\n          loading\n            ? intl.formatMessage(messages.loading)\n            : intl.formatMessage(messages.downloadExecutiveLabel)\n        }\n        asyncFunction={dataFetch}\n        buttonProps={{\n          variant: 'link',\n          icon: <ExportIcon className=\"iconOverride\" />,\n          component: 'a',\n          className: 'downloadButtonOverride',\n          isAriaDisabled: isDisabled,\n          ...(loading ? { isDisabled: true } : null),\n        }}\n        type={intl.formatMessage(messages.insightsHeader)}\n        fileName={`Advisor-Executive-Report--${new Date()\n          .toUTCString()\n          .replace(/ /g, '-')}.pdf`}\n      />\n    );\n  }, [loading]);\n};\n\nexport default DownloadExecReport;\n","import './_PathwaysPanel.scss';\n\nimport {\n  Card,\n  CardExpandableContent,\n  CardHeader,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PathwayCard } from '../Cards/PathwayCard';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\nimport { useGetPathwaysQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst PathwaysPanel = () => {\n  const intl = useIntl();\n  const { offset } = useSelector(({ filters: { pathState } }) => pathState);\n  const [expanded, setExpanded] = useState(\n    JSON.parse(localStorage.getItem('advisor_pathwayspanel_expanded') || 'true')\n  );\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n\n  const options = {\n    ...(selectedTags?.length > 0 ? { tags: selectedTags.join(',') } : {}),\n    ...(workloads ? workloadQueryBuilder(workloads, SID) : {}),\n  };\n  const { data, isLoading, isFetching, isError } = useGetPathwaysQuery({\n    sort: '-recommendation_level',\n    offset,\n    limit: 3,\n    ...options,\n  });\n\n  return !isLoading ? (\n    <Card\n      className=\"adv-c-card adv-c-card-pathways-panel\"\n      id=\"adv-c-card-pathwayspanel\"\n      isExpanded={expanded}\n    >\n      <CardHeader\n        onExpand={() => {\n          setExpanded(!expanded);\n          localStorage.setItem('advisor_pathwayspanel_expanded', !expanded);\n        }}\n        toggleButtonProps={{\n          id: `ins-c-advisor__card-title--pathwayspanel-toggle-button`,\n          'aria-label': 'Details',\n          'aria-labelledby': `ins-c-advisor__card-title--pathwayspanel toggle-button`,\n        }}\n      >\n        <CardTitle>\n          <Title headingLevel=\"h2\" size=\"lg\">\n            {intl.formatMessage(messages.improveRecommended)}\n          </Title>\n        </CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        {isFetching ? (\n          <Loading />\n        ) : !isError && data.data?.length ? (\n          <Grid\n            md={data.data?.length === 1 ? 8 : data.data?.length === 2 ? 6 : 4}\n            sm={12}\n          >\n            {data.data.map((pathway) => (\n              <GridItem key={pathway.name}>\n                <PathwayCard {...pathway} />\n              </GridItem>\n            ))}\n          </Grid>\n        ) : isError ? (\n          <MessageState\n            icon={'none'}\n            title={intl.formatMessage(messages.noPathwaysAvailable)}\n            text={intl.formatMessage(messages.pathwaysPanelsError)}\n          />\n        ) : (\n          <MessageState\n            icon={'none'}\n            text={intl.formatMessage(messages.noPathways)}\n          />\n        )}\n      </CardExpandableContent>\n    </Card>\n  ) : (\n    <Loading />\n  );\n};\n\nPathwaysPanel.propTypes = {\n  className: propTypes.string,\n};\n\nexport default PathwaysPanel;\n","import {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { Suspense, lazy, useState } from 'react';\nimport {\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core/dist/esm/components/Tabs/index';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport DownloadExecReport from '../../PresentationalComponents/ExecutiveReport/Download';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PERMS } from '../../AppConstants';\nimport { QuestionTooltip } from '../../PresentationalComponents/Common/Common';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport PathwaysPanel from '../../PresentationalComponents/PathwaysPanel/PathwaysPanel';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\n\nconst PathwaysTable = lazy(() =>\n  import(\n    /* webpackChunkName: 'PathwaysTable' */ '../../PresentationalComponents/PathwaysTable/PathwaysTable'\n  )\n);\n\nconst List = () => {\n  const intl = useIntl();\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const permsExport = usePermissions('advisor', PERMS.export);\n  document.title = intl.formatMessage(messages.documentTitle, {\n    subnav: messages.recommendations.defaultMessage,\n  });\n  const [activeTab, setActiveTab] = useState(\n    pathname === '/recommendations/pathways' ? 1 : 0\n  );\n  const changeTab = (tab) => {\n    setActiveTab(tab);\n    history.push(tab === 1 ? '/recommendations/pathways' : '/recommendations');\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"adv-c-page-recommendations__header\">\n        <PageHeaderTitle\n          title={`${intl.formatMessage(messages.insightsHeader)} ${intl\n            .formatMessage(messages.recommendations)\n            .toLowerCase()}`}\n        />\n        {!permsExport.isLoading && (\n          <Tooltip\n            trigger={!permsExport.hasAccess ? 'mouseenter' : ''}\n            content={intl.formatMessage(messages.permsAction)}\n          >\n            <DownloadExecReport isDisabled={!permsExport.hasAccess} />\n          </Tooltip>\n        )}\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <PathwaysPanel />\n        <Tabs\n          className=\"adv__background--global-100\"\n          activeKey={activeTab}\n          onSelect={(_e, tab) => changeTab(tab)}\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.recommendations)}\n              </TabTitleText>\n            }\n          >\n            <RulesTable isTabActive={activeTab === 0} />\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.pathways)}{' '}\n                {QuestionTooltip(\n                  intl.formatMessage(messages.recommendedPathways)\n                )}\n              </TabTitleText>\n            }\n          >\n            {activeTab === 1 && (\n              <Suspense fallback={<Loading />}>\n                <PathwaysTable isTabActive={activeTab === 1} />\n              </Suspense>\n            )}\n          </Tab>\n        </Tabs>\n      </section>\n    </React.Fragment>\n  );\n};\n\nList.displayName = 'recommendations-list';\n\nexport default List;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["Card","CardBody","CardFooter","Text","ArrowRightIcon","CategoryLabel","Link","React","RebootRequired","RuleLabels","messages","useIntl","PathwayCard","name","categories","impacted_systems_count","description","has_incident","reboot_required","slug","intl","formatMessage","topicCardSystemsaffected","systems","tags","viewPathway","TextContent","TextVariants","Tooltip","TooltipPosition","createIntl","createIntlCache","OutlinedQuestionCircleIcon","PowerOffIcon","global_secondary_color_100","strong","cache","locale","navigator","language","slice","p","systemReboot","str","status","is","isNot","QuestionTooltip","text","right","value","RULES_FETCH_URL","STATS_REPORTS_FETCH_URL","STATS_SYSTEMS_FETCH_URL","exportNotifications","useMemo","useState","DownloadButtonWrapper","addNotification","ExportIcon","Get","useDispatch","DownloadExecReport","isDisabled","dispatch","loading","setLoading","dataFetch","BuildExecReport","pending","Promise","data","limit","sort","impacting","all","statsSystems","statsReports","topActiveRec","report","success","error","console","log","redHatInsights","downloadExecutiveLabel","variant","icon","component","className","isAriaDisabled","insightsHeader","Date","toUTCString","replace","CardExpandableContent","CardHeader","CardTitle","Grid","GridItem","Loading","MessageState","Title","propTypes","useGetPathwaysQuery","useSelector","workloadQueryBuilder","PathwaysPanel","pathState","filters","offset","JSON","parse","localStorage","getItem","expanded","setExpanded","selectedTags","workloads","SID","options","length","join","isLoading","isFetching","isError","setItem","id","improveRecommended","map","pathway","noPathwaysAvailable","pathwaysPanelsError","noPathways","string","PageHeader","PageHeaderTitle","Suspense","lazy","Tab","TabTitleText","Tabs","useHistory","useLocation","PERMS","usePermissions","RulesTable","PathwaysTable","List","pathname","history","permsExport","document","title","documentTitle","subnav","recommendations","defaultMessage","activeTab","setActiveTab","changeTab","tab","push","toLowerCase","hasAccess","permsAction","_e","pathways","recommendedPathways","displayName"],"sourceRoot":""}