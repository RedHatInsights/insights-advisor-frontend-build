{"version":3,"sources":["webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/PresentationalComponents/RulesCard/_RulesCard.scss","webpack:///./src/PresentationalComponents/Skeletons/RulesCard/RulesCardSkeleton.js","webpack:///./src/PresentationalComponents/Skeletons/_Skeleton.scss","webpack:///./src/SmartComponents/Rules/ListRules.js","webpack:///./src/SmartComponents/Rules/ViewRule.js"],"names":["Loading","RulesCardSkeleton","importComponent","props","state","component","default","setState","C","Component","RulesCard","rulesCardSkeleton","ListRules","summary","itemsPerPage","page","cards","setPage","bind","setPerPage","fetchRules","page_size","setBreadcrumbs","title","navigate","prevProps","getRandomInt","max","Math","floor","random","rules","results","map","value","key","push","rule_id","category","name","description","summary_html","rec_impact","rec_likelihood","resolution_risk","risk_of_change","ansible","hitCount","rulesFetchStatus","count","React","displayName","propTypes","breadcrumbs","PropTypes","array","func","string","object","mapStateToProps","ownProps","AdvisorStore","mapDispatchToProps","dispatch","url","AppActions","obj","routerParams","connect","ViewRule","match"],"mappings":"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","file":"js/ListRules.js","sourcesContent":["import React from 'react';\n\nconst Loading = () => <div> Loading... </div>;\n\nexport default Loading;\n","// extracted by mini-css-extract-plugin","import React, { Component } from 'react';\nimport { Card, CardHeader, CardBody, CardFooter } from '@patternfly/react-core';\n\nimport '../_Skeleton.scss';\nimport '../../RulesCard/_RulesCard.scss';\n\n/**\n * This is the async skeleton loader for the rules card\n * When this is used, it will generate a fake rules card with blocks of highlighted\n * CSS to show information is loading.\n */\n\nexport default function RulesCardSkeleton(importComponent) {\n    class RulesCardSkeleton extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> :\n                <Card className='ins-c-rules-card ins-c-card__skeleton'>\n                    <CardHeader>\n                        <div className='skeleton skeleton-md'>&nbsp;</div>\n                    </CardHeader>\n                    <CardBody>\n                        <div className='skeleton skeleton-lg'>&nbsp;</div>\n                    </CardBody>\n                    <CardFooter>\n                        <div className='skeleton skeleton-sm'>&nbsp;</div>\n                    </CardFooter>\n                </Card>;\n        }\n    }\n\n    return RulesCardSkeleton;\n}\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport { Main, Pagination, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport rulesCardSkeleton from '../../PresentationalComponents/Skeletons/RulesCard/RulesCardSkeleton.js';\n\nconst RulesCard = rulesCardSkeleton(() => import('../../PresentationalComponents/RulesCard/RulesCard.js'));\n\nclass ListRules extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            summary: '',\n            itemsPerPage: 10,\n            page: 1,\n            cards: []\n        };\n        this.setPage = this.setPage.bind(this);\n        this.setPerPage = this.setPerPage.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchRules({ page_size: this.state.itemsPerPage  }); // eslint-disable-line camelcase\n        this.props.setBreadcrumbs([{ title: 'Rules', navigate: '/rules' }]);\n    }\n\n    componentDidUpdate(prevProps) {\n        const getRandomInt = (max)  => Math.floor(Math.random() * Math.floor(max)) + 1;\n\n        if (this.props.rules !== prevProps.rules) {\n            const rules = this.props.rules.results;\n            let cards = [];\n            rules.map((value, key) => {\n                cards.push(\n                    <RulesCard\n                        key = { key }\n                        widget-id= { value }\n                        ruleID = { value.rule_id }\n                        category= { value.category.name }\n                        description= { value.description }\n                        summary= { value.summary_html }\n                        // TODO: random numbers gotta go once these attributes are present on api 😏\n                        impact = { value.rec_impact || getRandomInt(4) }\n                        likelihood = { value.rec_likelihood || getRandomInt(4) }\n                        totalRisk = { value.resolution_risk || getRandomInt(4) }\n                        riskOfChange = { value.risk_of_change || getRandomInt(4) }\n                        ansible = { value.ansible }\n                        hitCount = { value.hitCount || getRandomInt(100) }\n                    />\n                );\n            });\n            this.setState({ cards });\n        }\n    }\n\n    setPage(page) {\n        this.setState(() => ({ page }));\n        this.props.fetchRules({ page, page_size: this.state.itemsPerPage }); // eslint-disable-line camelcase\n    }\n\n    setPerPage(itemsPerPage) {\n        this.setState(() => ({ itemsPerPage }));\n        this.props.fetchRules({ page_size: itemsPerPage  }); // eslint-disable-line camelcase\n    }\n\n    render() {\n        const {\n            rulesFetchStatus,\n            rules\n        } = this.props;\n\n        return (\n            <Main>\n                { rulesFetchStatus === 'fulfilled' && (\n                    <React.Fragment>\n                        { this.state.cards }\n                        <Pagination\n                            numberOfItems={ rules.count }\n                            onPerPageSelect={ this.setPerPage }\n                            page={ this.state.page }\n                            onSetPage={ this.setPage }\n                            itemsPerPage={ this.state.itemsPerPage }\n                        />\n                    </React.Fragment>\n                ) }\n                { rulesFetchStatus === 'pending' && (<Loading />) }\n            </Main>\n        );\n\n    };\n}\n\nListRules.displayName = 'list-rules';\n\nListRules.propTypes = {\n    breadcrumbs: PropTypes.array,\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    setBreadcrumbs: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    setBreadcrumbs: (obj) => dispatch(AppActions.setBreadcrumbs(obj))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ListRules));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, CardBody, CardFooter } from '@patternfly/react-core';\nimport { Section } from '@red-hat-insights/insights-frontend-components';\n\nimport '../../PresentationalComponents/Skeletons/_Skeleton.scss';\nimport '../../PresentationalComponents/RulesCard/_RulesCard.scss';\n\nconst ViewRule = () => {\n    return (\n        <Section type='content'>\n            <Card className='ins-c-rules-card ins-c-card__skeleton pf-t-light  pf-m-opaque-100'>\n                <CardHeader>\n                    <div className='skeleton skeleton-md'>&nbsp;</div>\n                </CardHeader>\n                <CardBody>\n                    <div className='skeleton skeleton-lg'>&nbsp;</div>\n                </CardBody>\n                <CardFooter>\n                    <div className='skeleton skeleton-sm'>&nbsp;</div>\n                </CardFooter>\n            </Card>\n            <Card className='ins-c-rules-card ins-c-card__skeleton pf-t-light  pf-m-opaque-100'>\n                <CardHeader>\n                    <div className='skeleton skeleton-md'>&nbsp;</div>\n                </CardHeader>\n                <CardBody>\n                    <div className='skeleton skeleton-lg'>&nbsp;</div>\n                </CardBody>\n                <CardFooter>\n                    <div className='skeleton skeleton-sm'>&nbsp;</div>\n                </CardFooter>\n            </Card>\n            <Card className='ins-c-rules-card ins-c-card__skeleton pf-t-light  pf-m-opaque-100'>\n                <CardHeader>\n                    <div className='skeleton skeleton-md'>&nbsp;</div>\n                </CardHeader>\n                <CardBody>\n                    <div className='skeleton skeleton-lg'>&nbsp;</div>\n                </CardBody>\n                <CardFooter>\n                    <div className='skeleton skeleton-sm'>&nbsp;</div>\n                </CardFooter>\n            </Card>\n            <Card className='ins-c-rules-card ins-c-card__skeleton pf-t-light  pf-m-opaque-100'>\n                <CardHeader>\n                    <div className='skeleton skeleton-md'>&nbsp;</div>\n                </CardHeader>\n                <CardBody>\n                    <div className='skeleton skeleton-lg'>&nbsp;</div>\n                </CardBody>\n                <CardFooter>\n                    <div className='skeleton skeleton-sm'>&nbsp;</div>\n                </CardFooter>\n            </Card>\n        </Section>\n    );\n};\n\nViewRule.displayName = 'view-rule';\n\nViewRule.propTypes = {\n    match: PropTypes.object\n};\n\nexport default ViewRule;\n"],"sourceRoot":""}