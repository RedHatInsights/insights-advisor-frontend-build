{"version":3,"sources":["webpack:///./src/SmartComponents/Rules/ListRules.js"],"names":["ListRules","insights","chrome","auth","getUser","props","setBreadcrumbs","title","navigate","Component","displayName","propTypes","PropTypes","func","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch","bindActionCreators","obj","AppActions","routerParams","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;IAEMA,S;;;;;;;;;;;;;;;;;;uLAMO;AAAA,aAAM,4DAAC,wFAAD;AAAY,iBAAS,EAAG;AAAxB,QAAN;AAAA,K;;;;;;;;;;;;;;;;uBAJCC,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqBC,OAArB,E;;;AACN,qBAAKC,KAAL,CAAWC,cAAX,CAA0B,CAAC;AAAEC,uBAAK,EAAE,OAAT;AAAkBC,0BAAQ,EAAE;AAA5B,iBAAD,CAA1B;;;;;;;;;;;;;;;;;;;EAHgBC,gD;;AASxBT,SAAS,CAACU,WAAV,GAAwB,YAAxB;AACAV,SAAS,CAACW,SAAV,GAAsB;AAClBL,gBAAc,EAAEM,kDAAS,CAACC;AADR,CAAtB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR;AAAA,wFACjBA,QADiB;AAAA,CAAxB;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIC,iEAAkB,CAAC;AACtDb,kBAAc,EAAE,wBAACc,GAAD;AAAA,aAASC,2DAAA,CAA0BD,GAA1B,CAAT;AAAA;AADsC,GAAD,EAEtDF,QAFsD,CAAtB;AAAA,CAAnC;;AAIeI,8KAAY,CAACC,4DAAO,CAC/BT,eAD+B,EAE/BG,kBAF+B,CAAP,CAG1BjB,SAH0B,CAAD,CAA3B,E","file":"js/ListRules.js","sourcesContent":["import React, { Component } from 'react';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as AppActions from '../../AppActions';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\n\nclass ListRules extends Component {\n    async componentDidMount () {\n        await insights.chrome.auth.getUser();\n        this.props.setBreadcrumbs([{ title: 'Rules', navigate: '/rules' }]);\n    }\n\n    render = () => <RulesTable impacting={ true }/>;\n}\n\nListRules.displayName = 'list-rules';\nListRules.propTypes = {\n    setBreadcrumbs: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    setBreadcrumbs: (obj) => AppActions.setBreadcrumbs(obj)\n}, dispatch);\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ListRules));\n"],"sourceRoot":""}