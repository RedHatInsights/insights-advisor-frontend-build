{"version":3,"file":"js/8528.1667996834779.9a81979fbc54768bf166.js","mappings":"mgBAOA,IAAMA,EAAe,SAAC,GAA+C,IAA7CC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAUC,GAAY,YAC7DC,EAAUJ,EAAaK,EAAAA,EAAeC,EAAAA,SACtCC,EAAgBL,EAAQM,EAAAA,SAAWF,EAAAA,SAEzC,OACE,kBAACF,EACMJ,G,qWAAc,CAAJ,CACbS,OAAQC,UAAUC,SAASC,MAAM,EAAG,GACpCC,SAAAA,EAAAA,GACGZ,GAGL,kBAACM,EAAD,CAAeL,MAAOA,GACpB,kBAAC,IAAkBC,IAI1B,EAEDJ,EAAae,UAAY,CACvBd,WAAYe,IAAAA,KACZd,UAAWc,IAAAA,MAAgB,CACzBN,OAAQM,IAAAA,OACRF,SAAUE,IAAAA,QAEZb,MAAOa,IAAAA,QAGT,S","sources":["webpack:///./src/Modules/SystemDetail.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport messages from '../Messages';\nimport SystemAdvisor from '../SmartComponents/SystemAdvisor/SystemAdvisor';\n\nconst SystemDetail = ({ customItnl, intlProps, store, ...props }) => {\n  const Wrapper = customItnl ? IntlProvider : Fragment;\n  const ReduxProvider = store ? Provider : Fragment;\n\n  return (\n    <Wrapper\n      {...(customItnl && {\n        locale: navigator.language.slice(0, 2),\n        messages,\n        ...intlProps,\n      })}\n    >\n      <ReduxProvider store={store}>\n        <SystemAdvisor {...props} />\n      </ReduxProvider>\n    </Wrapper>\n  );\n};\n\nSystemDetail.propTypes = {\n  customItnl: PropTypes.bool,\n  intlProps: PropTypes.shape({\n    locale: PropTypes.string,\n    messages: PropTypes.array,\n  }),\n  store: PropTypes.object,\n};\n\nexport default SystemDetail;\n"],"names":["SystemDetail","customItnl","intlProps","store","props","Wrapper","IntlProvider","Fragment","ReduxProvider","Provider","locale","navigator","language","slice","messages","propTypes","PropTypes"],"sourceRoot":""}