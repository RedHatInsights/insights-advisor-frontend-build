{"version":3,"file":"js/2813.1654893341988.1b56306b132bd6017853.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Inventory/Hooks/useSelectionManager/reducer.js","webpack:///./src/PresentationalComponents/Inventory/Hooks/useBulkSelect/helpers.js","webpack:///./src/PresentationalComponents/Inventory/Hooks/useBulkSelect/useBulkSelect.js","webpack:///./src/PresentationalComponents/Inventory/Hooks/useSelectionManager/useSelectionManager.js","webpack:///./src/PresentationalComponents/Inventory/Inventory.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nconst Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb = Breadcrumb;\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BreadcrumbItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst angle_right_icon_1 = tslib_1.__importDefault(require('@patternfly/react-icons/dist/js/icons/angle-right-icon'));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = react_styles_1.css(breadcrumb_1.default.breadcrumbLink, isActive && breadcrumb_1.default.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: react_styles_1.css(breadcrumb_1.default.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: breadcrumb_1.default.breadcrumbItemDivider },\n            React.createElement(angle_right_icon_1.default, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: react_styles_1.css(breadcrumb_1.default.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nexports.BreadcrumbItem = BreadcrumbItem;\nexports.BreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","import('./breadcrumb.css');\nexport default {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","import React, { useEffect, useState } from 'react';\n\nimport { Breadcrumb } from '@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb';\nimport { BreadcrumbItem } from '@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useGetRecQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\n\nconst Breadcrumbs = ({ current }) => {\n  const intl = useIntl();\n  const location = useLocation().pathname?.split('/');\n  const [items, setItems] = useState([]);\n  const skip =\n    !(location[1] === 'recommendations' && location.length === 4) ||\n    location[2] === 'pathways';\n  const { data, isFetching } = useGetRecQuery(\n    { ruleId: location[2] },\n    { skip }\n  );\n\n  useEffect(() => {\n    const buildBreadcrumbs = () => {\n      let crumbs = [];\n      // add base\n      crumbs.push({\n        title: `${intl.formatMessage(messages.insightsHeader)} ${location[1]}`,\n        navigate: `/${location[1]}`,\n      });\n\n      // if applicable, add :id breadcrumb\n      if (!skip) {\n        crumbs.push({\n          title: data?.description,\n          navigate: `/${location[1]}/${location[2]}`,\n        });\n      }\n\n      if (location[2] === 'pathways') {\n        crumbs = [\n          {\n            title: 'Advisor pathways',\n            navigate: '/recommendations/pathways',\n          },\n        ];\n      }\n\n      setItems(crumbs);\n    };\n\n    buildBreadcrumbs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      {!isFetching && items.length > 0 ? (\n        <Breadcrumb ouiaId=\"detail\">\n          {items.map((oneLink, key) => (\n            <BreadcrumbItem key={key}>\n              <Link to={oneLink.navigate}>{oneLink.title}</Link>\n            </BreadcrumbItem>\n          ))}\n          <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n        </Breadcrumb>\n      ) : (\n        intl.formatMessage(messages.loading)\n      )}\n    </React.Fragment>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  current: PropTypes.string,\n};\n\nexport default Breadcrumbs;\n","import isObject from 'lodash/isObject';\nimport uniq from 'lodash/uniq';\n\nconst selectionGroup = (action) => action.group || 'default';\n\nexport const init = (withGroups) => (preselected) =>\n  withGroups ? preselected || {} : { default: preselected || [] };\n\nconst cleanEmpty = (state) => {\n  const newState = state;\n  Object.entries(state).forEach(([key, value]) => {\n    if (value === undefined) {\n      delete newState[key];\n    }\n  });\n  return newState;\n};\n\nconst set = (state = {}, action) => {\n  const group = selectionGroup(action);\n  return cleanEmpty({\n    ...state,\n    [group]:\n      action.items?.length > 0 || isObject(action.items)\n        ? action.items\n        : undefined,\n  });\n};\n\nconst select = (state = {}, action) => {\n  const group = selectionGroup(action);\n  return cleanEmpty({\n    ...state,\n    [group]: action.reset\n      ? action?.items\n      : uniq([action?.item, ...(state[group] || [])]),\n  });\n};\n\nconst deselect = (state = {}, action) => {\n  const group = selectionGroup(action);\n  const items = (state[group] || []).filter(\n    (selectedItem) => !action.item.includes(selectedItem)\n  );\n  return cleanEmpty({\n    ...state,\n    [group]: items.length === 0 ? undefined : items,\n  });\n};\n\nconst toggle = (state, action) => {\n  const group = selectionGroup(action);\n  // eslint-disable-next-line prettier/prettier\n  return (state[group] || []).includes(action.item) ? deselect(state, action) : select(state, action);\n};\n\nconst reset = (state, action) =>\n  init(Object.prototype.hasOwnProperty.call(!state, 'default'))(\n    action?.preselected\n  );\nconst clear = (state) =>\n  init(Object.prototype.hasOwnProperty.call(!state, 'default'))();\n\nexport default (state, action) =>\n  ({\n    set,\n    select,\n    deselect,\n    toggle,\n    reset,\n    clear,\n  }[action.type](state, action));\n","export const compileTitle = (itemsTotal, titleOption) => {\n  if (typeof titleOption === 'string') {\n    return titleOption;\n  } else if (typeof titleOption === 'function') {\n    return titleOption(itemsTotal);\n  } else {\n    return `${itemsTotal} selected`;\n  }\n};\n\nexport const checkboxState = (selectedItemsTotal, itemsTotal) => {\n  if (selectedItemsTotal === 0) {\n    return false;\n  } else if (selectedItemsTotal === itemsTotal) {\n    return true;\n  } else {\n    return null;\n  }\n};\n\nexport const selectOrUnselect = (selected) =>\n  selected ? 'Unselect' : 'Select';\n\nconst allItemsIncluded = (items = [], selection = []) =>\n  items?.filter((item) => selection.includes(item)).length === items.length;\n\nexport const checkCurrentPageSelected = (items = [], selectedItems = []) => {\n  if (selectedItems.length === 0) {\n    return false;\n  } else {\n    return allItemsIncluded(items, selectedItems);\n  }\n};\n\nexport const itemIds = (items) => items.map(({ itemId }) => itemId);\n\nexport const selectItemTransformer = (item, selectedIds = []) => ({\n  ...item,\n  rowProps: {\n    selected: selectedIds.includes(item.itemId),\n  },\n});\n","import { useEffect } from 'react';\nimport useSelectionManager from '../useSelectionManager';\nimport {\n  compileTitle,\n  checkboxState,\n  selectOrUnselect,\n  checkCurrentPageSelected,\n} from './helpers';\n\n/**\n * Provides properties for a Pattternfly (based) Table and Toolbar component to implement bulk selection\n *\n * @param {number} [total] Number to show as total count\n * @param {Function} [onSelect] function to call when a selection is made\n * @param {Array} [preselected] Array of itemIds selected when initialising\n * @param {Function} [itemIdsInTable] async function that returns an array of all item ids\n * @param {Function} [itemIdsOnPage] async function that returns an array of item ids visible on the page\n * @param {string} [identifies] Prop of the row containing the item ID\n * @returns {{ selectedIds , selectNone, tableProps }}\n */\nconst useBulkSelect = ({\n  total = 0,\n  onSelect,\n  preselected,\n  itemIdsInTable,\n  itemIdsOnPage,\n  identifier = 'id',\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const {\n    selection: selectedIds,\n    set,\n    select,\n    deselect,\n    clear,\n  } = useSelectionManager(preselected || []);\n  const selectedIdsTotal = (selectedIds || []).length;\n  const idsOnPage = itemIdsOnPage();\n  const paginatedTotal = idsOnPage.length || total;\n  const allSelected = selectedIdsTotal === total;\n  const noneSelected = selectedIdsTotal === 0;\n  const currentPageSelected = checkCurrentPageSelected(idsOnPage, selectedIds);\n\n  const isDisabled = total === 0;\n  const checked = checkboxState(selectedIdsTotal, total);\n  const title = compileTitle(selectedIdsTotal);\n\n  const mergeArraysUniqly = (arrayA, arrayB) =>\n    Array.from(new Set([...arrayA, ...arrayB]));\n\n  const selectOne = (_, selected, _key, row) =>\n    selected ? select(row[identifier]) : deselect(row[identifier]);\n\n  const selectPage = () => {\n    let selectedItems =\n      selectedIds?.length > 0\n        ? mergeArraysUniqly(selectedIds, idsOnPage)\n        : idsOnPage;\n    currentPageSelected\n      ? deselect(idsOnPage)\n      : select(selectedItems, undefined, true);\n  };\n\n  const selectAll = async () => {\n    const items = await itemIdsInTable();\n    if (allSelected) {\n      clear();\n    } else {\n      set(items);\n    }\n  };\n\n  useEffect(() => {\n    set(preselected);\n  }, [JSON.stringify(preselected)]);\n\n  return enableBulkSelect\n    ? {\n        selectedIds,\n        selectNone: () => clear(),\n        tableProps: {\n          onSelect: total > 0 ? selectOne : undefined,\n          canSelectAll: false,\n        },\n        toolbarProps: {\n          bulkSelect: {\n            toggleProps: { children: [title] },\n            isDisabled,\n            items: [\n              {\n                title: 'Select none',\n                onClick: () => clear(),\n                props: {\n                  isDisabled: noneSelected,\n                },\n              },\n              ...(itemIdsOnPage\n                ? [\n                    {\n                      title: `${selectOrUnselect(\n                        currentPageSelected\n                      )} page (${paginatedTotal} items)`,\n                      onClick: selectPage,\n                    },\n                  ]\n                : []),\n              ...(itemIdsInTable\n                ? [\n                    {\n                      title: `${selectOrUnselect(\n                        allSelected\n                      )} all (${total} items)`,\n                      onClick: selectAll,\n                    },\n                  ]\n                : []),\n            ],\n            checked,\n            onSelect: !isDisabled ? selectPage : undefined,\n          },\n        },\n      }\n    : {};\n};\n\nexport default useBulkSelect;\n","import { useReducer } from 'react';\nimport reducer, { init as initReducer } from './reducer';\n\n/**\n * Provides a generic API to manage selection stats of one (default) or multiple groups of selections.\n *\n * @param {Array} preselected Array of items initially selected\n * @param {Object} [options] function to call when a selection is made\n */\nconst useSelectionManager = (preselected, options = {}) => {\n  const { withGroups = false } = options;\n  const [selection, dispatch] = useReducer(\n    reducer,\n    preselected,\n    initReducer(withGroups)\n  );\n\n  const set = (items, group) => dispatch({ type: 'set', group, items });\n\n  const select = (item, group, useSet = false) =>\n    useSet ? set(item, group) : dispatch({ type: 'select', group, item });\n\n  const deselect = (item, group, useSet = false) =>\n    useSet ? set(item, group) : dispatch({ type: 'deselect', group, item });\n\n  const toggle = (item, group) => dispatch({ type: 'toggle', group, item });\n\n  const reset = () => dispatch({ type: 'reset', preselected });\n\n  const clear = () => dispatch({ type: 'clear' });\n\n  return {\n    set,\n    select,\n    deselect,\n    toggle,\n    reset,\n    clear,\n    selection: withGroups ? selection : selection.default,\n  };\n};\n\nexport default useSelectionManager;\n","import './_Inventory.scss';\n\nimport {\n  BASE_URL,\n  RULES_FETCH_URL,\n  SYSTEMS_FETCH_URL,\n} from '../../AppConstants';\nimport React, { useEffect, useState } from 'react';\nimport { TableVariant, sortable, wrappable } from '@patternfly/react-table';\nimport {\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n  buildTagFilter,\n} from '../Common/Tables';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\n\nimport DisableRule from '../../PresentationalComponents/Modals/DisableRule';\nimport { Get } from '../../Utilities/Api';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { SYSTEM_FILTER_CATEGORIES as SFC } from '../../AppConstants';\nimport { mergeArraysByDiffKeys } from '../Common/Tables';\nimport messages from '../../Messages';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { systemReducer } from '../../Store/AppReducer';\nimport { updateReducers } from '../../Store';\nimport { useIntl } from 'react-intl';\nimport downloadReport from '../Common/DownloadHelper';\nimport useBulkSelect from './Hooks/useBulkSelect';\n\nconst Inventory = ({\n  tableProps,\n  rule,\n  afterDisableFn,\n  pathway,\n  selectedTags,\n  workloads,\n  SID,\n  permsExport,\n  exportTable,\n  showTags,\n}) => {\n  const store = useStore();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [filters, setFilters] = useState({\n    limit: 20,\n    offset: 0,\n    sort: '-last_seen',\n    name: '',\n  });\n  const [total, setTotal] = useState(0);\n  const entities = useSelector(({ entities }) => entities || {});\n  const addNotification = (data) => dispatch(notification(data));\n  const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n  const [curPageIds, setCurPageIds] = useState([]);\n\n  const fetchAllSystems = async () => {\n    const allSystems = pathway\n      ? (\n          await Get(\n            `${SYSTEMS_FETCH_URL}`,\n            {},\n            {\n              pathway: pathway.slug,\n              limit: pathway.impacted_systems_count,\n            }\n          )\n        )?.data?.data?.map((system) => system.system_uuid)\n      : (\n          await Get(\n            `${RULES_FETCH_URL}${encodeURI(rule.rule_id)}/systems/`,\n            {},\n            { name: filters.name }\n          )\n        )?.data?.host_ids;\n    return allSystems;\n  };\n\n  const grabPageIds = () => {\n    return curPageIds || [];\n  };\n\n  const {\n    tableProps: bulkSelectTableProps,\n    toolbarProps,\n    selectedIds,\n    selectNone,\n  } = useBulkSelect({\n    total,\n    onSelect: () => {},\n    itemIdsInTable: fetchAllSystems,\n    itemIdsOnPage: grabPageIds,\n    identitfier: 'system_uuid',\n  });\n\n  // Ensures rows are marked as selected\n  useEffect(() => {\n    dispatch({\n      type: 'SELECT_ENTITIES',\n      payload: {\n        selected: selectedIds,\n      },\n    });\n  }, [selectedIds]);\n\n  const remediationDataProvider = async () => {\n    if (pathway) {\n      const pathways = (\n        await Get(\n          `${BASE_URL}/pathway/${encodeURI(pathway.slug)}/rules/`,\n          {},\n          {}\n        )\n      )?.data.data;\n\n      const systems = (\n        await Get(\n          `${BASE_URL}/pathway/${encodeURI(pathway.slug)}/reports/`,\n          {},\n          {}\n        )\n      )?.data.rules;\n\n      let issues = [];\n      pathways.forEach((rec) => {\n        let filteredSystems = [];\n\n        systems[rec.rule_id].forEach((system) => {\n          if (selectedIds.includes(system)) {\n            filteredSystems.push(system);\n          }\n        });\n\n        if (filteredSystems.length) {\n          issues.push({\n            id: `advisor:${rec.rule_id}`,\n            description: rec.description,\n            systems: filteredSystems,\n          });\n        }\n      });\n\n      return { issues };\n    } else {\n      return {\n        issues: [\n          {\n            id: `advisor:${rule.rule_id}`,\n            description: rule.description,\n          },\n        ],\n        systems: selectedIds,\n      };\n    }\n  };\n\n  const onRemediationCreated = (result) => {\n    selectNone();\n    try {\n      result.remediation && addNotification(result.getNotification());\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const handleModalToggle = (disableRuleModalOpen) => {\n    setDisableRuleModalOpen(disableRuleModalOpen);\n  };\n\n  const createColumns = (defaultColumns) => {\n    let lastSeenColumn = defaultColumns.filter(({ key }) => key === 'updated');\n    let displayName = defaultColumns.filter(\n      ({ key }) => key === 'display_name'\n    );\n    let systemProfile = defaultColumns.filter(\n      ({ key }) => key === 'system_profile'\n    );\n    let tags = defaultColumns.filter(({ key }) => key === 'tags');\n\n    displayName = {\n      ...displayName[0],\n      transforms: [sortable, wrappable],\n      props: { isStatic: true },\n    };\n\n    lastSeenColumn = {\n      ...lastSeenColumn[0],\n      transforms: [sortable, wrappable],\n      props: { width: 20 },\n    };\n\n    systemProfile = {\n      ...systemProfile[0],\n      transforms: [wrappable],\n    };\n\n    tags = {\n      ...tags[0],\n    };\n\n    return [displayName, tags, systemProfile, lastSeenColumn];\n  };\n\n  const handleRefresh = (options) => {\n    /* Rec table doesn't use the same sorting params as sys table, switching between the two results in the rec table blowing up cuz its trying to\n    read the endpoint with incorrect sorting params, if we hold of on updating the sysable url params when using the this component in pathways, it\n    solves this issue for the time being*/\n    const { name, display_name } = options;\n    const refreshedFilters = {\n      ...options,\n      ...(name && {\n        name,\n      }),\n      ...(display_name && {\n        display_name,\n      }),\n    };\n    !pathway && urlBuilder(refreshedFilters, selectedTags);\n  };\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    delete filter[param];\n    setFilters(filter);\n  };\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n  const filterConfigItems = [\n    {\n      label: SFC.rhel_version.title.toLowerCase(),\n      type: SFC.rhel_version.type,\n      id: SFC.rhel_version.urlParam,\n      value: `checkbox-${SFC.rhel_version.urlParam}`,\n      filterValues: {\n        key: `${SFC.rhel_version.urlParam}-filter`,\n        onChange: (_e, values) => {\n          addFilterParam(SFC.rhel_version.urlParam, values);\n        },\n        value: filters.rhel_version,\n        items: SFC.rhel_version.values,\n      },\n    },\n  ];\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, SFC);\n  };\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_e, itemsToRemove, isAll) => {\n      if (isAll) {\n        setFilters({\n          sort: filters.sort,\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  return (\n    <React.Fragment>\n      {disableRuleModalOpen && (\n        <DisableRule\n          handleModalToggle={handleModalToggle}\n          isModalOpen={disableRuleModalOpen}\n          rule={rule}\n          afterFn={afterDisableFn}\n          hosts={selectedIds}\n        />\n      )}\n      <InventoryTable\n        id=\"tablesContainer\"\n        hasCheckbox\n        initialLoading\n        autoRefresh\n        hideFilters={{ all: true, name: false, tags: !showTags }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n        columns={(defaultColumns) => createColumns(defaultColumns)}\n        tableProps={{\n          variant: TableVariant.compact,\n          ...tableProps,\n          ...bulkSelectTableProps,\n        }}\n        customFilters={{\n          advisorFilters: filters,\n          selectedTags,\n          workloads,\n          SID,\n        }}\n        showTags={showTags}\n        getEntities={async (_items, config, showTags, defaultGetEntities) => {\n          const {\n            per_page,\n            page,\n            orderBy,\n            orderDirection,\n            advisorFilters,\n            filters,\n            workloads,\n            SID,\n          } = config;\n          const sort = `${orderDirection === 'ASC' ? '' : '-'}${\n            orderBy === 'updated' ? 'last_seen' : orderBy\n          }`;\n          let options = {\n            ...advisorFilters,\n            limit: per_page,\n            offset: page * per_page - per_page,\n            sort,\n            ...(config.filters.hostnameOrId &&\n              !pathway && {\n                name: config?.filters?.hostnameOrId,\n              }),\n            ...(config.filters.hostnameOrId &&\n              pathway && {\n                display_name: config?.filters?.hostnameOrId,\n              }),\n            ...(Array.isArray(advisorFilters.rhel_version) && {\n              rhel_version: advisorFilters.rhel_version?.join(','),\n            }),\n            ...(filters.tagFilters?.length &&\n              buildTagFilter(filters.tagFilters)),\n          };\n\n          workloads &&\n            (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n          handleRefresh(options);\n\n          const fetchedSystems = pathway\n            ? (\n                await Get(\n                  `${SYSTEMS_FETCH_URL}`,\n                  {},\n                  { ...options, pathway: pathway.slug }\n                )\n              )?.data\n            : (\n                await Get(\n                  `${RULES_FETCH_URL}${encodeURI(\n                    rule.rule_id\n                  )}/systems_detail/`,\n                  {},\n                  options\n                )\n              )?.data;\n\n          const results = await defaultGetEntities(\n            fetchedSystems.data.map((system) => system.system_uuid),\n            {\n              page,\n              per_page,\n              hasItems: true,\n              fields: { system_profile: ['operating_system'] },\n            },\n            showTags\n          );\n          setCurPageIds(\n            fetchedSystems.data.map((system) => system.system_uuid)\n          );\n          setTotal(fetchedSystems.meta.count);\n          return Promise.resolve({\n            results: mergeArraysByDiffKeys(\n              fetchedSystems.data,\n              results.results\n            ).map((item) => {\n              return {\n                ...item,\n                selected: selectedIds?.includes(item.id),\n              };\n            }),\n            total: fetchedSystems.meta.count,\n          });\n        }}\n        dedicatedAction={\n          <RemediationButton\n            key=\"remediation-button\"\n            isDisabled={\n              (selectedIds || []).length === 0 ||\n              (!pathway && rule?.playbook_count === 0)\n            }\n            dataProvider={remediationDataProvider}\n            onRemediationCreated={(result) => onRemediationCreated(result)}\n          >\n            {intl.formatMessage(messages.remediate)}\n          </RemediationButton>\n        }\n        actionsConfig={{\n          actions: [\n            '',\n            {\n              label: intl.formatMessage(messages.disableRuleForSystems),\n              props: { isDisabled: (selectedIds || []).length === 0 },\n              onClick: () => handleModalToggle(true),\n            },\n          ],\n        }}\n        {...toolbarProps}\n        fallback={Loading}\n        onLoad={({\n          mergeWithEntities,\n          INVENTORY_ACTION_TYPES,\n          mergeWithDetail,\n        }) => {\n          store.replaceReducer(\n            updateReducers({\n              ...mergeWithEntities(systemReducer([], INVENTORY_ACTION_TYPES), {\n                page: Number(filters.offset / filters.limit + 1 || 1),\n                perPage: Number(filters.limit || 20),\n              }),\n              ...mergeWithDetail(),\n            })\n          );\n        }}\n        exportConfig={\n          permsExport && {\n            label: intl.formatMessage(messages.exportCsv),\n            // eslint-disable-next-line no-dupe-keys\n            label: intl.formatMessage(messages.exportJson),\n            onSelect: (_e, fileType) =>\n              downloadReport(\n                exportTable,\n                fileType,\n                { rule_id: rule.rule_id, ...filters },\n                selectedTags,\n                workloads,\n                SID,\n                dispatch\n              ),\n            isDisabled: !permsExport || entities?.rows?.length === 0,\n            tooltipText: permsExport\n              ? intl.formatMessage(messages.exportData)\n              : intl.formatMessage(messages.permsAction),\n          }\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nInventory.propTypes = {\n  tableProps: PropTypes.any,\n  rule: PropTypes.object,\n  afterDisableFn: PropTypes.func,\n  pathway: PropTypes.object,\n  selectedTags: PropTypes.any,\n  workloads: PropTypes.any,\n  SID: PropTypes.any,\n  permsExport: PropTypes.bool,\n  exportTable: PropTypes.string,\n  showTags: PropTypes.bool,\n};\n\nexport default Inventory;\n"],"names":["exports","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","useOUIAProps","createElement","Object","assign","css","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement","angle_right_icon_1","classNameProp","to","isActive","isDropdown","target","component","render","Component","ariaCurrent","undefined","breadcrumbLink","modifiers","current","breadcrumbItem","breadcrumbItemDivider","type","breadcrumbDropdown","href","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useEffect","console","error","concat","__assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Cmp","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","size","Breadcrumbs","intl","useIntl","location","useLocation","pathname","split","useState","items","setItems","skip","useGetRecQuery","ruleId","data","isFetching","crumbs","push","title","formatMessage","messages","navigate","description","oneLink","key","Link","PropTypes","selectionGroup","action","group","init","withGroups","preselected","cleanEmpty","state","newState","entries","forEach","set","isObject","select","reset","uniq","item","deselect","filter","selectedItem","includes","toggle","clear","selectOrUnselect","selected","allItemsIncluded","selection","selectedItemsTotal","total","onSelect","itemIdsInTable","itemIdsOnPage","identifier","enableBulkSelect","useReducer","reducer","initReducer","dispatch","useSelectionManager","selectedIds","selectedIdsTotal","idsOnPage","paginatedTotal","allSelected","noneSelected","currentPageSelected","selectedItems","checkCurrentPageSelected","isDisabled","checked","itemsTotal","titleOption","compileTitle","selectPage","arrayA","arrayB","Array","from","Set","selectAll","JSON","stringify","selectNone","tableProps","_","_key","row","canSelectAll","toolbarProps","bulkSelect","toggleProps","onClick","Inventory","rule","afterDisableFn","pathway","selectedTags","workloads","SID","permsExport","exportTable","showTags","useDispatch","limit","offset","sort","name","filters","setFilters","setTotal","entities","useSelector","addNotification","notification","disableRuleModalOpen","setDisableRuleModalOpen","curPageIds","setCurPageIds","fetchAllSystems","Get","SYSTEMS_FETCH_URL","slug","impacted_systems_count","system","system_uuid","RULES_FETCH_URL","encodeURI","rule_id","host_ids","allSystems","useBulkSelect","identitfier","bulkSelectTableProps","payload","localFilters","remediationDataProvider","BASE_URL","pathways","rules","systems","issues","rec","filteredSystems","id","handleModalToggle","handleRefresh","options","display_name","refreshedFilters","urlBuilder","removeFilterParam","param","filterConfigItems","label","SFC","value","filterValues","onChange","_e","values","addFilterParam","rhel_version","activeFiltersConfig","deleteTitle","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","urlParam","isArray","String","chips","DisableRule","isModalOpen","afterFn","hosts","InventoryTable","hasCheckbox","initialLoading","autoRefresh","hideFilters","all","tags","filterConfig","columns","defaultColumns","lastSeenColumn","displayName","systemProfile","transforms","sortable","wrappable","isStatic","width","createColumns","variant","TableVariant","customFilters","advisorFilters","getEntities","_items","config","defaultGetEntities","per_page","page","orderBy","orderDirection","hostnameOrId","join","tagFilters","buildTagFilter","workloadQueryBuilder","fetchedSystems","hasItems","fields","system_profile","results","meta","count","Promise","resolve","mergeArraysByDiffKeys","dedicatedAction","RemediationButton","playbook_count","dataProvider","onRemediationCreated","result","remediation","getNotification","dismissable","actionsConfig","actions","Loading","onLoad","mergeWithEntities","INVENTORY_ACTION_TYPES","mergeWithDetail","replaceReducer","updateReducers","systemReducer","Number","perPage","exportConfig","fileType","downloadReport","rows"],"sourceRoot":""}