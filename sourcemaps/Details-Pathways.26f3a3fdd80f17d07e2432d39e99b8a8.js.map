{"version":3,"file":"js/Details-Pathways.1683278795877.ccbeaf4fa79ec6d59050.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Cards/ResolutionCard.js","webpack:///./src/PresentationalComponents/Cards/TotalRiskCard.js","webpack:///./src/PresentationalComponents/Common/Common.js","webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js","webpack:///./src/SmartComponents/Recs/DetailsPathways.js","webpack:///./src/PresentationalComponents/Cards/Pathways.scss","webpack:///./src/PresentationalComponents/Common/_Common.scss","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Content|./content.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Menu|./menu.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/TabContent|./tab-content.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Tabs|./tabs.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/layouts/Grid|./grid.css"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport './Pathways.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport { RISK_OF_CHANGE_LABEL } from '../../AppConstants';\nimport React from 'react';\nimport { RebootRequired } from '../Common/Common';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const ResolutionCard = ({\n  name,\n  reboot_required,\n  resolution_risk,\n  recommendation_level,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100 pf-u-h-100 flex-row\"\n    >\n      <div className=\"flex-coloumn\">\n        <CardTitle>{intl.formatMessage(messages.resolution)}</CardTitle>\n\n        <div className=\"flex-row \">\n          <div className=\"halfWidth\">\n            <p className=\"pf-u-font-weight-bold pf-u-font-size-sm pf-u-pl-lg\">\n              {intl.formatMessage(messages.remediation)}\n            </p>\n            <p className=\"pf-u-font-size-sm pf-u-pl-lg\">{name}</p>\n          </div>\n\n          <CardBody className=\" pf-u-pl-xl halfWidth\">\n            <p className=\"pf-u-font-weight-bold pf-u-font-size-sm\">\n              {intl.formatMessage(messages.riskOfChange)}\n            </p>\n            <InsightsLabel\n              text={RISK_OF_CHANGE_LABEL[resolution_risk.risk]}\n              value={resolution_risk.risk}\n              hideIcon\n              isCompact\n            />\n          </CardBody>\n        </div>\n\n        <CardBody className=\"body pf-u-font-size-sm\">\n          {intl.formatMessage(messages.staticRemediationDesc)}\n        </CardBody>\n        <CardBody className=\"body\">{RebootRequired(reboot_required)}</CardBody>\n      </div>\n\n      <div className=\"pathwayRight pf-u-p-lg \">\n        <p className=\"pf-u-font-weight-bold pf-u-font-size-sm\">\n          {intl.formatMessage(messages.reclvl)}\n        </p>\n        <div>\n          <RecommendationLevel recLvl={recommendation_level} />\n        </div>\n      </div>\n    </Card>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport './Pathways.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport {\n  Chart,\n  ChartAxis,\n  ChartBar,\n  ChartGroup,\n  ChartVoronoiContainer,\n} from '@patternfly/react-charts';\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\n\nimport React from 'react';\nimport chart_color_black_100 from '@patternfly/react-tokens/dist/esm/chart_color_black_100';\nimport chart_color_gold_400 from '@patternfly/react-tokens/dist/esm/chart_color_gold_400';\nimport chart_color_orange_300 from '@patternfly/react-tokens/dist/esm/chart_color_orange_300';\nimport chart_color_red_100 from '@patternfly/react-tokens/dist/esm/chart_color_red_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\n\nexport const TotalRiskCard = (props) => {\n  const intl = useIntl();\n  const {\n    impacted_systems_count,\n    incident_count,\n    categories,\n    critical_risk_count,\n    high_risk_count,\n    medium_risk_count,\n    low_risk_count,\n  } = props;\n\n  const catString = (cats) =>\n    cats.length > 1\n      ? categories.map((cat) => cat.name).join(', ')\n      : cats[0]?.name;\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100 pf-u-h-100\"\n    >\n      <CardTitle>{intl.formatMessage(messages.totalRiskPathway)}</CardTitle>\n      <CardBody className=\"body\">\n        <Grid hasGutter>\n          <GridItem span={6}>\n            <div>\n              <Chart\n                ariaDesc=\"Total risk of recommendations\"\n                ariaTitle=\"Total risk of recommendations\"\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={({ datum }) => `${datum.name}: ${datum.y}`}\n                    constrainToVisibleArea\n                  />\n                }\n                domainPadding={{\n                  x: [20, 15],\n                }}\n                height={150}\n                width={300}\n                padding={{\n                  bottom: 30,\n                  left: 45,\n                  right: 10,\n                  top: 10,\n                }}\n              >\n                <ChartAxis />\n                <ChartAxis dependentAxis showGrid />\n                <ChartGroup>\n                  <ChartBar\n                    barWidth={16}\n                    style={{\n                      data: {\n                        fill: ({ datum }) => datum.fill,\n                      },\n                    }}\n                    data={[\n                      {\n                        name: 'Critical',\n                        x: 'Critical',\n                        y: critical_risk_count,\n                        fill: chart_color_red_100.value,\n                      },\n                      {\n                        name: 'Important',\n                        x: 'Important',\n                        y: high_risk_count,\n                        fill: chart_color_orange_300.value,\n                      },\n                      {\n                        name: 'Moderate',\n                        x: 'Moderate',\n                        y: medium_risk_count,\n                        fill: chart_color_gold_400.value,\n                      },\n                      {\n                        name: 'Low',\n                        x: 'Low',\n                        y: low_risk_count,\n                        fill: chart_color_black_100.value,\n                      },\n                    ]}\n                  />\n                </ChartGroup>\n              </Chart>\n            </div>\n          </GridItem>\n          <GridItem span={6} className=\"pf-u-font-size-sm\">\n            {intl.formatMessage(messages.thisPathway, {\n              category: catString(categories),\n              systems: impacted_systems_count,\n              incidents: incident_count,\n              strong: (str) => strong(str),\n            })}\n          </GridItem>\n        </Grid>\n      </CardBody>\n    </Card>\n  );\n};\n","import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/esm/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_secondary_color_100 } from '@patternfly/react-tokens/dist/js/global_secondary_color_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-c-icon-reboot-required'\n          : 'adv-c-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-text-system-reboot-message pf-u-font-size-sm\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_secondary_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n","import { Label } from '@patternfly/react-core/dist/esm/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const RecommendationLevel = ({ recLvl, isCompact }) => {\n  const intl = useIntl();\n  const label = (text, recLvl, color) => (\n    <Label color={color} isCompact>{`${text} - ${recLvl}%`}</Label>\n  );\n\n  if (recLvl >= 80) {\n    return label(intl.formatMessage(messages.high), recLvl, 'red', isCompact);\n  } else if (recLvl < 80 && recLvl >= 50) {\n    return label(\n      intl.formatMessage(messages.medium),\n      recLvl,\n      'orange',\n      isCompact\n    );\n  } else {\n    return label(intl.formatMessage(messages.low), recLvl, 'blue', isCompact);\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\nRecommendationLevel.defaultProps = {\n  isCompact: true,\n};\n\nexport default RecommendationLevel;\n","import './Details.scss';\n\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { TotalRiskCard } from '../../PresentationalComponents/Cards/TotalRiskCard';\nimport { ResolutionCard } from '../../PresentationalComponents/Cards/ResolutionCard';\nimport {\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core/dist/esm/components/Tabs/index';\nimport { updateRecFilters, updateSysFilters } from '../../Services/Filters';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport CategoryLabel from '../../PresentationalComponents/Labels/CategoryLabel';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Inventory from '../../PresentationalComponents/Inventory/Inventory';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport RuleLabels from '../../PresentationalComponents/Labels/RuleLabels';\nimport messages from '../../Messages';\nimport { useGetPathwayQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { workloadQueryBuilder } from '../../PresentationalComponents/Common/Tables';\nimport { useLocation } from 'react-router-dom';\n\nconst RulesTable = lazy(() =>\n  import(\n    /* webpackChunkName: 'RulesTable' */ '../../PresentationalComponents/RulesTable/RulesTable'\n  )\n);\n\nconst PathwayDetails = () => {\n  const intl = useIntl();\n  const pathwayName = useParams().id;\n  const dispatch = useDispatch();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const recFilters = useSelector(({ filters }) => filters.recState);\n  const sysFilters = useSelector(({ filters }) => filters.sysState);\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const { data: pathway = {}, isFetching } = useGetPathwayQuery({\n    ...options,\n    slug: pathwayName,\n  });\n  const { pathname } = useLocation();\n\n  const [activeTab, setActiveTab] = useState(\n    pathname.includes('/recommendations/pathways/systems/') ? 1 : 0\n  );\n\n  const waitForElm = (selector) => {\n    return new Promise((resolve) => {\n      if (document.querySelector(selector)) {\n        return resolve(document.querySelector(selector));\n      }\n\n      const observer = new MutationObserver(() => {\n        if (document.querySelector(selector)) {\n          resolve(document.querySelector(selector));\n          observer.disconnect();\n        }\n      });\n    });\n  };\n\n  const scrollDown = () => {\n    if (pathname.includes('/recommendations/pathways/systems/')) {\n      setTimeout(() => {\n        waitForElm('#tablesContainer').then(() => {\n          document\n            .getElementById('tablesContainer')\n            .scrollIntoView({ behavior: 'smooth' });\n        });\n      }, 5000);\n    }\n  };\n\n  useEffect(() => {\n    const initiaRecFilters = { ...recFilters };\n    const initiaSysFilters = { ...sysFilters };\n    const defaultFilters = { pathway: pathwayName, limit: 20, offset: 0 };\n    dispatch(\n      updateRecFilters({\n        ...defaultFilters,\n        sort: 'category',\n        impacting: true,\n      })\n    );\n    dispatch(\n      updateSysFilters({\n        ...defaultFilters,\n      })\n    );\n    scrollDown();\n    return () => {\n      dispatch(updateRecFilters(initiaRecFilters));\n      dispatch(updateSysFilters(initiaSysFilters));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <React.Fragment>\n      {isFetching ? (\n        <Loading />\n      ) : (\n        <React.Fragment>\n          <PageHeader className=\"adv-c-page__header\">\n            <Breadcrumbs ouiaId=\"override\" current={pathway.name || ''} />\n            <PageHeaderTitle\n              title={\n                <React.Fragment>\n                  {pathway.name}\n                  {pathway.has_incident && (\n                    <RuleLabels rule={{ tags: 'incident' }} />\n                  )}\n                </React.Fragment>\n              }\n            />\n            <p className=\"pf-u-mb-lg\">\n              {intl.formatMessage(messages.rulesDetailsModifieddate, {\n                date: (\n                  <DateFormat\n                    date={new Date(pathway.publish_date)}\n                    type=\"onlyDate\"\n                  />\n                ),\n              })}\n              <span className=\"pf-u-pl-sm\">\n                <CategoryLabel labelList={pathway.categories} />\n              </span>\n            </p>\n            <p className=\"pf-u-mb-lg\">{pathway.description}</p>\n          </PageHeader>\n          <section className=\"pf-u-p-lg\">\n            <Grid hasGutter>\n              <GridItem sm={12} md={6}>\n                <TotalRiskCard {...pathway} />\n              </GridItem>\n              <GridItem sm={12} md={6}>\n                <ResolutionCard {...pathway} />\n              </GridItem>\n            </Grid>\n          </section>\n        </React.Fragment>\n      )}\n      {isFetching && <Loading />}\n      <section className=\"pf-u-px-lg pf-u-pb-lg\">\n        <Tabs\n          className=\"adv__background--global-100\"\n          activeKey={activeTab}\n          onSelect={(_e, tab) => setActiveTab(tab)}\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.recommendations)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <RulesTable />\n              </Suspense>\n            )}\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.systems)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <Inventory\n                  tableProps={{\n                    canSelectAll: false,\n                    isStickyHeader: true,\n                  }}\n                  pathway={pathway}\n                  selectedTags={selectedTags}\n                  workloads={workloads}\n                  SID={SID}\n                  showTags={true}\n                />\n              </Suspense>\n            )}\n          </Tab>\n        </Tabs>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default PathwayDetails;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["Card","CardBody","CardTitle","InsightsLabel","RISK_OF_CHANGE_LABEL","React","RebootRequired","RecommendationLevel","messages","useIntl","ResolutionCard","name","reboot_required","resolution_risk","recommendation_level","intl","formatMessage","resolution","remediation","riskOfChange","risk","staticRemediationDesc","reclvl","Chart","ChartAxis","ChartBar","ChartGroup","ChartVoronoiContainer","Grid","GridItem","chart_color_black_100","chart_color_gold_400","chart_color_orange_300","chart_color_red_100","strong","TotalRiskCard","props","impacted_systems_count","incident_count","categories","critical_risk_count","high_risk_count","medium_risk_count","low_risk_count","catString","cats","length","map","cat","join","totalRiskPathway","datum","y","x","bottom","left","right","top","data","fill","value","thisPathway","category","systems","incidents","str","Text","TextContent","TextVariants","Tooltip","TooltipPosition","createIntl","createIntlCache","OutlinedQuestionCircleIcon","PowerOffIcon","global_secondary_color_100","cache","locale","navigator","language","slice","p","systemReboot","status","is","isNot","QuestionTooltip","text","Label","PropTypes","recLvl","isCompact","label","color","high","medium","low","propTypes","array","defaultProps","PageHeader","PageHeaderTitle","Suspense","lazy","useEffect","useState","Tab","TabTitleText","Tabs","updateRecFilters","updateSysFilters","useDispatch","useSelector","Breadcrumbs","CategoryLabel","DateFormat","Inventory","Loading","RuleLabels","useGetPathwayQuery","useParams","workloadQueryBuilder","useLocation","RulesTable","PathwayDetails","pathwayName","id","dispatch","selectedTags","filters","workloads","SID","recFilters","recState","sysFilters","sysState","options","tags","slug","pathway","isFetching","pathname","includes","activeTab","setActiveTab","waitForElm","selector","Promise","resolve","document","querySelector","observer","MutationObserver","disconnect","scrollDown","setTimeout","then","getElementById","scrollIntoView","behavior","initiaRecFilters","initiaSysFilters","defaultFilters","limit","offset","sort","impacting","has_incident","rulesDetailsModifieddate","date","Date","publish_date","description","_e","tab","recommendations","canSelectAll","isStickyHeader"],"sourceRoot":""}