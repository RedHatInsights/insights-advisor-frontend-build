{"version":3,"file":"js/RecsList.3cfbc9dd77853f7592cb.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardExpandableContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/arrow-right-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/export-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/power-off-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_secondary_color_100.js","webpack:///./src/PresentationalComponents/Common/Common.js","webpack:///./src/PresentationalComponents/Labels/LabelIcon.js","webpack:///./src/PresentationalComponents/Labels/CategoryLabel.js","webpack:///./src/PresentationalComponents/Labels/RuleLabels.js","webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/helpers/urlPathHelpers.js","webpack:///./src/PresentationalComponents/ExecutiveReport/Download.js","webpack:///./src/PresentationalComponents/Cards/PathwayCard.js","webpack:///./src/PresentationalComponents/PathwaysPanel/PathwaysPanel.js","webpack:///./src/SmartComponents/Recs/List.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/useInsightsNavigate/useInsightsNavigate.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { CardContext } from './Card';\nexport const CardExpandableContent = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ isExpanded }) => isExpanded ? (React.createElement(\"div\", Object.assign({ className: css(styles.cardExpandableContent, className) }, props), children)) : null));\n};\nCardExpandableContent.displayName = 'CardExpandableContent';\n//# sourceMappingURL=CardExpandableContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => {\n        const cardHeaderToggle = (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, isToggleRightAligned && styles.modifiers.toggleRight, className), id: id }, props),\n            onExpand && !isToggleRightAligned && cardHeaderToggle,\n            children,\n            onExpand && isToggleRightAligned && cardHeaderToggle));\n    }));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { createIcon } from '../createIcon';\n\nexport const ArrowRightIconConfig = {\n  name: 'ArrowRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ArrowRightIcon = createIcon(ArrowRightIconConfig);\n\nexport default ArrowRightIcon;","import { createIcon } from '../createIcon';\n\nexport const ExportIconConfig = {\n  name: 'ExportIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExportIcon = createIcon(ExportIconConfig);\n\nexport default ExportIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const PowerOffIconConfig = {\n  name: 'PowerOffIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PowerOffIcon = createIcon(PowerOffIconConfig);\n\nexport default PowerOffIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_secondary_color_100 = {\n  \"name\": \"--pf-global--secondary-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--secondary-color--100)\"\n};\nexports[\"default\"] = exports.global_secondary_color_100;","import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/esm/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_secondary_color_100 } from '@patternfly/react-tokens/dist/js/global_secondary_color_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-c-icon-reboot-required'\n          : 'adv-c-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-text-system-reboot-message pf-u-font-size-sm\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_secondary_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n","import { Label } from '@patternfly/react-core/dist/esm/components/Label/index';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LabelIcon = ({ icon, text }) => (\n  <Label icon={icon} variant=\"outline\" color=\"blue\" isCompact>\n    {text}\n  </Label>\n);\n\nLabelIcon.propTypes = {\n  icon: PropTypes.object,\n  text: PropTypes.bool,\n};\n\nexport default LabelIcon;\n","/* eslint-disable react/jsx-key */\nimport AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { LabelGroup } from '@patternfly/react-core/dist/esm/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport LabelIcon from './LabelIcon';\n\nconst CategoryLabel = ({ labelList }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const labels = (id) =>\n    [\n      <LabelIcon\n        icon={<AutomationIcon />}\n        text={intl.formatMessage(messages.availability)}\n      />,\n      <LabelIcon\n        icon={<LockIcon />}\n        text={intl.formatMessage(messages.security)}\n      />,\n      <LabelIcon\n        icon={<CubeIcon />}\n        text={intl.formatMessage(messages.stability)}\n      />,\n      <LabelIcon\n        icon={<PortIcon />}\n        text={intl.formatMessage(messages.performance)}\n      />,\n    ][id];\n\n  return (\n    <LabelGroup numLabels={1} isCompact>\n      {sortedFrequencyList.map((id) => labels(Number(id[0] - 1)))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n  isCompact: PropTypes.bool,\n};\n\nCategoryLabel.defaultProps = {\n  isCompact: true,\n};\n\nexport default CategoryLabel;\n","import './_RuleLabels.scss';\n\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst RuleLabels = ({ rule, isCompact, noMargin }) => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      {rule?.tags?.search('incident') !== -1 && (\n        <Tooltip\n          content={intl.formatMessage(messages.incidentTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label\n            color=\"red\"\n            className={noMargin ? null : 'adv-c-label-incident'}\n            isCompact={isCompact}\n          >\n            {intl.formatMessage(messages.incident)}\n          </Label>\n        </Tooltip>\n      )}\n      {rule?.rule_status === 'disabled' && (\n        <Tooltip\n          content={intl.formatMessage(messages.ruleIsDisabledTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"gray\" isCompact={isCompact}>\n            {intl.formatMessage(messages.disabled)}\n          </Label>\n        </Tooltip>\n      )}\n      {rule?.rule_status === 'rhdisabled' && (\n        <Tooltip\n          content={intl.formatMessage(messages.ruleIsDisabledTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"gray\" isCompact={isCompact}>\n            {intl.formatMessage(messages.redhatDisabled)}\n          </Label>\n        </Tooltip>\n      )}\n    </React.Fragment>\n  );\n};\n\nRuleLabels.propTypes = {\n  rule: PropTypes.object,\n  isCompact: PropTypes.bool,\n  noMargin: PropTypes.bool,\n};\n\nRuleLabels.defaultProps = {\n  isCompact: true,\n};\n\nexport default RuleLabels;\n","import { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/esm/components/Card/CardBody';\nimport { List } from 'react-content-loader';\nimport React from 'react';\nconst Loading = () => (\n  <Card>\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexport var buildInsightsPath = function (chrome, app, toProp, forcePreview) {\n    var inAppPath = (typeof toProp === 'object' ? toProp.pathname : toProp) || '';\n    var isAbsolutePath = /^\\//.test(inAppPath);\n    var environmentPath = forcePreview ? '/preview' : '';\n    var appPath = app || chrome.getApp();\n    var pathname = isAbsolutePath ? [environmentPath, chrome.getBundle(), appPath, inAppPath.replace(/^\\//, '')].join('/') : inAppPath;\n    return typeof toProp === 'object'\n        ? __assign(__assign({}, toProp), { pathname: pathname }) : pathname;\n};\n//# sourceMappingURL=urlPathHelpers.js.map","import './_Download.scss';\n\nimport {\n  RULES_FETCH_URL,\n  STATS_REPORTS_FETCH_URL,\n  STATS_SYSTEMS_FETCH_URL,\n  exportNotifications,\n} from '../../AppConstants';\nimport React, { useMemo, useState } from 'react';\n\nimport { DownloadButtonWrapper } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport ExportIcon from '@patternfly/react-icons/dist/esm/icons/export-icon';\nimport { Get } from '../../Utilities/Api';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nconst DownloadExecReport = ({ isDisabled }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const dataFetch = async () => {\n    setLoading(true);\n    const { BuildExecReport } = await import(\n      /* webpackChunkName: 'BuildExecReport' */ './BuildExecReport'\n    );\n    dispatch(addNotification(exportNotifications.pending));\n\n    try {\n      const [statsSystems, statsReports, topActiveRec] = await Promise.all([\n        (await Get(STATS_SYSTEMS_FETCH_URL)).data,\n        (await Get(STATS_REPORTS_FETCH_URL)).data,\n        (\n          await Get(\n            RULES_FETCH_URL,\n            {},\n            { limit: 3, sort: '-total_risk,-impacted_count', impacting: true }\n          )\n        ).data,\n      ]);\n\n      const report = BuildExecReport({\n        statsReports,\n        statsSystems,\n        topActiveRec,\n        intl,\n      });\n      setLoading(false);\n      dispatch(addNotification(exportNotifications.success));\n\n      return [report];\n    } catch (e) {\n      setLoading(false);\n      dispatch(addNotification(exportNotifications.error));\n\n      return [];\n    }\n  };\n\n  return useMemo(() => {\n    return (\n      <DownloadButtonWrapper\n        groupName={intl.formatMessage(messages.redHatInsights)}\n        label={\n          loading\n            ? intl.formatMessage(messages.loading)\n            : intl.formatMessage(messages.downloadExecutiveLabel)\n        }\n        asyncFunction={dataFetch}\n        buttonProps={{\n          variant: 'link',\n          icon: <ExportIcon className=\"iconOverride\" />,\n          component: 'a',\n          className: 'downloadButtonOverride',\n          isAriaDisabled: isDisabled,\n          ...(loading ? { isDisabled: true } : null),\n        }}\n        type={intl.formatMessage(messages.insightsHeader)}\n        fileName={`Advisor-Executive-Report--${new Date()\n          .toUTCString()\n          .replace(/ /g, '-')}.pdf`}\n      />\n    );\n  }, [loading]);\n};\n\nexport default DownloadExecReport;\n","/* eslint-disable react/prop-types */\nimport './Pathways.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { Text } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport React from 'react';\nimport { RebootRequired } from '../Common/Common';\nimport RuleLabels from '../Labels/RuleLabels';\nimport Link from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const PathwayCard = ({\n  name,\n  categories,\n  impacted_systems_count,\n  description,\n  has_incident,\n  reboot_required,\n  slug,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100\"\n    >\n      <CardBody className=\"body\">\n        <Text className=\"pf-u-pb-sm pf-u-font-weight-bold\">{name}</Text>\n        <CategoryLabel key={name} labelList={categories} />{' '}\n        <Link\n          to={`/recommendations/pathways/systems/${slug}`}\n          className=\"pf-u-font-size-sm\"\n        >\n          {intl.formatMessage(messages.topicCardSystemsaffected, {\n            systems: impacted_systems_count,\n          })}\n        </Link>\n      </CardBody>\n      <CardBody className=\"body pf-u-font-size-sm\">{description}</CardBody>\n      <CardBody className=\"body pf-u-font-size-sm\">\n        {has_incident && <RuleLabels rule={{ tags: 'incident' }} isCompact />}{' '}\n        {RebootRequired(reboot_required)}\n      </CardBody>\n      <CardFooter className=\"footer pf-u-font-size-sm\">\n        <Link to={`/recommendations/pathways/${slug}`}>\n          {`${intl.formatMessage(messages.viewPathway)} `}\n          <ArrowRightIcon />\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n};\n","import './_PathwaysPanel.scss';\n\nimport {\n  Card,\n  CardExpandableContent,\n  CardHeader,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PathwayCard } from '../Cards/PathwayCard';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\nimport { useGetPathwaysQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst PathwaysPanel = () => {\n  const intl = useIntl();\n  const { offset } = useSelector(({ filters: { pathState } }) => pathState);\n  const [expanded, setExpanded] = useState(\n    JSON.parse(localStorage.getItem('advisor_pathwayspanel_expanded') || 'true')\n  );\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n\n  const options = {\n    ...(selectedTags?.length > 0 ? { tags: selectedTags.join(',') } : {}),\n    ...(workloads ? workloadQueryBuilder(workloads, SID) : {}),\n  };\n  const { data, isLoading, isFetching, isError } = useGetPathwaysQuery({\n    sort: '-recommendation_level',\n    offset,\n    limit: 3,\n    ...options,\n  });\n\n  return !isLoading ? (\n    <Card\n      className=\"adv-c-card adv-c-card-pathways-panel\"\n      id=\"adv-c-card-pathwayspanel\"\n      isExpanded={expanded}\n    >\n      <CardHeader\n        onExpand={() => {\n          setExpanded(!expanded);\n          localStorage.setItem('advisor_pathwayspanel_expanded', !expanded);\n        }}\n        toggleButtonProps={{\n          id: `ins-c-advisor__card-title--pathwayspanel-toggle-button`,\n          'aria-label': 'Details',\n          'aria-labelledby': `ins-c-advisor__card-title--pathwayspanel toggle-button`,\n        }}\n      >\n        <CardTitle>\n          <Title headingLevel=\"h2\" size=\"lg\">\n            {intl.formatMessage(messages.improveRecommended)}\n          </Title>\n        </CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        {isFetching ? (\n          <Loading />\n        ) : !isError && data.data?.length ? (\n          <Grid\n            md={data.data?.length === 1 ? 8 : data.data?.length === 2 ? 6 : 4}\n            sm={12}\n          >\n            {data.data.map((pathway) => (\n              <GridItem key={pathway.name}>\n                <PathwayCard {...pathway} />\n              </GridItem>\n            ))}\n          </Grid>\n        ) : isError ? (\n          <MessageState\n            icon={'none'}\n            title={intl.formatMessage(messages.noPathwaysAvailable)}\n            text={intl.formatMessage(messages.pathwaysPanelsError)}\n          />\n        ) : (\n          <MessageState\n            icon={'none'}\n            text={intl.formatMessage(messages.noPathways)}\n          />\n        )}\n      </CardExpandableContent>\n    </Card>\n  ) : (\n    <Loading />\n  );\n};\n\nPathwaysPanel.propTypes = {\n  className: propTypes.string,\n};\n\nexport default PathwaysPanel;\n","import {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { Suspense, lazy, useEffect, useState } from 'react';\nimport {\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core/dist/esm/components/Tabs/index';\nimport { useLocation } from 'react-router-dom';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate';\n\nimport DownloadExecReport from '../../PresentationalComponents/ExecutiveReport/Download';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PERMS } from '../../AppConstants';\nimport { QuestionTooltip } from '../../PresentationalComponents/Common/Common';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport PathwaysPanel from '../../PresentationalComponents/PathwaysPanel/PathwaysPanel';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst PathwaysTable = lazy(() =>\n  import(\n    /* webpackChunkName: 'PathwaysTable' */ '../../PresentationalComponents/PathwaysTable/PathwaysTable'\n  )\n);\n\nconst List = () => {\n  const intl = useIntl();\n  const { pathname } = useLocation();\n  const { navigate } = useInsightsNavigate();\n  const permsExport = usePermissions('advisor', PERMS.export);\n  const chrome = useChrome();\n\n  useEffect(() => {\n    chrome.updateDocumentTitle(\n      intl.formatMessage(messages.documentTitle, {\n        subnav: messages.recommendations.defaultMessage,\n      })\n    );\n  }, [chrome, intl]);\n\n  const [activeTab, setActiveTab] = useState(\n    pathname === '/recommendations/pathways' ? 1 : 0\n  );\n  const changeTab = (tab) => {\n    setActiveTab(tab);\n    navigate(tab === 1 ? '/recommendations/pathways' : '/recommendations');\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"adv-c-page-recommendations__header\">\n        <PageHeaderTitle\n          title={`${intl.formatMessage(messages.insightsHeader)} ${intl\n            .formatMessage(messages.recommendations)\n            .toLowerCase()}`}\n        />\n        {!permsExport.isLoading && (\n          <Tooltip\n            trigger={!permsExport.hasAccess ? 'mouseenter' : ''}\n            content={intl.formatMessage(messages.permsAction)}\n          >\n            <DownloadExecReport isDisabled={!permsExport.hasAccess} />\n          </Tooltip>\n        )}\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <PathwaysPanel />\n        <Tabs\n          className=\"adv__background--global-100\"\n          activeKey={activeTab}\n          onSelect={(_e, tab) => changeTab(tab)}\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.recommendations)}\n              </TabTitleText>\n            }\n          >\n            <RulesTable isTabActive={activeTab === 0} />\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.pathways)}{' '}\n                {QuestionTooltip(\n                  intl.formatMessage(messages.recommendedPathways)\n                )}\n              </TabTitleText>\n            }\n          >\n            {activeTab === 1 && (\n              <Suspense fallback={<Loading />}>\n                <PathwaysTable isTabActive={activeTab === 1} />\n              </Suspense>\n            )}\n          </Tab>\n        </Tabs>\n      </section>\n    </React.Fragment>\n  );\n};\n\nList.displayName = 'recommendations-list';\n\nexport default List;\n","import { useNavigate } from 'react-router-dom';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { buildInsightsPath } from '../helpers/urlPathHelpers';\nvar useInsightsNavigate = function (app, forcePreview) {\n    var navigate = useNavigate();\n    var chrome = useChrome();\n    return function (to, preview) { return navigate(buildInsightsPath(chrome, app, to, preview || forcePreview)); };\n};\nexport default useInsightsNavigate;\n//# sourceMappingURL=useInsightsNavigate.js.map"],"names":["CardExpandableContent","_a","children","className","props","Consumer","isExpanded","Object","assign","cardExpandableContent","displayName","CardFooter","component","Component","cardFooter","CardHeader","id","onExpand","toggleButtonProps","isToggleRightAligned","cardId","cardHeaderToggle","variant","type","onClick","evt","cardHeaderToggleIcon","cardHeader","modifiers","toggleRight","ArrowRightIconConfig","name","height","width","svgPath","yOffset","xOffset","ArrowRightIcon","ExportIconConfig","ExportIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","PowerOffIconConfig","PowerOffIcon","exports","cache","createIntlCache","locale","navigator","language","slice","intl","createIntl","RebootRequired","reboot_required","React","TextContent","Text","TextVariants","p","formatMessage","messages","systemReboot","strong","str","status","is","isNot","QuestionTooltip","text","Tooltip","key","position","TooltipPosition","right","content","color","global_secondary_color_100","value","LabelIcon","_ref","icon","Label","isCompact","propTypes","PropTypes","CategoryLabel","arr","labelList","useIntl","sortedFrequencyList","map","label","entries","reduce","acc","curr","sort","a","b","LabelGroup","numLabels","AutomationIcon","availability","LockIcon","security","CubeIcon","stability","PortIcon","performance","labels","Number","defaultProps","RuleLabels","_rule$tags","rule","noMargin","tags","search","incidentTooltip","incident","rule_status","ruleIsDisabledTooltip","disabled","redhatDisabled","Card","CardBody","List","__assign","t","s","i","n","arguments","length","prototype","hasOwnProperty","call","apply","this","isDisabled","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","loading","setLoading","dataFetch","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$import","BuildExecReport","_yield$Promise$all","_yield$Promise$all2","statsSystems","statsReports","topActiveRec","report","_context","prev","next","sent","addNotification","exportNotifications","pending","t0","Promise","Get","STATS_SYSTEMS_FETCH_URL","t1","data","STATS_REPORTS_FETCH_URL","t2","RULES_FETCH_URL","limit","impacting","t3","t4","all","success","abrupt","t5","error","stop","useMemo","DownloadButtonWrapper","groupName","redHatInsights","downloadExecutiveLabel","asyncFunction","buttonProps","_objectSpread","isAriaDisabled","insightsHeader","fileName","concat","Date","toUTCString","replace","PathwayCard","categories","impacted_systems_count","description","has_incident","slug","isFlat","isPlain","Link","to","topicCardSystemsaffected","systems","viewPathway","PathwaysPanel","_data$data","_data$data2","_data$data3","offset","useSelector","filters","pathState","JSON","parse","localStorage","getItem","expanded","setExpanded","selectedTags","workloads","_ref3","SID","_ref4","options","join","workloadQueryBuilder","_useGetPathwaysQuery","useGetPathwaysQuery","isLoading","isFetching","isError","Loading","setItem","CardTitle","Title","headingLevel","size","improveRecommended","Grid","md","sm","pathway","GridItem","MessageState","title","noPathwaysAvailable","pathwaysPanelsError","noPathways","PathwaysTable","lazy","pathname","useLocation","navigate","app","forcePreview","useNavigate","chrome","useChrome","preview","toProp","inAppPath","isAbsolutePath","test","environmentPath","appPath","getApp","getBundle","buildInsightsPath","useInsightsNavigate","permsExport","usePermissions","PERMS","useEffect","updateDocumentTitle","documentTitle","subnav","recommendations","defaultMessage","activeTab","setActiveTab","PageHeader","PageHeaderTitle","toLowerCase","trigger","hasAccess","permsAction","DownloadExecReport","Tabs","activeKey","onSelect","_e","tab","changeTab","Tab","eventKey","TabTitleText","RulesTable","isTabActive","pathways","recommendedPathways","Suspense","fallback"],"sourceRoot":""}