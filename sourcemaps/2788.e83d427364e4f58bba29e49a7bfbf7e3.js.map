{"version":3,"file":"js/2788.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/ansibeTower-icon.js","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/RulesTable/Components/EmptyState.js","webpack:///./src/PresentationalComponents/RulesTable/helpers.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const AnsibeTowerIconConfig = {\n  name: 'AnsibeTowerIcon',\n  height: 390,\n  width: 390,\n  svgPath: 'M402.6,214.7c0,103.9-84.2,188.1-188.1,188.1c-103.9,0-188.1-84.2-188.1-188.1  c0-103.9,84.2-188.1,188.1-188.1C318.4,26.6,402.6,110.8,402.6,214.7z M304.1,289.3l-74.9-180.2c-2.1-5.2-6.4-7.9-11.6-7.9c-5.2,0-9.8,2.8-11.9,7.9l-82.2,197.7h28.1l32.5-81.5  l97.1,78.4c3.9,3.2,6.7,4.6,10.4,4.6c7.3,0,13.7-5.5,13.7-13.4C305.4,293.6,305,291.5,304.1,289.3z M217.7,141.5l48.7,120.2  l-73.5-57.9L217.7,141.5z',\n  yOffset: 20,\n  xOffset: 20,\n};\n\nexport const AnsibeTowerIcon = createIcon(AnsibeTowerIconConfig);\n\nexport default AnsibeTowerIcon;","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/esm/components/Modal/Modal';\nimport OutlinedBellIcon from '@patternfly/react-icons/dist/esm/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useDispatch } from 'react-redux';\nimport { useGetHostAcksQuery } from '../../Services/Acks';\nimport { useIntl } from 'react-intl';\n\nconst ViewHostAcks = ({ handleModalToggle, isModalOpen, rule, afterFn }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const addNotification = (data) => dispatch(notification(data));\n  const columns = [\n    intl.formatMessage(messages.systemName),\n    intl.formatMessage(messages.justificationNote),\n    intl.formatMessage(messages.dateDisabled),\n    '',\n  ];\n  const [rows, setRows] = useState([]);\n  const [unclean, setUnclean] = useState(false);\n  const {\n    data: hostAcks = [],\n    isFetching,\n    isLoading,\n    refetch,\n  } = useGetHostAcksQuery({\n    rule_id: rule.rule_id,\n    limit: rule.hosts_acked_count,\n  });\n  const deleteAck = async (host) => {\n    try {\n      await DeleteApi(`${BASE_URL}/hostack/${host.id}/`);\n      refetch();\n      setUnclean(true);\n    } catch (error) {\n      handleModalToggle(false);\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    const rows = hostAcks?.map((item) => ({\n      cells: [\n        item.display_name || item.system_uuid,\n        item.justification || intl.formatMessage(messages.none),\n        {\n          title: (\n            <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" />\n          ),\n        },\n        {\n          title: (\n            <Button\n              key={item.system_uuid}\n              isInline\n              variant=\"link\"\n              onClick={() => deleteAck(item)}\n            >\n              <OutlinedBellIcon size=\"sm\" />\n              {` ${intl.formatMessage(messages.enable)}`}\n            </Button>\n          ),\n        },\n      ],\n    }));\n\n    if (!isLoading && hostAcks.length === 0) {\n      afterFn();\n      handleModalToggle(false);\n    }\n\n    setRows(rows);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hostAcks]);\n\n  return (\n    <Modal\n      width={'75%'}\n      title={intl.formatMessage(messages.hostAckModalTitle)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        unclean && afterFn();\n        handleModalToggle(false);\n      }}\n    >\n      {!isFetching ? (\n        <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n          <TableHeader />\n          <TableBody />\n        </Table>\n      ) : (\n        <Table\n          aria-label=\"host-ack-table\"\n          rows={[\n            {\n              cells: [{ props: { colSpan: 3 }, title: <List /> }],\n            },\n          ]}\n          cells={columns}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n    </Modal>\n  );\n};\n\nViewHostAcks.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n};\n\nViewHostAcks.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  rule: {},\n  afterFn: () => undefined,\n};\n\nexport default ViewHostAcks;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\nimport MessageState from '../../MessageState/MessageState';\nimport { messageMapping } from '../helpers';\n\nconst EmptyState = ({ filters, toggleRulesDisabled }) => {\n  const message =\n    messageMapping()[filters.rule_status] || messageMapping().default;\n\n  return (\n    <MessageState\n      icon={CheckCircleIcon}\n      iconClass=\"ansibleCheck\"\n      title={message.title}\n      text={message.body}\n    >\n      {filters.rule_status === 'enabled' && (\n        <Button\n          variant=\"link\"\n          style={{ paddingTop: 24 }}\n          onClick={() => toggleRulesDisabled('all')}\n        >\n          <FormattedMessage id=\"rulestable.norulehits.adddisabledbutton\" />\n        </Button>\n      )}\n    </MessageState>\n  );\n};\n\nEmptyState.propTypes = {\n  filters: propTypes.object,\n  toggleRulesDisabled: propTypes.func,\n};\n\nexport default EmptyState;\n","import React from 'react';\nimport EmptyState from './Components/EmptyState';\nimport { FormattedMessage } from 'react-intl';\nimport { paramParser } from '../Common/Tables';\nimport { DeleteApi } from '../../Utilities/Api';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport * as AppConstants from '../../AppConstants';\nimport messages from '../../Messages';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Link from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/esm/layouts/Stack/index';\nimport { Text } from '@patternfly/react-core';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/esm/icons/ansibeTower-icon';\nimport BellSlashIcon from '@patternfly/react-icons/dist/esm/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RuleDetails,\n  RuleDetailsMessagesKeys,\n  AdvisorProduct,\n} from '@redhat-cloud-services/frontend-components-advisor-components';\nimport RuleLabels from '../Labels/RuleLabels';\nimport CategoryLabel from '../Labels/CategoryLabel';\n\nimport {\n  formatMessages,\n  mapContentToValues,\n  strong,\n} from '../../Utilities/intlHelper';\nimport { ruleResolutionRisk } from '../Common/Tables';\n\nexport const emptyRows = (filters, toggleRulesDisabled) => [\n  {\n    cells: [\n      {\n        title: <EmptyState {...{ filters, toggleRulesDisabled }} />,\n        props: { colSpan: 6 },\n      },\n    ],\n  },\n];\n\nexport const messageMapping = () => {\n  const title = <FormattedMessage id=\"rulestable.norulehits.title\" />;\n\n  return {\n    enabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    disabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    rhdisabled: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"rulestable.norules.redhatdisabledrulesbody\" />\n        </Text>\n      ),\n    },\n    default: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"noRecommendations\" />\n        </Text>\n      ),\n    },\n  };\n};\n\nexport const urlFilterBuilder = (\n  sortIndices,\n  setSearchText,\n  setFilters,\n  filters\n) => {\n  let sortingValues = Object.values(sortIndices);\n  const paramsObject = paramParser();\n  delete paramsObject.tags;\n\n  if (Array.isArray(paramsObject.sort)) {\n    if (\n      !sortingValues?.includes(paramsObject.sort[0]) ||\n      !sortingValues?.includes(`-${paramsObject.sort[0]}`)\n    ) {\n      paramsObject.sort = '-total_risk';\n    }\n  } else if (!sortingValues?.includes(paramsObject.sort)) {\n    paramsObject.sort = '-total_risk';\n  }\n  paramsObject.text === undefined\n    ? setSearchText('')\n    : setSearchText(paramsObject.text);\n  paramsObject.has_playbook !== undefined &&\n    !Array.isArray(paramsObject.has_playbook) &&\n    (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n  paramsObject.incident !== undefined &&\n    !Array.isArray(paramsObject.incident) &&\n    (paramsObject.incident = [`${paramsObject.incident}`]);\n  paramsObject.offset === undefined\n    ? (paramsObject.offset = 0)\n    : (paramsObject.offset = Number(paramsObject.offset[0]));\n  paramsObject.limit === undefined\n    ? (paramsObject.limit = 20)\n    : (paramsObject.limit = Number(paramsObject.limit[0]));\n  paramsObject.reboot !== undefined &&\n    !Array.isArray(paramsObject.reboot) &&\n    (paramsObject.reboot = [`${paramsObject.reboot}`]);\n  paramsObject.impacting !== undefined &&\n    !Array.isArray(paramsObject.impacting) &&\n    (paramsObject.impacting = [`${paramsObject.impacting}`]);\n  setFilters({ ...filters, ...paramsObject });\n};\n\nexport const hideReports = async (\n  rowId,\n  rows,\n  setSelectedRule,\n  setDisableRuleOpen,\n  refetch,\n  dispatch,\n  intl\n) => {\n  const rule = rows[rowId].rule;\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n\n  try {\n    if (rule.rule_status === 'enabled') {\n      setSelectedRule(rule);\n      setDisableRuleOpen(true);\n    } else {\n      try {\n        await DeleteApi(`${AppConstants.BASE_URL}/ack/${rule.rule_id}/`);\n        addNotification({\n          variant: 'success',\n          timeout: true,\n          dismissable: true,\n          title: intl.formatMessage(messages.recSuccessfullyEnabled),\n        });\n        refetch();\n      } catch (error) {\n        addNotification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${error}`,\n        });\n      }\n    }\n  } catch (error) {\n    addNotification({\n      variant: 'danger',\n      dismissable: true,\n      title:\n        rule.rule_status === 'enabled'\n          ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n          : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n      description: `${error}`,\n    });\n  }\n};\nexport const removeFilterParam = (\n  param,\n  filters,\n  setFilters,\n  setSearchText\n) => {\n  const filter = { ...filters, offset: 0 };\n  param === 'text' && setSearchText('');\n  delete filter[param];\n  setFilters(filter);\n};\n\nexport const filterConfigItems = (\n  filters,\n  setFilters,\n  searchText,\n  setSearchText,\n  toggleRulesDisabled,\n  intl\n) => {\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  return [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (_event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n};\n\nexport const buildRows = (\n  rules,\n  isAllExpanded,\n  setViewSystemsModalRule,\n  setViewSystemsModalOpen,\n  intl\n) => {\n  const rows = rules.data.flatMap((value, key) => [\n    {\n      isOpen: isAllExpanded,\n      rule: value,\n      cells: [\n        {\n          title: (\n            <span key={key}>\n              <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                {' '}\n                {value.description}{' '}\n              </Link>\n              <RuleLabels rule={value} isCompact />\n            </span>\n          ),\n        },\n        {\n          title: (\n            <DateFormat\n              key={key}\n              date={value.publish_date}\n              variant=\"relative\"\n            />\n          ),\n        },\n        {\n          title: (\n            <CategoryLabel key={key} labelList={[value.category]} isCompact />\n          ),\n        },\n        {\n          title: (\n            <div key={key}>\n              <Tooltip\n                key={key}\n                position={TooltipPosition.bottom}\n                content={intl.formatMessage(\n                  messages.rulesDetailsTotalRiskBody,\n                  {\n                    risk:\n                      AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] ||\n                      intl.formatMessage(messages.undefined),\n                    strong: (str) => strong(str),\n                  }\n                )}\n              >\n                <InsightsLabel value={value.total_risk} isCompact />\n              </Tooltip>\n            </div>\n          ),\n        },\n        {\n          title:\n            value.rule_status === 'rhdisabled' ? (\n              <Tooltip\n                content={intl.formatMessage(messages.byEnabling, {\n                  systems: value.impacted_systems_count,\n                })}\n              >\n                <span>{intl.formatMessage(messages.nA)}</span>\n              </Tooltip>\n            ) : (\n              <div\n                key={key}\n              >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n            ),\n        },\n        {\n          title: (\n            <div className=\"ins-c-center-text \" key={key}>\n              {value.playbook_count ? (\n                <span>\n                  <AnsibeTowerIcon size=\"sm\" />{' '}\n                  {intl.formatMessage(messages.playbook)}\n                </span>\n              ) : (\n                intl.formatMessage(messages.manual)\n              )}\n            </div>\n          ),\n        },\n      ],\n    },\n    {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [\n        {\n          title: (\n            <section className=\"pf-c-page__main-section pf-m-light\">\n              <Stack hasGutter>\n                {value.hosts_acked_count ? (\n                  <StackItem>\n                    <BellSlashIcon size=\"sm\" />\n                    &nbsp;\n                    {value.hosts_acked_count && !value.impacted_systems_count\n                      ? intl.formatMessage(messages.ruleIsDisabledForAllSystems)\n                      : intl.formatMessage(\n                          messages.ruleIsDisabledForSystemsBody,\n                          { systems: value.hosts_acked_count }\n                        )}\n                    &nbsp;{' '}\n                    <Button\n                      isInline\n                      variant=\"link\"\n                      ouiaId=\"viewSystem\"\n                      onClick={() => {\n                        setViewSystemsModalRule(value);\n                        setViewSystemsModalOpen(true);\n                      }}\n                    >\n                      {intl.formatMessage(messages.viewSystems)}\n                    </Button>\n                  </StackItem>\n                ) : (\n                  <React.Fragment></React.Fragment>\n                )}\n                <RuleDetails\n                  messages={formatMessages(\n                    intl,\n                    RuleDetailsMessagesKeys,\n                    mapContentToValues(intl, value)\n                  )}\n                  product={AdvisorProduct.rhel}\n                  rule={value}\n                  resolutionRisk={ruleResolutionRisk(value)}\n                  resolutionRiskDesc={\n                    AppConstants.RISK_OF_CHANGE_DESC[ruleResolutionRisk(value)]\n                  }\n                  isDetailsPage={false}\n                  showViewAffected\n                  ViewAffectedLink={\n                    <Link to={`/recommendations/${value.rule_id}`}>\n                      {value.impacted_systems_count === 0\n                        ? ''\n                        : intl.formatMessage(messages.viewAffectedSystems, {\n                            systemsCount: value.impacted_systems_count,\n                          })}\n                    </Link>\n                  }\n                  knowledgebaseUrl={\n                    value.node_id\n                      ? `https://access.redhat.com/node/${value.node_id}`\n                      : ''\n                  }\n                />\n              </Stack>\n            </section>\n          ),\n        },\n      ],\n    },\n  ]);\n\n  return rows;\n};\n","import './_RulesTable.scss';\nimport * as AppConstants from '../../AppConstants';\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/esm/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\n\nimport {\n  filterFetchBuilder,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport DisableRule from '../Modals/DisableRule';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\n\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useGetRecsQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport PropTypes from 'prop-types';\n\nimport {\n  buildRows,\n  emptyRows,\n  filterConfigItems,\n  hideReports,\n  removeFilterParam,\n  urlFilterBuilder,\n} from './helpers';\n\nconst RulesTable = ({ isTabActive }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.modified),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.remediation),\n      transforms: [sortable, fitContent],\n    },\n  ]);\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.recState);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const setFilters = (filters) => dispatch(updateRecFilters(filters));\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: rules = [],\n    isFetching,\n    isLoading,\n    isError,\n    refetch,\n  } = useGetRecsQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'impacted_count',\n    6: 'playbook_count',\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (_event, rowId) =>\n              hideReports(\n                rowId,\n                rows,\n                setSelectedRule,\n                setDisableRuleOpen,\n                refetch,\n                dispatch,\n                intl\n              ),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (_event, rowId) =>\n              hideReports(\n                rowId,\n                rows,\n                setSelectedRule,\n                setDisableRuleOpen,\n                refetch,\n                dispatch,\n                intl\n              ),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (isTabActive && search && filterBuilding) {\n      urlFilterBuilder(sortIndices, setSearchText, setFilters, filters);\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sortIndex = Object.entries(sortIndices)?.find(\n      (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n    );\n    if (filters.sort !== undefined && sortIndex) {\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: Number(sortIndex[0]), direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows(emptyRows(filters, toggleRulesDisabled));\n      } else {\n        const rows = buildRows(\n          rules,\n          isAllExpanded,\n          setViewSystemsModalRule,\n          setViewSystemsModalOpen,\n          intl\n        );\n        setRows(rows);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rules]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    showDeleteButton: true,\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n          pathway: filters.pathway,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(\n                item.urlParam,\n                filters,\n                setFilters,\n                setSearchText\n              );\n        });\n      }\n    },\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={refetch}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={refetch}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID,\n              dispatch\n            ),\n          isDisabled: !permsExport,\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{\n          items: filterConfigItems(\n            filters,\n            setFilters,\n            searchText,\n            setSearchText,\n            toggleRulesDisabled,\n            intl\n          ),\n        }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Table>\n          <ErrorState />\n        </Table>\n      ) : (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n          expandId=\"expand-button\"\n        >\n          <TableHeader />\n          <TableBody className=\"pf-m-width-100\" />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nRulesTable.propTypes = {\n  isTabActive: PropTypes.bool,\n};\n\nexport default RulesTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["AnsibeTowerIconConfig","name","height","width","svgPath","yOffset","xOffset","AnsibeTowerIcon","ViewHostAcks","handleModalToggle","isModalOpen","rule","afterFn","intl","useIntl","dispatch","useDispatch","columns","formatMessage","messages","useState","rows","setRows","unclean","setUnclean","useGetHostAcksQuery","rule_id","limit","hosts_acked_count","data","hostAcks","isFetching","isLoading","refetch","deleteAck","host","DeleteApi","BASE_URL","id","variant","dismissable","title","description","notification","useEffect","map","item","cells","display_name","system_uuid","justification","date","Date","updated_at","type","key","isInline","onClick","size","length","isOpen","onClose","props","colSpan","propTypes","PropTypes","defaultProps","EmptyState","filters","toggleRulesDisabled","message","messageMapping","rule_status","MessageState","icon","CheckCircleIcon","iconClass","text","body","Button","style","paddingTop","enabled","Text","disabled","rhdisabled","default","hideReports","rowId","setSelectedRule","setDisableRuleOpen","addNotification","addNotificationAction","AppConstants","timeout","removeFilterParam","param","setFilters","setSearchText","filter","offset","filterConfigItems","searchText","addFilterParam","values","label","toLowerCase","filterValues","onChange","_event","value","placeholder","FC","total_risk","items","res_risk","impact","likelihood","category","incident","has_playbook","reboot","e","impacting","RulesTable","isTabActive","search","useLocation","permsExport","usePermissions","hasAccess","permsDisableRec","transforms","sortable","cellWidth","fitContent","cols","selectedTags","useSelector","workloads","SID","recState","sortBy","setSortBy","filterBuilding","setFilterBuilding","disableRuleOpen","selectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","updateRecFilters","options","tags","join","workloadQueryBuilder","useGetRecsQuery","filterFetchBuilder","rules","isError","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","urlBuilder","onSetPage","pageNumber","newOffset","sortingValues","Object","paramsObject","paramParser","Array","isArray","sort","includes","undefined","Number","urlFilterBuilder","sortIndex","entries","find","sortDirection","index","direction","emptyRows","flatMap","to","RuleLabels","isCompact","DateFormat","publish_date","CategoryLabel","labelList","Tooltip","position","TooltipPosition","content","risk","strong","str","InsightsLabel","systems","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Stack","hasGutter","StackItem","ouiaId","formatMessages","RuleDetailsMessagesKeys","mapContentToValues","product","AdvisorProduct","resolutionRisk","ruleResolutionRisk","resolutionRiskDesc","isDetailsPage","showViewAffected","ViewAffectedLink","systemsCount","knowledgebaseUrl","node_id","buildRows","localFilters","activeFiltersConfig","deleteTitle","topic","pruneFilters","showDeleteButton","onDelete","itemsToRemove","isAll","pathway","newFilter","urlParam","String","chips","toggleModal","DisableRule","PrimaryToolbar","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","fileType","downloadReport","filterConfig","Loading","Table","ErrorState","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","orderParam","areActionsDisabled","isStickyHeader","expandId","Pagination","widgetId","PaginationVariant","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}