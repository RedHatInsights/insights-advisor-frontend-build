{"version":3,"sources":["webpack:///./src/PresentationalComponents/Charts/SummaryChart/SummaryChartItem.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","SummaryChartItem","props","numIssues","name","riskName","returnLink","children","a","createElement","to","concat","widget-type","widget-id","style","alignItems","className","label","severity","toLowerCase","labelHidden","affectedSystems","propTypes","PropTypes","number","isRequired","string"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAMMa,EAAmB,SAACC,GAAU,IACxBC,EAA8BD,EAA9BC,UAAWC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,SACnBC,EAAa,SAACC,GAAD,OAAcf,EAAAgB,EAAAC,cAACb,EAAA,EAAD,CAAMc,GAAE,aAAAC,OAAgBN,IAAxB,IAAwCE,EAAxC,MAEjC,OACIf,EAAAgB,EAAAC,cAACX,EAAA,EAAD,CAAWc,cAAY,2BAA2BC,YAAYT,GAC1DZ,EAAAgB,EAAAC,cAACV,EAAA,EAAD,CAAOe,MAAQ,CAAEC,WAAY,aACzBvB,EAAAgB,EAAAC,cAACT,EAAA,EAAD,CAAWgB,UAAU,cACfV,EAAWd,EAAAgB,EAAAC,cAACZ,EAAA,QAAD,CAASoB,MAAQZ,EAAWa,SAAWd,EAAKe,cAAgBC,aAAc,MAE3F5B,EAAAgB,EAAAC,cAACT,EAAA,EAAD,CAAWgB,UAAU,oCACfV,EAAU,GAAAK,OAAIR,EAAJ,KAAAQ,OAAiBP,EAAjB,eAAAO,OAAmCT,EAAMmB,gBAAzC,iBAOhCpB,EAAiBqB,UAAY,CACzBD,gBAAiBE,IAAUC,OAAOC,WAClCrB,KAAMmB,IAAUG,OAAOD,WACvBtB,UAAWoB,IAAUC,OAAOC,WAC5BpB,SAAUkB,IAAUG,OAAOD,YAGhBxB","file":"js/13.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Battery } from '@redhat-cloud-services/frontend-components';\nimport { Split, SplitItem, StackItem } from '@patternfly/react-core';\n\nconst SummaryChartItem = (props) => {\n    const { numIssues, name, riskName } = props;\n    const returnLink = (children) => <Link to={ `/overview/${riskName}` }> { children } </Link>;\n\n    return (\n        <StackItem widget-type='InsightsSummaryChartItem' widget-id={ name }>\n            <Split style={ { alignItems: 'flex-end' } }>\n                <SplitItem className='pf-u-pr-md'>\n                    { returnLink(<Battery label={ riskName } severity={ name.toLowerCase() } labelHidden={ true }/>) }\n                </SplitItem>\n                <SplitItem className='pf-u-text-align-right pf-u-pl-sm' >\n                    { returnLink(`${numIssues} ${name} affecting ${props.affectedSystems} systems`) }\n                </SplitItem>\n            </Split>\n        </StackItem>\n    );\n};\n\nSummaryChartItem.propTypes = {\n    affectedSystems: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    numIssues: PropTypes.number.isRequired,\n    riskName: PropTypes.string.isRequired\n};\n\nexport default SummaryChartItem;\n"],"sourceRoot":""}