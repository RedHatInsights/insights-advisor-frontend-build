{"version":3,"sources":["webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss?44ce","webpack:///./src/SmartComponents/Overview/List.js"],"names":["module","exports","__webpack_require__","push","i","Breadcrumbs","items","ruleDescriptionLoaded","type","indexOf","concat","replace","undefined","this","props","match","params","inventoryId","fetchRule","rule_id","id","buildBreadcrumbs","ruleFetchStatus","state","setState","_this$props","breadcrumbs","crumbs","title","url","split","navigate","getReadableType","rule","description","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","Fragment","length","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","map","oneLink","key","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","isActive","current","React","Component","propTypes","PropTypes","arrayOf","Object","string","func","object","routerParams","connect","ownProps","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","AdvisorStore","dispatch","AppActions","content","options","hmr","transform","insertInto","update","locals","hot","accept","newContent","b","idx","Error","dispose","OverviewList","urlFilters","impacting","parsedTitle","arguments","capitalize","includes","totalRisk","SEVERITY_MAP","total_risk","category","RULE_CATEGORIES","_this$state","react__WEBPACK_IMPORTED_MODULE_9___default","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_10__","_PresentationalComponents_Breadcrumbs_Breadcrumbs__WEBPACK_IMPORTED_MODULE_13__","parseUrlTitle","_PresentationalComponents_RulesTable_RulesTable__WEBPACK_IMPORTED_MODULE_15__","any"],"mappings":"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","file":"js/Lists.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"nav.pf-c-breadcrumb li {\\n  text-transform: capitalize; }\\n\", \"\"]);\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { connect } from 'react-redux';\nimport * as AppActions from '../../AppActions';\nimport PropTypes from 'prop-types';\nimport './_breadcrumbs.scss';\n\nclass Breadcrumbs extends React.Component {\n    state = {\n        items: [],\n        ruleDescriptionLoaded: false\n    };\n\n    componentDidMount () {\n        if (this.props.match.params.inventoryId !== undefined) {\n            this.props.fetchRule({ rule_id: this.props.match.params.id }); // eslint-disable-line camelcase\n        } else {\n            this.buildBreadcrumbs();\n        }\n    }\n\n    componentDidUpdate () {\n        if (this.props.ruleFetchStatus === 'fulfilled' && !this.state.ruleDescriptionLoaded) {\n            this.setState({ ruleDescriptionLoaded: true });\n            this.buildBreadcrumbs();\n        }\n    }\n\n    getReadableType = (type) => (\n        type.indexOf('-') > -1 ? `${type.replace('-', ' ')} Overview` : type\n    );\n\n    buildBreadcrumbs () {\n        const { breadcrumbs, match } = this.props;\n        let crumbs = [];\n\n        // add overview/rules base breadcrumb\n        if (match.params.type !== undefined) {\n            if (breadcrumbs[0] !== undefined) {\n                crumbs.push(breadcrumbs[0]);\n            } else {\n                const title = match.url.split('/')[1];\n                crumbs.push({ title, navigate: `/${title}` });\n            }\n        }\n\n        // add :type breadcrumb (exception: Rules based breadcrumbs)\n        if (match.params.type !== undefined && match.params.id !== undefined && crumbs[0].title !== 'Rules') {\n            const title = this.getReadableType(match.params.type);\n            crumbs.push({\n                title,\n                navigate: `${crumbs[0].navigate}/${match.params.type}`\n            });\n        }\n\n        // add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            const title = this.props.rule.description;\n            if (crumbs[1] !== undefined) {\n                crumbs.push({\n                    title,\n                    navigate: `${crumbs[1].navigate}/${match.params.id}`\n                });\n            } else {\n                // build breadcrumb from beginning if Rule-based\n                crumbs.push({\n                    title,\n                    navigate: `/${match.url.split('/')[1]}/${match.params.type}/${match.params.id}`\n                });\n            }\n        }\n\n        this.setState({ items: crumbs });\n    }\n\n    render () {\n        const { ruleFetchStatus } = this.props;\n        const { items } = this.state;\n        return (\n            <React.Fragment>\n                { (ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                    <Breadcrumb>\n                        { items.map((oneLink, key) => (\n                            <BreadcrumbItem key={ key }>\n                                <Link to={ oneLink.navigate }>{ oneLink.title }</Link>\n                            </BreadcrumbItem>\n                        )) }\n                        <BreadcrumbItem isActive>{ this.props.current }</BreadcrumbItem>\n                    </Breadcrumb>\n                ) }\n                { ruleFetchStatus === 'pending' && ('Loading...') }\n            </React.Fragment>\n        );\n    }\n}\n\nBreadcrumbs.propTypes = {\n    breadcrumbs: PropTypes.arrayOf(Object),\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...state,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./_breadcrumbs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./_breadcrumbs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./_breadcrumbs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint camelcase: 0 */\nimport React, { Component } from 'react';\nimport { PageHeader, PageHeaderTitle } from '@red-hat-insights/insights-frontend-components';\nimport PropTypes from 'prop-types';\nimport { capitalize } from '@patternfly/react-core';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { RULE_CATEGORIES, SEVERITY_MAP } from '../../AppConstants';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\n\nclass OverviewList extends Component {\n    state = {\n        urlFilters: {},\n        impacting: true\n    };\n\n    async componentDidMount () {\n        if (this.props.match.params.type.includes('-risk')) {\n            const totalRisk = SEVERITY_MAP[this.props.match.params.type];\n            this.setState({ urlFilters: { total_risk: totalRisk }});\n        } else {\n            this.setState({ urlFilters: { category: RULE_CATEGORIES[this.props.match.params.type] }});\n        }\n    }\n\n    parseUrlTitle = (title = '') => {\n        const parsedTitle = title.split('-');\n        return parsedTitle.length > 1 ? `${capitalize(parsedTitle[0])} ${capitalize(parsedTitle[1])} Actions` : `${capitalize(parsedTitle[0])}`;\n    };\n\n    render () {\n        const { urlFilters, impacting } = this.state;\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <Breadcrumbs\n                        current={ this.parseUrlTitle(this.props.match.params.type) }\n                        match={ this.props.match }\n                    />\n                    <PageHeaderTitle\n                        title={ this.parseUrlTitle(this.props.match.params.type) }\n                    />\n                </PageHeader>\n                <RulesTable impacting={ impacting } urlFilters={ urlFilters }/>\n            </React.Fragment>\n        );\n    }\n}\n\nOverviewList.propTypes = {\n    match: PropTypes.any\n};\n\nexport default OverviewList;\n"],"sourceRoot":""}