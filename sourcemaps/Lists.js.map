{"version":3,"sources":["webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss","webpack:///./src/SmartComponents/Overview/List.js"],"names":["Breadcrumbs","items","ruleDescriptionLoaded","type","indexOf","replace","props","match","params","inventoryId","undefined","fetchRule","rule_id","id","buildBreadcrumbs","ruleFetchStatus","state","setState","breadcrumbs","crumbs","push","title","url","split","navigate","getReadableType","rule","description","length","map","oneLink","key","current","React","Component","propTypes","PropTypes","arrayOf","Object","string","func","object","mapStateToProps","ownProps","AdvisorStore","mapDispatchToProps","dispatch","AppActions","routerParams","connect","OverviewList","urlFilters","impacting","parsedTitle","capitalize","includes","totalRisk","SEVERITY_MAP","total_risk","category","RULE_CATEGORIES","parseUrlTitle","any"],"mappings":"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","file":"js/Lists.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { connect } from 'react-redux';\nimport * as AppActions from '../../AppActions';\nimport PropTypes from 'prop-types';\nimport './_breadcrumbs.scss';\n\nclass Breadcrumbs extends React.Component {\n    state = {\n        items: [],\n        ruleDescriptionLoaded: false\n    };\n\n    componentDidMount () {\n        if (this.props.match.params.inventoryId !== undefined) {\n            this.props.fetchRule({ rule_id: this.props.match.params.id }); // eslint-disable-line camelcase\n        } else {\n            this.buildBreadcrumbs();\n        }\n    }\n\n    componentDidUpdate () {\n        if (this.props.ruleFetchStatus === 'fulfilled' && !this.state.ruleDescriptionLoaded) {\n            this.setState({ ruleDescriptionLoaded: true });\n            this.buildBreadcrumbs();\n        }\n    }\n\n    getReadableType = (type) => (\n        type.indexOf('-') > -1 ? `${type.replace('-', ' ')} Overview` : type\n    );\n\n    buildBreadcrumbs () {\n        const { breadcrumbs, match } = this.props;\n        let crumbs = [];\n\n        // add overview/rules base breadcrumb\n        if (match.params.type !== undefined) {\n            if (breadcrumbs[0] !== undefined) {\n                crumbs.push(breadcrumbs[0]);\n            } else {\n                const title = match.url.split('/')[1];\n                crumbs.push({ title, navigate: `/${title}` });\n            }\n        }\n\n        // add :type breadcrumb (exception: Rules based breadcrumbs)\n        if (match.params.type !== undefined && match.params.id !== undefined && crumbs[0].title !== 'Rules') {\n            const title = this.getReadableType(match.params.type);\n            crumbs.push({\n                title,\n                navigate: `${crumbs[0].navigate}/${match.params.type}`\n            });\n        }\n\n        // add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            const title = this.props.rule.description;\n            if (crumbs[1] !== undefined) {\n                crumbs.push({\n                    title,\n                    navigate: `${crumbs[1].navigate}/${match.params.id}`\n                });\n            } else {\n                // build breadcrumb from beginning if Rule-based\n                crumbs.push({\n                    title,\n                    navigate: `/${match.url.split('/')[1]}/${match.params.type}/${match.params.id}`\n                });\n            }\n        }\n\n        this.setState({ items: crumbs });\n    }\n\n    render () {\n        const { ruleFetchStatus } = this.props;\n        const { items } = this.state;\n        return (\n            <React.Fragment>\n                { (ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                    <Breadcrumb>\n                        { items.map((oneLink, key) => (\n                            <BreadcrumbItem key={ key }>\n                                <Link to={ oneLink.navigate }>{ oneLink.title }</Link>\n                            </BreadcrumbItem>\n                        )) }\n                        <BreadcrumbItem isActive>{ this.props.current }</BreadcrumbItem>\n                    </Breadcrumb>\n                ) }\n                { ruleFetchStatus === 'pending' && ('Loading...') }\n            </React.Fragment>\n        );\n    }\n}\n\nBreadcrumbs.propTypes = {\n    breadcrumbs: PropTypes.arrayOf(Object),\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...state,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs));\n","// extracted by mini-css-extract-plugin","/* eslint camelcase: 0 */\nimport React, { Component } from 'react';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport PropTypes from 'prop-types';\nimport { capitalize } from '@patternfly/react-core';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { RULE_CATEGORIES, SEVERITY_MAP } from '../../AppConstants';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\n\nclass OverviewList extends Component {\n    state = {\n        urlFilters: {},\n        impacting: true\n    };\n\n    async componentDidMount () {\n        if (this.props.match.params.type.includes('-risk')) {\n            const totalRisk = SEVERITY_MAP[this.props.match.params.type];\n            this.setState({ urlFilters: { total_risk: `${totalRisk}` }});\n        } else {\n            this.setState({ urlFilters: { category: `${RULE_CATEGORIES[this.props.match.params.type]}` }});\n        }\n    }\n\n    parseUrlTitle = (title = '') => {\n        const parsedTitle = title.split('-');\n        return parsedTitle.length > 1 ? `${capitalize(parsedTitle[0])} ${capitalize(parsedTitle[1])} Actions` : `${capitalize(parsedTitle[0])}`;\n    };\n\n    render () {\n        const { urlFilters, impacting } = this.state;\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <Breadcrumbs\n                        current={ this.parseUrlTitle(this.props.match.params.type) }\n                        match={ this.props.match }\n                    />\n                    <PageHeaderTitle\n                        title={ this.parseUrlTitle(this.props.match.params.type) }\n                    />\n                </PageHeader>\n                <RulesTable impacting={ impacting } externalFilters={ urlFilters }/>\n            </React.Fragment>\n        );\n    }\n}\n\nOverviewList.propTypes = {\n    match: PropTypes.any\n};\n\nexport default OverviewList;\n"],"sourceRoot":""}