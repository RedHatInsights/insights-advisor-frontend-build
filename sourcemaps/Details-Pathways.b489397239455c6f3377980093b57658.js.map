{"version":3,"file":"js/Details-Pathways.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Common/Common.js","webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js","webpack:///./src/PresentationalComponents/Cards/TotalRiskCard.js","webpack:///./src/PresentationalComponents/Cards/ResolutionCard.js","webpack:///./src/SmartComponents/Recs/DetailsPathways.js"],"sourcesContent":["import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/esm/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_secondary_color_100 } from '@patternfly/react-tokens/dist/js/global_secondary_color_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-c-icon-reboot-required'\n          : 'adv-c-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-text-system-reboot-message pf-u-font-size-sm\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_secondary_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n","import { Label } from '@patternfly/react-core/dist/esm/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const RecommendationLevel = ({ recLvl, isCompact }) => {\n  const intl = useIntl();\n  const label = (text, recLvl, color) => (\n    <Label color={color} isCompact>{`${text} - ${recLvl}%`}</Label>\n  );\n\n  if (recLvl >= 80) {\n    return label(intl.formatMessage(messages.high), recLvl, 'red', isCompact);\n  } else if (recLvl < 80 && recLvl >= 50) {\n    return label(\n      intl.formatMessage(messages.medium),\n      recLvl,\n      'orange',\n      isCompact\n    );\n  } else {\n    return label(intl.formatMessage(messages.low), recLvl, 'blue', isCompact);\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\nRecommendationLevel.defaultProps = {\n  isCompact: true,\n};\n\nexport default RecommendationLevel;\n","/* eslint-disable react/prop-types */\nimport './Pathways.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport {\n  Chart,\n  ChartAxis,\n  ChartBar,\n  ChartGroup,\n  ChartVoronoiContainer,\n} from '@patternfly/react-charts';\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\n\nimport React from 'react';\nimport chart_color_black_100 from '@patternfly/react-tokens/dist/esm/chart_color_black_100';\nimport chart_color_gold_400 from '@patternfly/react-tokens/dist/esm/chart_color_gold_400';\nimport chart_color_orange_300 from '@patternfly/react-tokens/dist/esm/chart_color_orange_300';\nimport chart_color_red_100 from '@patternfly/react-tokens/dist/esm/chart_color_red_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\n\nexport const TotalRiskCard = (props) => {\n  const intl = useIntl();\n  const {\n    impacted_systems_count,\n    incident_count,\n    categories,\n    critical_risk_count,\n    high_risk_count,\n    medium_risk_count,\n    low_risk_count,\n  } = props;\n\n  const catString = (cats) =>\n    cats.length > 1\n      ? categories.map((cat) => cat.name).join(', ')\n      : cats[0]?.name;\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100 pf-u-h-100\"\n    >\n      <CardTitle>{intl.formatMessage(messages.totalRiskPathway)}</CardTitle>\n      <CardBody className=\"body\">\n        <Grid hasGutter>\n          <GridItem span={6}>\n            <div>\n              <Chart\n                ariaDesc=\"Total risk of recommendations\"\n                ariaTitle=\"Total risk of recommendations\"\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={({ datum }) => `${datum.name}: ${datum.y}`}\n                    constrainToVisibleArea\n                  />\n                }\n                domainPadding={{\n                  x: [20, 15],\n                }}\n                height={150}\n                width={300}\n                padding={{\n                  bottom: 30,\n                  left: 45,\n                  right: 10,\n                  top: 10,\n                }}\n              >\n                <ChartAxis />\n                <ChartAxis dependentAxis showGrid />\n                <ChartGroup>\n                  <ChartBar\n                    barWidth={16}\n                    style={{\n                      data: {\n                        fill: ({ datum }) => datum.fill,\n                      },\n                    }}\n                    data={[\n                      {\n                        name: 'Critical',\n                        x: 'Critical',\n                        y: critical_risk_count,\n                        fill: chart_color_red_100.value,\n                      },\n                      {\n                        name: 'Important',\n                        x: 'Important',\n                        y: high_risk_count,\n                        fill: chart_color_orange_300.value,\n                      },\n                      {\n                        name: 'Moderate',\n                        x: 'Moderate',\n                        y: medium_risk_count,\n                        fill: chart_color_gold_400.value,\n                      },\n                      {\n                        name: 'Low',\n                        x: 'Low',\n                        y: low_risk_count,\n                        fill: chart_color_black_100.value,\n                      },\n                    ]}\n                  />\n                </ChartGroup>\n              </Chart>\n            </div>\n          </GridItem>\n          <GridItem span={6} className=\"pf-u-font-size-sm\">\n            {intl.formatMessage(messages.thisPathway, {\n              category: catString(categories),\n              systems: impacted_systems_count,\n              incidents: incident_count,\n              strong: (str) => strong(str),\n            })}\n          </GridItem>\n        </Grid>\n      </CardBody>\n    </Card>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport './Pathways.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport { RISK_OF_CHANGE_LABEL } from '../../AppConstants';\nimport React from 'react';\nimport { RebootRequired } from '../Common/Common';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const ResolutionCard = ({\n  name,\n  reboot_required,\n  resolution_risk,\n  recommendation_level,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100 pf-u-h-100 flex-row\"\n    >\n      <div className=\"flex-coloumn\">\n        <CardTitle>{intl.formatMessage(messages.resolution)}</CardTitle>\n\n        <div className=\"flex-row \">\n          <div className=\"halfWidth\">\n            <p className=\"pf-u-font-weight-bold pf-u-font-size-sm pf-u-pl-lg\">\n              {intl.formatMessage(messages.remediation)}\n            </p>\n            <p className=\"pf-u-font-size-sm pf-u-pl-lg\">{name}</p>\n          </div>\n\n          <CardBody className=\" pf-u-pl-xl halfWidth\">\n            <p className=\"pf-u-font-weight-bold pf-u-font-size-sm\">\n              {intl.formatMessage(messages.riskOfChange)}\n            </p>\n            <InsightsLabel\n              text={RISK_OF_CHANGE_LABEL[resolution_risk.risk]}\n              value={resolution_risk.risk}\n              hideIcon\n              isCompact\n            />\n          </CardBody>\n        </div>\n\n        <CardBody className=\"body pf-u-font-size-sm\">\n          {intl.formatMessage(messages.staticRemediationDesc)}\n        </CardBody>\n        <CardBody className=\"body\">{RebootRequired(reboot_required)}</CardBody>\n      </div>\n\n      <div className=\"pathwayRight pf-u-p-lg \">\n        <p className=\"pf-u-font-weight-bold pf-u-font-size-sm\">\n          {intl.formatMessage(messages.reclvl)}\n        </p>\n        <div>\n          <RecommendationLevel recLvl={recommendation_level} />\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import './Details.scss';\n\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { TotalRiskCard } from '../../PresentationalComponents/Cards/TotalRiskCard';\nimport { ResolutionCard } from '../../PresentationalComponents/Cards/ResolutionCard';\nimport {\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core/dist/esm/components/Tabs/index';\nimport { updateRecFilters, updateSysFilters } from '../../Services/Filters';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport CategoryLabel from '../../PresentationalComponents/Labels/CategoryLabel';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Inventory from '../../PresentationalComponents/Inventory/Inventory';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport RuleLabels from '../../PresentationalComponents/Labels/RuleLabels';\nimport messages from '../../Messages';\nimport { useGetPathwayQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { workloadQueryBuilder } from '../../PresentationalComponents/Common/Tables';\nimport { useLocation } from 'react-router-dom';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst RulesTable = lazy(() =>\n  import(\n    /* webpackChunkName: 'RulesTable' */ '../../PresentationalComponents/RulesTable/RulesTable'\n  )\n);\n\nconst PathwayDetails = () => {\n  const intl = useIntl();\n  const pathwayName = useParams().id;\n  const dispatch = useDispatch();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const recFilters = useSelector(({ filters }) => filters.recState);\n  const sysFilters = useSelector(({ filters }) => filters.sysState);\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const { data: pathway = {}, isFetching } = useGetPathwayQuery({\n    ...options,\n    slug: pathwayName,\n  });\n  const { pathname } = useLocation();\n\n  const [activeTab, setActiveTab] = useState(\n    pathname.includes('/recommendations/pathways/systems/') ? 1 : 0\n  );\n  const chrome = useChrome();\n  useEffect(() => {\n    pathway &&\n      !isFetching &&\n      chrome.updateDocumentTitle(\n        intl.formatMessage(messages.documentTitle, {\n          subnav: `${pathway.name} - ${messages.pathways.defaultMessage}`,\n        })\n      );\n  }, [chrome, intl, pathway, pathname, isFetching]);\n\n  const waitForElm = (selector) => {\n    return new Promise((resolve) => {\n      if (document.querySelector(selector)) {\n        return resolve(document.querySelector(selector));\n      }\n\n      const observer = new MutationObserver(() => {\n        if (document.querySelector(selector)) {\n          resolve(document.querySelector(selector));\n          observer.disconnect();\n        }\n      });\n    });\n  };\n\n  const scrollDown = () => {\n    if (pathname.includes('/recommendations/pathways/systems/')) {\n      setTimeout(() => {\n        waitForElm('#tablesContainer').then(() => {\n          document\n            .getElementById('tablesContainer')\n            .scrollIntoView({ behavior: 'smooth' });\n        });\n      }, 5000);\n    }\n  };\n\n  useEffect(() => {\n    const initiaRecFilters = { ...recFilters };\n    const initiaSysFilters = { ...sysFilters };\n    const defaultFilters = { pathway: pathwayName, limit: 20, offset: 0 };\n    dispatch(\n      updateRecFilters({\n        ...defaultFilters,\n        sort: 'category',\n        impacting: true,\n      })\n    );\n    dispatch(\n      updateSysFilters({\n        ...defaultFilters,\n      })\n    );\n    scrollDown();\n    return () => {\n      dispatch(updateRecFilters(initiaRecFilters));\n      dispatch(updateSysFilters(initiaSysFilters));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <React.Fragment>\n      {isFetching ? (\n        <Loading />\n      ) : (\n        <React.Fragment>\n          <PageHeader className=\"adv-c-page__header\">\n            <Breadcrumbs ouiaId=\"override\" current={pathway.name || ''} />\n            <PageHeaderTitle\n              title={\n                <React.Fragment>\n                  {pathway.name}\n                  {pathway.has_incident && (\n                    <RuleLabels rule={{ tags: 'incident' }} />\n                  )}\n                </React.Fragment>\n              }\n            />\n            <p className=\"pf-u-mb-lg\">\n              {intl.formatMessage(messages.rulesDetailsModifieddate, {\n                date: (\n                  <DateFormat\n                    date={new Date(pathway.publish_date)}\n                    type=\"onlyDate\"\n                  />\n                ),\n              })}\n              <span className=\"pf-u-pl-sm\">\n                <CategoryLabel labelList={pathway.categories} />\n              </span>\n            </p>\n            <p className=\"pf-u-mb-lg\">{pathway.description}</p>\n          </PageHeader>\n          <section className=\"pf-u-p-lg\">\n            <Grid hasGutter>\n              <GridItem sm={12} md={6}>\n                <TotalRiskCard {...pathway} />\n              </GridItem>\n              <GridItem sm={12} md={6}>\n                <ResolutionCard {...pathway} />\n              </GridItem>\n            </Grid>\n          </section>\n        </React.Fragment>\n      )}\n      {isFetching && <Loading />}\n      <section className=\"pf-u-px-lg pf-u-pb-lg\">\n        <Tabs\n          className=\"adv__background--global-100\"\n          activeKey={activeTab}\n          onSelect={(_e, tab) => setActiveTab(tab)}\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.recommendations)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <RulesTable />\n              </Suspense>\n            )}\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.systems)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <Inventory\n                  tableProps={{\n                    canSelectAll: false,\n                    isStickyHeader: true,\n                  }}\n                  pathway={pathway}\n                  selectedTags={selectedTags}\n                  workloads={workloads}\n                  SID={SID}\n                  showTags={true}\n                />\n              </Suspense>\n            )}\n          </Tab>\n        </Tabs>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default PathwayDetails;\n"],"names":["cache","createIntlCache","locale","navigator","language","slice","intl","createIntl","RebootRequired","reboot_required","React","className","PowerOffIcon","TextContent","Text","component","TextVariants","formatMessage","messages","strong","str","status","QuestionTooltip","text","Tooltip","key","position","TooltipPosition","content","OutlinedQuestionCircleIcon","color","global_secondary_color_100","RecommendationLevel","_ref","recLvl","isCompact","useIntl","label","Label","concat","propTypes","props","PropTypes","defaultProps","TotalRiskCard","cats","_cats$","impacted_systems_count","incident_count","categories","critical_risk_count","high_risk_count","medium_risk_count","low_risk_count","Card","isFlat","isPlain","CardTitle","CardBody","Grid","hasGutter","GridItem","span","Chart","ariaDesc","ariaTitle","containerComponent","ChartVoronoiContainer","labels","datum","name","y","constrainToVisibleArea","domainPadding","x","height","width","padding","bottom","left","right","top","ChartAxis","dependentAxis","showGrid","ChartGroup","ChartBar","barWidth","style","data","fill","_ref2","chart_color_red_100","chart_color_orange_300","chart_color_gold_400","chart_color_black_100","category","length","map","cat","join","systems","incidents","ResolutionCard","resolution_risk","recommendation_level","InsightsLabel","RISK_OF_CHANGE_LABEL","risk","value","hideIcon","RulesTable","lazy","pathwayName","useParams","id","dispatch","useDispatch","selectedTags","useSelector","filters","workloads","SID","_ref3","recFilters","_ref4","recState","sysFilters","_ref5","sysState","options","_objectSpread","tags","workloadQueryBuilder","_useGetPathwayQuery","useGetPathwayQuery","slug","_useGetPathwayQuery$d","pathway","isFetching","pathname","useLocation","_useState","useState","includes","_useState2","_slicedToArray","activeTab","setActiveTab","chrome","useChrome","useEffect","updateDocumentTitle","subnav","initiaRecFilters","initiaSysFilters","defaultFilters","limit","offset","updateRecFilters","sort","impacting","updateSysFilters","setTimeout","selector","Promise","resolve","document","querySelector","observer","MutationObserver","disconnect","then","getElementById","scrollIntoView","behavior","Loading","PageHeader","Breadcrumbs","ouiaId","current","PageHeaderTitle","title","has_incident","RuleLabels","rule","date","DateFormat","Date","publish_date","type","CategoryLabel","labelList","description","sm","md","Tabs","activeKey","onSelect","_e","tab","Tab","eventKey","TabTitleText","Suspense","fallback","Inventory","tableProps","canSelectAll","isStickyHeader","showTags"],"sourceRoot":""}