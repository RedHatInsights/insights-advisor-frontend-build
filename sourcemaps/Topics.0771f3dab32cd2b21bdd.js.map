{"version":3,"sources":["webpack:///./src/SmartComponents/Topics/Topics.js"],"names":["List","lazy","Details","Admin","reducer","state","type","payload","setLoaded","loaded","isInternal","ProtectedRoute","Component","component","props","useReducer","dispatch","useEffect","insights","chrome","auth","getUser","then","data","identity","user","is_internal","Route","render","Redirect","to","suspenseHelper","Suspense","fallback","propTypes","PropTypes","Switch","exact","path","push"],"mappings":"s0BAMA,IAAMA,GAAOC,WAAK,kBAAM,0FAClBC,GAAUD,WAAK,kBACnB,0IAEIE,GAAQF,WAAK,kBACjB,gFAKIG,EAAU,SAACC,EAAD,OAAUC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,QAAhB,MACb,CAAEC,UAAW,EAAF,KAAOH,GAAP,IAAcI,QAAQ,EAAMC,WAAYH,KAAYD,IAE5DK,EAAiB,SAAC,GAAuC,IAA1BC,EAA0B,EAArCC,UAAyBC,GAAY,wBAC7D,GAA0BC,gBAAWX,EAAS,CAC5CM,YAAY,EACZD,QAAQ,IAFV,eAAOJ,EAAP,KAAcW,EAAd,KAaA,OARAC,gBAAU,WACRC,SAASC,OAAOC,KACbC,UACAC,MAAK,SAACC,GAAD,OACJP,EAAS,CAAEV,KAAM,YAAaC,QAASgB,EAAKC,SAASC,KAAKC,mBAE7D,IAGD,kBAAC,EAAAC,OAAD,UACMb,EADN,CAEEc,OAAQ,SAACd,GAAD,OACNT,EAAMI,SACLJ,EAAMK,WACL,kBAACE,EAAcE,GAEf,kBAAC,EAAAe,SAAD,CAAUC,GAAG,kBAOjBC,EAAiB,SAAClB,GAAD,OACrB,kBAAC,EAAAmB,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAcpB,IAqBpCF,EAAeuB,UAAY,CAAErB,UAAWsB,SAExC,QApBe,kBACb,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAT,MAAD,CAAOU,OAAK,EAACC,KAAK,UAAUzB,UAAW,kBAAMkB,EAAe,kBAAC/B,EAAD,UAC5D,kBAAC,EAAA2B,MAAD,CACEU,OAAK,EACLC,KAAK,cACLzB,UAAW,kBAAMkB,EAAe,kBAAC7B,EAAD,UAElC,kBAACS,EAAD,CACE0B,OAAK,EACLC,KAAK,uBACLzB,UAAW,kBAAMkB,EAAe,kBAAC5B,EAAD,UAGlC,kBAAC,EAAA0B,SAAD,CAAUS,KAAK,IAAIR,GAAG,UAAUS,MAAI","file":"js/Topics.d5d0bd4c96594224df4b.js","sourcesContent":["import React, { Suspense, lazy, useEffect, useReducer } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport PropTypes from 'prop-types';\n\nconst List = lazy(() => import(/* webpackChunkName: \"TopicsList\" */ './List'));\nconst Details = lazy(() =>\n  import(/* webpackChunkName: \"TopicDetails\" */ './Details')\n);\nconst Admin = lazy(() =>\n  import(\n    /* webpackChunkName: \"TopicAdmin\" */ '../../PresentationalComponents/TopicsAdminTable/TopicsAdminTable'\n  )\n);\n\nconst reducer = (state, { type, payload }) =>\n  ({ setLoaded: { ...state, loaded: true, isInternal: payload } }[type]);\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    isInternal: false,\n    loaded: false,\n  });\n\n  useEffect(() => {\n    insights.chrome.auth\n      .getUser()\n      .then((data) =>\n        dispatch({ type: 'setLoaded', payload: data.identity.user.is_internal })\n      );\n  }, []);\n\n  return (\n    <Route\n      {...props}\n      render={(props) =>\n        state.loaded &&\n        (state.isInternal ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/topics\" />\n        ))\n      }\n    />\n  );\n};\n\nconst suspenseHelper = (component) => (\n  <Suspense fallback={<Loading />}>{component}</Suspense>\n);\n\nconst Topics = () => (\n  <Switch>\n    <Route exact path=\"/topics\" component={() => suspenseHelper(<List />)} />\n    <Route\n      exact\n      path=\"/topics/:id\"\n      component={() => suspenseHelper(<Details />)}\n    />\n    <ProtectedRoute\n      exact\n      path=\"/topics/admin/manage\"\n      component={() => suspenseHelper(<Admin />)}\n    />\n\n    <Redirect path=\"*\" to=\"/topics\" push />\n  </Switch>\n);\n\nProtectedRoute.propTypes = { component: PropTypes.any };\n\nexport default Topics;\n"],"sourceRoot":""}