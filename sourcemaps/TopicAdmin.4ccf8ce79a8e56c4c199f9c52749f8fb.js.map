{"version":3,"file":"js/TopicAdmin.0db480f6413d9ae21f35.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Modals/AddEditTopic.js","webpack:///./src/PresentationalComponents/TopicsAdminTable/TopicsAdminTable.js"],"sourcesContent":["import './_AddEditTopic.scss';\n\nimport { DeleteApi, Post, Put } from '../../Utilities/Api';\nimport React, { useState } from 'react';\nimport {\n  Split,\n  SplitItem,\n} from '@patternfly/react-core/dist/js/layouts/Split/index';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { Radio } from '@patternfly/react-core/dist/js/components/Radio/Radio';\nimport { TextArea } from '@patternfly/react-core/dist/js/components/TextArea/TextArea';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport messages from '../../Messages';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nconst AddEditTopic = ({ handleModalToggleCallback, isModalOpen, topic }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const addNotification = (data) => dispatch(notification(data));\n\n  const [name, setName] = useState(topic.name || '');\n  const [description, setDescription] = useState(topic.description || '');\n  const [tag, setTag] = useState(topic.tag || '');\n  const [enabled, setEnabled] = useState(topic.enabled || false);\n  const [featured, setFeatured] = useState(topic.featured || false);\n  const [slug, setSlug] = useState(topic.slug || undefined);\n\n  const editTopic = async ({ type }) => {\n    try {\n      const data = { name, slug, tag, description, enabled, featured };\n      if (type === 'DELETE') {\n        await DeleteApi(`${BASE_URL}/topic/${slug}`);\n      } else if (topic.slug) {\n        await Put(`${BASE_URL}/topic/${slug}/`, data);\n      } else {\n        await Post(`${BASE_URL}/topic/`, {}, data);\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: Object.entries(error.response.data).map(\n          ([key, value]) => `${key.toUpperCase()}:${value} `\n        ),\n      });\n    } finally {\n      handleModalToggleCallback(false);\n    }\n  };\n\n  const setNameAndSlug = (name) => {\n    if (topic.slug) {\n      setName(name);\n    } else {\n      setName(name);\n      setSlug(name.replace(/\\s/g, '').toLowerCase());\n    }\n  };\n\n  const footer = (\n    <Split className=\"split-override\" hasGutter>\n      <SplitItem>\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => editTopic({ type: 'POST/PUT' })}\n          ouiaId=\"confirm\"\n        >\n          {intl.formatMessage(messages.save)}\n        </Button>\n      </SplitItem>\n      <SplitItem>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => handleModalToggleCallback(false)}\n          ouiaId=\"cancel\"\n        >\n          {intl.formatMessage(messages.cancel)}\n        </Button>\n      </SplitItem>\n      <SplitItem isFilled />\n      <SplitItem>\n        <Button\n          key=\"delete\"\n          ouiaId=\"delete\"\n          variant=\"danger\"\n          isDisabled={topic.slug ? false : true}\n          onClick={() => editTopic({ type: 'DELETE' })}\n        >\n          {intl.formatMessage(messages.deleteTopic)}\n        </Button>\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <Modal\n      title={intl.formatMessage(messages.topicAdminTitle)}\n      isOpen={isModalOpen}\n      onClose={() => handleModalToggleCallback(false)}\n      footer={footer}\n      className=\"modal-width-override\"\n    >\n      <Form>\n        <FormGroup\n          label={intl.formatMessage(messages.name)}\n          fieldId=\"topic-form-name\"\n          className=\"text-input-override\"\n        >\n          <TextInput\n            value={name}\n            isRequired\n            type=\"text\"\n            id=\"topic-form-name\"\n            name=\"topic-form-name\"\n            onChange={(name) => setNameAndSlug(name)}\n          />\n        </FormGroup>\n        <FormGroup\n          label={intl.formatMessage(messages.topicAddEditDescription)}\n          fieldId=\"topic-form-description\"\n          helperText={intl.formatMessage(\n            messages.topicAddEditDescriptionHelperText\n          )}\n          className=\"text-area-override\"\n        >\n          <TextArea\n            value={description}\n            isRequired\n            name=\"topic-form-description\"\n            id=\"topic-form-description\"\n            onChange={(desc) => setDescription(desc)}\n          />\n        </FormGroup>\n        <FormGroup isInline fieldId=\"topic-form-labels\">\n          <FormGroup\n            label={intl.formatMessage(messages.tag)}\n            fieldId=\"topic-form-tag\"\n            helperText={intl.formatMessage(messages.topicAddEditTagHelperText)}\n            className=\"text-input-override\"\n          >\n            <TextInput\n              value={tag.replace(/\\s/g, '').toLowerCase()}\n              isRequired\n              type=\"text\"\n              id=\"topic-form-tag\"\n              name=\"topic-form-tag\"\n              onChange={(tag) => setTag(tag.replace(/\\s/g, '').toLowerCase())}\n            />\n          </FormGroup>\n          <FormGroup\n            label={intl.formatMessage(messages.topicSlug)}\n            fieldId=\"topic-form-name-2\"\n            helperText=\"\"\n            className=\"text-input-override\"\n          >\n            <TextInput\n              value={slug || name.replace(/\\s/g, '').toLowerCase()}\n              isDisabled={topic.slug}\n              type=\"text\"\n              id=\"topic-form-name-2\"\n              name=\"topic-form-name-2\"\n              onChange={(name) => setNameAndSlug(name)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup\n          label={intl.formatMessage(messages.status)}\n          fieldId=\"topic-form-enabled\"\n        >\n          <Radio\n            isChecked={!enabled}\n            id=\"disabled\"\n            label={intl.formatMessage(messages.topicAddEditDisabled)}\n            onChange={() => setEnabled(!enabled)}\n            className=\"radio-override\"\n          />\n          <Radio\n            isChecked={enabled}\n            id=\"enabled\"\n            label={intl.formatMessage(messages.topicAddEditEnabled)}\n            onChange={() => setEnabled(!enabled)}\n            className=\"radio-override\"\n          />\n        </FormGroup>\n        <FormGroup\n          label={intl.formatMessage(messages.featured)}\n          fieldId=\"topic-form-featured\"\n        >\n          <Checkbox\n            isChecked={featured}\n            label={intl.formatMessage(messages.topicAddEditFeatureBox)}\n            id=\"checkbox-featured\"\n            name=\"checkbox-featured\"\n            aria-label=\"update-featured\"\n            onChange={() => setFeatured(!featured)}\n            className=\"checkbox-override\"\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nAddEditTopic.propTypes = {\n  handleModalToggleCallback: PropTypes.func,\n  isModalOpen: PropTypes.bool,\n  topic: PropTypes.object,\n  intl: PropTypes.any,\n};\n\nexport default AddEditTopic;\n","import './_TopicsAdminTable.scss';\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  sortable,\n} from '@patternfly/react-table';\n\nimport AddEditTopic from '../Modals/AddEditTopic';\nimport BanIcon from '@patternfly/react-icons/dist/js/icons/ban-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport EditAltIcon from '@patternfly/react-icons/dist/js/icons/edit-alt-icon';\nimport Failed from '../Loading/Failed';\nimport Loading from '../Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport StarIcon from '@patternfly/react-icons/dist/js/icons/star-icon';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport messages from '../../Messages';\nimport { useGetTopicsAdminQuery } from '../../Services/Topics';\nimport { useIntl } from 'react-intl';\n\nconst TopicsAdminTable = () => {\n  const intl = useIntl();\n\n  const {\n    data: topics = [],\n    isLoading,\n    isFetching,\n    isError,\n    refetch,\n  } = useGetTopicsAdminQuery();\n\n  const [cols] = useState([\n    { title: intl.formatMessage(messages.title), transforms: [sortable] },\n    { title: intl.formatMessage(messages.tag), transforms: [sortable] },\n    { title: intl.formatMessage(messages.topicSlug), transforms: [sortable] },\n    { title: intl.formatMessage(messages.status), transforms: [sortable] },\n    { title: intl.formatMessage(messages.featured), transforms: [sortable] },\n    '',\n    '',\n  ]);\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [addEditTopicOpen, setAddEditTopicOpen] = useState(false);\n  const [selectedTopic, setSelectedTopic] = useState({});\n  const [topicsArray, setTopicsArray] = useState([]);\n\n  const onSort = useCallback(\n    (_event, index, direction) => {\n      const attrIndex = {\n        0: 'name',\n        1: 'tag',\n        2: 'slug',\n        3: 'enabled',\n        4: 'featured',\n      };\n      const attr = attrIndex[index];\n      const arrayCopy = [...topicsArray];\n      setSortBy({ index, direction });\n      setTopicsArray(\n        arrayCopy.sort((a, b) => {\n          if (direction === 'asc') {\n            if (attr === 'enabled' || attr === 'featured') {\n              return a[attr] > b[attr] ? -1 : 1;\n            } else {\n              return a[attr] > b[attr] ? 1 : -1;\n            }\n          } else {\n            if (attr === 'enabled' || attr === 'featured') {\n              return a[attr] > b[attr] ? 1 : -1;\n            } else {\n              return a[attr] > b[attr] ? -1 : 1;\n            }\n          }\n        })\n      );\n    },\n    [setSortBy, setTopicsArray, topicsArray]\n  );\n\n  const hideTopics = (topic) => {\n    if (!topic) {\n      setAddEditTopicOpen(true);\n    } else {\n      setSelectedTopic(topic);\n      setAddEditTopicOpen(true);\n    }\n  };\n\n  const handleModalToggleCallback = (modalToggle) => {\n    setAddEditTopicOpen(modalToggle);\n    refetch();\n  };\n\n  useEffect(() => {\n    setTopicsArray(topics);\n  }, [topics]);\n\n  useEffect(() => {\n    if (topicsArray.length === 0) {\n      setRows([\n        {\n          cells: [\n            {\n              title: (\n                <MessageState icon=\"none\" title={''} text={''}></MessageState>\n              ),\n              props: { colSpan: 7 },\n            },\n          ],\n        },\n      ]);\n    } else {\n      const rows = topicsArray.flatMap((value, key) => [\n        {\n          isOpen: false,\n          rule: value,\n          cells: [\n            {\n              title: <span key={key}> {value.name}</span>,\n            },\n            {\n              title: <span key={key}> {value.tag}</span>,\n            },\n            {\n              title: <span key={key}> {value.slug}</span>,\n            },\n            {\n              title: (\n                <span>\n                  {value.enabled ? (\n                    <span>\n                      <CheckCircleIcon className=\"success\" />{' '}\n                      {intl.formatMessage(messages.enabled)}\n                    </span>\n                  ) : (\n                    <span>\n                      <BanIcon className=\"ban\" />{' '}\n                      {intl.formatMessage(messages.disabled)}\n                    </span>\n                  )}\n                </span>\n              ),\n            },\n            {\n              title: (\n                <span>\n                  {value.featured ? (\n                    <span>\n                      <StarIcon /> {intl.formatMessage(messages.featured)}\n                    </span>\n                  ) : (\n                    <span></span>\n                  )}\n                </span>\n              ),\n            },\n            '',\n            {\n              title: (\n                <Button\n                  ouiaId=\"hide\"\n                  variant=\"link\"\n                  onClick={() => hideTopics(value)}\n                >\n                  <EditAltIcon /> {intl.formatMessage(messages.topicAdminEdit)}\n                </Button>\n              ),\n            },\n          ],\n        },\n      ]);\n      setRows(rows);\n    }\n  }, [topicsArray, intl]);\n\n  return (\n    <React.Fragment>\n      {addEditTopicOpen && (\n        <AddEditTopic\n          isModalOpen={addEditTopicOpen}\n          handleModalToggleCallback={handleModalToggleCallback}\n          topic={selectedTopic}\n        />\n      )}\n      <PageHeader>\n        <Title headingLevel=\"h3\" size=\"2xl\" className=\"titlePaddingOverride\">\n          {intl.formatMessage(messages.topicAdminTitle)}\n        </Title>\n      </PageHeader>\n      <Main>\n        <React.Fragment>\n          <PrimaryToolbar className=\"toolbar-padding-override\">\n            <Button\n              variant=\"primary\"\n              ouiaId=\"adminCreate\"\n              onClick={(_) => hideTopics(_)}\n            >\n              {intl.formatMessage(messages.topicAdminCreate)}\n            </Button>\n          </PrimaryToolbar>\n          {!isLoading && !isFetching && (\n            <Table\n              ouiaId=\"adminTable\"\n              aria-label={'topics-admin-table'}\n              sortBy={sortBy}\n              onSort={onSort}\n              cells={cols}\n              rows={rows}\n              isStickyHeader\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          )}\n          {isFetching && <Loading />}\n          {isError && (\n            <Failed\n              message={intl.formatMessage(messages.systemTableFetchError)}\n            />\n          )}\n          <TableToolbar />\n        </React.Fragment>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default TopicsAdminTable;\n"],"names":["AddEditTopic","handleModalToggleCallback","isModalOpen","topic","intl","useIntl","dispatch","useDispatch","addNotification","data","notification","useState","name","setName","description","setDescription","tag","setTag","enabled","setEnabled","featured","setFeatured","slug","undefined","setSlug","editTopic","type","DeleteApi","BASE_URL","Put","Post","variant","dismissable","title","formatMessage","messages","Object","entries","response","map","key","value","toUpperCase","setNameAndSlug","replace","toLowerCase","footer","Split","className","hasGutter","SplitItem","Button","onClick","ouiaId","isFilled","isDisabled","Modal","isOpen","onClose","Form","FormGroup","label","fieldId","TextInput","isRequired","id","onChange","helperText","TextArea","desc","isInline","Radio","isChecked","Checkbox","aria-label","propTypes","PropTypes","useGetTopicsAdminQuery","topics","isLoading","isFetching","isError","refetch","transforms","sortable","cols","rows","setRows","sortBy","setSortBy","addEditTopicOpen","setAddEditTopicOpen","selectedTopic","setSelectedTopic","topicsArray","setTopicsArray","onSort","useCallback","_event","index","direction","attr","0","1","2","3","4","arrayCopy","sort","a","b","hideTopics","useEffect","length","cells","MessageState","icon","text","props","colSpan","flatMap","rule","modalToggle","PageHeader","Title","headingLevel","size","Main","PrimaryToolbar","_","Table","isStickyHeader","TableHeader","TableBody","Loading","Failed","message","TableToolbar"],"sourceRoot":""}