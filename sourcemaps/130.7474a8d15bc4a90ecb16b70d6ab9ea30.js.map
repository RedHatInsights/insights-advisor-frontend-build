{"version":3,"file":"js/130.f669379b689c033a130e.js","mappings":"kNAMMA,EAAsB,SAACC,GAC3B,IAAMC,GAAOC,EAAAA,EAAAA,KACiBC,EAAQH,EAA9BI,qBAEFC,EAAQ,SAACC,EAAMH,EAAKI,GAAZ,OACZ,kBAAC,EAAAC,MAAD,CAAOD,MAAOA,GAAd,UAAyBD,EAAzB,cAAmCH,EAAnC,OAGF,OAAIA,GAAO,GACFE,EAAMJ,EAAKQ,cAAcC,EAAAA,EAAAA,MAAgBP,EAAK,OAC5CA,EAAM,IAAMA,GAAO,GACrBE,EAAMJ,EAAKQ,cAAcC,EAAAA,EAAAA,QAAkBP,EAAK,UAEhDE,EAAMJ,EAAKQ,cAAcC,EAAAA,EAAAA,KAAeP,EAAK,SAIxDJ,EAAoBY,UAAY,CAC9BX,MAAOY,IAAAA,OAGT","sources":["webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js"],"sourcesContent":["import { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst RecommendationLevel = (props) => {\n  const intl = useIntl();\n  const { recommendation_level: lvl } = props;\n\n  const label = (text, lvl, color) => (\n    <Label color={color}>{`${text} - ${lvl}%`}</Label>\n  );\n\n  if (lvl >= 80) {\n    return label(intl.formatMessage(messages.high), lvl, 'red');\n  } else if (lvl < 80 && lvl >= 50) {\n    return label(intl.formatMessage(messages.medium), lvl, 'orange');\n  } else {\n    return label(intl.formatMessage(messages.low), lvl, 'blue');\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\n\nexport default RecommendationLevel;\n"],"names":["RecommendationLevel","props","intl","useIntl","lvl","recommendation_level","label","text","color","Label","formatMessage","messages","propTypes","PropTypes"],"sourceRoot":""}