{"version":3,"file":"js/Details-Pathways.1643296423984.a6a725b05e61b94d8620.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/ansibeTower-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/PresentationalComponents/Cards/Pathways.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/Labels/CategoryLabel.js","webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/SmartComponents/Recs/DetailsPathways.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nconst Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb = Breadcrumb;\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BreadcrumbItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst angle_right_icon_1 = tslib_1.__importDefault(require('@patternfly/react-icons/dist/js/icons/angle-right-icon'));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = react_styles_1.css(breadcrumb_1.default.breadcrumbLink, isActive && breadcrumb_1.default.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: react_styles_1.css(breadcrumb_1.default.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: breadcrumb_1.default.breadcrumbItemDivider },\n            React.createElement(angle_right_icon_1.default, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: react_styles_1.css(breadcrumb_1.default.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nexports.BreadcrumbItem = BreadcrumbItem;\nexports.BreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","\"use strict\"\nexports.__esModule = true;\nexports.AnsibeTowerIconConfig = {\n  name: 'AnsibeTowerIcon',\n  height: 390,\n  width: 390,\n  svgPath: 'M402.6,214.7c0,103.9-84.2,188.1-188.1,188.1c-103.9,0-188.1-84.2-188.1-188.1  c0-103.9,84.2-188.1,188.1-188.1C318.4,26.6,402.6,110.8,402.6,214.7z M304.1,289.3l-74.9-180.2c-2.1-5.2-6.4-7.9-11.6-7.9c-5.2,0-9.8,2.8-11.9,7.9l-82.2,197.7h28.1l32.5-81.5  l97.1,78.4c3.9,3.2,6.7,4.6,10.4,4.6c7.3,0,13.7-5.5,13.7-13.4C305.4,293.6,305,291.5,304.1,289.3z M217.7,141.5l48.7,120.2  l-73.5-57.9L217.7,141.5z',\n  yOffset: 20,\n  xOffset: 20,\n};\nexports.AnsibeTowerIcon = require('../createIcon').createIcon(exports.AnsibeTowerIconConfig);\nexports[\"default\"] = exports.AnsibeTowerIcon;","\"use strict\";\nexports.__esModule = true;\nrequire('./breadcrumb.css');\nexports.default = {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    return (React.createElement(Suspense, { fallback: props.fallback },\n        React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","/* eslint-disable react/prop-types */\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport {\n  Chart,\n  ChartAxis,\n  ChartBar,\n  ChartGroup,\n  ChartVoronoiContainer,\n} from '@patternfly/react-charts';\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport { RISK_OF_CHANGE_LABEL } from '../../AppConstants';\nimport React from 'react';\nimport { RebootRequired } from '../Common/Common';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport RuleLabels from '../Labels/RuleLabels';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport chart_color_black_100 from '@patternfly/react-tokens/dist/esm/chart_color_black_100';\nimport chart_color_gold_400 from '@patternfly/react-tokens/dist/esm/chart_color_gold_400';\nimport chart_color_orange_300 from '@patternfly/react-tokens/dist/esm/chart_color_orange_300';\nimport chart_color_red_100 from '@patternfly/react-tokens/dist/esm/chart_color_red_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\n\nconst PathwayCard = (props) => {\n  const intl = useIntl();\n  const {\n    name,\n    categories,\n    impacted_systems_count,\n    description,\n    has_incident,\n    reboot_required,\n    slug,\n  } = props;\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className={`ins-c-advisor__card--pathwaycard advisor__background--global-100`}\n    >\n      <CardBody className={`body`}>\n        <CategoryLabel key={name} labelList={categories} />{' '}\n        <Link to={`/recommendations/pathways/${slug}`}>\n          {intl.formatMessage(messages.topicCardSystemsaffected, {\n            systems: impacted_systems_count,\n          })}\n        </Link>\n      </CardBody>\n      <CardBody className={`body`}>{description}</CardBody>\n      <CardBody className={`body`}>\n        {has_incident && <RuleLabels rule={{ tags: 'incident' }} />}{' '}\n        {RebootRequired(reboot_required)}\n      </CardBody>\n      <CardFooter className={`footer`}>\n        <Link to={`/recommendations/pathways/${slug}`}>\n          {`${intl.formatMessage(messages.viewPathway)} `}\n          <ArrowRightIcon />\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n};\nconst TotalRisk = (props) => {\n  const intl = useIntl();\n  const {\n    impacted_systems_count,\n    incident_count,\n    categories,\n    critical_risk_count,\n    high_risk_count,\n    medium_risk_count,\n    low_risk_count,\n  } = props;\n\n  const catString = (cats) =>\n    cats.length > 1 ? categories.map((cat) => cat.name).join(', ') : cats.name;\n  return (\n    <Card\n      isFlat\n      isPlain\n      className={`ins-c-advisor__card--pathwaycard advisor__background--global-100`}\n    >\n      <CardTitle>{intl.formatMessage(messages.totalRiskPathway)}</CardTitle>\n      <CardBody className={`body`}>\n        <Grid>\n          <GridItem span={6}>\n            <div>\n              <Chart\n                ariaDesc=\"Total risk of recommendations\"\n                ariaTitle=\"Total risk of recommendations\"\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={({ datum }) => `${datum.name}: ${datum.y}`}\n                    constrainToVisibleArea\n                  />\n                }\n                height={300}\n                width={300}\n                padding={{\n                  bottom: 30,\n                  left: 35,\n                  right: 20,\n                  top: 10,\n                }}\n              >\n                <ChartAxis />\n                <ChartAxis dependentAxis showGrid />\n                <ChartGroup>\n                  <ChartBar\n                    style={{\n                      data: {\n                        fill: ({ datum }) => datum.fill,\n                      },\n                    }}\n                    data={[\n                      {\n                        name: 'Critical',\n                        x: 'Critical',\n                        y: critical_risk_count,\n                        fill: chart_color_red_100.value,\n                      },\n                      {\n                        name: 'Important',\n                        x: 'Important',\n                        y: high_risk_count,\n                        fill: chart_color_orange_300.value,\n                      },\n                      {\n                        name: 'Moderate',\n                        x: 'Moderate',\n                        y: medium_risk_count,\n                        fill: chart_color_gold_400.value,\n                      },\n                      {\n                        name: 'Low',\n                        x: 'Low',\n                        y: low_risk_count,\n                        fill: chart_color_black_100.value,\n                      },\n                    ]}\n                  />\n                </ChartGroup>\n              </Chart>\n            </div>\n          </GridItem>\n          <GridItem span={6}>\n            {intl.formatMessage(messages.thisPathway, {\n              category: catString(categories),\n              systems: impacted_systems_count,\n              incidents: incident_count,\n              strong: (str) => strong(str),\n            })}\n          </GridItem>\n        </Grid>\n      </CardBody>\n    </Card>\n  );\n};\nconst Resolution = (props) => {\n  const intl = useIntl();\n  const { description, reboot_required, name, resolution_risk } = props;\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className={`ins-c-advisor__card--pathwaycard advisor__background--global-100`}\n    >\n      <CardTitle>{intl.formatMessage(messages.resolution)}</CardTitle>\n      <Grid>\n        <GridItem span={7}>\n          <CardBody className={`body`}>\n            <InsightsLabel\n              text={RISK_OF_CHANGE_LABEL[resolution_risk.risk]}\n              value={resolution_risk.risk}\n              hideIcon\n            />\n          </CardBody>\n          <CardBody className={`body`}>\n            <Title headingLevel=\"h5\" size=\"md\">\n              {name}\n            </Title>\n          </CardBody>\n\n          <CardBody className={`body`}>{description}</CardBody>\n          <CardBody className={`body`}>\n            {RebootRequired(reboot_required)}\n          </CardBody>\n        </GridItem>\n        <GridItem span={5}>\n          <CardTitle>{intl.formatMessage(messages.reclvl)}</CardTitle>\n          <RecommendationLevel {...props} />\n        </GridItem>\n      </Grid>\n    </Card>\n  );\n};\n\nexport { PathwayCard, TotalRisk, Resolution };\n","import { BASE_URL } from '../../AppConstants';\nimport { Get } from '../../Utilities/Api';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst fileName = (exportTable) => {\n  const defaultParams = {\n    date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc',\n  };\n\n  return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nfunction objectsToCSV(arr) {\n  const array = [Object.keys(arr[0])].concat(arr);\n  return array\n    .map((row) => {\n      return Object.values(row)\n        .map((value) => {\n          return typeof value === 'string' ? JSON.stringify(value) : value;\n        })\n        .toString();\n    })\n    .join('\\n');\n}\n\nconst downloadHelper = async (\n  exportTable,\n  format,\n  filters,\n  selectedTags,\n  workloads,\n  SID,\n  overrideData\n) => {\n  try {\n    let data;\n    if (overrideData) {\n      data = format === 'json' ? overrideData : objectsToCSV(overrideData);\n    } else {\n      let options = selectedTags?.length && { tags: selectedTags };\n      workloads &&\n        (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n      data = (\n        await Get(\n          `${BASE_URL}/export/${exportTable}.${\n            format === 'json' ? 'json' : 'csv'\n          }`,\n          {},\n          { ...filters, ...options }\n        )\n      ).data;\n    }\n    let formattedData = format === 'json' ? JSON.stringify(data) : data;\n    downloadFile(formattedData, fileName(exportTable), format);\n  } catch (error) {\n    throw `${error}`;\n  }\n};\n\nexport default downloadHelper;\n","import AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport { LabelGroup } from '@patternfly/react-core/dist/js/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CategoryLabel = ({ labelList }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const label = (icon, text) => (\n    <Label icon={icon} variant=\"outline\" color=\"blue\">\n      {text}\n    </Label>\n  );\n  const labels = (id) => {\n    if (id === 1) {\n      return label(\n        <AutomationIcon />,\n        intl.formatMessage(messages.availability)\n      );\n    }\n    if (id === 2) {\n      return label(<LockIcon />, intl.formatMessage(messages.security));\n    }\n    if (id === 3) {\n      return label(<CubeIcon />, intl.formatMessage(messages.stability));\n    }\n    if (id === 4) {\n      return label(<PortIcon />, intl.formatMessage(messages.performance));\n    }\n  };\n  return (\n    <LabelGroup numLabels={1}>\n      {sortedFrequencyList.map((id) => labels(Number(id[0])))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n};\n\nexport default CategoryLabel;\n","import { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst RecommendationLevel = (props) => {\n  const intl = useIntl();\n  const { recommendation_level: lvl } = props;\n\n  const label = (text, lvl, color) => (\n    <Label color={color}>{`${text} - ${lvl}%`}</Label>\n  );\n\n  if (lvl >= 80) {\n    return label(intl.formatMessage(messages.high), lvl, 'red');\n  } else if (lvl < 80 && lvl >= 50) {\n    return label(intl.formatMessage(messages.medium), lvl, 'orange');\n  } else {\n    return label(intl.formatMessage(messages.low), lvl, 'blue');\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\n\nexport default RecommendationLevel;\n","import React, { useState } from 'react';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Post } from '../../Utilities/Api';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport messages from '../../Messages';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { useSetAckMutation } from '../../Services/Acks';\n\nconst DisableRule = ({\n  handleModalToggle,\n  isModalOpen,\n  host,\n  hosts,\n  rule,\n  afterFn,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const notification = (data) => dispatch(addNotification(data));\n  const [justification, setJustificaton] = useState('');\n  const [singleSystem, setSingleSystem] = useState(\n    host !== undefined || hosts.length > 0\n  );\n\n  // eslint-disable-next-line no-unused-vars\n  const [setAck, { isLoading }] = useSetAckMutation();\n\n  const bulkHostActions = async () => {\n    const data = { systems: hosts, justification };\n    try {\n      await Post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`, {}, data);\n      !singleSystem &&\n        notification({\n          variant: 'success',\n          dismissable: true,\n          timeout: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabledForSystem),\n        });\n      afterFn && afterFn();\n    } catch (error) {\n      notification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const disableRule = async () => {\n    if (rule.rule_status === 'enabled' && !hosts.length) {\n      const options = singleSystem\n        ? {\n            type: 'HOST',\n            options: {\n              rule: rule.rule_id,\n              system_uuid: host.id,\n              justification,\n            },\n          }\n        : {\n            type: 'RULE',\n            options: {\n              rule_id: rule.rule_id,\n              ...(justification && { justification }),\n            },\n          };\n      try {\n        await setAck(options).unwrap();\n        singleSystem\n          ? notification({\n              variant: 'success',\n              timeout: true,\n              dismissable: true,\n              title: intl.formatMessage(\n                messages.recSuccessfullyDisabledForSystem\n              ),\n            })\n          : notification({\n              variant: 'success',\n              timeout: true,\n              dismissable: true,\n              title: intl.formatMessage(messages.recSuccessfullyDisabled),\n            });\n        setJustificaton('');\n        afterFn && afterFn();\n      } catch (error) {\n        notification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${error}`,\n        });\n      }\n    } else {\n      bulkHostActions();\n    }\n\n    handleModalToggle(false);\n  };\n\n  return (\n    <Modal\n      variant=\"small\"\n      title={intl.formatMessage(messages.disableRule)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        handleModalToggle(false);\n        setJustificaton('');\n      }}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => disableRule()}\n          ouiaId=\"confirm\"\n        >\n          {intl.formatMessage(messages.save)}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={() => {\n            handleModalToggle(false);\n            setJustificaton('');\n          }}\n          ouiaId=\"cancel\"\n        >\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      {intl.formatMessage(messages.disableRuleBody)}\n      <Form>\n        <FormGroup fieldId=\"blank-form\" />\n        {(host !== undefined || hosts.length > 0) && (\n          <FormGroup fieldId=\"disable-rule-one-system\">\n            <Checkbox\n              isChecked={singleSystem}\n              onChange={() => {\n                setSingleSystem(!singleSystem);\n              }}\n              label={\n                hosts.length\n                  ? intl.formatMessage(messages.disableRuleForSystems)\n                  : intl.formatMessage(messages.disableRuleSingleSystem)\n              }\n              id=\"disable-rule-one-system\"\n              name=\"disable-rule-one-system\"\n            />\n          </FormGroup>\n        )}\n        <FormGroup\n          label={intl.formatMessage(messages.justificationNote)}\n          fieldId=\"disable-rule-justification\"\n        >\n          <TextInput\n            type=\"text\"\n            id=\"disable-rule-justification\"\n            aria-describedby=\"disable-rule-justification\"\n            value={justification}\n            onChange={(text) => setJustificaton(text)}\n            onKeyDown={(e) =>\n              e.key === 'Enter' && (e.preventDefault(), disableRule())\n            }\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nDisableRule.propTypes = {\n  isModalOpen: PropTypes.bool,\n  host: PropTypes.object,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n  hosts: PropTypes.array,\n};\n\nDisableRule.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  system: undefined,\n  rule: {},\n  afterFn: () => undefined,\n  host: undefined,\n  hosts: [],\n};\n\nexport default DisableRule;\n","import './Details.scss';\n\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { Suspense, lazy, useEffect, useState } from 'react';\nimport {\n  Resolution,\n  TotalRisk,\n} from '../../PresentationalComponents/Cards/Pathways';\nimport {\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core/dist/esm/components/Tabs/index';\nimport { updateRecFilters, updateSysFilters } from '../../Services/Filters';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport CategoryLabel from '../../PresentationalComponents/Labels/CategoryLabel';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Inventory from '../../PresentationalComponents/Inventory/Inventory';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport RuleLabels from '../../PresentationalComponents/Labels/RuleLabels';\nimport messages from '../../Messages';\nimport { useGetPathwayQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { workloadQueryBuilder } from '../../PresentationalComponents/Common/Tables';\n\nconst RulesTable = lazy(() =>\n  import(\n    /* webpackChunkName: 'RulesTable' */ '../../PresentationalComponents/RulesTable/RulesTable'\n  )\n);\n\nconst PathwayDetails = () => {\n  const intl = useIntl();\n  const pathwayName = useParams().id;\n  const dispatch = useDispatch();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const recFilters = useSelector(({ filters }) => filters.recState);\n  const sysFilters = useSelector(({ filters }) => filters.sysState);\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const { data: pathway = {}, isFetching } = useGetPathwayQuery({\n    ...options,\n    slug: pathwayName,\n  });\n  const [activeTab, setActiveTab] = useState(0);\n\n  useEffect(() => {\n    const initiaRecFilters = { ...recFilters };\n    const initiaSysFilters = { ...sysFilters };\n    const defaultFilters = { pathway: pathwayName, limit: 20, offset: 0 };\n    dispatch(\n      updateRecFilters({\n        ...defaultFilters,\n        sort: 'category',\n        impacting: true,\n      })\n    );\n    dispatch(\n      updateSysFilters({\n        ...defaultFilters,\n      })\n    );\n\n    return () => {\n      dispatch(updateRecFilters(initiaRecFilters));\n      dispatch(updateSysFilters(initiaSysFilters));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <React.Fragment>\n      {isFetching ? (\n        <Loading />\n      ) : (\n        <React.Fragment>\n          <PageHeader className=\"pageHeaderOverride\">\n            <Breadcrumbs\n              ouiaId=\"override\"\n              current={pathway.description || ''}\n            />\n            <CategoryLabel labelList={pathway.categories} />\n            <PageHeaderTitle\n              title={\n                <React.Fragment>\n                  {pathway.description}\n                  {pathway.has_incident && (\n                    <RuleLabels rule={{ tags: 'incident' }} />\n                  )}\n                </React.Fragment>\n              }\n            />\n            <p>\n              {intl.formatMessage(messages.rulesDetailsPubishdate, {\n                date: (\n                  <DateFormat\n                    date={new Date(pathway.publish_date)}\n                    type=\"onlyDate\"\n                  />\n                ),\n              })}\n            </p>\n          </PageHeader>\n          <Main className=\"ins-c-advisor__pathway-detail__cards\">\n            <Grid hasGutter>\n              <GridItem sm={12} md={6}>\n                <TotalRisk {...pathway} />\n              </GridItem>\n              <GridItem sm={12} md={6}>\n                <Resolution {...pathway} />\n              </GridItem>\n            </Grid>\n          </Main>\n        </React.Fragment>\n      )}\n      {isFetching && <Loading />}\n      <Main>\n        <Tabs\n          className=\"advisor__background--global-100\"\n          mountOnEnter\n          unmountOnExit\n          activeKey={activeTab}\n          onSelect={(_e, tab) => setActiveTab(tab)}\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.recommendations)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <RulesTable />\n              </Suspense>\n            )}\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.systems)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <Inventory\n                  tableProps={{\n                    canSelectAll: false,\n                    isStickyHeader: true,\n                  }}\n                  pathway={pathway}\n                  selectedTags={selectedTags}\n                  workloads={workloads}\n                  SID={SID}\n                />\n              </Suspense>\n            )}\n          </Tab>\n        </Tabs>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default PathwayDetails;\n"],"names":["exports","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","useOUIAProps","createElement","Object","assign","css","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement","angle_right_icon_1","classNameProp","to","isActive","isDropdown","target","component","render","Component","ariaCurrent","undefined","breadcrumbLink","modifiers","current","breadcrumbItem","breadcrumbItemDivider","type","breadcrumbDropdown","href","name","height","width","svgPath","yOffset","xOffset","__esModule","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useEffect","console","error","concat","__assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","size","PathwayCard","intl","useIntl","categories","impacted_systems_count","description","has_incident","reboot_required","slug","isFlat","isPlain","key","labelList","Link","formatMessage","messages","systems","rule","tags","RebootRequired","TotalRisk","cats","incident_count","critical_risk_count","high_risk_count","medium_risk_count","low_risk_count","span","ariaDesc","ariaTitle","containerComponent","labels","datum","y","constrainToVisibleArea","padding","bottom","left","right","top","C","dependentAxis","showGrid","style","data","fill","x","chart_color_red_100","chart_color_orange_300","chart_color_gold_400","chart_color_black_100","category","cat","join","incidents","strong","str","Resolution","resolution_risk","text","RISK_OF_CHANGE_LABEL","risk","value","hideIcon","headingLevel","fileName","exportTable","defaultParams","date","Date","toISOString","replace","split","format","filters","selectedTags","workloads","SID","overrideData","arr","keys","row","values","JSON","stringify","toString","options","workloadQueryBuilder","Get","BASE_URL","formattedData","downloadFile","CategoryLabel","sortedFrequencyList","label","id","entries","reduce","acc","curr","sort","a","b","icon","Label","variant","color","numLabels","Number","PropTypes","RecommendationLevel","lvl","recommendation_level","DisableRule","handleModalToggle","isModalOpen","host","hosts","afterFn","dispatch","useDispatch","notification","addNotification","useState","justification","setJustificaton","singleSystem","setSingleSystem","useSetAckMutation","setAck","bulkHostActions","isLoading","Post","rule_id","dismissable","timeout","title","disableRule","rule_status","system_uuid","unwrap","isOpen","onClose","actions","Button","onClick","fieldId","isChecked","onChange","aria-describedby","onKeyDown","preventDefault","system","RulesTable","lazy","pathwayName","useParams","useSelector","recFilters","recState","sysFilters","sysState","useGetPathwayQuery","pathway","isFetching","activeTab","setActiveTab","initiaRecFilters","initiaSysFilters","defaultFilters","limit","offset","updateRecFilters","impacting","updateSysFilters","publish_date","hasGutter","sm","md","mountOnEnter","unmountOnExit","activeKey","onSelect","_e","tab","eventKey","T","tableProps","canSelectAll","isStickyHeader"],"sourceRoot":""}