{"version":3,"file":"js/RecommendationSystems.3cfbc9dd77853f7592cb.js","mappings":"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","sources":["webpack:///./src/SmartComponents/HybridInventoryTabs/ConventionalSystems/RecommendationSystems.js","webpack:///./src/SmartComponents/HybridInventoryTabs/helpers.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport Inventory from '../../../PresentationalComponents/Inventory/Inventory';\nimport { useSelector } from 'react-redux';\nimport { PERMS } from '../../../AppConstants';\nimport { useActionResolver } from '../helpers';\n\nconst ConventionalSystems = ({ rule, afterDisableFn, handleModalToggle }) => {\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const permsExport = usePermissions('advisor', PERMS.export).hasAccess;\n\n  const actionResolver = useActionResolver(handleModalToggle);\n\n  return (\n    <Inventory\n      tableProps={{\n        canSelectAll: false,\n        actionResolver,\n        isStickyHeader: true,\n      }}\n      rule={rule}\n      afterDisableFn={afterDisableFn}\n      selectedTags={selectedTags}\n      workloads={workloads}\n      SID={SID}\n      permsExport={permsExport}\n      exportTable=\"systems\"\n      showTags={true}\n    />\n  );\n};\n\nConventionalSystems.propTypes = {\n  rule: PropTypes.object,\n  afterDisableFn: PropTypes.func,\n  handleModalToggle: PropTypes.func,\n};\nexport default ConventionalSystems;\n","import { createOptions } from '../../PresentationalComponents/helper';\nimport { paginatedRequestHelper } from '../../PresentationalComponents/Inventory/helpers';\nimport { Post } from '../../Utilities/Api';\nimport { EDGE_DEVICE_BASE_URL } from '../../AppConstants';\nimport { useCallback } from 'react';\nimport { systemReducer } from '../../Store/AppReducer';\nimport { updateReducers } from '../../Store';\nimport { useStore } from 'react-redux';\nimport { wrappable } from '@patternfly/react-table';\n\nconst mergeByInventoryKey = (\n  advisorData = [],\n  inventoryData = [],\n  edgeData = [],\n  enforceEdgeGroups\n) => {\n  return inventoryData.map((inventory) => {\n    const edge = edgeData.find((device) => device.DeviceUUID === inventory.id);\n    const advisor = advisorData.find(\n      (advisor) => advisor.system_uuid === inventory.id\n    );\n\n    return {\n      ...inventory,\n      ...advisor,\n      ...edge,\n      groups: enforceEdgeGroups\n        ? edge.DeviceGroups?.map((group) => ({\n            id: group.ID,\n            name: group.Name,\n          })) || []\n        : inventory.groups,\n    };\n  });\n};\n\nexport const useGetEntities =\n  (handleRefresh, pathway, rule) =>\n  async (_items, config, showTags, defaultGetEntities) => {\n    const {\n      per_page,\n      page,\n      orderBy,\n      orderDirection,\n      advisorFilters,\n      filters,\n      workloads,\n      SID,\n      selectedTags,\n    } = config;\n    //operating_system is currently not supported, but will be down the line.\n    const sort =\n      orderBy === 'operating_system'\n        ? 'rhel_version'\n        : `${orderDirection === 'ASC' ? '' : '-'}${\n            orderBy === 'updated' ? 'last_seen' : orderBy\n          }`;\n\n    let options = createOptions(\n      advisorFilters,\n      page,\n      per_page,\n      sort,\n      pathway,\n      filters,\n      selectedTags,\n      workloads,\n      SID\n    );\n    handleRefresh(options);\n    const allDetails = { ...config, pathway, rule, sort };\n    const advisorData = await paginatedRequestHelper(allDetails);\n    const systemIDs = advisorData?.data?.map((system) => system.system_uuid);\n\n    const inventoryData = await defaultGetEntities(\n      systemIDs,\n      {\n        per_page,\n        hasItems: true,\n        fields: { system_profile: ['operating_system'] },\n      },\n      showTags\n    );\n\n    let edgeData = [];\n    let enforceEdgeGroups = false;\n    if (systemIDs?.length) {\n      const { data: devicesData } = await Post(\n        `${EDGE_DEVICE_BASE_URL}/devices/devicesview`,\n        {},\n        { devices_uuid: systemIDs }\n      );\n\n      edgeData = devicesData?.data?.devices || [];\n      enforceEdgeGroups = devicesData?.data?.enforce_edge_groups;\n    }\n\n    const fullData = mergeByInventoryKey(\n      advisorData.data,\n      inventoryData.results,\n      edgeData,\n      enforceEdgeGroups\n    );\n\n    return Promise.resolve({\n      results: fullData,\n      total: advisorData.meta.count,\n    });\n  };\n\nexport const useActionResolver = (handleModalToggle) =>\n  useCallback(\n    () => [\n      {\n        title: 'Disable recommendation for system',\n        onClick: (event, rowIndex, item) => handleModalToggle(true, item),\n      },\n    ],\n    []\n  );\n\nexport const useOnLoad = (filters) => {\n  const store = useStore();\n  return useCallback(\n    ({ mergeWithEntities, INVENTORY_ACTION_TYPES, mergeWithDetail }) => {\n      store.replaceReducer(\n        updateReducers({\n          ...mergeWithEntities(systemReducer([], INVENTORY_ACTION_TYPES), {\n            page: Number(filters.offset / filters.limit + 1 || 1),\n            perPage: Number(filters.limit || 20),\n          }),\n          ...mergeWithDetail(),\n        })\n      );\n    },\n    [filters, store]\n  );\n};\n\nexport const mergeAppColumns = (defaultColumns, isRecommendationDetail) => {\n  const lastSeenColumn = defaultColumns.find(({ key }) => key === 'updated');\n  const impacted_date = {\n    key: 'impacted_date',\n    title: 'First Impacted',\n    sortKey: 'impacted_date',\n    transforms: [wrappable],\n    props: { width: 15 },\n    renderFunc: lastSeenColumn.renderFunc,\n  };\n\n  //disable sorting on OS. API does not handle this\n  const osColumn = defaultColumns.find(({ key }) => key === 'system_profile');\n  osColumn.props = { ...osColumn.props, isStatic: true };\n\n  //disable sorting on GROUPS. API does not handle this\n  const groupsColumn = defaultColumns.find(({ key }) => key === 'groups');\n  groupsColumn.props = { ...groupsColumn.props, isStatic: true };\n\n  return [\n    ...defaultColumns,\n    ...(isRecommendationDetail ? [impacted_date] : []),\n  ];\n};\n"],"names":["ConventionalSystems","_ref","rule","afterDisableFn","handleModalToggle","selectedTags","useSelector","_ref2","filters","workloads","_ref3","SID","_ref4","permsExport","usePermissions","PERMS","hasAccess","actionResolver","useActionResolver","React","Inventory","tableProps","canSelectAll","isStickyHeader","exportTable","showTags","propTypes","PropTypes","mergeByInventoryKey","advisorData","arguments","length","undefined","edgeData","enforceEdgeGroups","map","inventory","_edge$DeviceGroups","edge","find","device","DeviceUUID","id","advisor","system_uuid","_objectSpread","groups","DeviceGroups","group","ID","name","Name","useGetEntities","handleRefresh","pathway","_asyncToGenerator","_regeneratorRuntime","_callee","_items","config","defaultGetEntities","_advisorData$data","per_page","page","orderBy","orderDirection","advisorFilters","sort","options","allDetails","systemIDs","inventoryData","_devicesData$data","_devicesData$data2","_yield$Post","devicesData","fullData","_context","prev","next","concat","createOptions","paginatedRequestHelper","sent","data","system","hasItems","fields","system_profile","Post","EDGE_DEVICE_BASE_URL","devices_uuid","devices","enforce_edge_groups","results","abrupt","Promise","resolve","total","meta","count","stop","_x","_x2","_x3","_x4","apply","useCallback","title","onClick","event","rowIndex","item","useOnLoad","store","useStore","mergeWithEntities","INVENTORY_ACTION_TYPES","mergeWithDetail","replaceReducer","updateReducers","systemReducer","Number","offset","limit","perPage","mergeAppColumns","defaultColumns","isRecommendationDetail","lastSeenColumn","key","impacted_date","sortKey","transforms","wrappable","props","width","renderFunc","osColumn","isStatic","groupsColumn","_ref5","_toConsumableArray"],"sourceRoot":""}