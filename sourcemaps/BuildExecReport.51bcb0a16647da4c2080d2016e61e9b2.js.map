{"version":3,"file":"js/BuildExecReport.1683035825595.8b54bf69c59ec910037f.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/ExecutiveReport/BuildExecReport.js","webpack:///./node_modules/lodash/_asciiSize.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/_stringSize.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_unicodeSize.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/truncate.js"],"sourcesContent":["import {\n  Chart,\n  Column,\n  InsightsLabel,\n  Panel,\n  PanelItem,\n  Paragraph,\n  Section,\n  Table,\n} from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { TOTAL_RISK_LABEL } from '../../AppConstants';\nimport { Text } from '@react-pdf/renderer';\nimport messages from '../../Messages';\nimport { truncate } from 'lodash';\n\nexport const BuildExecReport = ({\n  statsSystems,\n  statsReports,\n  topActiveRec,\n  intl,\n}) => {\n  const calcPercent = (value, total) =>\n    Math.round(Number((value / total) * 100));\n  const severityPie = [\n    {\n      x: intl.formatMessage(messages.critical),\n      y: calcPercent(statsReports.total_risk[4], statsReports.total),\n    },\n    {\n      x: intl.formatMessage(messages.important),\n      y: calcPercent(statsReports.total_risk[3], statsReports.total),\n    },\n    {\n      x: intl.formatMessage(messages.moderate),\n      y: calcPercent(statsReports.total_risk[2], statsReports.total),\n    },\n    {\n      x: intl.formatMessage(messages.low),\n      y: calcPercent(statsReports.total_risk[1], statsReports.total),\n    },\n  ];\n  const severityRows = [\n    [\n      intl.formatMessage(messages.severity),\n      intl.formatMessage(messages.poundOfRecs),\n    ],\n    ...Object.entries(statsReports.total_risk)\n      .map(([key, value]) => [\n        TOTAL_RISK_LABEL[key].props.children,\n        intl.formatMessage(messages.recNumAndPercentage, {\n          count: value,\n          total: calcPercent(value, statsReports.total),\n        }),\n      ])\n      .reverse(),\n  ];\n\n  const categoryPie = [\n    {\n      x: intl.formatMessage(messages.availability),\n      y: calcPercent(statsReports.category.Availability, statsReports.total),\n    },\n    {\n      x: intl.formatMessage(messages.performance),\n      y: calcPercent(statsReports.category.Performance, statsReports.total),\n    },\n    {\n      x: intl.formatMessage(messages.security),\n      y: calcPercent(statsReports.category.Security, statsReports.total),\n    },\n    {\n      x: intl.formatMessage(messages.stability),\n      y: calcPercent(statsReports.category.Stability, statsReports.total),\n    },\n  ];\n  const categoryRows = [\n    [\n      intl.formatMessage(messages.category),\n      intl.formatMessage(messages.poundOfRecs),\n    ],\n    ...Object.entries(statsReports.category).map(([key, value]) => [\n      key,\n      intl.formatMessage(messages.recNumAndPercentage, {\n        count: value,\n        total: calcPercent(value, statsReports.total),\n      }),\n    ]),\n  ];\n\n  const rulesDesc = (rule) => (\n    <Text>\n      <Text style={{ fontWeight: 700 }}> {rule.description}</Text>&nbsp;\n      {truncate(rule.summary, { length: 280 })}\n    </Text>\n  );\n\n  return (\n    <React.Fragment key={intl.formatMessage(messages.insightsHeader)}>\n      <Paragraph>\n        {intl.formatMessage(messages.execReportHeader, {\n          systems: (\n            <Text style={{ fontWeight: 700 }}>\n              {intl.formatMessage(messages.execReportHeaderSystems, {\n                systems: statsSystems.total,\n              })}\n            </Text>\n          ),\n          risks: (\n            <Text style={{ fontWeight: 700 }}>\n              {' '}\n              {intl.formatMessage(messages.execReportHeaderRisks, {\n                risks: statsReports.total,\n              })}\n            </Text>\n          ),\n        })}\n      </Paragraph>\n      <Section title={intl.formatMessage(messages.severityHeader)}>\n        <Column>\n          <Table withHeader rows={severityRows} />\n        </Column>\n        <Column>\n          <Chart\n            chartType=\"pie\"\n            subTitle={intl.formatMessage(messages.severityHeader)}\n            title=\"100\"\n            data={severityPie}\n            colorSchema={'multi'}\n          />\n        </Column>\n      </Section>\n      <Section title={intl.formatMessage(messages.categoryHeader)}>\n        <Column>\n          <Table withHeader rows={categoryRows} />\n        </Column>\n        <Column>\n          <Chart\n            chartType=\"pie\"\n            subTitle={intl.formatMessage(messages.categoryHeader)}\n            title=\"100\"\n            data={categoryPie}\n          />\n        </Column>\n      </Section>\n      <Section\n        title={intl.formatMessage(messages.top3RulesHeader)}\n        withColumn={false}\n      >\n        {topActiveRec.data.map((rule, key) => (\n          <Panel key={key} description={rulesDesc(rule)}>\n            <PanelItem\n              title={intl.formatMessage(messages.systemsExposed)}\n            >{`${rule.impacted_systems_count}`}</PanelItem>\n            <PanelItem title={intl.formatMessage(messages.totalRisk)}>\n              <InsightsLabel variant={rule.total_risk} />\n            </PanelItem>\n          </Panel>\n        ))}\n      </Section>\n    </React.Fragment>\n  );\n};\n\nBuildExecReport.propTypes = {\n  statsSystems: PropTypes.object,\n  statsReports: PropTypes.object,\n  topActiveRec: PropTypes.object,\n  intl: PropTypes.any,\n};\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    isObject = require('./isObject'),\n    isRegExp = require('./isRegExp'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/** Used as default options for `_.truncate`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n    DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction truncate(string, options) {\n  var length = DEFAULT_TRUNC_LENGTH,\n      omission = DEFAULT_TRUNC_OMISSION;\n\n  if (isObject(options)) {\n    var separator = 'separator' in options ? options.separator : separator;\n    length = 'length' in options ? toInteger(options.length) : length;\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\n  }\n  string = toString(string);\n\n  var strLength = string.length;\n  if (hasUnicode(string)) {\n    var strSymbols = stringToArray(string);\n    strLength = strSymbols.length;\n  }\n  if (length >= strLength) {\n    return string;\n  }\n  var end = length - stringSize(omission);\n  if (end < 1) {\n    return omission;\n  }\n  var result = strSymbols\n    ? castSlice(strSymbols, 0, end).join('')\n    : string.slice(0, end);\n\n  if (separator === undefined) {\n    return result + omission;\n  }\n  if (strSymbols) {\n    end += (result.length - end);\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n          substring = result;\n\n      if (!separator.global) {\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n      }\n      separator.lastIndex = 0;\n      while ((match = separator.exec(substring))) {\n        var newEnd = match.index;\n      }\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\n    }\n  } else if (string.indexOf(baseToString(separator), end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\n\nmodule.exports = truncate;\n"],"names":["BuildExecReport","statsSystems","statsReports","topActiveRec","intl","calcPercent","value","total","Math","round","Number","severityPie","x","formatMessage","messages","y","total_risk","severityRows","Object","entries","map","key","TOTAL_RISK_LABEL","props","children","count","reverse","categoryPie","category","Availability","Performance","Security","Stability","categoryRows","rulesDesc","rule","style","fontWeight","description","summary","length","systems","risks","title","withHeader","rows","chartType","subTitle","data","colorSchema","withColumn","impacted_systems_count","variant","propTypes","PropTypes","asciiSize","baseProperty","module","exports","string","split","baseSlice","array","start","end","undefined","reHasUnicode","RegExp","test","hasUnicode","unicodeSize","asciiToArray","unicodeToArray","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsOptVar","rsSeq","join","rsSymbol","reUnicode","result","lastIndex","match","baseToString","castSlice","isObject","isRegExp","stringSize","stringToArray","toInteger","toString","reFlags","options","omission","separator","strLength","strSymbols","slice","search","substring","global","source","exec","newEnd","index","indexOf","lastIndexOf"],"sourceRoot":""}