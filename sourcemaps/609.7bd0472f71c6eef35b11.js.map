{"version":3,"file":"js/609.9f1cccff4a320845fc40.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Store/AppActions.js","webpack:///./src/Store/AppReducer.js","webpack:///./src/Store/index.js"],"sourcesContent":["import { Redirect, Route, Switch } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Recs = lazy(() =>\n  import(/* webpackChunkName: \"Recs\" */ './SmartComponents/Recs/Recs')\n);\nconst Systems = lazy(() =>\n  import(/* webpackChunkName: \"Systems\" */ './SmartComponents/Systems/Systems')\n);\nconst Topics = lazy(() =>\n  import(/* webpackChunkName: \"Topics\" */ './SmartComponents/Topics/Topics')\n);\n\nconst paths = [\n  { title: 'Recommendations', path: '/recommendations:?', component: Recs },\n  { title: 'Recommendations', path: '/recommendations', component: Recs },\n  { title: 'Systems', path: '/systems:?', component: Systems },\n  { title: 'Systems', path: '/systems', component: Systems },\n  { title: 'Topics', path: '/topics', component: Topics },\n];\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner size=\"xl\" />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      {paths.map((path) => (\n        <Route\n          key={path.title}\n          path={path.path}\n          component={path.component}\n          rootClass={path.rootClass}\n        />\n      ))}\n      <Redirect path=\"/recommendations\" to={`${paths[1].path}`} push />\n      {/* Finally, catch all unmatched routes */}\n      <Redirect path=\"*\" to={`${paths[1].path}`} push />\n    </Switch>\n  </Suspense>\n);\n","import './App.scss';\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { setSIDs, setSelectedTags, setWorkloads } from './Store/AppActions';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from './PresentationalComponents/MessageState/MessageState';\nimport { PERMS } from './AppConstants';\nimport { Routes } from './Routes';\nimport messages from './Messages';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst App = () => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const { pathname } = useLocation();\n  const permsViewRecs = usePermissions('advisor', PERMS.viewRecs);\n  const [auth, setAuth] = useState(false);\n  const dispatch = useDispatch();\n  const appNavClick = useMemo(\n    () => ({\n      recommendations(redirect) {\n        insights.chrome.appNavClick({ id: 'recommendations', redirect });\n      },\n      systems(redirect) {\n        insights.chrome.appNavClick({ id: 'systems', redirect });\n      },\n      topics(redirect) {\n        insights.chrome.appNavClick({ id: 'topics', redirect });\n      },\n    }),\n    []\n  );\n\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome.auth.getUser().then(() => setAuth(true));\n    insights.chrome.identifyApp('advisor');\n    insights.chrome?.globalFilterScope?.('insights');\n    if (insights.chrome?.globalFilterScope) {\n      insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n        const [workloads, SID, selectedTags] =\n          insights.chrome?.mapGlobalFilter?.(data, false, true) || [];\n        batch(() => {\n          dispatch(setWorkloads(workloads));\n          dispatch(setSelectedTags(selectedTags));\n          dispatch(setSIDs(SID));\n        });\n      });\n    }\n\n    const baseComponentUrl = pathname.split('/')[1];\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        push(`/${event.navId}`);\n        appNavClick[baseComponentUrl] !== undefined\n          ? appNavClick[baseComponentUrl](true)\n          : appNavClick.recommendations;\n      }\n    });\n\n    return () => unregister();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const baseComponentUrl = pathname.split('/')[1];\n    insights &&\n      insights.chrome &&\n      baseComponentUrl &&\n      appNavClick[baseComponentUrl] !== undefined &&\n      appNavClick[baseComponentUrl](false);\n  }, [appNavClick, pathname]);\n\n  return (\n    auth &&\n    !permsViewRecs?.isLoading &&\n    (permsViewRecs?.hasAccess ? (\n      <Routes />\n    ) : (\n      <MessageState\n        variant=\"large\"\n        icon={LockIcon}\n        title={intl.formatMessage(messages.permsTitle)}\n        text={intl.formatMessage(messages.permsBody)}\n      />\n    ))\n  );\n};\n\nexport default App;\n","import * as ActionTypes from '../AppConstants';\n\nimport API from '../Utilities/Api';\n\nconst fetchData = async (url, headers, options, search) => {\n  await insights.chrome.auth.getUser();\n  const response = search\n    ? await API.get(`${url}?${search}`, headers, options)\n    : await API.get(`${url}`, headers, options);\n  return response.data;\n};\n\nconst setData = async (url, headers, options) => {\n  await insights.chrome.auth.getUser();\n  const response = await API.post(url, headers, options);\n  return response.data;\n};\n\nexport const fetchStatsRules = (options) => ({\n  type: ActionTypes.STATS_RULES_FETCH,\n  payload: fetchData(ActionTypes.STATS_RULES_FETCH_URL, {}, options),\n});\nexport const fetchStatsSystems = (options) => ({\n  type: ActionTypes.STATS_SYSTEMS_FETCH,\n  payload: fetchData(ActionTypes.STATS_SYSTEMS_FETCH_URL, {}, options),\n});\nexport const fetchStatsStaleHosts = (options) => ({\n  type: ActionTypes.STATS_STALEHOSTS_FETCH,\n  payload: fetchData(ActionTypes.STATS_STALEHOSTS_FETCH_URL, {}, options),\n});\n\nlet rulesPromises = [];\nexport const fetchRules = (options, search) => {\n  rulesPromises.push(\n    fetchData(ActionTypes.RULES_FETCH_URL, {}, options, search && search)\n  );\n  return {\n    type: ActionTypes.RULES_FETCH,\n    payload: Promise.all(rulesPromises).then((results) => {\n      rulesPromises = [];\n      return results.pop();\n    }),\n  };\n};\n\nexport const fetchRule = (options, search) => ({\n  type: ActionTypes.RULE_FETCH,\n  payload: fetchData(\n    `${ActionTypes.RULES_FETCH_URL}${options.rule_id}/`,\n    {},\n    options,\n    search && search\n  ),\n});\nexport const fetchSystem = (ruleId, options, search) => ({\n  type: ActionTypes.SYSTEM_FETCH,\n  payload: fetchData(\n    `${ActionTypes.RULES_FETCH_URL}${encodeURI(ruleId)}/systems/`,\n    {},\n    options,\n    search && search\n  ),\n});\nexport const setFilters = (filters) => ({\n  type: ActionTypes.FILTERS_SET,\n  payload: filters,\n});\nexport const fetchTopics = (options) => ({\n  type: ActionTypes.TOPICS_FETCH,\n  payload: fetchData(ActionTypes.TOPICS_FETCH_URL, {}, options),\n});\nexport const fetchTopicsAdmin = () => ({\n  type: ActionTypes.TOPICS_FETCH,\n  payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}?show_disabled=true`),\n});\nexport const fetchTopic = (options) => ({\n  type: ActionTypes.TOPIC_FETCH,\n  payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}${options.topic_id}/`),\n});\nexport const fetchSystems = (options) => ({\n  type: ActionTypes.SYSTEMS_FETCH,\n  payload: fetchData(ActionTypes.SYSTEMS_FETCH_URL, {}, options),\n});\nexport const fetchRuleAck = (options) => ({\n  type: ActionTypes.RULE_ACK_FETCH,\n  payload: fetchData(`${ActionTypes.RULE_ACK_URL}${options.rule_id}/`),\n});\nexport const setAck = (options) => ({\n  type: ActionTypes[`${options.type}_ACK_SET`],\n  payload: setData(ActionTypes[`${options.type}_ACK_URL`], {}, options.options),\n});\nexport const fetchHostAcks = (options) => ({\n  type: ActionTypes.HOST_ACK_FETCH,\n  payload: fetchData(`${ActionTypes.HOST_ACK_URL}`, {}, options),\n});\nexport const setFiltersSystems = (filters) => ({\n  type: ActionTypes.FILTERS_SYSTEMS_SET,\n  payload: filters,\n});\nexport const setSelectedTags = (tags) => ({\n  type: ActionTypes.SELECTED_TAGS_SET,\n  payload: tags,\n});\nexport const setRule = (rule) => ({\n  type: ActionTypes.RULE_SET,\n  payload: rule,\n});\nexport const setSystem = (system) => ({\n  type: ActionTypes.SYSTEM_SET,\n  payload: system,\n});\nexport const setWorkloads = (data) => ({\n  type: ActionTypes.WORKLOADS_SET,\n  payload: data,\n});\n\nexport const setSIDs = (data) => ({\n  type: ActionTypes.SID_SET,\n  payload: data,\n});\n","/* eslint-disable new-cap */\nimport * as ActionTypes from '../AppConstants';\n\nimport Advisor from '../SmartComponents/SystemAdvisor';\nimport Immutable from 'seamless-immutable';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst initialState = Immutable({\n  rule: {},\n  ruleFetchStatus: '',\n  rules: {},\n  rulesFetchStatus: '',\n  statsRules: {},\n  statsRulesFetchStatus: '',\n  statsSystems: {},\n  statsSystemsFetchStatus: '',\n  statsStaleHosts: {},\n  statsStaleHostsFetchStatus: '',\n  system: {},\n  systemFetchStatus: '',\n  systemtype: {},\n  systemtypeFetchStatus: '',\n  filters: {\n    impacting: ['true'],\n    rule_status: 'enabled',\n    sort: '-total_risk',\n    limit: 20,\n    offset: 0,\n  },\n  filtersSystems: { sort: '-last_seen', limit: 20, offset: 0 },\n  topic: {},\n  topicFetchStatus: '',\n  topics: [],\n  topicsFetchStatus: '',\n  systems: {},\n  systemsFetchStatus: '',\n  ruleAck: {},\n  ruleAckFetchStatus: '',\n  hostAcks: {},\n  hostAcksFetchStatus: '',\n  selectedTags: null,\n  workloads: {},\n  SID: [],\n});\n\nexport const getAdvisorStore =\n  (previousState) =>\n  (state = Immutable(previousState) || initialState, action) => {\n    switch (action.type) {\n      case `${ActionTypes.RULE_FETCH}_PENDING`:\n        return state.set('ruleFetchStatus', 'pending');\n      case `${ActionTypes.RULE_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          rule: action.payload,\n          ruleFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.RULE_FETCH}_REJECTED`:\n        return state.set('ruleFetchStatus', 'rejected');\n\n      case `${ActionTypes.RULES_FETCH}_PENDING`:\n        return state.set('rulesFetchStatus', 'pending');\n      case `${ActionTypes.RULES_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          rules: action.payload,\n          rulesFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.RULES_FETCH}_REJECTED`:\n        return state.set('rulesFetchStatus', 'rejected');\n\n      case `${ActionTypes.STATS_RULES_FETCH}_PENDING`:\n        return state.set('statsRulesFetchStatus', 'pending');\n      case `${ActionTypes.STATS_RULES_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          statsRules: action.payload,\n          statsRulesFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.STATS_RULES_FETCH}_REJECTED`:\n        return state.set('statsRulesFetchStatus', 'rejected');\n\n      case `${ActionTypes.STATS_SYSTEMS_FETCH}_PENDING`:\n        return state.set('statsSystemsFetchStatus', 'pending');\n      case `${ActionTypes.STATS_SYSTEMS_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          statsSystems: action.payload,\n          statsSystemsFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.STATS_SYSTEMS_FETCH}_REJECTED`:\n        return state.set('statsSystemsFetchStatus', 'rejected');\n\n      case `${ActionTypes.STATS_STALEHOSTS_FETCH}_PENDING`:\n        return state.set('statsStaleHostsFetchStatus', 'pending');\n      case `${ActionTypes.STATS_STALEHOSTS_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          statsStaleHosts: action.payload,\n          statsStaleHostsFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.STATS_STALEHOSTS_FETCH}_REJECTED`:\n        return state.set('statsStaleHostsFetchStatus', 'rejected');\n\n      case `${ActionTypes.SYSTEM_FETCH}_PENDING`:\n        return state.set('systemFetchStatus', 'pending');\n      case `${ActionTypes.SYSTEM_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          system: action.payload,\n          systemFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.SYSTEM_FETCH}_REJECTED`:\n        return state.set('systemFetchStatus', 'rejected');\n\n      case `${ActionTypes.SYSTEMTYPE_FETCH}_PENDING`:\n        return state.set('systemtypeFetchStatus', 'pending');\n      case `${ActionTypes.SYSTEMTYPE_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          systemtype: action.payload,\n          systemtypeFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.SYSTEMTYPE_FETCH}_REJECTED`:\n        return state.set('systemFetchStatus', 'rejected');\n\n      case ActionTypes.FILTERS_SET:\n        return Immutable.merge(state, {\n          filters: action.payload,\n        });\n\n      case `${ActionTypes.TOPIC_FETCH}_PENDING`:\n        return state.set('topicFetchStatus', 'pending');\n      case `${ActionTypes.TOPIC_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          topic: action.payload,\n          topicFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.TOPIC_FETCH}_REJECTED`:\n        return state.set('topicFetchStatus', 'rejected');\n\n      case `${ActionTypes.TOPICS_FETCH}_PENDING`:\n        return state.set('topicsFetchStatus', 'pending');\n      case `${ActionTypes.TOPICS_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          topics: action.payload,\n          topicsFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.TOPICS_FETCH}_REJECTED`:\n        return state.set('topicsFetchStatus', 'rejected');\n\n      case `${ActionTypes.SYSTEMS_FETCH}_PENDING`:\n        return state.set('systemsFetchStatus', 'pending');\n      case `${ActionTypes.SYSTEMS_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          systems: action.payload,\n          systemsFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.SYSTEMS_FETCH}_REJECTED`:\n        return state.set('systemsFetchStatus', 'rejected');\n\n      case `${ActionTypes.RULE_ACK_FETCH}_PENDING`:\n        return state.set('ruleAckFetchStatus', 'pending');\n      case `${ActionTypes.RULE_ACK_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          ruleAck: action.payload,\n          ruleAckFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.RULE_ACK_FETCH}_REJECTED`:\n        return state.set('ruleAckFetchStatus', 'rejected');\n\n      case ActionTypes.RULE_ACK_SET:\n        return Immutable.merge(state, {\n          ruleAck: action.payload,\n        });\n\n      case `${ActionTypes.HOST_ACK_FETCH}_PENDING`:\n        return state.set('hostAcksFetchStatus', 'pending');\n      case `${ActionTypes.HOST_ACK_FETCH}_FULFILLED`:\n        return Immutable.merge(state, {\n          hostAcks: action.payload,\n          hostAcksFetchStatus: 'fulfilled',\n        });\n      case `${ActionTypes.HOST_ACK_FETCH}_REJECTED`:\n        return state.set('hostAcksFetchStatus', 'rejected');\n\n      case ActionTypes.FILTERS_SYSTEMS_SET:\n        return Immutable.merge(state, {\n          filtersSystems: action.payload,\n        });\n\n      case ActionTypes.SELECTED_TAGS_SET:\n        return Immutable.merge(state, {\n          selectedTags: action.payload,\n        });\n\n      case ActionTypes.RULE_SET:\n        return Immutable.merge(state, {\n          rule: action.payload,\n        });\n\n      case ActionTypes.SYSTEM_SET:\n        return Immutable.merge(state, {\n          system: action.payload,\n        });\n\n      case ActionTypes.WORKLOADS_SET:\n        return Immutable.merge(state, {\n          workloads: action.payload,\n        });\n\n      case ActionTypes.SID_SET:\n        return Immutable.merge(state, {\n          SID: action.payload,\n        });\n\n      default:\n        return state;\n    }\n  };\n\nexport function systemReducer(cols, INVENTORY_ACTION_TYPES) {\n  return applyReducerHash({\n    [`${INVENTORY_ACTION_TYPES.LOAD_ENTITIES}_FULFILLED`]: (state) => {\n      const { [state.columns.length - 1]: lastCol } = state.columns;\n      cols[cols.length - 1] = {\n        ...lastCol,\n        ...cols[cols.length - 1],\n      };\n      return {\n        ...state,\n        columns: cols.map((cell) => ({\n          ...cell,\n          ...state.columns.find(({ key }) => cell.key === key),\n        })),\n      };\n    },\n  });\n}\n\nexport function entitiesDetailsReducer(ActionTypes) {\n  return applyReducerHash(\n    {\n      [`${ActionTypes.LOAD_ENTITY}_FULFILLED`]: enableApplications,\n    },\n    {}\n  );\n}\n\nfunction enableApplications(state) {\n  return {\n    ...state,\n    loaded: true,\n    activeApps: [{ title: 'Insights', name: 'insights', component: Advisor }],\n  };\n}\n","import {\n  notifications,\n  notificationsMiddleware,\n} from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport { compose } from 'redux';\n// import { Pathways } from '../Services/Pathways';\n// import { configureStore } from '@reduxjs/toolkit';\nimport { getAdvisorStore } from './AppReducer';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\n// import logger from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nconst localStorage = (store) => (next) => (action) => {\n  next(action);\n  const activeStore = store.getState().AdvisorStore;\n  sessionStorage.setItem('AdvisorStore', JSON.stringify(activeStore));\n};\n\nexport function init(...middleware) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  registry = getRegistry(\n    {},\n    [\n      ...middleware,\n      promiseMiddleware,\n      notificationsMiddleware({\n        errorTitleKey: ['message'],\n        errorDescriptionKey: ['response.data.detail'],\n      }),\n      localStorage,\n    ],\n    composeEnhancers\n  );\n\n  const previousAdvisorStore = JSON.parse(\n    sessionStorage.getItem('AdvisorStore')\n  );\n  registry.register({ AdvisorStore: getAdvisorStore(previousAdvisorStore) });\n  registry.register({ notifications });\n\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n\n// const getStore = () => {\n//   const reducer = {\n//     [Pathways.reducerPath]: Pathways.reducer,\n//   };\n\n//   return configureStore({\n//     reducer,\n//     middleware: (getDefaultMiddleware) => {\n//       const middleware = getDefaultMiddleware({\n//         // serializableCheck: false,\n//       });\n//       if (process.env.NODE_ENV !== 'production') {\n//         middleware.concat(logger);\n//       }\n\n//       middleware.concat(Pathways.middleware);\n\n//       return middleware;\n//     },\n//     devTools: process.env.NODE_ENV !== 'production',\n//   });\n// };\n\n// export { getStore };\n"],"names":["Recs","lazy","Systems","paths","title","path","component","Routes","Suspense","fallback","Bullseye","Spinner","size","Switch","map","Route","key","rootClass","Redirect","to","push","intl","useIntl","useHistory","pathname","useLocation","permsViewRecs","usePermissions","PERMS","useState","auth","setAuth","dispatch","useDispatch","appNavClick","useMemo","recommendations","redirect","insights","chrome","id","systems","topics","useEffect","init","getUser","then","identifyApp","globalFilterScope","on","data","mapGlobalFilter","workloads","SID","selectedTags","batch","setWorkloads","setSelectedTags","setSIDs","baseComponentUrl","split","unregister","event","domEvent","navId","undefined","isLoading","hasAccess","MessageState","variant","icon","LockIcon","formatMessage","messages","text","fetchData","url","headers","options","search","API","response","setData","rulesPromises","fetchRules","ActionTypes","type","payload","Promise","all","results","pop","fetchRule","rule_id","fetchSystem","ruleId","encodeURI","setFilters","filters","fetchTopics","fetchTopicsAdmin","fetchTopic","topic_id","fetchRuleAck","setAck","fetchHostAcks","setFiltersSystems","tags","initialState","Immutable","rule","ruleFetchStatus","rules","rulesFetchStatus","statsRules","statsRulesFetchStatus","statsSystems","statsSystemsFetchStatus","statsStaleHosts","statsStaleHostsFetchStatus","system","systemFetchStatus","systemtype","systemtypeFetchStatus","impacting","rule_status","sort","limit","offset","filtersSystems","topic","topicFetchStatus","topicsFetchStatus","systemsFetchStatus","ruleAck","ruleAckFetchStatus","hostAcks","hostAcksFetchStatus","getAdvisorStore","previousState","state","action","set","systemReducer","cols","INVENTORY_ACTION_TYPES","applyReducerHash","LOAD_ENTITIES","lastCol","columns","length","cell","find","entitiesDetailsReducer","LOAD_ENTITY","enableApplications","loaded","activeApps","name","Advisor","registry","localStorage","store","next","activeStore","getState","AdvisorStore","sessionStorage","setItem","JSON","stringify","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","previousAdvisorStore","parse","getItem","register","notifications"],"sourceRoot":""}