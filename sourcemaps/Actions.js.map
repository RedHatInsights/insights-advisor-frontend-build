{"version":3,"sources":["webpack:///./src/SmartComponents/Actions/Actions.js"],"names":["SummaryChart","SummaryChartItem","sevNames","Actions","props","state","severity","total","response","info","warn","error","critical","category","Availability","Security","Stability","Performance","setState","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AAEA;;AACA;;;;AAKA,IAAMA,eAAe,8BAAe;AAAA,WAAM,oNAAN;AAAA,CAAf,CAArB;AACA,IAAMC,mBAAmB,8BAAe;AAAA,WAAM,oOAAN;AAAA,CAAf,CAAzB;;AAEA,IAAMC,WAAW,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,UAA1B,CAAjB;;IAEMC,O;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oIACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,sBAAU,EADD;AAETC,mBAAO;AAFE,SAAb;AAFe;AAMlB;;;;4CAEmB;AAChB;AACA,gBAAMC,WAAW;AACbD,uBAAO,CADM;AAEbD,0BAAU,EAAEG,MAAM,CAAR,EAAWC,MAAM,CAAjB,EAAoBC,OAAO,CAA3B,EAA8BC,UAAU,CAAxC,EAFG;AAGbC,0BAAU,EAAEC,cAAc,CAAhB,EAAmBC,UAAU,CAA7B,EAAgCC,WAAW,CAA3C,EAA8CC,aAAa,CAA3D;AAHG,aAAjB;AAKA,iBAAKC,QAAL,CAAc,EAAEZ,UAAU,CAACE,SAASF,QAAT,CAAkBG,IAAnB,EAAyBD,SAASF,QAAT,CAAkBI,IAA3C,EAAiDF,SAASF,QAAT,CAAkBK,KAAnE,EAA0EH,SAASF,QAAT,CAAkBM,QAA5F,CAAZ,EAAd;AACA,iBAAKM,QAAL,CAAc,EAAEX,OAAOC,SAASD,KAAlB,EAAd;AACH;;;iCAEQ;AACL,mBACI;AAAC,+BAAD,CAAO,QAAP;AAAA;AACI;AAAC,0DAAD;AAAA;AACI,kDAAC,2CAAD,IAAiB,OAAM,SAAvB;AADJ,iBADJ;AAKI;AAAC,uDAAD;AAAA,sBAAS,MAAK,SAAd;AACI;AAAC,uCAAD;AAAA,0BAAM,QAAO,IAAb;AACI;AAAC,+CAAD;AAAA,8BAAU,MAAM,CAAhB;AAAA;AAAA,yBADJ;AAEI;AAAC,+CAAD;AAAA,8BAAU,MAAM,CAAhB;AACI;AAAC,+CAAD;AAAA;AACI;AAAC,yDAAD;AAAA;AAAA;AAAA,iCADJ;AAEI;AAAC,uDAAD;AAAA;AACI;AAAC,oDAAD;AAAA;AACI,sEAAC,gBAAD;AACI,kDAAOL,SAAS,CAAT,CADX;AAEI,uDAAY,KAAKG,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAFhB;AAGI,yDAAc,KAAKD,KAAL,CAAWE,KAH7B,GADJ;AAKI,sEAAC,gBAAD;AACI,kDAAOL,SAAS,CAAT,CADX;AAEI,uDAAY,KAAKG,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAFhB;AAGI,yDAAc,KAAKD,KAAL,CAAWE,KAH7B,GALJ;AASI,sEAAC,gBAAD;AACI,kDAAOL,SAAS,CAAT,CADX;AAEI,uDAAY,KAAKG,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAFhB;AAGI,yDAAc,KAAKD,KAAL,CAAWE,KAH7B,GATJ;AAaI,sEAAC,gBAAD;AACI,kDAAOL,SAAS,CAAT,CADX;AAEI,uDAAY,KAAKG,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAFhB;AAGI,yDAAc,KAAKD,KAAL,CAAWE,KAH7B;AAbJ;AADJ;AAFJ;AADJ;AAFJ;AADJ;AALJ,aADJ;AAsCH;;;EA3DiBY,gB;;kBA8DP,gCAAWhB,OAAX,C","file":"js/Actions.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport asyncComponent from '../../Utilities/asyncComponent';\nimport '../../App.scss';\n\nimport { Card, CardHeader, CardBody, Grid, GridItem } from '@patternfly/react-core';\nimport {\n    Section,\n    PageHeader, PageHeaderTitle\n} from '@red-hat-insights/insights-frontend-components';\n\nconst SummaryChart = asyncComponent(() => import('../../PresentationalComponents/SummaryChart/SummaryChart.js'));\nconst SummaryChartItem = asyncComponent(() => import('../../PresentationalComponents/SummaryChartItem/SummaryChartItem.js'));\n\nconst sevNames = ['Low', 'Medium', 'High', 'Critical'];\n\nclass Actions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            severity: [],\n            total: 0\n        };\n    }\n\n    componentDidMount() {\n        // 1=INFO 2=WARN 3=ERROR 4=CRITICAL\n        const response = {\n            total: 9,\n            severity: { info: 0, warn: 2, error: 3, critical: 4 },\n            category: { Availability: 1, Security: 0, Stability: 1, Performance: 0 }\n        };\n        this.setState({ severity: [response.severity.info, response.severity.warn, response.severity.error, response.severity.critical] });\n        this.setState({ total: response.total });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Actions'/>\n                </PageHeader>\n\n                <Section type='content'>\n                    <Grid gutter='md'>\n                        <GridItem span={4}>Donut</GridItem>\n                        <GridItem span={4}>\n                            <Card>\n                                <CardHeader>Risk Summary</CardHeader>\n                                <CardBody>\n                                    <SummaryChart>\n                                        <SummaryChartItem\n                                            name={ sevNames[3] }\n                                            numIssues={ this.state.severity[3] }\n                                            totalIssues={ this.state.total }/>\n                                        <SummaryChartItem\n                                            name={ sevNames[2] }\n                                            numIssues={ this.state.severity[2] }\n                                            totalIssues={ this.state.total }/>\n                                        <SummaryChartItem\n                                            name={ sevNames[1] }\n                                            numIssues={ this.state.severity[1] }\n                                            totalIssues={ this.state.total }/>\n                                        <SummaryChartItem\n                                            name={ sevNames[0] }\n                                            numIssues={ this.state.severity[0] }\n                                            totalIssues={ this.state.total }/>\n                                    </SummaryChart>\n                                </CardBody>\n                            </Card>\n                        </GridItem>\n                    </Grid>\n                </Section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Actions);\n"],"sourceRoot":""}