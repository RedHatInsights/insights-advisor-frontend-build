{"version":3,"file":"js/3767.1652442730696.e2aeb781ef782eb9cf99.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/RulesTable/Components/EmptyState.js","webpack:///./src/PresentationalComponents/RulesTable/helpers.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\nimport MessageState from '../../MessageState/MessageState';\nimport { messageMapping } from '../helpers';\n\nconst EmptyState = ({ filters, toggleRulesDisabled }) => {\n  const message =\n    messageMapping()[filters.rule_status] || messageMapping().default;\n\n  return (\n    <MessageState\n      icon={CheckCircleIcon}\n      iconClass=\"ansibleCheck\"\n      title={message.title}\n      text={message.body}\n    >\n      {filters.rule_status === 'enabled' && (\n        <Button\n          variant=\"link\"\n          style={{ paddingTop: 24 }}\n          onClick={() => toggleRulesDisabled('all')}\n        >\n          <FormattedMessage id=\"rulestable.norulehits.adddisabledbutton\" />\n        </Button>\n      )}\n    </MessageState>\n  );\n};\n\nEmptyState.propTypes = {\n  filters: propTypes.object,\n  toggleRulesDisabled: propTypes.func,\n};\n\nexport default EmptyState;\n","import React from 'react';\nimport { Text } from '@patternfly/react-core';\nimport EmptyState from './Components/EmptyState';\nimport { FormattedMessage } from 'react-intl';\n\nexport const emptyRows = (filters, toggleRulesDisabled) => [\n  {\n    cells: [\n      {\n        title: <EmptyState {...{ filters, toggleRulesDisabled }} />,\n        props: { colSpan: 6 },\n      },\n    ],\n  },\n];\n\nexport const messageMapping = () => {\n  const title = <FormattedMessage id=\"rulestable.norulehits.title\" />;\n\n  return {\n    enabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    disabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    rhdisabled: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"rulestable.norules.redhatdisabledrulesbody\" />\n        </Text>\n      ),\n    },\n    default: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"noRecommendations\" />\n        </Text>\n      ),\n    },\n  };\n};\n","import './_RulesTable.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../Labels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useGetRecsQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { emptyRows } from './helpers';\n\nconst RulesTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.modified),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.riskofchange),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.remediation),\n      transforms: [sortable, cellWidth(15), fitContent],\n    },\n  ]);\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.recState);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n  const setFilters = (filters) => dispatch(updateRecFilters(filters));\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: rules = [],\n    isFetching,\n    isLoading,\n    isError,\n    refetch,\n  } = useGetRecsQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'resolution_risk',\n    6: 'impacted_count',\n    7: 'playbook_count',\n  };\n\n  const ruleResolutionRisk = (rule) => {\n    const resolution = rule.resolution_set.find(\n      (resolution) =>\n        resolution.system_type === AppConstants.SYSTEM_TYPES.rhel ||\n        AppConstants.SYSTEM_TYPES.ocp\n    );\n    return resolution ? resolution.resolution_risk.risk : undefined;\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n\n  const hideReports = async (rowId) => {\n    const rule = rows[rowId].rule;\n\n    try {\n      if (rule.rule_status === 'enabled') {\n        setSelectedRule(rule);\n        setDisableRuleOpen(true);\n      } else {\n        try {\n          await DeleteApi(`${AppConstants.BASE_URL}/ack/${rule.rule_id}/`);\n          addNotification({\n            variant: 'success',\n            timeout: true,\n            dismissable: true,\n            title: intl.formatMessage(messages.recSuccessfullyEnabled),\n          });\n          refetch();\n        } catch (error) {\n          addNotification({\n            variant: 'danger',\n            dismissable: true,\n            title: intl.formatMessage(messages.error),\n            description: `${error}`,\n          });\n        }\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title:\n          rule.rule_status === 'enabled'\n            ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n            : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n      paramsObject.has_playbook !== undefined &&\n        !Array.isArray(paramsObject.has_playbook) &&\n        (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot !== undefined &&\n        !Array.isArray(paramsObject.reboot) &&\n        (paramsObject.reboot = [`${paramsObject.reboot}`]);\n      paramsObject.impacting !== undefined &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sortIndex = Object.entries(sortIndices)?.find(\n      (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n    );\n    if (filters.sort !== undefined && sortIndex) {\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: Number(sortIndex[0]), direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows(emptyRows(filters, toggleRulesDisabled));\n      } else {\n        const rows = rules.data.flatMap((value, key) => [\n          {\n            isOpen: isAllExpanded,\n            rule: value,\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                      {' '}\n                      {value.description}{' '}\n                    </Link>\n                    <RuleLabels rule={value} isCompact />\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <DateFormat\n                    key={key}\n                    date={value.publish_date}\n                    variant=\"relative\"\n                  />\n                ),\n              },\n              {\n                title: (\n                  <CategoryLabel\n                    key={key}\n                    labelList={[value.category]}\n                    isCompact\n                  />\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <Tooltip\n                      key={key}\n                      position={TooltipPosition.bottom}\n                      content={intl.formatMessage(\n                        messages.rulesDetailsTotalriskBody,\n                        {\n                          risk:\n                            AppConstants.TOTAL_RISK_LABEL_LOWER[\n                              value.total_risk\n                            ] || intl.formatMessage(messages.undefined),\n                          strong: (str) => strong(str),\n                        }\n                      )}\n                    >\n                      <InsightsLabel value={value.total_risk} isCompact />\n                    </Tooltip>\n                  </div>\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <InsightsLabel\n                      text={\n                        AppConstants.RISK_OF_CHANGE_LABEL[\n                          ruleResolutionRisk(value)\n                        ]\n                      }\n                      value={ruleResolutionRisk(value)}\n                      hideIcon\n                      isCompact\n                    />\n                    <div></div>\n                  </div>\n                ),\n              },\n              {\n                title:\n                  value.rule_status === 'rhdisabled' ? (\n                    <Tooltip\n                      content={intl.formatMessage(messages.byEnabling, {\n                        systems: value.impacted_systems_count,\n                      })}\n                    >\n                      <span>{intl.formatMessage(messages.nA)}</span>\n                    </Tooltip>\n                  ) : (\n                    <div\n                      key={key}\n                    >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                  ),\n              },\n              {\n                title: (\n                  <div className=\"ins-c-center-text \" key={key}>\n                    {value.playbook_count ? (\n                      <span>\n                        <AnsibeTowerIcon size=\"sm\" />{' '}\n                        {intl.formatMessage(messages.playbook)}\n                      </span>\n                    ) : (\n                      intl.formatMessage(messages.manual)\n                    )}\n                  </div>\n                ),\n              },\n            ],\n          },\n          {\n            parent: key * 2,\n            fullWidth: true,\n            cells: [\n              {\n                title: (\n                  <Main className=\"pf-m-light\">\n                    <Stack hasGutter>\n                      {value.hosts_acked_count ? (\n                        <StackItem>\n                          <BellSlashIcon size=\"sm\" />\n                          &nbsp;\n                          {value.hosts_acked_count &&\n                          !value.impacted_systems_count\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledForAllSystems\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledForSystemsBody,\n                                { systems: value.hosts_acked_count }\n                              )}\n                          &nbsp;{' '}\n                          <Button\n                            isInline\n                            variant=\"link\"\n                            ouiaId=\"viewSystem\"\n                            onClick={() => {\n                              setViewSystemsModalRule(value);\n                              setViewSystemsModalOpen(true);\n                            }}\n                          >\n                            {intl.formatMessage(messages.viewSystems)}\n                          </Button>\n                        </StackItem>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )}\n                      <RuleDetails\n                        rule={value}\n                        resolutionRisk={ruleResolutionRisk(value)}\n                        riskOfChangeDesc={\n                          AppConstants.RISK_OF_CHANGE_DESC[\n                            ruleResolutionRisk(value)\n                          ]\n                        }\n                      />\n                    </Stack>\n                  </Main>\n                ),\n              },\n            ],\n          },\n        ]);\n        setRows(rows);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rules]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (_event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    showDeleteButton: true,\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n          pathway: filters.pathway,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const afterViewSystemsFn = () => {\n    refetch();\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={afterViewSystemsFn}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={refetch}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID,\n              dispatch\n            ),\n          isDisabled: !permsExport,\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      ) : (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default RulesTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["EmptyState","filters","toggleRulesDisabled","message","messageMapping","rule_status","MessageState","icon","CheckCircleIcon","iconClass","title","text","body","Button","variant","style","paddingTop","onClick","id","propTypes","enabled","Text","disabled","rhdisabled","default","intl","useIntl","dispatch","useDispatch","search","useLocation","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","useState","formatMessage","messages","transforms","sortable","cellWidth","fitContent","cols","selectedTags","useSelector","workloads","SID","recState","rows","setRows","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","addNotification","data","addNotificationAction","setFilters","updateRecFilters","options","length","tags","join","workloadQueryBuilder","useGetRecsQuery","filterFetchBuilder","rules","isFetching","isLoading","isError","refetch","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","6","7","ruleResolutionRisk","rule","resolution","resolution_set","find","system_type","resolution_risk","risk","undefined","useEffect","urlBuilder","onSetPage","pageNumber","newOffset","limit","offset","impacting","hideReports","rowId","DeleteApi","rule_id","timeout","dismissable","description","paramsObject","paramParser","sort","has_playbook","Array","isArray","incident","Number","reboot","sortIndex","Object","entries","item","sortDirection","index","direction","cells","props","colSpan","emptyRows","flatMap","value","key","isOpen","Link","to","RuleLabels","isCompact","DateFormat","date","publish_date","CategoryLabel","labelList","category","Tooltip","position","TooltipPosition","content","total_risk","strong","str","InsightsLabel","hideIcon","systems","impacted_systems_count","toLocaleString","className","playbook_count","size","parent","fullWidth","Main","Stack","hasGutter","hosts_acked_count","StackItem","isInline","ouiaId","RuleDetails","resolutionRisk","riskOfChangeDesc","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","label","toLowerCase","filterValues","onChange","_event","placeholder","FC","type","items","res_risk","impact","likelihood","e","activeFiltersConfig","deleteTitle","topic","pruneFilters","showDeleteButton","onDelete","itemsToRemove","isAll","pathway","map","newFilter","urlParam","String","chips","ViewHostAcks","handleModalToggle","toggleModal","isModalOpen","afterFn","DisableRule","PrimaryToolbar","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","fileType","downloadReport","filterConfig","Loading","Failed","Table","aria-label","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","orderParam","areActionsDisabled","isStickyHeader","TableHeader","TableBody","Pagination","widgetId","PaginationVariant","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}