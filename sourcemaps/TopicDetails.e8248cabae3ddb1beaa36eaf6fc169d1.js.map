{"version":3,"file":"js/TopicDetails.1683202759735.c0dcdffe3fb49a6b980e.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/SmartComponents/Topics/Details.js","webpack:///./src/SmartComponents/Topics/_Details.scss","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Breadcrumb|./breadcrumb.css","webpack:///ignored|/home/travis/build/RedHatInsights/insights-advisor-frontend/node_modules/@patternfly/react-styles/css/components/Content|./content.css"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Breadcrumb } from '@patternfly/react-core/dist/esm/components/Breadcrumb/Breadcrumb';\nimport { BreadcrumbItem } from '@patternfly/react-core/dist/esm/components/Breadcrumb/BreadcrumbItem';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useGetRecQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\n\nconst Breadcrumbs = ({ current }) => {\n  const intl = useIntl();\n  const location = useLocation().pathname?.split('/');\n  const [items, setItems] = useState([]);\n  const skip =\n    !(location[1] === 'recommendations' && location.length === 4) ||\n    location[2] === 'pathways';\n  const { data, isFetching } = useGetRecQuery(\n    { ruleId: location[2] },\n    { skip }\n  );\n\n  useEffect(() => {\n    const buildBreadcrumbs = () => {\n      let crumbs = [];\n      // add base\n      crumbs.push({\n        title: `${intl.formatMessage(messages.insightsHeader)} ${location[1]}`,\n        navigate: `/${location[1]}`,\n      });\n\n      // if applicable, add :id breadcrumb\n      if (!skip) {\n        crumbs.push({\n          title: data?.description,\n          navigate: `/${location[1]}/${location[2]}`,\n        });\n      }\n\n      if (location[2] === 'pathways') {\n        crumbs = [\n          {\n            title: 'Advisor pathways',\n            navigate: '/recommendations/pathways',\n          },\n        ];\n      }\n\n      setItems(crumbs);\n    };\n\n    buildBreadcrumbs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      {!isFetching && items.length > 0 ? (\n        <Breadcrumb ouiaId=\"detail\">\n          {items.map((oneLink, key) => (\n            <BreadcrumbItem key={key}>\n              <Link to={oneLink.navigate}>{oneLink.title}</Link>\n            </BreadcrumbItem>\n          ))}\n          <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n        </Breadcrumb>\n      ) : (\n        intl.formatMessage(messages.loading)\n      )}\n    </React.Fragment>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  current: PropTypes.string,\n};\n\nexport default Breadcrumbs;\n","import './_Details.scss';\n\nimport React, { useEffect } from 'react';\nimport {\n  Text,\n  TextVariants,\n} from '@patternfly/react-core/dist/esm/components/Text/Text';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport { Truncate } from '@redhat-cloud-services/frontend-components/Truncate';\nimport messages from '../../Messages';\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useDispatch } from 'react-redux';\nimport { useGetTopicQuery } from '../../Services/Topics';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { workloadQueryBuilder } from '../../PresentationalComponents/Common/Tables';\n\nconst Details = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const recFilters = useSelector(({ filters }) => filters.recState);\n  const topicId = useParams().id;\n  let options = selectedTags?.length && { tags: selectedTags };\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: topic = {},\n    isLoading,\n    isFetching,\n    isError,\n  } = useGetTopicQuery({ ...options, ...{ topicId } });\n\n  useEffect(() => {\n    const initiaRecFilters = { ...recFilters };\n    dispatch(\n      updateRecFilters({\n        impacting: true,\n        rule_status: 'enabled',\n        topic: topicId,\n        sort: `-total_risk`,\n        limit: 10,\n        offset: 0,\n      })\n    );\n\n    return () => dispatch(updateRecFilters(initiaRecFilters));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (topic && topic.name) {\n      const subnav = `${topic.name} - ${messages.topics.defaultMessage}`;\n      document.title = intl.formatMessage(messages.documentTitle, { subnav });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [topic]);\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        {topic?.name && <Breadcrumbs current={topic?.name} ouiaId=\"details\" />}\n        {!isFetching && (\n          <React.Fragment>\n            <Title headingLevel=\"h3\" size=\"2xl\" className=\"pf-u-mb-lg\">\n              {topic.name}\n              {topic.featured && (\n                <Label\n                  color=\"blue\"\n                  className=\"adv-c-label pf-m-compact\"\n                  icon={<StarIcon />}\n                >\n                  {intl.formatMessage(messages.featured)}\n                </Label>\n              )}\n            </Title>\n            <TextContent className=\"pf-u-mt-md\">\n              <Text component={TextVariants.p}>\n                <Truncate\n                  text={topic.description}\n                  length={600}\n                  expandText={intl.formatMessage(messages.readmore)}\n                  collapseText={intl.formatMessage(messages.readless)}\n                  inline\n                />\n              </Text>\n            </TextContent>\n          </React.Fragment>\n        )}\n        {isFetching || (isLoading && <Loading />)}\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <React.Fragment>\n          {!isError ? (\n            <React.Fragment>\n              <Title headingLevel=\"h3\" size=\"2xl\" className=\"pf-u-mb-lg\">\n                {intl.formatMessage(messages.recommendations)}\n              </Title>\n              <RulesTable />\n            </React.Fragment>\n          ) : (\n            <MessageState\n              icon={TimesCircleIcon}\n              title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n              text={intl.formatMessage(messages.topicDetailslNodetailsBody)}\n            />\n          )}\n        </React.Fragment>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default Details;\n","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */"],"names":["React","useEffect","useState","Breadcrumb","BreadcrumbItem","Link","PropTypes","messages","useGetRecQuery","useIntl","useLocation","Breadcrumbs","current","intl","location","pathname","split","items","setItems","skip","length","ruleId","data","isFetching","buildBreadcrumbs","crumbs","push","title","formatMessage","insightsHeader","navigate","description","map","oneLink","key","loading","propTypes","string","Text","TextVariants","Label","Loading","MessageState","PageHeader","RulesTable","StarIcon","TextContent","TimesCircleIcon","Title","Truncate","updateRecFilters","useDispatch","useGetTopicQuery","useParams","useSelector","workloadQueryBuilder","Details","dispatch","selectedTags","filters","workloads","SID","recFilters","recState","topicId","id","options","tags","topic","isLoading","isError","initiaRecFilters","impacting","rule_status","sort","limit","offset","name","subnav","topics","defaultMessage","document","documentTitle","featured","p","readmore","readless","recommendations","topicDetailslNodetailsTitle","topicDetailslNodetailsBody"],"sourceRoot":""}