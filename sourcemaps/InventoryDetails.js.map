{"version":3,"sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-insights/index.css","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss","webpack:///./src/PresentationalComponents/Inventory/InventoryDetails.js"],"names":["Breadcrumbs","items","ruleDescriptionLoaded","type","indexOf","replace","props","match","params","inventoryId","undefined","fetchRule","rule_id","id","buildBreadcrumbs","ruleFetchStatus","state","setState","breadcrumbs","crumbs","push","title","url","split","navigate","getReadableType","rule","description","length","map","oneLink","key","current","React","Component","propTypes","PropTypes","arrayOf","Object","string","func","object","mapStateToProps","ownProps","AdvisorStore","mapDispatchToProps","dispatch","AppActions","routerParams","connect","InventoryDetails","registryDecorator","fetchInventoryDetails","insights","loadInventory","react","reactRouterDom","reactCore","reactIcons","inventoryConnector","mergeWithDetail","INVENTORY_ACTION_TYPES","InventoryDetailHead","AppInfo","getRegistry","register","entitiesDetailsReducer","InventoryDetail","navigateTo","history","entity","display_name","contextTypes","store","addAlert","any","entityDetails"],"mappings":"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","file":"js/InventoryDetails.js","sourcesContent":["// extracted by mini-css-extract-plugin","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { connect } from 'react-redux';\nimport * as AppActions from '../../AppActions';\nimport PropTypes from 'prop-types';\nimport './_breadcrumbs.scss';\n\nclass Breadcrumbs extends React.Component {\n    state = {\n        items: [],\n        ruleDescriptionLoaded: false\n    };\n\n    componentDidMount () {\n        if (this.props.match.params.inventoryId !== undefined) {\n            this.props.fetchRule({ rule_id: this.props.match.params.id }); // eslint-disable-line camelcase\n        } else {\n            this.buildBreadcrumbs();\n        }\n    }\n\n    componentDidUpdate () {\n        if (this.props.ruleFetchStatus === 'fulfilled' && !this.state.ruleDescriptionLoaded) {\n            this.setState({ ruleDescriptionLoaded: true });\n            this.buildBreadcrumbs();\n        }\n    }\n\n    getReadableType = (type) => (\n        type.indexOf('-') > -1 ? `${type.replace('-', ' ')} Overview` : type\n    );\n\n    buildBreadcrumbs () {\n        const { breadcrumbs, match } = this.props;\n        let crumbs = [];\n\n        // add overview/rules base breadcrumb\n        if (match.params.type !== undefined) {\n            if (breadcrumbs[0] !== undefined) {\n                crumbs.push(breadcrumbs[0]);\n            } else {\n                const title = match.url.split('/')[1];\n                crumbs.push({ title, navigate: `/${title}` });\n            }\n        }\n\n        // add :type breadcrumb (exception: Rules based breadcrumbs)\n        if (match.params.type !== undefined && match.params.id !== undefined && crumbs[0].title !== 'Rules') {\n            const title = this.getReadableType(match.params.type);\n            crumbs.push({\n                title,\n                navigate: `${crumbs[0].navigate}/${match.params.type}`\n            });\n        }\n\n        // add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            const title = this.props.rule.description;\n            if (crumbs[1] !== undefined) {\n                crumbs.push({\n                    title,\n                    navigate: `${crumbs[1].navigate}/${match.params.id}`\n                });\n            } else {\n                // build breadcrumb from beginning if Rule-based\n                crumbs.push({\n                    title,\n                    navigate: `/${match.url.split('/')[1]}/${match.params.type}/${match.params.id}`\n                });\n            }\n        }\n\n        this.setState({ items: crumbs });\n    }\n\n    render () {\n        const { ruleFetchStatus } = this.props;\n        const { items } = this.state;\n        return (\n            <React.Fragment>\n                { (ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                    <Breadcrumb>\n                        { items.map((oneLink, key) => (\n                            <BreadcrumbItem key={ key }>\n                                <Link to={ oneLink.navigate }>{ oneLink.title }</Link>\n                            </BreadcrumbItem>\n                        )) }\n                        <BreadcrumbItem isActive>{ this.props.current }</BreadcrumbItem>\n                    </Breadcrumb>\n                ) }\n                { ruleFetchStatus === 'pending' && ('Loading...') }\n            </React.Fragment>\n        );\n    }\n}\n\nBreadcrumbs.propTypes = {\n    breadcrumbs: PropTypes.arrayOf(Object),\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...state,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs));\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport registryDecorator from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport { Main, PageHeader } from '@redhat-cloud-services/frontend-components';\nimport { entitiesDetailsReducer } from '../../AppReducer';\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport '@redhat-cloud-services/frontend-components-inventory-insights/index.css';\n\n@registryDecorator()\nclass InventoryDetails extends React.Component {\n    state = { InventoryDetails: () => <Loading/> };\n\n    componentDidMount () {\n        this.fetchInventoryDetails();\n    }\n\n    async fetchInventoryDetails () {\n        const { inventoryConnector, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons\n        });\n        const { InventoryDetailHead, AppInfo } = inventoryConnector();\n\n        this.getRegistry().register({\n            ...mergeWithDetail(entitiesDetailsReducer(INVENTORY_ACTION_TYPES))\n        });\n        this.setState({\n            InventoryDetail: InventoryDetailHead, AppInfo\n        });\n    }\n\n    onNavigate (navigateTo) {\n        const { history } = this.props;\n        history.push(`/${navigateTo}`);\n    }\n\n    render () {\n        const { InventoryDetail, AppInfo } = this.state;\n        const { entity } = this.props;\n        return (\n            <>\n                <PageHeader className=\"pf-m-light ins-inventory-detail\">\n                    { entity && <Breadcrumbs\n                        current={ entity.display_name || entity.id }\n                        match={ this.props.match }\n                    /> }\n                    { InventoryDetail && <InventoryDetail hideBack/> }\n                </PageHeader>\n                <Main>\n                    <reactCore.Grid gutter=\"md\">\n                        <reactCore.GridItem span={ 12 }>\n                            { AppInfo && <AppInfo/> }\n                        </reactCore.GridItem>\n                    </reactCore.Grid>\n                </Main>\n            </>\n        );\n    }\n}\n\nInventoryDetails.contextTypes = {\n    store: PropTypes.object\n};\n\nInventoryDetails.propTypes = {\n    history: PropTypes.object,\n    entity: PropTypes.object,\n    addAlert: PropTypes.func,\n    match: PropTypes.any\n};\n\nfunction mapStateToProps (store) {\n    return {\n        entity: store.entityDetails && store.entityDetails.entity\n    };\n}\n\nexport default routerParams(connect(mapStateToProps, null)(InventoryDetails));\n"],"sourceRoot":""}