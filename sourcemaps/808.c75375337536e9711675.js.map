{"version":3,"sources":["webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js"],"names":["RuleLabels","rule","intl","useIntl","tags","search","Tooltip","content","formatMessage","messages","position","TooltipPosition","Label","color","className","rule_status","propTypes","PropTypes"],"mappings":"6NAaMA,EAAa,SAAC,GAAa,MAAXC,EAAW,EAAXA,KACdC,GAAOC,SACb,OACE,kBAAC,aAAD,MACuC,KAApCF,SAAA,UAAAA,EAAMG,YAAN,eAAYC,OAAO,cAClB,kBAAC,EAAAC,QAAD,CACEC,QAASL,EAAKM,cAAcC,qBAC5BC,SAAUC,yBAEV,kBAAC,EAAAC,MAAD,CAAOC,MAAM,MAAMC,UAAU,iBAC1BZ,EAAKM,cAAcC,gBAIJ,aAArBR,EAAKc,aACJ,kBAAC,EAAAT,QAAD,CACEC,QAASL,EAAKM,cAAcC,2BAC5BC,SAAUC,yBAEV,kBAAC,EAAAC,MAAD,CAAOC,MAAM,QAAQX,EAAKM,cAAcC,gBAGtB,eAArBR,EAAKc,aACJ,kBAAC,EAAAT,QAAD,CACEC,QAASL,EAAKM,cAAcC,2BAC5BC,SAAUC,yBAEV,kBAAC,EAAAC,MAAD,CAAOC,MAAM,QACVX,EAAKM,cAAcC,wBAQhCT,EAAWgB,UAAY,CACrBf,KAAMgB,YAGR","file":"js/808.633843e136ce4dda88a8.js","sourcesContent":["import './_RuleLabels.scss';\n\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst RuleLabels = ({ rule }) => {\n  const intl = useIntl();\n  return (\n    <React.Fragment>\n      {rule?.tags?.search('incident') !== -1 && (\n        <Tooltip\n          content={intl.formatMessage(messages.incidentTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"red\" className=\"incidentLabel\">\n            {intl.formatMessage(messages.incident)}\n          </Label>\n        </Tooltip>\n      )}\n      {rule.rule_status === 'disabled' && (\n        <Tooltip\n          content={intl.formatMessage(messages.ruleIsDisabledTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"gray\">{intl.formatMessage(messages.disabled)}</Label>\n        </Tooltip>\n      )}\n      {rule.rule_status === 'rhdisabled' && (\n        <Tooltip\n          content={intl.formatMessage(messages.ruleIsDisabledTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"gray\">\n            {intl.formatMessage(messages.redhatDisabled)}\n          </Label>\n        </Tooltip>\n      )}\n    </React.Fragment>\n  );\n};\n\nRuleLabels.propTypes = {\n  rule: PropTypes.object,\n};\n\nexport default RuleLabels;\n"],"sourceRoot":""}