{"version":3,"file":"js/SystemsTable.1668695877554.6364eebad3effbb96aa3.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_link_Color.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_md.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/Export/SystemsPdfBuild.js","webpack:///./src/PresentationalComponents/Export/SystemsPdf.js","webpack:///./src/PresentationalComponents/SystemsTable/Components/NoSystemsTable.js","webpack:///./src/PresentationalComponents/SystemsTable/SystemsTable.js","webpack:///./src/PresentationalComponents/SystemsTable/SystemsTableAssets.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.global_link_Color = {\n  \"name\": \"--pf-global--link--Color\",\n  \"value\": \"#06c\",\n  \"var\": \"var(--pf-global--link--Color)\"\n};\nexports[\"default\"] = exports.global_link_Color;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_md = {\n  \"name\": \"--pf-global--spacer--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--spacer--md)\"\n};\nexports[\"default\"] = exports.global_spacer_md;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nimport { BASE_URL, exportNotifications } from '../../AppConstants';\nimport { Get } from '../../Utilities/Api';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst fileName = (exportTable) => {\n  const defaultParams = {\n    date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc',\n  };\n\n  return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (\n  exportTable,\n  format,\n  filters,\n  selectedTags,\n  workloads,\n  SID,\n  dispatch\n) => {\n  try {\n    let options = selectedTags?.length && { tags: selectedTags };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    dispatch(addNotification(exportNotifications.pending));\n    const data = (\n      await Get(\n        `${BASE_URL}/export/${exportTable}.${\n          format === 'json' ? 'json' : 'csv'\n        }`,\n        {},\n        { ...filters, ...options }\n      )\n        .then((result) => {\n          dispatch(addNotification(exportNotifications.success));\n          return result;\n        })\n        .catch(() => dispatch(addNotification(exportNotifications.error)))\n    ).data;\n\n    let formattedData = format === 'json' ? JSON.stringify(data) : data;\n    downloadFile(formattedData, fileName(exportTable), format);\n  } catch (error) {\n    throw `${error}`;\n  }\n};\n\nexport default downloadHelper;\n","/* eslint-disable react/prop-types */\n\nimport {\n  Column,\n  Section,\n  Table,\n} from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { Link, StyleSheet, Text } from '@react-pdf/renderer';\n\nimport { BASE_URI } from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport c_table_m_compact_cell_PaddingBottom from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingBottom';\nimport c_table_m_compact_cell_PaddingLeft from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingLeft';\nimport c_table_m_compact_cell_PaddingTop from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingTop';\nimport chart_global_Fill_Color_700 from '@patternfly/react-tokens/dist/js/chart_global_Fill_Color_700';\nimport global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_link_Color from '@patternfly/react-tokens/dist/js/global_link_Color';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport messages from '../../Messages';\n\nconst styles = StyleSheet.create({\n  bold: { fontWeight: global_FontWeight_bold.value },\n  link: { color: global_link_Color.value },\n  text: { marginTop: global_spacer_md.value },\n  nameColumn: { width: '220px' },\n  header: {\n    fontSize: 9,\n    color: chart_global_Fill_Color_700.value,\n    paddingLeft: c_table_m_compact_cell_PaddingLeft.value,\n    paddingBottom: c_table_m_compact_cell_PaddingBottom.value,\n    paddingTop: c_table_m_compact_cell_PaddingTop.value,\n  },\n});\n\nexport const TablePage = ({ page, systems, intl }) => {\n  const header = [\n    { value: intl.formatMessage(messages.name), style: styles.nameColumn },\n    {\n      value: intl.formatMessage(messages.recommendations),\n      style: { width: '100px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.critical),\n      style: { width: '70px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.important),\n      style: { width: '70px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.moderate),\n      style: { width: '60px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.low),\n      style: { width: '90px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.lastSeen),\n      style: { marginLeft: '20px' },\n    },\n  ];\n  const hitColumns = [\n    'hits',\n    'critical_hits',\n    'important_hits',\n    'moderate_hits',\n    'low_hits',\n  ];\n  const headerBuilder = ({ value, style }) => (\n    <Text style={{ ...style, ...styles.header, ...styles.bold }}>{value}</Text>\n  );\n  const rowBuilder = ({ value, style }) => <Text style={style}>{value}</Text>;\n  const rows = [\n    ...systems.map((system) => {\n      const [, date, month, year, time] = new Date(system.last_seen)\n        .toUTCString()\n        .split(' ');\n      const sysDate = `${date} ${month} ${year}, ${time\n        .split(':')\n        .slice(0, 2)\n        .join(':')} UTC`;\n      return [\n        <Text key={system.system_uuid} style={styles.nameColumn}>\n          <Link\n            style={styles.link}\n            src={`${BASE_URI}/insights/advisor/systems/${system.system_uuid}/`}\n          >\n            {system.display_name}\n          </Link>\n        </Text>,\n        ...hitColumns.map((item) =>\n          rowBuilder({ style: { width: '10px' }, value: system[item] })\n        ),\n        <Text\n          key={system.last_seen}\n          style={{ width: '100px' }}\n        >{`${sysDate}`}</Text>,\n      ];\n    }),\n  ];\n\n  return (\n    <React.Fragment key={page}>\n      <Column>\n        <Table\n          withHeader\n          rows={[header.map((item) => headerBuilder(item)), ...rows]}\n        />\n      </Column>\n    </React.Fragment>\n  );\n};\n\nTablePage.propTypes = {\n  systems: PropTypes.object,\n  page: PropTypes.number,\n  intl: PropTypes.any,\n};\n\nexport const leadPage = ({ systemsTotal, systems, filters, tags, intl }) => {\n  delete filters.offset;\n  delete filters.limit;\n  return (\n    <React.Fragment\n      key={`${intl.formatMessage(\n        messages.insightsHeader\n      )}: ${intl.formatMessage(messages.systems)}`}\n    >\n      <Text key=\"sys-count\" style={styles.text}>\n        {intl.formatMessage(messages.sysTableCount, {\n          systems: (\n            <Text key=\"sys-count-count\" style={styles.bold}>\n              {intl.formatMessage(messages.execReportHeaderSystems, {\n                systems: systemsTotal,\n              })}\n              {systemsTotal > 1000 && intl.formatMessage(messages.dueTo)}\n            </Text>\n          ),\n        })}\n      </Text>\n      <Text key=\"sys-filters\" style={styles.text}>\n        {intl.formatMessage(messages.filtersApplied)}\n      </Text>\n      <Text key=\"sys-filters-values\" style={styles.bold}>\n        {Object.entries(filters).map((value) => (\n          <Text key={value}>{`${value[0]}: ${value[1]}     `}</Text>\n        ))}\n      </Text>\n      <Text key=\"sys-tags\" style={styles.text}>\n        {intl.formatMessage(messages.tagsApplied)}\n      </Text>\n      <Text key=\"sys-tags-values\" style={styles.bold}>\n        {tags ? decodeURIComponent(tags) : intl.formatMessage(messages.noTags)}\n      </Text>\n      <Section key=\"systems\" title=\"Systems\">\n        <TablePage systems={systems} intl={intl} />\n      </Section>\n    </React.Fragment>\n  );\n};\n\nleadPage.propTypes = {\n  systems: PropTypes.object,\n  systemsTotal: PropTypes.number,\n  filters: PropTypes.object,\n  tags: PropTypes.array,\n  intl: PropTypes.any,\n};\n","import './_Export.scss';\n\nimport React, { useState } from 'react';\nimport { leadPage, TablePage } from './SystemsPdfBuild';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { Get } from '../../Utilities/Api';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst SystemsPdf = ({ filters }) => {\n  const intl = useIntl();\n  const [loading, setLoading] = useState(false);\n  const selectedTags = useSelector(\n    ({ AdvisorStore }) => AdvisorStore?.selectedTags\n  );\n  const workloads = useSelector(({ AdvisorStore }) => AdvisorStore?.workloads);\n  const SID = useSelector(({ AdvisorStore }) => AdvisorStore?.SID);\n\n  const dataFetch = async () => {\n    setLoading(true);\n    let options = selectedTags?.length && { tags: selectedTags };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    const systems = (\n      await Get(`${BASE_URL}/export/systems/`, {}, { ...filters, ...options })\n    ).data;\n\n    const firstPage = leadPage({\n      systemsTotal: systems?.length,\n      systems: systems.slice(0, 18),\n      filters,\n      tags: selectedTags,\n      intl,\n    });\n\n    const otherPages = systems\n      .slice(18, 982)\n      .reduce((resultArray, item, index) => {\n        const chunkIndex = Math.floor(index / 31);\n        !resultArray[chunkIndex] && (resultArray[chunkIndex] = []);\n        resultArray[chunkIndex].push(item);\n\n        return resultArray;\n      }, []);\n\n    setLoading(false);\n\n    return [\n      firstPage,\n      ...otherPages.map((pageSystems, index) => (\n        <TablePage key={index} page={index} systems={pageSystems} intl={intl} />\n      )),\n    ];\n  };\n\n  return (\n    <DownloadButton\n      groupName={intl.formatMessage(messages.redHatInsights)}\n      allPagesHaveTitle={false}\n      label={\n        loading\n          ? intl.formatMessage(messages.loading)\n          : intl.formatMessage(messages.exportPdf)\n      }\n      asyncFunction={dataFetch}\n      buttonProps={{\n        variant: '',\n        component: 'button',\n        className:\n          'pf-c-dropdown__menu-item adv-c-dropdown-systems-pdf__menu-item',\n        ...(loading ? { isDisabled: true } : null),\n      }}\n      reportName={`${intl.formatMessage(messages.insightsHeader)}:`}\n      type={intl.formatMessage(messages.systems)}\n      fileName={`Advisor_systems--${new Date()\n        .toUTCString()\n        .replace(/ /g, '-')}.pdf`}\n      size={[841.89, 595.28]}\n    />\n  );\n};\n\nSystemsPdf.propTypes = {\n  filters: PropTypes.object,\n  systemsCount: PropTypes.number,\n};\n\nexport default SystemsPdf;\n","import React from 'react';\nimport {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  Bullseye,\n} from '@patternfly/react-core';\n\nconst NoSystemsTable = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full}>\n      <Title headingLevel=\"h2\" size=\"lg\">\n        No matching systems found\n      </Title>\n      <EmptyStateBody>\n        <TextContent>\n          <Text component={TextVariants.p}>\n            To continue, edit your filter settings and search again.\n          </Text>\n        </TextContent>\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoSystemsTable;\n","import './SystemsTable.scss';\n\nimport {\n  PERMS,\n  SYSTEM_FILTER_CATEGORIES as SFC,\n  SYSTEMS_FETCH_URL,\n} from '../../AppConstants';\nimport React, { useEffect, useState } from 'react';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n  buildTagFilter,\n} from '../Common/Tables';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\n\nimport { Get } from '../../Utilities/Api';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport Loading from '../Loading/Loading';\nimport SystemsPdf from '../Export/SystemsPdf';\nimport downloadReport from '../Common/DownloadHelper';\nimport { mergeArraysByDiffKeys } from '../Common/Tables';\nimport messages from '../../Messages';\nimport { systemReducer } from '../../Store/AppReducer';\nimport { updateReducers } from '../../Store';\nimport { updateSysFilters } from '../../Services/Filters';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport NoSystemsTable from './Components/NoSystemsTable';\nimport { useLoadModule } from '@scalprum/react-core';\nimport { systemsTableColumns } from './SystemsTableAssets';\n\nconst SystemsTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const store = useStore();\n  const [{ toGroupSelectionValue, buildOSFilterConfig } = {}] = useLoadModule({\n    appName: 'inventory',\n    scope: 'inventory',\n    module: './OsFilterHelpers',\n  });\n\n  const { search } = useLocation();\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.sysState);\n  const operatingSystems = useSelector(\n    ({ entities }) => entities?.operatingSystems || []\n  );\n  const setFilters = (filters) => dispatch(updateSysFilters(filters));\n  const permsExport = usePermissions('advisor', PERMS.export).hasAccess;\n  const [filterBuilding, setFilterBuilding] = useState(true);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    delete filter[param];\n    param === 'hits' && filter.hits === undefined && (filter.hits = ['yes']);\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    // remove 'yes' from the hits filter if the user chooses any other filters (its always the first item)\n    param === 'hits' &&\n      values.length > 1 &&\n      values.includes('yes') &&\n      values.shift();\n    const passValue =\n      param === SFC.rhel_version.urlParam\n        ? Object.values(values || {}).flatMap((majorOsVersion) =>\n            Object.keys(majorOsVersion)\n          )\n        : values;\n\n    passValue.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: passValue } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: SFC.hits.title.toLowerCase(),\n      type: SFC.hits.type,\n      id: SFC.hits.urlParam,\n      value: `checkbox-${SFC.hits.urlParam}`,\n      filterValues: {\n        key: `${SFC.hits.urlParam}-filter`,\n        onChange: (_e, values) => addFilterParam(SFC.hits.urlParam, values),\n        value: filters.hits,\n        items: SFC.hits.values,\n      },\n    },\n    {\n      label: SFC.incident.title.toLowerCase(),\n      type: SFC.incident.type,\n      id: SFC.incident.urlParam,\n      value: `checkbox-${SFC.incident.urlParam}`,\n      filterValues: {\n        key: `${SFC.incident.urlParam}-filter`,\n        onChange: (_e, values) => {\n          addFilterParam(SFC.incident.urlParam, values);\n        },\n        value: filters.incident,\n        items: SFC.incident.values,\n      },\n    },\n    ...(buildOSFilterConfig\n      ? [\n          buildOSFilterConfig(\n            {\n              label: SFC.rhel_version.title.toLowerCase(),\n              type: SFC.rhel_version.type,\n              id: SFC.rhel_version.urlParam,\n              value: toGroupSelectionValue(filters.rhel_version || []),\n              onChange: (_e, value) =>\n                addFilterParam(SFC.rhel_version.urlParam, value),\n            },\n            operatingSystems\n          ),\n        ]\n      : []),\n  ];\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    localFilters.hits &&\n      localFilters.hits.includes('yes') &&\n      delete localFilters.hits;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, SFC);\n  };\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setFilters({\n          sort: filters.sort,\n          limit: filters.limit,\n          offset: filters.offset,\n          hits: ['all'],\n          tags: selectedTags,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const handleRefresh = (options) => {\n    const { display_name, hits } = options;\n    const refreshedFilters = {\n      ...options,\n      ...(display_name && {\n        display_name,\n      }),\n      ...(hits && { hits }),\n    };\n    urlBuilder(refreshedFilters, selectedTags);\n  };\n\n  const columns = systemsTableColumns(intl);\n  const createColumns = (defaultColumns) => {\n    const mappedColumns = columns.map((column) => {\n      const correspondingColumn = defaultColumns.find(\n        (defaultColumn) => defaultColumn.key === column.key\n      );\n      return { ...column, ...correspondingColumn };\n    });\n\n    return mappedColumns;\n  };\n\n  useEffect(() => {\n    let combinedFilters;\n    if (search) {\n      const paramsObject = paramParser();\n      paramsObject.tags = selectedTags;\n      paramsObject.sort !== undefined &&\n        (paramsObject.sort = paramsObject.sort[0]);\n      paramsObject.display_name !== undefined &&\n        (paramsObject.display_name = paramsObject.display_name[0]);\n      paramsObject.hits === undefined && (paramsObject.hits = ['all']);\n      paramsObject.offset === undefined || isNaN(paramsObject.offset)\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined || isNaN(paramsObject.limit)\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      combinedFilters = { ...filters, ...paramsObject };\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      setFilters(combinedFilters);\n    } else if (\n      filters.limit === undefined ||\n      filters.offset === undefined ||\n      filters.hits === undefined\n    ) {\n      combinedFilters = {\n        ...filters,\n        offset: 0,\n        limit: 20,\n        hits: ['all'],\n        tags: selectedTags,\n      };\n      setFilters(combinedFilters);\n    }\n    setFilterBuilding(false);\n    urlBuilder(combinedFilters, selectedTags);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedTags]);\n\n  return (\n    !filterBuilding && (\n      <InventoryTable\n        hideFilters={{ all: true, name: false, tags: false }}\n        initialLoading\n        autoRefresh\n        showTags\n        disableDefaultColumns\n        customFilters={{\n          advisorFilters: filters,\n          workloads,\n          SID,\n          selectedTags,\n        }}\n        columns={(defaultColumns) => createColumns(defaultColumns)}\n        onLoad={({\n          mergeWithEntities,\n          INVENTORY_ACTION_TYPES,\n          mergeWithDetail,\n        }) => {\n          store.replaceReducer(\n            updateReducers({\n              ...mergeWithEntities(systemReducer([], INVENTORY_ACTION_TYPES), {\n                page: Number(filters.offset / filters.limit + 1 || 1),\n                perPage: Number(filters.limit || 20),\n              }),\n              ...mergeWithDetail(),\n            })\n          );\n        }}\n        getEntities={async (_items, config, showTags, defaultGetEntities) => {\n          const {\n            per_page,\n            page,\n            orderBy,\n            orderDirection,\n            advisorFilters,\n            filters,\n            workloads,\n            SID,\n          } = config;\n          const sort = `${orderDirection === 'ASC' ? '' : '-'}${\n            (orderBy === 'updated' && 'last_seen') ||\n            (orderBy === 'operating_system' && 'rhel_version') ||\n            orderBy\n          }`;\n\n          let options = {\n            ...advisorFilters,\n            limit: per_page,\n            offset: page * per_page - per_page,\n            sort,\n            ...(config.filters.hostnameOrId && {\n              display_name: config?.filters?.hostnameOrId,\n            }),\n            ...(Array.isArray(advisorFilters.incident) && {\n              incident: advisorFilters?.incident?.join(','),\n            }),\n            ...(Array.isArray(advisorFilters.rhel_version) && {\n              rhel_version: advisorFilters.rhel_version?.join(','),\n            }),\n            ...(filters.tagFilters?.length &&\n              buildTagFilter(filters.tagFilters)),\n            ...(selectedTags?.length > 0\n              ? { tags: selectedTags.join(',') }\n              : {}),\n            ...(workloads ? workloadQueryBuilder(workloads, SID) : {}),\n          };\n\n          const fetchedSystems = (await Get(SYSTEMS_FETCH_URL, {}, options))\n            ?.data;\n\n          handleRefresh(options);\n          const results = await defaultGetEntities(\n            fetchedSystems.data.map((system) => system.system_uuid),\n            {\n              page,\n              per_page,\n              hasItems: true,\n              fields: { system_profile: ['operating_system'] },\n            },\n            showTags\n          );\n\n          return Promise.resolve({\n            results: mergeArraysByDiffKeys(\n              fetchedSystems.data,\n              results.results\n            ),\n            total: fetchedSystems.meta.count,\n          });\n        }}\n        tableProps={{\n          isStickyHeader: true,\n          variant: TableVariant.compact,\n        }}\n        isFullView\n        hasCheckbox={false}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n        noSystemsTable={NoSystemsTable}\n        exportConfig={{\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'systems',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID,\n              dispatch\n            ),\n          extraItems: [\n            <li key=\"download-pd\" role=\"menuitem\">\n              <SystemsPdf filters={{ ...filterFetchBuilder(filters) }} />\n            </li>,\n          ],\n          isDisabled: !permsExport,\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        fallback={Loading}\n      />\n    )\n  );\n};\n\nexport default SystemsTable;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { sortable, wrappable } from '@patternfly/react-table';\n\nimport messages from '../../Messages';\nimport RuleLabels from '../Labels/RuleLabels';\n\nexport const systemsTableColumns = (intl) => [\n  {\n    title: intl.formatMessage(messages.name),\n    key: 'display_name',\n    transforms: [sortable, wrappable],\n    props: { isStatic: true },\n    renderFunc: (_data, _id, system) => (\n      <React.Fragment>\n        <Link key={_id} to={`/systems/${system.system_uuid}`}>\n          {`${system.display_name} `}\n        </Link>\n        {system.incident_hits > 0 && <RuleLabels rule={{ tags: 'incident' }} />}\n      </React.Fragment>\n    ),\n  },\n  {\n    key: 'tags',\n  },\n  {\n    key: 'system_profile',\n    transforms: [sortable, wrappable],\n  },\n  {\n    title: intl.formatMessage(messages.numberRuleHits),\n    transforms: [sortable, wrappable],\n    key: 'hits',\n  },\n  {\n    title: intl.formatMessage(messages.critical),\n    transforms: [sortable, wrappable],\n    key: 'critical_hits',\n  },\n  {\n    title: intl.formatMessage(messages.important),\n    transforms: [sortable, wrappable],\n    key: 'important_hits',\n  },\n  {\n    title: intl.formatMessage(messages.moderate),\n    transforms: [sortable, wrappable],\n    key: 'moderate_hits',\n  },\n  {\n    title: intl.formatMessage(messages.low),\n    transforms: [sortable, wrappable],\n    key: 'low_hits',\n  },\n  {\n    key: 'updated',\n    transforms: [sortable, wrappable],\n    props: { width: 20 },\n  },\n];\n"],"names":["exports","_a","component","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","useEffect","console","error","concat","__assign","assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Cmp","className","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","size","fileName","exportTable","defaultParams","date","Date","toISOString","replace","split","format","filters","selectedTags","workloads","SID","dispatch","options","tags","workloadQueryBuilder","addNotification","exportNotifications","Get","BASE_URL","then","result","data","formattedData","JSON","stringify","downloadFile","styles","StyleSheet","bold","fontWeight","global_FontWeight_bold","link","color","global_link_Color","text","marginTop","global_spacer_md","nameColumn","width","header","fontSize","chart_global_Fill_Color_700","paddingLeft","c_table_m_compact_cell_PaddingLeft","paddingBottom","c_table_m_compact_cell_PaddingBottom","paddingTop","c_table_m_compact_cell_PaddingTop","TablePage","page","systems","intl","value","formatMessage","messages","style","textAlign","marginLeft","hitColumns","rows","map","system","last_seen","toUTCString","month","year","time","sysDate","slice","join","key","system_uuid","src","BASE_URI","display_name","item","withHeader","PropTypes","leadPage","systemsTotal","offset","limit","entries","decodeURIComponent","title","SystemsPdf","useIntl","useState","loading","setLoading","useSelector","AdvisorStore","dataFetch","firstPage","otherPages","reduce","resultArray","index","chunkIndex","Math","floor","push","pageSystems","groupName","allPagesHaveTitle","label","asyncFunction","buttonProps","variant","isDisabled","reportName","type","systemsCount","EmptyState","EmptyStateVariant","Title","headingLevel","EmptyStateBody","TextContent","Text","TextVariants","localFilters","useDispatch","useLoadModule","toGroupSelectionValue","buildOSFilterConfig","search","useLocation","sysState","operatingSystems","entities","setFilters","updateSysFilters","permsExport","usePermissions","PERMS","hasAccess","filterBuilding","setFilterBuilding","removeFilterParam","param","filter","undefined","hits","addFilterParam","values","includes","shift","passValue","SFC","flatMap","majorOsVersion","keys","filterConfigItems","id","filterValues","onChange","_e","items","incident","rhel_version","activeFiltersConfig","deleteTitle","sort","pruneFilters","onDelete","event","itemsToRemove","isAll","newFilter","urlParam","Array","isArray","String","chips","handleRefresh","refreshedFilters","urlBuilder","columns","transforms","sortable","wrappable","isStatic","renderFunc","_data","_id","Link","to","incident_hits","RuleLabels","rule","systemsTableColumns","combinedFilters","paramsObject","paramParser","isNaN","Number","InventoryTable","hideFilters","all","name","initialLoading","autoRefresh","showTags","disableDefaultColumns","customFilters","advisorFilters","defaultColumns","column","correspondingColumn","find","defaultColumn","createColumns","onLoad","mergeWithEntities","INVENTORY_ACTION_TYPES","mergeWithDetail","replaceReducer","updateReducers","systemReducer","perPage","getEntities","_items","config","defaultGetEntities","per_page","orderBy","orderDirection","hostnameOrId","tagFilters","buildTagFilter","SYSTEMS_FETCH_URL","fetchedSystems","hasItems","fields","system_profile","results","Promise","resolve","mergeArraysByDiffKeys","total","meta","count","tableProps","isStickyHeader","TableVariant","isFullView","hasCheckbox","filterConfig","noSystemsTable","NoSystemsTable","exportConfig","onSelect","fileType","downloadReport","extraItems","role","filterFetchBuilder","tooltipText","Loading"],"sourceRoot":""}