{"version":3,"file":"js/RulesTable.583e7afd88d956e8bb91.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js"],"sourcesContent":["import './_RulesTable.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../Labels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useGetRecsQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RulesTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.added),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.riskofchange),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: (\n        <React.Fragment>\n          <AnsibeTowerIcon size=\"md\" /> {intl.formatMessage(messages.ansible)}\n        </React.Fragment>\n      ),\n      transforms: [sortable, cellWidth(15), fitContent],\n      dataLabel: intl.formatMessage(messages.ansible),\n    },\n  ]);\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.recState);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n  const setFilters = (filters) => dispatch(updateRecFilters(filters));\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: rules = [],\n    isFetching,\n    isLoading,\n    isError,\n    refetch,\n  } = useGetRecsQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'resolution_risk',\n    6: 'impacted_count',\n    7: 'playbook_count',\n  };\n\n  const ruleResolutionRisk = (rule) => {\n    const resolution = rule.resolution_set.find(\n      (resolution) =>\n        resolution.system_type === AppConstants.SYSTEM_TYPES.rhel ||\n        AppConstants.SYSTEM_TYPES.ocp\n    );\n    return resolution ? resolution.resolution_risk.risk : undefined;\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n\n  const hideReports = async (rowId) => {\n    const rule = rows[rowId].rule;\n\n    try {\n      if (rule.rule_status === 'enabled') {\n        setSelectedRule(rule);\n        setDisableRuleOpen(true);\n      } else {\n        try {\n          await DeleteApi(`${AppConstants.BASE_URL}/ack/${rule.rule_id}/`);\n          addNotification({\n            variant: 'success',\n            timeout: true,\n            dismissable: true,\n            title: intl.formatMessage(messages.recSuccessfullyEnabled),\n          });\n          refetch();\n        } catch (error) {\n          addNotification({\n            variant: 'danger',\n            dismissable: true,\n            title: intl.formatMessage(messages.error),\n            description: `${error}`,\n          });\n        }\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title:\n          rule.rule_status === 'enabled'\n            ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n            : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  const noRuleHitsBodyMessage = (rule_status) => {\n    switch (rule_status) {\n      case 'enabled':\n        return messages.rulesTableNoRuleHitsEnabledRulesBody;\n      case 'disabled':\n        return messages.rulesTableNoRuleHitsDisabledRulesBody;\n      case 'rhdisabled':\n        return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n      default:\n        return messages.noRecommendations;\n    }\n  };\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n      paramsObject.has_playbook !== undefined &&\n        !Array.isArray(paramsObject.has_playbook) &&\n        (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot !== undefined &&\n        !Array.isArray(paramsObject.reboot) &&\n        (paramsObject.reboot = [`${paramsObject.reboot}`]);\n      paramsObject.impacting !== undefined &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sortIndex = Object.entries(sortIndices)?.find(\n      (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n    );\n    if (filters.sort !== undefined && sortIndex) {\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: Number(sortIndex[0]), direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows([\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={CheckCircleIcon}\n                    iconClass=\"ansibleCheck\"\n                    title={intl.formatMessage(\n                      messages.rulesTableNoRuleHitsTitle\n                    )}\n                    text={intl.formatMessage(\n                      noRuleHitsBodyMessage(filters.rule_status)\n                    )}\n                  >\n                    {filters.rule_status === 'enabled' && (\n                      <Button\n                        variant=\"link\"\n                        style={{ paddingTop: 24 }}\n                        onClick={() => toggleRulesDisabled('all')}\n                      >\n                        {intl.formatMessage(\n                          messages.rulesTableNoRuleHitsAddDisabledButton\n                        )}\n                      </Button>\n                    )}\n                  </MessageState>\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]);\n      } else {\n        const rows = rules.data.flatMap((value, key) => [\n          {\n            isOpen: isAllExpanded,\n            rule: value,\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                      {' '}\n                      {value.description}{' '}\n                    </Link>\n                    <RuleLabels rule={value} />\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <DateFormat\n                    key={key}\n                    date={value.publish_date}\n                    variant=\"relative\"\n                  />\n                ),\n              },\n              {\n                title: <CategoryLabel key={key} labelList={[value.category]} />,\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <Tooltip\n                      key={key}\n                      position={TooltipPosition.bottom}\n                      content={intl.formatMessage(\n                        messages.rulesDetailsTotalriskBody,\n                        {\n                          risk:\n                            AppConstants.TOTAL_RISK_LABEL_LOWER[\n                              value.total_risk\n                            ] || intl.formatMessage(messages.undefined),\n                          strong: (str) => strong(str),\n                        }\n                      )}\n                    >\n                      <InsightsLabel value={value.total_risk} />\n                    </Tooltip>\n                  </div>\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <InsightsLabel\n                      text={\n                        AppConstants.RISK_OF_CHANGE_LABEL[\n                          ruleResolutionRisk(value)\n                        ]\n                      }\n                      value={ruleResolutionRisk(value)}\n                      hideIcon\n                    />\n                    <div></div>\n                  </div>\n                ),\n              },\n              {\n                title:\n                  value.rule_status === 'rhdisabled' ? (\n                    <Tooltip\n                      content={intl.formatMessage(messages.byEnabling, {\n                        systems: value.impacted_systems_count,\n                      })}\n                    >\n                      <span>{intl.formatMessage(messages.nA)}</span>\n                    </Tooltip>\n                  ) : (\n                    <div\n                      key={key}\n                    >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                  ),\n              },\n              {\n                title: (\n                  <div className=\"ins-c-center-text \" key={key}>\n                    {value.playbook_count ? (\n                      <CheckCircleIcon className=\"ansibleCheck\" />\n                    ) : (\n                      intl.formatMessage(messages.no)\n                    )}\n                  </div>\n                ),\n              },\n            ],\n          },\n          {\n            parent: key * 2,\n            fullWidth: true,\n            cells: [\n              {\n                title: (\n                  <Main className=\"pf-m-light\">\n                    <Stack hasGutter>\n                      {value.hosts_acked_count ? (\n                        <StackItem>\n                          <BellSlashIcon size=\"sm\" />\n                          &nbsp;\n                          {value.hosts_acked_count &&\n                          !value.impacted_systems_count\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledForAllSystems\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledForSystemsBody,\n                                { systems: value.hosts_acked_count }\n                              )}\n                          &nbsp;{' '}\n                          <Button\n                            isInline\n                            variant=\"link\"\n                            ouiaId=\"viewSystem\"\n                            onClick={() => {\n                              setViewSystemsModalRule(value);\n                              setViewSystemsModalOpen(true);\n                            }}\n                          >\n                            {intl.formatMessage(messages.viewSystems)}\n                          </Button>\n                        </StackItem>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )}\n                      <RuleDetails\n                        rule={value}\n                        resolutionRisk={ruleResolutionRisk(value)}\n                        riskOfChangeDesc={\n                          AppConstants.RISK_OF_CHANGE_DESC[\n                            ruleResolutionRisk(value)\n                          ]\n                        }\n                      />\n                    </Stack>\n                  </Main>\n                ),\n              },\n            ],\n          },\n        ]);\n        setRows(rows);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rules]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (_event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const afterViewSystemsFn = () => {\n    refetch();\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={afterViewSystemsFn}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={refetch}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID\n            ),\n          isDisabled:\n            !permsExport ||\n            !filters.impacting ||\n            (Array.isArray(filters.impacting) &&\n              !filters.impacting.every((item) => item === 'true')),\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      ) : (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default RulesTable;\n"],"names":["intl","useIntl","dispatch","useDispatch","search","useLocation","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","useState","title","formatMessage","messages","transforms","sortable","cellWidth","size","fitContent","dataLabel","cols","selectedTags","useSelector","filters","workloads","SID","recState","rows","setRows","sortBy","setSortBy","filterBuilding","setFilterBuilding","text","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","addNotification","data","addNotificationAction","setFilters","updateRecFilters","options","length","tags","join","workloadQueryBuilder","useGetRecsQuery","filterFetchBuilder","rules","isFetching","isLoading","isError","refetch","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","6","7","ruleResolutionRisk","rule","resolution","resolution_set","find","system_type","resolution_risk","risk","undefined","useEffect","urlBuilder","onSetPage","pageNumber","newOffset","limit","offset","toggleRulesDisabled","rule_status","impacting","hideReports","rowId","DeleteApi","rule_id","variant","timeout","dismissable","description","noRuleHitsBodyMessage","paramsObject","paramParser","sort","has_playbook","Array","isArray","incident","Number","reboot","sortIndex","Object","entries","item","sortDirection","index","direction","cells","icon","CheckCircleIcon","iconClass","Button","style","paddingTop","onClick","props","colSpan","flatMap","value","key","isOpen","Link","to","date","publish_date","labelList","category","Tooltip","position","TooltipPosition","content","total_risk","strong","str","hideIcon","systems","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Stack","hasGutter","hosts_acked_count","StackItem","isInline","ouiaId","resolutionRisk","riskOfChangeDesc","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","label","toLowerCase","filterValues","onChange","_event","placeholder","FC","type","id","items","res_risk","impact","likelihood","e","activeFiltersConfig","deleteTitle","topic","pruneFilters","onDelete","itemsToRemove","isAll","map","newFilter","urlParam","String","chips","handleModalToggle","toggleModal","isModalOpen","afterFn","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","fileType","downloadReport","every","filterConfig","message","Table","aria-label","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","orderParam","areActionsDisabled","isStickyHeader","TableHeader","TableBody","widgetId","PaginationVariant"],"sourceRoot":""}