{"version":3,"file":"js/6717.1677011477498.a511e1b594de00b90efd.js","mappings":"yWAiBMA,EAAe,SAAC,GAAsD,IAApDC,EAAoD,EAApDA,kBAAmBC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtDC,GAAOC,EAAAA,EAAAA,KACPC,GAAWC,EAAAA,EAAAA,eAEXC,EAAU,CACdJ,EAAKK,cAAcC,EAAAA,EAAAA,YACnBN,EAAKK,cAAcC,EAAAA,EAAAA,mBACnBN,EAAKK,cAAcC,EAAAA,EAAAA,cACnB,IAEF,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAKIC,EAAAA,EAAAA,IAAoB,CACtBC,QAASf,EAAKe,QACdC,MAAOhB,EAAKiB,oBAPd,IACEC,KAAMC,OADR,MACmB,GADnB,EAEEC,EAFF,EAEEA,WACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,QAKIC,EAAS,mCAAG,WAAOC,GAAP,2FAERC,EAAAA,EAAAA,IAAU,GAAD,OAAIC,EAAAA,GAAJ,oBAAwBF,EAAKG,GAA7B,MAFD,OAGdL,IACAT,GAAW,GAJG,gDAMdf,GAAkB,GAxBGoB,EAyBL,CACdU,QAAS,SACTC,aAAa,EACbC,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,OAC1BuB,YAAa,GAAF,cA7BiB3B,GAAS4B,EAAAA,EAAAA,iBAAad,IAkBtC,kCAlBM,IAACA,CAkBP,uBAAH,sDAmDf,OAnCAe,EAAAA,EAAAA,YAAU,WACR,IAAMvB,EAAOS,aAAH,EAAGA,EAAUe,KAAI,SAACC,GAAD,MAAW,CACpCC,MAAO,CACLD,EAAKE,cAAgBF,EAAKG,YAC1BH,EAAKI,eAAiBrC,EAAKK,cAAcC,EAAAA,EAAAA,MACzC,CACEsB,MACE,kBAAC,IAAD,CAAYU,KAAM,IAAIC,KAAKN,EAAKO,YAAaC,KAAK,cAGtD,CACEb,MACE,kBAAC,EAAAc,OAAD,CACEC,IAAKV,EAAKG,YACVQ,UAAQ,EACRlB,QAAQ,OACRmB,QAAS,kBAAMxB,EAAUY,EAAhB,GAET,kBAAC,KAAD,CAAkBa,KAAK,OANzB,WAOO9C,EAAKK,cAAcC,EAAAA,EAAAA,YAlBP,IAyBtBa,GAAiC,IAApBF,EAAS8B,SACzBhD,IACAH,GAAkB,IAGpBa,EAAQD,EAET,GAAE,CAACS,IAGF,kBAAC,KAAD,CACE+B,MAAO,MACPpB,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,mBAC1B2C,OAAQpD,EACRqD,QAAS,WACPxC,GAAWX,IACXH,GAAkB,EACnB,GAECsB,EAMA,kBAAC,EAAAiC,MAAD,CACE,aAAW,iBACX3C,KAAM,CACJ,CACE0B,MAAO,CAAC,CAAEkB,MAAO,CAAEC,QAAS,GAAKzB,MAAO,kBAAC,KAAD,UAG5CM,MAAO9B,GAEP,kBAAC,EAAAkD,YAAD,MACA,kBAAC,EAAAC,UAAD,OAfF,kBAAC,EAAAJ,MAAD,CAAO,aAAW,iBAAiB3C,KAAMA,EAAM0B,MAAO9B,GACpD,kBAAC,EAAAkD,YAAD,MACA,kBAAC,EAAAC,UAAD,OAkBT,EAED5D,EAAa6D,UAAY,CACvB3D,YAAa4D,IAAAA,KACb7D,kBAAmB6D,IAAAA,KACnB3D,KAAM2D,IAAAA,OACN1D,QAAS0D,IAAAA,MAGX9D,EAAa+D,aAAe,CAC1B7D,aAAa,EACbD,kBAAmB,aACnBE,KAAM,CAAC,EACPC,QAAS,cAGX,S,uiBC/HM4D,EAAa,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,oBACvBC,EACJC,IAAiBH,EAAQI,cAAgBD,IAAc,QAEzD,OACE,kBAACE,EAAA,EAAD,CACEC,KAAMC,EAAAA,gBACNC,UAAU,eACVxC,MAAOkC,EAAQlC,MACfyC,KAAMP,EAAQQ,MAEW,YAAxBV,EAAQI,aACP,kBAAC,EAAAtB,OAAD,CACEhB,QAAQ,OACR6C,MAAO,CAAEC,WAAY,IACrB3B,QAAS,kBAAMgB,EAAoB,MAA1B,GAET,kBAAC,IAAD,CAAkBpC,GAAG,6CAK9B,EAEDkC,EAAWH,UAAY,CACrBI,QAASJ,IAAAA,OACTK,oBAAqBL,IAAAA,MAGvB,U,qkBChCO,IAWMO,EAAiB,WAC5B,IAAMnC,EAAQ,kBAAC,IAAD,CAAkBH,GAAG,gCAEnC,MAAO,CACLgD,QAAS,CACP7C,MAAAA,EACA0C,KACE,oCACE,kBAAC,EAAAI,KAAD,KACE,kBAAC,IAAD,CAAkBjD,GAAG,4CAEvB,kBAAC,EAAAiD,KAAD,KACE,kBAAC,IAAD,CAAkBjD,GAAG,wDAK7BkD,SAAU,CACR/C,MAAAA,EACA0C,KACE,oCACE,kBAAC,EAAAI,KAAD,KACE,kBAAC,IAAD,CAAkBjD,GAAG,0CAEvB,kBAAC,EAAAiD,KAAD,KACE,kBAAC,IAAD,CAAkBjD,GAAG,sDAK7BmD,WAAY,CACVhD,MAAAA,EACA0C,KACE,kBAAC,EAAAI,KAAD,KACE,kBAAC,IAAD,CAAkBjD,GAAG,iDAI3BoD,QAAS,CACPjD,MAAAA,EACA0C,KACE,kBAAC,EAAAI,KAAD,KACE,kBAAC,IAAD,CAAkBjD,GAAG,wBAK9B,E,skBCQD,IAAMqD,GAAa,SAAC,GAAoB,QAAlBC,EAAkB,EAAlBA,YACd/E,GAAOC,EAAAA,EAAAA,KACPC,GAAWC,EAAAA,EAAAA,eACT6E,GAAWC,EAAAA,EAAAA,eAAXD,OACFE,GAAcC,EAAAA,EAAAA,IAClB,UACAC,EAAAA,GAAAA,QACAC,UACIC,GAAkBH,EAAAA,EAAAA,IACtB,UACAC,EAAAA,GAAAA,YACAC,UACF,GAAe9E,EAAAA,EAAAA,UAAS,CACtB,CACEqB,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,MAC1BiF,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACE7D,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,UAC1BiF,WAAY,CAACC,EAAAA,SAAUE,EAAAA,aAEzB,CACE9D,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,UAC1BiF,WAAY,CAACC,EAAAA,SAAUE,EAAAA,aAEzB,CACE9D,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,WAC1BiF,WAAY,CAACC,EAAAA,SAAUE,EAAAA,aAEzB,CACE9D,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,SAC1BiF,WAAY,CAACC,EAAAA,SAAUE,EAAAA,aAEzB,CACE9D,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,aAC1BiF,WAAY,CAACC,EAAAA,SAAUE,EAAAA,eAvBpBC,GAAP,eA2BMC,GAAeC,EAAAA,EAAAA,cAAY,qBAAGjC,QAAsBgC,YAAzB,IAC3BE,GAAYD,EAAAA,EAAAA,cAAY,qBAAGjC,QAAsBkC,SAAzB,IACxBC,GAAMF,EAAAA,EAAAA,cAAY,qBAAGjC,QAAsBmC,GAAzB,IAClBnC,IAAUiC,EAAAA,EAAAA,cAAY,qBAAGjC,QAAsBoC,QAAzB,IAE5B,IAAwBzF,EAAAA,EAAAA,UAAS,IAAjC,iBAAOC,GAAP,MAAaC,GAAb,MACA,IAA4BF,EAAAA,EAAAA,UAAS,CAAC,GAAtC,iBAAO0F,GAAP,MAAeC,GAAf,MACA,IAA4C3F,EAAAA,EAAAA,WAAS,GAArD,iBAAO4F,GAAP,MAAuBC,GAAvB,MACA,IAAoC7F,EAAAA,EAAAA,WAASqD,cAAA,EAAAA,GAASS,OAAQ,IAA9D,iBAAOgC,GAAP,MAAmBC,GAAnB,MACA,IAA8C/F,EAAAA,EAAAA,WAAS,GAAvD,iBAAOgG,GAAP,MAAwBC,GAAxB,MACA,IAAwCjG,EAAAA,EAAAA,UAAS,CAAC,GAAlD,iBAAOkG,GAAP,MAAqBC,GAArB,MACA,IAAwDnG,EAAAA,EAAAA,WAAS,GAAjE,iBAAOoG,GAAP,MAA6BC,GAA7B,MACA,IAAwDrG,EAAAA,EAAAA,UAAS,CAAC,GAAlE,iBAAOsG,GAAP,MAA6BC,GAA7B,MACA,IAA0CvG,EAAAA,EAAAA,WAAS,GAAnD,iBAAOwG,GAAP,MAAsBC,GAAtB,MAEMC,GAAkB,SAACjG,GAAD,OAAUd,GAASgH,EAAAA,EAAAA,iBAAsBlG,GAAzC,EAClBmG,GAAa,SAACvD,GAAD,OAAa1D,GAASkH,EAAAA,EAAAA,IAAiBxD,GAAvC,EAEfyD,GAAU,CAAC,GACfzB,aAAA,EAAAA,EAAc7C,UACXsE,GAAU,SACNA,IACA,CAAEC,KAAM1B,EAAa2B,KAAK,QAEjCzB,IACGuB,GAAU,SAAKA,KAAYG,EAAAA,EAAAA,IAAqB1B,EAAWC,KAE9D,QAMI0B,EAAAA,EAAAA,IAAgB,UAAKC,EAAAA,EAAAA,IAAmB9D,KAAayD,KANzD,MACErG,KAAM2G,QADR,OACgB,GADhB,GAEEzG,GAFF,GAEEA,WACAC,GAHF,GAGEA,UACAyG,GAJF,GAIEA,QACAxG,GALF,GAKEA,QAGIyG,IAAsBC,EAAAA,EAAAA,GAASzB,GAAY0B,EAAAA,IAC3CC,IAAUL,UAAA,UAAAA,GAAOM,YAAP,eAAaC,QAAS,EAChCC,GAAc,CAClB,EAAG,cACH,EAAG,eACH,EAAG,WACH,EAAG,aACH,EAAG,iBACH,EAAG,mBAGLpG,EAAAA,EAAAA,YAAU,WACHoE,IAAmC,OAAjBP,IACrBwC,EAAAA,EAAAA,IAAWxE,GAASgC,EAGvB,GAAE,CAAChC,GAASgC,EAAcE,EAAWC,IAEtC,IAMMsC,GAAY,SAACC,GACjB,IAAMC,EAAYD,EAAa1E,GAAQ9C,MAAQ8C,GAAQ9C,MACvDqG,GAAW,SAAKvD,IAAN,IAAe4E,OAAQD,IAClC,EAEK1E,GAAsB,SAACG,GAC3BmD,GAAW,SACNvD,IADK,IAERI,YAAAA,EACAwE,OAAQ,GACY,YAAhBxE,GAA6B,CAAEyE,UAAW,CAAC,WAElD,EAQKC,GAAW,mCAAG,WAAOC,GAAP,0EACZ7I,EAAOU,GAAKmI,GAAO7I,KADP,SAIS,YAArBA,EAAKkE,YAJO,gBAKd0C,GAAgB5G,GAChB0G,IAAmB,GANL,kDASNjF,EAAAA,EAAAA,IAAU,GAAD,OAAI6D,EAAAA,GAAJ,gBAAiCtF,EAAKe,QAAtC,MATH,QAUZoG,GAAgB,CACdvF,QAAS,UACTkH,SAAS,EACTjH,aAAa,EACbC,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,0BAE5Bc,KAhBY,kDAkBZ6F,GAAgB,CACdvF,QAAS,SACTC,aAAa,EACbC,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,OAC1BuB,YAAa,GAAF,eAtBD,0DA2BhBoF,GAAgB,CACdvF,QAAS,SACTC,aAAa,EACbC,MACuB,YAArB9B,EAAKkE,YACDhE,EAAKK,cAAcC,EAAAA,EAAAA,oCACnBN,EAAKK,cAAcC,EAAAA,EAAAA,mCACzBuB,YAAa,GAAF,eAlCG,iEAAH,uDAuEjBE,EAAAA,EAAAA,YAAU,WACJgD,GAAeC,GAAUmB,IDpMD,SAC9BgC,EACA7B,EACAa,EACAvD,GAEA,IAAIiF,EAAgBC,OAAOC,OAAOZ,GAC5Ba,GAAeC,EAAAA,EAAAA,aACdD,EAAa1B,KAEhB4B,MAAMC,QAAQH,EAAaI,MAE1BP,SAAAA,EAAeQ,SAASL,EAAaI,KAAK,KAC1CP,SAAAA,EAAeQ,SAAf,WAA4BL,EAAaI,KAAK,OAE/CJ,EAAaI,KAAO,eAEZP,SAAAA,EAAeQ,SAASL,EAAaI,QAC/CJ,EAAaI,KAAO,oBAEAE,IAAtBN,EAAa3E,KACTiC,EAAc,IACdA,EAAc0C,EAAa3E,WACDiF,IAA9BN,EAAaO,eACVL,MAAMC,QAAQH,EAAaO,gBAC3BP,EAAaO,aAAe,CAAC,GAAD,OAAIP,EAAaO,qBACtBD,IAA1BN,EAAaQ,WACVN,MAAMC,QAAQH,EAAaQ,YAC3BR,EAAaQ,SAAW,CAAC,GAAD,OAAIR,EAAaQ,iBACpBF,IAAxBN,EAAaR,OACRQ,EAAaR,OAAS,EACtBQ,EAAaR,OAASiB,OAAOT,EAAaR,OAAO,SAC/Bc,IAAvBN,EAAalI,MACRkI,EAAalI,MAAQ,GACrBkI,EAAalI,MAAQ2I,OAAOT,EAAalI,MAAM,SAC5BwI,IAAxBN,EAAaU,SACVR,MAAMC,QAAQH,EAAaU,UAC3BV,EAAaU,OAAS,CAAC,GAAD,OAAIV,EAAaU,eACfJ,IAA3BN,EAAaP,YACVS,MAAMC,QAAQH,EAAaP,aAC3BO,EAAaP,UAAY,CAAC,GAAD,OAAIO,EAAaP,aAC7CtB,EAAW,EAAD,KAAMvD,GAAYoF,GAC7B,CC2JKW,CAAiBxB,GAAa7B,GAAea,GAAYvD,IAG3DwC,IAAkB,EAEnB,GAAE,KAEHrE,EAAAA,EAAAA,YAAU,WAAM,MACR6H,EAAS,UAAGd,OAAOe,QAAQ1B,WAAlB,aAAG,EAA6B2B,MAC7C,SAAC7H,GAAD,OAAUA,EAAK,KAAO2B,GAAQwF,MAAQ,WAAInH,EAAK,MAAS2B,GAAQwF,IAAhE,IAEF,QAAqBE,IAAjB1F,GAAQwF,MAAsBQ,EAAW,CAC3C,IAAMG,EAAoC,MAApBnG,GAAQwF,KAAK,GAAa,OAAS,MACzDlD,GAAU,CAAE8D,MAAOP,OAAOG,EAAU,IAAKK,UAAWF,GACrD,CAEF,GAAE,CAACnG,GAAQwF,QAEZrH,EAAAA,EAAAA,YAAU,WACR,GAAI4F,GAAM3G,KACR,GAA0B,IAAtB2G,GAAM3G,KAAK+B,OACbtC,GDtRiB,SAACmD,EAASC,GAAV,MAAkC,CACzD,CACE3B,MAAO,CACL,CACEN,MAAO,kBAAC,EAAD,CAAkBgC,QAAAA,EAASC,oBAAAA,IAClCT,MAAO,CAAEC,QAAS,MALD,CCsRT6G,CAAUtG,GAASC,SACtB,CACL,IAAMrD,EAAOmH,GAAM3G,KAAKmJ,SAAQ,SAACC,EAAOzH,GAAR,MAAgB,CAC9C,CACEM,OAAQ8D,GACRjH,KAAMsK,EACNlI,MAAO,CACL,CACEN,MACE,0BAAMe,IAAKA,GACT,kBAAC,EAAA0H,KAAD,CAAM1H,IAAKA,EAAK2H,GAAE,2BAAsBF,EAAMvJ,UAC3C,IACAuJ,EAAMvI,YAAa,KAEtB,kBAAC0I,EAAA,EAAD,CAAYzK,KAAMsK,EAAOI,WAAS,MAIxC,CACE5I,MACE,kBAAC6I,EAAA,EAAD,CACE9H,IAAKA,EACLL,KAAM8H,EAAMM,aACZhJ,QAAQ,cAId,CACEE,MACE,kBAAC+I,EAAA,EAAD,CACEhI,IAAKA,EACLiI,UAAW,CAACR,EAAMS,UAClBL,WAAS,KAIf,CACE5I,MACE,yBAAKe,IAAKA,GACR,kBAACmI,EAAAA,QAAD,CACEnI,IAAKA,EACLoI,SAAUC,EAAAA,gBAAAA,OACVC,QAASjL,EAAKK,cACZC,EAAAA,EAAAA,0BACA,CACE4K,KACE9F,EAAAA,GACEgF,EAAMe,aACHnL,EAAKK,cAAcC,EAAAA,EAAAA,WAC1B8K,OAAQ,SAACC,GAAD,OAASD,EAAAA,EAAAA,IAAOC,EAAhB,KAIZ,kBAACC,EAAA,EAAD,CAAelB,MAAOA,EAAMe,WAAYX,WAAS,OAKzD,CACE5I,MACwB,eAAtBwI,EAAMpG,YACJ,kBAAC8G,EAAAA,QAAD,CACEG,QAASjL,EAAKK,cAAcC,EAAAA,EAAAA,WAAqB,CAC/CiL,QAASnB,EAAMoB,0BAGjB,8BAAOxL,EAAKK,cAAcC,EAAAA,EAAAA,MAG5B,yBACEqC,IAAKA,GADP,UAEKyH,EAAMoB,uBAAuBC,oBAGxC,CACE7J,MACE,yBAAK8J,UAAU,qBAAqB/I,IAAKA,GACtCyH,EAAMuB,eACL,8BACE,kBAAC,KAAD,CAAiB7I,KAAK,OAAQ,IAC7B9C,EAAKK,cAAcC,EAAAA,EAAAA,WAGtBN,EAAKK,cAAcC,EAAAA,EAAAA,YAO/B,CACEsL,OAAc,EAANjJ,EACRkJ,WAAW,EACX3J,MAAO,CACL,CACEN,MACE,6BAAS8J,UAAU,mDACjB,kBAACI,EAAAA,MAAD,CAAOC,WAAS,GACb3B,EAAMrJ,kBACL,kBAAC+K,EAAAE,UAAD,KACE,kBAAC,KAAD,CAAelJ,KAAK,OADtB,IAGGsH,EAAMrJ,oBACNqJ,EAAMoB,uBACHxL,EAAKK,cACHC,EAAAA,EAAAA,6BAEFN,EAAKK,cACHC,EAAAA,EAAAA,6BACA,CAAEiL,QAASnB,EAAMrJ,oBAVzB,IAYS,IACP,kBAAC2B,EAAAA,OAAD,CACEE,UAAQ,EACRlB,QAAQ,OACRuK,OAAO,aACPpJ,QAAS,WACPiE,GAAwBsD,GACxBxD,IAAwB,EACzB,GAEA5G,EAAKK,cAAcC,EAAAA,EAAAA,eAIxB,kBAAC,aAAD,MAEF,kBAAC,KAAD,CACEA,UAAU4L,EAAAA,EAAAA,IACRlM,EACAmM,EAAAA,IACAC,EAAAA,EAAAA,IAAmBpM,EAAMoK,IAE3BiC,QAASC,EAAAA,GAAAA,KACTxM,KAAMsK,EACNmC,gBAAgBC,EAAAA,EAAAA,IAAmBpC,GACnCqC,mBACErH,EAAAA,IACEoH,EAAAA,EAAAA,IAAmBpC,IAGvBsC,eAAe,EACfC,kBAAgB,EAChBC,cAAevC,EAAAA,KACfwC,iBACEzC,EAAM0C,QAAN,yCACsC1C,EAAM0C,SACxC,UAjJU,IA2JhCrM,GAAQD,EACT,CAGJ,GAAE,CAACmH,MAEJ5F,EAAAA,EAAAA,YAAU,WACR,IAAKoE,KAAmBhF,GAAW,CACjC,IAAM4L,EAAS,MAAKnJ,IACdS,EAAOgC,GAAWtD,OAAS,CAAEsB,KAAMgC,IAAe,CAAC,SAClD0G,EAAO1I,KACd8C,GAAW,YAAK4F,GAAW1I,GAAjB,IAAuBmE,OAAQ,IAC1C,CAEF,GAAE,CAACX,KAEJ,IA9MQmF,GA8MFC,GAAoB,SAACC,GACzB,IAAMH,EAAS,SAAKnJ,IAAR,IAAiB4E,OAAQ,IAC3B,SAAV0E,GAAoB5G,GAAc,WAC3ByG,EAAOG,GACd/F,GAAW4F,EACZ,EAEKI,GAAiB,SAACD,EAAOnE,GAC7BA,EAAOhG,OAAS,EACZoE,GAAW,SAAKvD,IAAN,IAAe4E,OAAQ,IAAvB,UAAgC0E,EAAQnE,KAClDkE,GAAkBC,EACvB,EAEKE,GAAoB,CACxB,CACEC,MAAOrN,EAAKK,cAAcC,EAAAA,EAAAA,MAAegN,cACzCC,aAAc,CACZ5K,IAAK,cACL6K,SAAU,SAACC,EAAQrD,GAAT,OAAmB9D,GAAc8D,EAAjC,EACVA,MAAO/D,GACPqH,YAAa1N,EAAKK,cAAcC,EAAAA,EAAAA,YAGpC,CACE+M,MAAOM,EAAAA,GAAAA,WAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,WAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,WAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,WAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,WAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,WAAAA,SAAwB5E,EAD/B,EAEVqB,MAAOxG,GAAQuH,WACfyC,MAAOD,EAAAA,GAAAA,WAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,SAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,SAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,SAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,SAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,SAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,SAAAA,SAAsB5E,EAD7B,EAEVqB,MAAOxG,GAAQiK,SACfD,MAAOD,EAAAA,GAAAA,SAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,OAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,OAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,OAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,OAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,OAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,OAAAA,SAAoB5E,EAD3B,EAEVqB,MAAOxG,GAAQkK,OACfF,MAAOD,EAAAA,GAAAA,OAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,WAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,WAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,WAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,WAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,WAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,WAAAA,SAAwB5E,EAD/B,EAEVqB,MAAOxG,GAAQmK,WACfH,MAAOD,EAAAA,GAAAA,WAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,SAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,SAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,SAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,SAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,SAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,SAAAA,SAAsB5E,EAD7B,EAEVqB,MAAOxG,GAAQiH,SACf+C,MAAOD,EAAAA,GAAAA,SAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,SAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,SAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,SAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,SAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,SAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,SAAAA,SAAsB5E,EAD7B,EAEVqB,MAAOxG,GAAQ4F,SACfoE,MAAOD,EAAAA,GAAAA,SAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,aAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,aAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,aAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,aAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,aAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,aAAAA,SAA0B5E,EADjC,EAEVqB,MAAOxG,GAAQ2F,aACfqE,MAAOD,EAAAA,GAAAA,aAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,OAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,OAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,OAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,OAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,OAAAA,SAAL,WACHH,SAAU,SAACC,EAAQ1E,GAAT,OACRoE,GAAeQ,EAAAA,GAAAA,OAAAA,SAAoB5E,EAD3B,EAEVqB,MAAOxG,GAAQ8F,OACfkE,MAAOD,EAAAA,GAAAA,OAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,YAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,YAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,YAAAA,SACJvD,MAAO,SAAF,OAAWuD,EAAAA,GAAAA,YAAAA,UAChBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,YAAAA,SAAL,WACHH,SAAU,SAACC,EAAQrD,GAAT,OAAmBvG,GAAoBuG,EAAvC,EACVA,MAAO,GAAF,OAAKxG,GAAQI,aAClB4J,MAAOD,EAAAA,GAAAA,YAAAA,SAGX,CACEN,MAAOM,EAAAA,GAAAA,UAAAA,MACPlL,KAAMkL,EAAAA,GAAAA,UAAAA,KACNlM,GAAIkM,EAAAA,GAAAA,UAAAA,SACJvD,MAAO,YAAF,OAAcuD,EAAAA,GAAAA,UAAAA,UACnBJ,aAAc,CACZ5K,IAAK,GAAF,OAAKgL,EAAAA,GAAAA,UAAAA,SAAL,WACHH,SAAU,SAACQ,EAAGjF,GAAJ,OAAeoE,GAAeQ,EAAAA,GAAAA,UAAAA,SAAuB5E,EAArD,EACVqB,MAAOxG,GAAQ6E,UACfmF,MAAOD,EAAAA,GAAAA,UAAAA,UAKPM,GAAsB,CAC1BC,YAAalO,EAAKK,cAAcC,EAAAA,EAAAA,cAChCsD,SAzWMoJ,GAAe,MAAKpJ,WACnBoJ,GAAamB,aACbnB,GAAa5D,YACb4D,GAAaxE,cACbwE,GAAalM,OAEbsN,EAAAA,EAAAA,IAAapB,GAAcW,EAAAA,KAoWlCU,kBAAkB,EAClBC,SAAU,SAACb,EAAQc,EAAeC,GAC5BA,GACFlI,GAAc,IACda,GAAW,SACLvD,GAAQuK,OAAS,CAAEA,MAAOvK,GAAQuK,QAD9B,IAER1F,UAAW,CAAC,QACZzE,YAAa,UACblD,MAAO8C,GAAQ9C,MACf0H,OAAQ5E,GAAQ4E,OAChBiG,QAAS7K,GAAQ6K,YAGnBF,EAAcvM,KAAI,SAACC,GACjB,IAAMyM,GAAY,UACfzM,EAAK0M,SAAWzF,MAAMC,QAAQvF,GAAQ3B,EAAK0M,WACxC/K,GAAQ3B,EAAK0M,UAAU5B,QACrB,SAAC3C,GAAD,OAAWwE,OAAOxE,KAAWwE,OAAO3M,EAAK4M,MAAM,GAAGzE,MAAlD,IAEF,IAENsE,EAAUzM,EAAK0M,UAAU5L,OAAS,EAC9BoE,GAAW,SAAKvD,IAAY8K,IAC5BzB,GAAkBhL,EAAK0M,SAC5B,GAEJ,GAmBH,OACE,kBAAC,aAAD,KACGhI,IACC,kBAAChH,EAAA,EAAD,CACEC,kBAAmB,SAACkP,GAAD,OACjBlI,GAAwBkI,EADP,EAGnBjP,YAAa8G,GACb5G,QAxBmB,WACzBqB,IACD,EAuBOtB,KAAM+G,KAGTN,IACC,kBAACwI,EAAA,EAAD,CACEnP,kBAAmB4G,GACnB3G,YAAa0G,GACbzG,KAAM2G,GACN1G,QAASqB,KAGb,kBAAC4N,EAAA,EAAD,CACEC,UAAW,CAAElI,cAAAA,GAAelE,QAjCT,SAACqM,EAAIjM,GAC5B,IAAMkM,GAAU,OAAI3O,IACpBwG,GAAiB/D,GACjBkM,EAAQnN,KAAI,SAACoN,EAAKzM,GACZmG,OAAOuG,UAAUC,eAAeC,KAAKH,EAAK,YAC5CD,EAAQxM,GAAR,SAAoByM,GAApB,IAAyBnM,OAAAA,IAE5B,IAEDxC,GAAQ0O,EACT,GAwBKK,WAAY,CACVC,UAAWzH,GACX0H,KAAM9L,GAAQ4E,OAAS5E,GAAQ9C,MAAQ,EACvC6O,QAASlG,OAAO7F,GAAQ9C,OACxBuH,UAJU,SAIAoF,EAAQiC,GAChBrH,GAAUqH,EACX,EACDE,gBAPU,SAOMnC,EAAQkC,GACtBxI,GAAW,SAAKvD,IAAN,IAAe9C,MAAO6O,EAASnH,OAAQ,IAClD,EACDgC,WAAW,GAEbqF,cAAY,GACVxC,MAAOrN,EAAKK,cAAcC,EAAAA,EAAAA,aADhB,iBAGHN,EAAKK,cAAcC,EAAAA,EAAAA,cAHhB,qBAIA,SAAC4O,EAAIY,GAAL,OACRC,EAAAA,EAAAA,GACE,OACAD,EACAlM,GACAgC,EACAE,EACAC,EACA7F,EARM,KAJA,uBAcGgF,IAdH,uBAeGA,EACTlF,EAAKK,cAAcC,EAAAA,EAAAA,YACnBN,EAAKK,cAAcC,EAAAA,EAAAA,cAjBb,GAmBZ0P,aAAc,CAAEpC,MAAOR,IACvBa,oBAAqBA,KAEtB/M,GACC,kBAAC+O,EAAA,EAAD,MACErI,GACF,kBAAC,EAAAzE,MAAD,KACE,kBAAC+M,EAAA,EAAD,OAGF,kBAAC,EAAA/M,MAAD,CACE,aAAY,aACZzB,QAASyO,EAAAA,aAAAA,QACTC,eA/ee,SAACC,EAAD,GAA2B,IAAfC,EAAe,EAAfA,SAC3BxQ,EAAOU,GAAK8P,GAAUxQ,KAAOU,GAAK8P,GAAUxQ,KAAO,KACzD,OAAIwQ,EAAW,GAAM,GAAMxQ,EAIpBA,GAA6B,YAArBA,EAAKkE,YAChB,CACE,CACEpC,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,aAC1BuC,QAAS,SAAC4K,EAAQ9E,GAAT,OAAmBD,GAAYC,EAA/B,IAGb,CACE,CACE/G,MAAO5B,EAAKK,cAAcC,EAAAA,EAAAA,YAC1BuC,QAAS,SAAC4K,EAAQ9E,GAAT,OAAmBD,GAAYC,EAA/B,IAbR,IAgBV,EA6dO4H,WA7hBiB,SAACrB,EAAIvG,EAAO1F,GACnC,IAAMuN,GAAe,OAAIhQ,IACzBgQ,EAAa7H,GAAb,SAA2B6H,EAAa7H,IAAxC,IAAgD1F,OAAAA,IAChDxC,GAAQ+P,EACT,EA0hBOvK,OAAQA,GACRwK,OAnjBO,SAAChD,EAAQzD,EAAOC,GAC7B,IAAMyG,EAAa,GAAH,OAAoB,QAAdzG,EAAsB,GAAK,KAAjC,OAAuC9B,GAAY6B,IACnE9D,GAAU,CAAE8D,MAAAA,EAAOC,UAAAA,IACnB9C,GAAW,SAAKvD,IAAN,IAAewF,KAAMsH,EAAYlI,OAAQ,IACpD,EAgjBOtG,MAAOyD,EACPnF,KAAMA,GACNmQ,mBAAoB,kBAAOrL,CAAP,EACpBsL,gBAAc,GAEd,kBAAC,EAAAtN,YAAD,MACA,kBAAC,EAAAC,UAAD,OAGJ,kBAACsN,EAAA,GAAD,CACE5E,OAAO,OACPwD,UAAWzH,GACX0H,KAAM9L,GAAQ4E,OAAS5E,GAAQ9C,MAAQ,EACvC6O,QAASlG,OAAO7F,GAAQ9C,OACxBuH,UAAW,SAAC6G,EAAIQ,GACdrH,GAAUqH,EACX,EACDE,gBAAiB,SAACV,EAAIS,GACpBxI,GAAW,SAAKvD,IAAN,IAAe9C,MAAO6O,EAASnH,OAAQ,IAClD,EACDsI,SAAQ,iCACRpP,QAASqP,EAAAA,GAAAA,SAIhB,EAEDjM,GAAWtB,UAAY,CACrBuB,YAAatB,IAAAA,MAGf,W,0ECvuBA,QAdiB,SAAC2G,EAAO4G,GACvB,OAA4CzQ,EAAAA,EAAAA,UAAS6J,GAArD,eAAO6G,EAAP,KAAuBC,EAAvB,KAUA,OATAnP,EAAAA,EAAAA,YAAU,WACR,IAAMoP,EAAUC,YAAW,WACzBF,EAAkB9G,EACnB,GAAE4G,GACH,OAAO,WACLK,aAAaF,EACd,CACF,GAAE,CAACH,EAAO5G,IAEJ6G,CACR,C","sources":["webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/RulesTable/Components/EmptyState.js","webpack:///./src/PresentationalComponents/RulesTable/helpers.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useDispatch } from 'react-redux';\nimport { useGetHostAcksQuery } from '../../Services/Acks';\nimport { useIntl } from 'react-intl';\n\nconst ViewHostAcks = ({ handleModalToggle, isModalOpen, rule, afterFn }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const addNotification = (data) => dispatch(notification(data));\n  const columns = [\n    intl.formatMessage(messages.systemName),\n    intl.formatMessage(messages.justificationNote),\n    intl.formatMessage(messages.dateDisabled),\n    '',\n  ];\n  const [rows, setRows] = useState([]);\n  const [unclean, setUnclean] = useState(false);\n  const {\n    data: hostAcks = [],\n    isFetching,\n    isLoading,\n    refetch,\n  } = useGetHostAcksQuery({\n    rule_id: rule.rule_id,\n    limit: rule.hosts_acked_count,\n  });\n  const deleteAck = async (host) => {\n    try {\n      await DeleteApi(`${BASE_URL}/hostack/${host.id}/`);\n      refetch();\n      setUnclean(true);\n    } catch (error) {\n      handleModalToggle(false);\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    const rows = hostAcks?.map((item) => ({\n      cells: [\n        item.display_name || item.system_uuid,\n        item.justification || intl.formatMessage(messages.none),\n        {\n          title: (\n            <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" />\n          ),\n        },\n        {\n          title: (\n            <Button\n              key={item.system_uuid}\n              isInline\n              variant=\"link\"\n              onClick={() => deleteAck(item)}\n            >\n              <OutlinedBellIcon size=\"sm\" />\n              {` ${intl.formatMessage(messages.enable)}`}\n            </Button>\n          ),\n        },\n      ],\n    }));\n\n    if (!isLoading && hostAcks.length === 0) {\n      afterFn();\n      handleModalToggle(false);\n    }\n\n    setRows(rows);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hostAcks]);\n\n  return (\n    <Modal\n      width={'75%'}\n      title={intl.formatMessage(messages.hostAckModalTitle)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        unclean && afterFn();\n        handleModalToggle(false);\n      }}\n    >\n      {!isFetching ? (\n        <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n          <TableHeader />\n          <TableBody />\n        </Table>\n      ) : (\n        <Table\n          aria-label=\"host-ack-table\"\n          rows={[\n            {\n              cells: [{ props: { colSpan: 3 }, title: <List /> }],\n            },\n          ]}\n          cells={columns}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n    </Modal>\n  );\n};\n\nViewHostAcks.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n};\n\nViewHostAcks.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  rule: {},\n  afterFn: () => undefined,\n};\n\nexport default ViewHostAcks;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\nimport MessageState from '../../MessageState/MessageState';\nimport { messageMapping } from '../helpers';\n\nconst EmptyState = ({ filters, toggleRulesDisabled }) => {\n  const message =\n    messageMapping()[filters.rule_status] || messageMapping().default;\n\n  return (\n    <MessageState\n      icon={CheckCircleIcon}\n      iconClass=\"ansibleCheck\"\n      title={message.title}\n      text={message.body}\n    >\n      {filters.rule_status === 'enabled' && (\n        <Button\n          variant=\"link\"\n          style={{ paddingTop: 24 }}\n          onClick={() => toggleRulesDisabled('all')}\n        >\n          <FormattedMessage id=\"rulestable.norulehits.adddisabledbutton\" />\n        </Button>\n      )}\n    </MessageState>\n  );\n};\n\nEmptyState.propTypes = {\n  filters: propTypes.object,\n  toggleRulesDisabled: propTypes.func,\n};\n\nexport default EmptyState;\n","import React from 'react';\nimport { Text } from '@patternfly/react-core';\nimport EmptyState from './Components/EmptyState';\nimport { FormattedMessage } from 'react-intl';\nimport { paramParser } from '../Common/Tables';\n\nexport const emptyRows = (filters, toggleRulesDisabled) => [\n  {\n    cells: [\n      {\n        title: <EmptyState {...{ filters, toggleRulesDisabled }} />,\n        props: { colSpan: 6 },\n      },\n    ],\n  },\n];\n\nexport const messageMapping = () => {\n  const title = <FormattedMessage id=\"rulestable.norulehits.title\" />;\n\n  return {\n    enabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    disabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    rhdisabled: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"rulestable.norules.redhatdisabledrulesbody\" />\n        </Text>\n      ),\n    },\n    default: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"noRecommendations\" />\n        </Text>\n      ),\n    },\n  };\n};\n\nexport const urlFilterBuilder = (\n  sortIndices,\n  setSearchText,\n  setFilters,\n  filters\n) => {\n  let sortingValues = Object.values(sortIndices);\n  const paramsObject = paramParser();\n  delete paramsObject.tags;\n\n  if (Array.isArray(paramsObject.sort)) {\n    if (\n      !sortingValues?.includes(paramsObject.sort[0]) ||\n      !sortingValues?.includes(`-${paramsObject.sort[0]}`)\n    ) {\n      paramsObject.sort = '-total_risk';\n    }\n  } else if (!sortingValues?.includes(paramsObject.sort)) {\n    paramsObject.sort = '-total_risk';\n  }\n  paramsObject.text === undefined\n    ? setSearchText('')\n    : setSearchText(paramsObject.text);\n  paramsObject.has_playbook !== undefined &&\n    !Array.isArray(paramsObject.has_playbook) &&\n    (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n  paramsObject.incident !== undefined &&\n    !Array.isArray(paramsObject.incident) &&\n    (paramsObject.incident = [`${paramsObject.incident}`]);\n  paramsObject.offset === undefined\n    ? (paramsObject.offset = 0)\n    : (paramsObject.offset = Number(paramsObject.offset[0]));\n  paramsObject.limit === undefined\n    ? (paramsObject.limit = 20)\n    : (paramsObject.limit = Number(paramsObject.limit[0]));\n  paramsObject.reboot !== undefined &&\n    !Array.isArray(paramsObject.reboot) &&\n    (paramsObject.reboot = [`${paramsObject.reboot}`]);\n  paramsObject.impacting !== undefined &&\n    !Array.isArray(paramsObject.impacting) &&\n    (paramsObject.impacting = [`${paramsObject.impacting}`]);\n  setFilters({ ...filters, ...paramsObject });\n};\n","import './_RulesTable.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport {\n  filterFetchBuilder,\n  pruneFilters,\n  ruleResolutionRisk,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport DisableRule from '../Modals/DisableRule';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  RuleDetails,\n  RuleDetailsMessagesKeys,\n  AdvisorProduct,\n} from '@redhat-cloud-services/frontend-components-advisor-components';\nimport RuleLabels from '../Labels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport {\n  formatMessages,\n  mapContentToValues,\n  strong,\n} from '../../Utilities/intlHelper';\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useGetRecsQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport PropTypes from 'prop-types';\n\nimport { emptyRows, urlFilterBuilder } from './helpers';\n\nconst RulesTable = ({ isTabActive }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.modified),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.remediation),\n      transforms: [sortable, fitContent],\n    },\n  ]);\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.recState);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n  const setFilters = (filters) => dispatch(updateRecFilters(filters));\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: rules = [],\n    isFetching,\n    isLoading,\n    isError,\n    refetch,\n  } = useGetRecsQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'impacted_count',\n    6: 'playbook_count',\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n\n  const hideReports = async (rowId) => {\n    const rule = rows[rowId].rule;\n\n    try {\n      if (rule.rule_status === 'enabled') {\n        setSelectedRule(rule);\n        setDisableRuleOpen(true);\n      } else {\n        try {\n          await DeleteApi(`${AppConstants.BASE_URL}/ack/${rule.rule_id}/`);\n          addNotification({\n            variant: 'success',\n            timeout: true,\n            dismissable: true,\n            title: intl.formatMessage(messages.recSuccessfullyEnabled),\n          });\n          refetch();\n        } catch (error) {\n          addNotification({\n            variant: 'danger',\n            dismissable: true,\n            title: intl.formatMessage(messages.error),\n            description: `${error}`,\n          });\n        }\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title:\n          rule.rule_status === 'enabled'\n            ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n            : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (_event, rowId) => hideReports(rowId),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (isTabActive && search && filterBuilding) {\n      urlFilterBuilder(sortIndices, setSearchText, setFilters, filters);\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sortIndex = Object.entries(sortIndices)?.find(\n      (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n    );\n    if (filters.sort !== undefined && sortIndex) {\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: Number(sortIndex[0]), direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows(emptyRows(filters, toggleRulesDisabled));\n      } else {\n        const rows = rules.data.flatMap((value, key) => [\n          {\n            isOpen: isAllExpanded,\n            rule: value,\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                      {' '}\n                      {value.description}{' '}\n                    </Link>\n                    <RuleLabels rule={value} isCompact />\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <DateFormat\n                    key={key}\n                    date={value.publish_date}\n                    variant=\"relative\"\n                  />\n                ),\n              },\n              {\n                title: (\n                  <CategoryLabel\n                    key={key}\n                    labelList={[value.category]}\n                    isCompact\n                  />\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <Tooltip\n                      key={key}\n                      position={TooltipPosition.bottom}\n                      content={intl.formatMessage(\n                        messages.rulesDetailsTotalRiskBody,\n                        {\n                          risk:\n                            AppConstants.TOTAL_RISK_LABEL_LOWER[\n                              value.total_risk\n                            ] || intl.formatMessage(messages.undefined),\n                          strong: (str) => strong(str),\n                        }\n                      )}\n                    >\n                      <InsightsLabel value={value.total_risk} isCompact />\n                    </Tooltip>\n                  </div>\n                ),\n              },\n              {\n                title:\n                  value.rule_status === 'rhdisabled' ? (\n                    <Tooltip\n                      content={intl.formatMessage(messages.byEnabling, {\n                        systems: value.impacted_systems_count,\n                      })}\n                    >\n                      <span>{intl.formatMessage(messages.nA)}</span>\n                    </Tooltip>\n                  ) : (\n                    <div\n                      key={key}\n                    >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                  ),\n              },\n              {\n                title: (\n                  <div className=\"ins-c-center-text \" key={key}>\n                    {value.playbook_count ? (\n                      <span>\n                        <AnsibeTowerIcon size=\"sm\" />{' '}\n                        {intl.formatMessage(messages.playbook)}\n                      </span>\n                    ) : (\n                      intl.formatMessage(messages.manual)\n                    )}\n                  </div>\n                ),\n              },\n            ],\n          },\n          {\n            parent: key * 2,\n            fullWidth: true,\n            cells: [\n              {\n                title: (\n                  <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n                    <Stack hasGutter>\n                      {value.hosts_acked_count ? (\n                        <StackItem>\n                          <BellSlashIcon size=\"sm\" />\n                          &nbsp;\n                          {value.hosts_acked_count &&\n                          !value.impacted_systems_count\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledForAllSystems\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledForSystemsBody,\n                                { systems: value.hosts_acked_count }\n                              )}\n                          &nbsp;{' '}\n                          <Button\n                            isInline\n                            variant=\"link\"\n                            ouiaId=\"viewSystem\"\n                            onClick={() => {\n                              setViewSystemsModalRule(value);\n                              setViewSystemsModalOpen(true);\n                            }}\n                          >\n                            {intl.formatMessage(messages.viewSystems)}\n                          </Button>\n                        </StackItem>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )}\n                      <RuleDetails\n                        messages={formatMessages(\n                          intl,\n                          RuleDetailsMessagesKeys,\n                          mapContentToValues(intl, value)\n                        )}\n                        product={AdvisorProduct.rhel}\n                        rule={value}\n                        resolutionRisk={ruleResolutionRisk(value)}\n                        resolutionRiskDesc={\n                          AppConstants.RISK_OF_CHANGE_DESC[\n                            ruleResolutionRisk(value)\n                          ]\n                        }\n                        isDetailsPage={false}\n                        showViewAffected\n                        linkComponent={Link}\n                        knowledgebaseUrl={\n                          value.node_id\n                            ? `https://access.redhat.com/node/${value.node_id}`\n                            : ''\n                        }\n                      />\n                    </Stack>\n                  </section>\n                ),\n              },\n            ],\n          },\n        ]);\n        setRows(rows);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rules]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (_event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    showDeleteButton: true,\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n          pathway: filters.pathway,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const afterViewSystemsFn = () => {\n    refetch();\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={afterViewSystemsFn}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={refetch}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID,\n              dispatch\n            ),\n          isDisabled: !permsExport,\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Table>\n          <ErrorState />\n        </Table>\n      ) : (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nRulesTable.propTypes = {\n  isTabActive: PropTypes.bool,\n};\n\nexport default RulesTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["ViewHostAcks","handleModalToggle","isModalOpen","rule","afterFn","intl","useIntl","dispatch","useDispatch","columns","formatMessage","messages","useState","rows","setRows","unclean","setUnclean","useGetHostAcksQuery","rule_id","limit","hosts_acked_count","data","hostAcks","isFetching","isLoading","refetch","deleteAck","host","DeleteApi","BASE_URL","id","variant","dismissable","title","description","notification","useEffect","map","item","cells","display_name","system_uuid","justification","date","Date","updated_at","type","Button","key","isInline","onClick","size","length","width","isOpen","onClose","Table","props","colSpan","TableHeader","TableBody","propTypes","PropTypes","defaultProps","EmptyState","filters","toggleRulesDisabled","message","messageMapping","rule_status","MessageState","icon","CheckCircleIcon","iconClass","text","body","style","paddingTop","enabled","Text","disabled","rhdisabled","default","RulesTable","isTabActive","search","useLocation","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","transforms","sortable","cellWidth","fitContent","cols","selectedTags","useSelector","workloads","SID","recState","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","addNotification","addNotificationAction","setFilters","updateRecFilters","options","tags","join","workloadQueryBuilder","useGetRecsQuery","filterFetchBuilder","rules","isError","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","urlBuilder","onSetPage","pageNumber","newOffset","offset","impacting","hideReports","rowId","timeout","sortingValues","Object","values","paramsObject","paramParser","Array","isArray","sort","includes","undefined","has_playbook","incident","Number","reboot","urlFilterBuilder","sortIndex","entries","find","sortDirection","index","direction","emptyRows","flatMap","value","Link","to","RuleLabels","isCompact","DateFormat","publish_date","CategoryLabel","labelList","category","Tooltip","position","TooltipPosition","content","risk","total_risk","strong","str","InsightsLabel","systems","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Stack","hasGutter","StackItem","ouiaId","formatMessages","RuleDetailsMessagesKeys","mapContentToValues","product","AdvisorProduct","resolutionRisk","ruleResolutionRisk","resolutionRiskDesc","isDetailsPage","showViewAffected","linkComponent","knowledgebaseUrl","node_id","filter","localFilters","removeFilterParam","param","addFilterParam","filterConfigItems","label","toLowerCase","filterValues","onChange","_event","placeholder","FC","items","res_risk","impact","likelihood","e","activeFiltersConfig","deleteTitle","topic","pruneFilters","showDeleteButton","onDelete","itemsToRemove","isAll","pathway","newFilter","urlParam","String","chips","toggleModal","DisableRule","PrimaryToolbar","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","fileType","downloadReport","filterConfig","Loading","ErrorState","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","orderParam","areActionsDisabled","isStickyHeader","Pagination","widgetId","PaginationVariant","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}