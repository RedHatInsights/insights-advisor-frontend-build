{"version":3,"file":"js/Details-Pathways.1653466490800.4cdcb48e2cf64feb9c44.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/PresentationalComponents/Cards/Pathways.js","webpack:///./src/PresentationalComponents/Common/Common.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/Labels/CategoryLabel.js","webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/SmartComponents/Recs/DetailsPathways.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nconst Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb = Breadcrumb;\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BreadcrumbItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst angle_right_icon_1 = tslib_1.__importDefault(require('@patternfly/react-icons/dist/js/icons/angle-right-icon'));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = react_styles_1.css(breadcrumb_1.default.breadcrumbLink, isActive && breadcrumb_1.default.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: react_styles_1.css(breadcrumb_1.default.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: breadcrumb_1.default.breadcrumbItemDivider },\n            React.createElement(angle_right_icon_1.default, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: react_styles_1.css(breadcrumb_1.default.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nexports.BreadcrumbItem = BreadcrumbItem;\nexports.BreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","\"use strict\";\nexports.__esModule = true;\nrequire('./breadcrumb.css');\nexports.default = {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","/* eslint-disable react/prop-types */\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport {\n  Chart,\n  ChartAxis,\n  ChartBar,\n  ChartGroup,\n  ChartVoronoiContainer,\n} from '@patternfly/react-charts';\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\n\nimport { Text } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport { RISK_OF_CHANGE_LABEL } from '../../AppConstants';\nimport React from 'react';\nimport { RebootRequired } from '../Common/Common';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport RuleLabels from '../Labels/RuleLabels';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport chart_color_black_100 from '@patternfly/react-tokens/dist/esm/chart_color_black_100';\nimport chart_color_gold_400 from '@patternfly/react-tokens/dist/esm/chart_color_gold_400';\nimport chart_color_orange_300 from '@patternfly/react-tokens/dist/esm/chart_color_orange_300';\nimport chart_color_red_100 from '@patternfly/react-tokens/dist/esm/chart_color_red_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\n\nconst PathwayCard = (props) => {\n  const intl = useIntl();\n  const {\n    name,\n    categories,\n    impacted_systems_count,\n    description,\n    has_incident,\n    reboot_required,\n    slug,\n  } = props;\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100\"\n    >\n      <CardBody className=\"body\">\n        <Text className=\"pf-u-pb-sm pf-u-font-weight-bold\">{name}</Text>\n        <CategoryLabel key={name} labelList={categories} />{' '}\n        <Link to={`/recommendations/pathways/systems/${slug}`}>\n          {intl.formatMessage(messages.topicCardSystemsaffected, {\n            systems: impacted_systems_count,\n          })}\n        </Link>\n      </CardBody>\n      <CardBody className=\"body\">{description}</CardBody>\n      <CardBody className=\"body\">\n        {has_incident && <RuleLabels rule={{ tags: 'incident' }} />}{' '}\n        {RebootRequired(reboot_required)}\n      </CardBody>\n      <CardFooter className=\"footer\">\n        <Link to={`/recommendations/pathways/${slug}`}>\n          {`${intl.formatMessage(messages.viewPathway)} `}\n          <ArrowRightIcon />\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n};\nconst TotalRisk = (props) => {\n  const intl = useIntl();\n  const {\n    impacted_systems_count,\n    incident_count,\n    categories,\n    critical_risk_count,\n    high_risk_count,\n    medium_risk_count,\n    low_risk_count,\n  } = props;\n\n  const catString = (cats) =>\n    cats.length > 1\n      ? categories.map((cat) => cat.name).join(', ')\n      : cats[0]?.name;\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100 pf-u-h-100\"\n    >\n      <CardTitle>{intl.formatMessage(messages.totalRiskPathway)}</CardTitle>\n      <CardBody className=\"body\">\n        <Grid>\n          <GridItem span={6}>\n            <div>\n              <Chart\n                ariaDesc=\"Total risk of recommendations\"\n                ariaTitle=\"Total risk of recommendations\"\n                containerComponent={\n                  <ChartVoronoiContainer\n                    labels={({ datum }) => `${datum.name}: ${datum.y}`}\n                    constrainToVisibleArea\n                  />\n                }\n                domainPadding={{\n                  x: [20, 15],\n                }}\n                height={150}\n                width={300}\n                padding={{\n                  bottom: 30,\n                  left: 45,\n                  right: 10,\n                  top: 10,\n                }}\n              >\n                <ChartAxis />\n                <ChartAxis dependentAxis showGrid />\n                <ChartGroup>\n                  <ChartBar\n                    barWidth={16}\n                    style={{\n                      data: {\n                        fill: ({ datum }) => datum.fill,\n                      },\n                    }}\n                    data={[\n                      {\n                        name: 'Critical',\n                        x: 'Critical',\n                        y: critical_risk_count,\n                        fill: chart_color_red_100.value,\n                      },\n                      {\n                        name: 'Important',\n                        x: 'Important',\n                        y: high_risk_count,\n                        fill: chart_color_orange_300.value,\n                      },\n                      {\n                        name: 'Moderate',\n                        x: 'Moderate',\n                        y: medium_risk_count,\n                        fill: chart_color_gold_400.value,\n                      },\n                      {\n                        name: 'Low',\n                        x: 'Low',\n                        y: low_risk_count,\n                        fill: chart_color_black_100.value,\n                      },\n                    ]}\n                  />\n                </ChartGroup>\n              </Chart>\n            </div>\n          </GridItem>\n          <GridItem span={6}>\n            {intl.formatMessage(messages.thisPathway, {\n              category: catString(categories),\n              systems: impacted_systems_count,\n              incidents: incident_count,\n              strong: (str) => strong(str),\n            })}\n          </GridItem>\n        </Grid>\n      </CardBody>\n    </Card>\n  );\n};\nconst Resolution = (props) => {\n  const intl = useIntl();\n  const { reboot_required, name, resolution_risk } = props;\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100 pf-u-h-100\"\n    >\n      <CardTitle>{intl.formatMessage(messages.resolution)}</CardTitle>\n      <Grid>\n        <GridItem span={7}>\n          <CardBody className=\"body\">\n            <InsightsLabel\n              text={RISK_OF_CHANGE_LABEL[resolution_risk.risk]}\n              value={resolution_risk.risk}\n              hideIcon\n            />\n          </CardBody>\n          <CardBody className=\"body\">\n            <Title headingLevel=\"h5\" size=\"md\">\n              {name}\n            </Title>\n          </CardBody>\n\n          <CardBody className=\"body\">\n            {intl.formatMessage(messages.staticRemediationDesc)}\n          </CardBody>\n          <CardBody className=\"body\">\n            {RebootRequired(reboot_required)}\n          </CardBody>\n        </GridItem>\n        <GridItem span={5}>\n          <CardTitle>{intl.formatMessage(messages.reclvl)}</CardTitle>\n          <CardBody className=\"body\">\n            <RecommendationLevel {...props} />\n          </CardBody>\n        </GridItem>\n      </Grid>\n    </Card>\n  );\n};\n\nexport { PathwayCard, TotalRisk, Resolution };\n","import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/js/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_secondary_color_100 } from '@patternfly/react-tokens';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    // eslint-disable-next-line no-console\n    onError: console.log,\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-c-icon-reboot-required'\n          : 'adv-c-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-text-system-reboot-message\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_secondary_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nimport { BASE_URL, exportNotifications } from '../../AppConstants';\nimport { Get } from '../../Utilities/Api';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst fileName = (exportTable) => {\n  const defaultParams = {\n    date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc',\n  };\n\n  return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (\n  exportTable,\n  format,\n  filters,\n  selectedTags,\n  workloads,\n  SID,\n  dispatch\n) => {\n  try {\n    let options = selectedTags?.length && { tags: selectedTags };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    dispatch(addNotification(exportNotifications.pending));\n    const data = (\n      await Get(\n        `${BASE_URL}/export/${exportTable}.${\n          format === 'json' ? 'json' : 'csv'\n        }`,\n        {},\n        { ...filters, ...options }\n      )\n        .then((result) => {\n          dispatch(addNotification(exportNotifications.success));\n          return result;\n        })\n        .catch(() => dispatch(addNotification(exportNotifications.error)))\n    ).data;\n\n    let formattedData = format === 'json' ? JSON.stringify(data) : data;\n    downloadFile(formattedData, fileName(exportTable), format);\n  } catch (error) {\n    throw `${error}`;\n  }\n};\n\nexport default downloadHelper;\n","import AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport { LabelGroup } from '@patternfly/react-core/dist/js/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CategoryLabel = ({ labelList, isCompact }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const label = (icon, text) => (\n    <Label icon={icon} variant=\"outline\" color=\"blue\" isCompact={isCompact}>\n      {text}\n    </Label>\n  );\n  const labels = (id, isCompact) => {\n    if (id === 1) {\n      return label(\n        <AutomationIcon />,\n        intl.formatMessage(messages.availability)\n      );\n    }\n    if (id === 2) {\n      return label(\n        <LockIcon />,\n        intl.formatMessage(messages.security),\n        isCompact\n      );\n    }\n    if (id === 3) {\n      return label(\n        <CubeIcon />,\n        intl.formatMessage(messages.stability),\n        isCompact\n      );\n    }\n    if (id === 4) {\n      return label(\n        <PortIcon />,\n        intl.formatMessage(messages.performance),\n        isCompact\n      );\n    }\n  };\n  return (\n    <LabelGroup numLabels={1} isCompact={isCompact}>\n      {sortedFrequencyList.map((id) => labels(Number(id[0]), isCompact))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n  isCompact: PropTypes.bool,\n};\n\nCategoryLabel.defaultProps = {\n  isCompact: false,\n};\n\nexport default CategoryLabel;\n","import { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst RecommendationLevel = (props) => {\n  const intl = useIntl();\n  const { recommendation_level: lvl, isCompact } = props;\n\n  const label = (text, lvl, color, isCompact) => (\n    <Label color={color} isCompact={isCompact}>{`${text} - ${lvl}%`}</Label>\n  );\n\n  if (lvl >= 80) {\n    return label(intl.formatMessage(messages.high), lvl, 'red', isCompact);\n  } else if (lvl < 80 && lvl >= 50) {\n    return label(intl.formatMessage(messages.medium), lvl, 'orange', isCompact);\n  } else {\n    return label(intl.formatMessage(messages.low), lvl, 'blue', isCompact);\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\n\nexport default RecommendationLevel;\n","import React, { useState } from 'react';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Post } from '../../Utilities/Api';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport messages from '../../Messages';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { useSetAckMutation } from '../../Services/Acks';\n\nconst DisableRule = ({\n  handleModalToggle,\n  isModalOpen,\n  host,\n  hosts,\n  rule,\n  afterFn,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const notification = (data) => dispatch(addNotification(data));\n  const [justification, setJustificaton] = useState('');\n  const [singleSystem, setSingleSystem] = useState(\n    host !== undefined || hosts.length > 0\n  );\n\n  // eslint-disable-next-line no-unused-vars\n  const [setAck, { isLoading }] = useSetAckMutation();\n\n  const bulkHostActions = async () => {\n    const data = { systems: hosts, justification };\n    try {\n      await Post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`, {}, data);\n      !singleSystem &&\n        notification({\n          variant: 'success',\n          dismissable: true,\n          timeout: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabled),\n        });\n      afterFn && afterFn();\n    } catch (error) {\n      notification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const disableRule = async () => {\n    if (rule.rule_status === 'enabled' && !hosts.length) {\n      const options = singleSystem\n        ? {\n            type: 'HOST',\n            options: {\n              rule: rule.rule_id,\n              system_uuid: host.id,\n              justification,\n            },\n          }\n        : {\n            type: 'RULE',\n            options: {\n              rule_id: rule.rule_id,\n              ...(justification && { justification }),\n            },\n          };\n      try {\n        await setAck(options).unwrap();\n\n        notification({\n          variant: 'success',\n          timeout: true,\n          dismissable: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabled),\n        });\n\n        setJustificaton('');\n        afterFn && afterFn();\n      } catch (error) {\n        notification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${error}`,\n        });\n      }\n    } else {\n      bulkHostActions();\n    }\n\n    handleModalToggle(false);\n  };\n\n  return (\n    <Modal\n      variant=\"small\"\n      title={intl.formatMessage(messages.disableRule)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        handleModalToggle(false);\n        setJustificaton('');\n      }}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => disableRule()}\n          ouiaId=\"confirm\"\n        >\n          {intl.formatMessage(messages.save)}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={() => {\n            handleModalToggle(false);\n            setJustificaton('');\n          }}\n          ouiaId=\"cancel\"\n        >\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      {intl.formatMessage(messages.disableRuleBody)}\n      <Form>\n        <FormGroup fieldId=\"blank-form\" />\n        {(host !== undefined || hosts.length > 0) && (\n          <FormGroup fieldId=\"disable-rule-one-system\">\n            <Checkbox\n              isChecked={singleSystem}\n              onChange={() => {\n                setSingleSystem(!singleSystem);\n              }}\n              label={\n                hosts.length\n                  ? intl.formatMessage(messages.disableRuleForSystems)\n                  : intl.formatMessage(messages.disableRuleSingleSystem)\n              }\n              id=\"disable-rule-one-system\"\n              name=\"disable-rule-one-system\"\n            />\n          </FormGroup>\n        )}\n        <FormGroup\n          label={intl.formatMessage(messages.justificationNote)}\n          fieldId=\"disable-rule-justification\"\n        >\n          <TextInput\n            type=\"text\"\n            id=\"disable-rule-justification\"\n            aria-describedby=\"disable-rule-justification\"\n            value={justification}\n            onChange={(text) => setJustificaton(text)}\n            onKeyDown={(e) =>\n              e.key === 'Enter' && (e.preventDefault(), disableRule())\n            }\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nDisableRule.propTypes = {\n  isModalOpen: PropTypes.bool,\n  host: PropTypes.object,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n  hosts: PropTypes.array,\n};\n\nDisableRule.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  system: undefined,\n  rule: {},\n  afterFn: () => undefined,\n  host: undefined,\n  hosts: [],\n};\n\nexport default DisableRule;\n","import './Details.scss';\n\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { Suspense, lazy, useEffect, useState } from 'react';\nimport {\n  Resolution,\n  TotalRisk,\n} from '../../PresentationalComponents/Cards/Pathways';\nimport {\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core/dist/esm/components/Tabs/index';\nimport { updateRecFilters, updateSysFilters } from '../../Services/Filters';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport CategoryLabel from '../../PresentationalComponents/Labels/CategoryLabel';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Inventory from '../../PresentationalComponents/Inventory/Inventory';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport RuleLabels from '../../PresentationalComponents/Labels/RuleLabels';\nimport messages from '../../Messages';\nimport { useGetPathwayQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { workloadQueryBuilder } from '../../PresentationalComponents/Common/Tables';\nimport { useLocation } from 'react-router-dom';\n\nconst RulesTable = lazy(() =>\n  import(\n    /* webpackChunkName: 'RulesTable' */ '../../PresentationalComponents/RulesTable/RulesTable'\n  )\n);\n\nconst PathwayDetails = () => {\n  const intl = useIntl();\n  const pathwayName = useParams().id;\n  const dispatch = useDispatch();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const recFilters = useSelector(({ filters }) => filters.recState);\n  const sysFilters = useSelector(({ filters }) => filters.sysState);\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const { data: pathway = {}, isFetching } = useGetPathwayQuery({\n    ...options,\n    slug: pathwayName,\n  });\n  const { pathname } = useLocation();\n\n  const [activeTab, setActiveTab] = useState(\n    pathname.includes('/recommendations/pathways/systems/') ? 1 : 0\n  );\n\n  const waitForElm = (selector) => {\n    return new Promise((resolve) => {\n      if (document.querySelector(selector)) {\n        return resolve(document.querySelector(selector));\n      }\n\n      const observer = new MutationObserver(() => {\n        if (document.querySelector(selector)) {\n          resolve(document.querySelector(selector));\n          observer.disconnect();\n        }\n      });\n    });\n  };\n\n  const scrollDown = () => {\n    if (pathname.includes('/recommendations/pathways/systems/')) {\n      setTimeout(() => {\n        waitForElm('#tablesContainer').then(() => {\n          document\n            .getElementById('tablesContainer')\n            .scrollIntoView({ behavior: 'smooth' });\n        });\n      }, 5000);\n    }\n  };\n\n  useEffect(() => {\n    const initiaRecFilters = { ...recFilters };\n    const initiaSysFilters = { ...sysFilters };\n    const defaultFilters = { pathway: pathwayName, limit: 20, offset: 0 };\n    dispatch(\n      updateRecFilters({\n        ...defaultFilters,\n        sort: 'category',\n        impacting: true,\n      })\n    );\n    dispatch(\n      updateSysFilters({\n        ...defaultFilters,\n      })\n    );\n    scrollDown();\n    return () => {\n      dispatch(updateRecFilters(initiaRecFilters));\n      dispatch(updateSysFilters(initiaSysFilters));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <React.Fragment>\n      {isFetching ? (\n        <Loading />\n      ) : (\n        <React.Fragment>\n          <PageHeader className=\"adv-c-page__header\">\n            <Breadcrumbs\n              ouiaId=\"override\"\n              current={pathway.description || ''}\n            />\n            <CategoryLabel labelList={pathway.categories} />\n            <PageHeaderTitle\n              title={\n                <React.Fragment>\n                  {pathway.description}\n                  {pathway.has_incident && (\n                    <RuleLabels rule={{ tags: 'incident' }} />\n                  )}\n                </React.Fragment>\n              }\n            />\n            <p className=\"pf-u-mb-lg\">\n              {intl.formatMessage(messages.rulesDetailsModifieddate, {\n                date: (\n                  <DateFormat\n                    date={new Date(pathway.publish_date)}\n                    type=\"onlyDate\"\n                  />\n                ),\n              })}\n            </p>\n          </PageHeader>\n          <Main className=\"pf-u-pb-0\">\n            <Grid hasGutter>\n              <GridItem sm={12} md={6}>\n                <TotalRisk {...pathway} />\n              </GridItem>\n              <GridItem sm={12} md={6}>\n                <Resolution {...pathway} />\n              </GridItem>\n            </Grid>\n          </Main>\n        </React.Fragment>\n      )}\n      {isFetching && <Loading />}\n      <Main>\n        <Tabs\n          className=\"adv__background--global-100\"\n          mountOnEnter\n          unmountOnExit\n          activeKey={activeTab}\n          onSelect={(_e, tab) => setActiveTab(tab)}\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.recommendations)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <RulesTable />\n              </Suspense>\n            )}\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.systems)}\n              </TabTitleText>\n            }\n          >\n            {isFetching ? (\n              <Loading />\n            ) : (\n              <Suspense fallback={<Loading />}>\n                <Inventory\n                  tableProps={{\n                    canSelectAll: false,\n                    isStickyHeader: true,\n                  }}\n                  pathway={pathway}\n                  selectedTags={selectedTags}\n                  workloads={workloads}\n                  SID={SID}\n                  showTags={true}\n                />\n              </Suspense>\n            )}\n          </Tab>\n        </Tabs>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default PathwayDetails;\n"],"names":["exports","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","useOUIAProps","createElement","Object","assign","css","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement","angle_right_icon_1","classNameProp","to","isActive","isDropdown","target","component","render","Component","ariaCurrent","undefined","breadcrumbLink","modifiers","current","breadcrumbItem","breadcrumbItemDivider","type","breadcrumbDropdown","href","__esModule","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","useEffect","console","error","concat","__assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Cmp","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","size","PathwayCard","intl","useIntl","name","categories","impacted_systems_count","description","has_incident","reboot_required","slug","isFlat","isPlain","Text","key","labelList","Link","formatMessage","messages","systems","rule","tags","RebootRequired","TotalRisk","cats","incident_count","critical_risk_count","high_risk_count","medium_risk_count","low_risk_count","span","ariaDesc","ariaTitle","containerComponent","labels","datum","y","constrainToVisibleArea","domainPadding","x","height","width","padding","bottom","left","right","top","C","dependentAxis","showGrid","barWidth","style","data","fill","chart_color_red_100","chart_color_orange_300","chart_color_gold_400","chart_color_black_100","category","cat","join","incidents","strong","str","Resolution","resolution_risk","text","RISK_OF_CHANGE_LABEL","risk","value","hideIcon","headingLevel","cache","createIntlCache","locale","navigator","language","slice","createIntl","onError","log","TextContent","TextVariants","status","QuestionTooltip","position","TooltipPosition","content","aria-label","color","global_secondary_color_100","fileName","exportTable","defaultParams","date","Date","toISOString","replace","split","format","filters","selectedTags","workloads","SID","dispatch","options","workloadQueryBuilder","addNotification","exportNotifications","Get","BASE_URL","then","result","formattedData","JSON","stringify","downloadFile","CategoryLabel","arr","isCompact","sortedFrequencyList","label","id","entries","reduce","acc","curr","sort","a","b","icon","Label","variant","numLabels","Number","PropTypes","RecommendationLevel","lvl","recommendation_level","DisableRule","handleModalToggle","isModalOpen","host","hosts","afterFn","useDispatch","notification","useState","justification","setJustificaton","singleSystem","setSingleSystem","useSetAckMutation","setAck","bulkHostActions","isLoading","Post","rule_id","dismissable","timeout","title","disableRule","rule_status","system_uuid","unwrap","isOpen","onClose","actions","Button","onClick","fieldId","isChecked","onChange","aria-describedby","onKeyDown","preventDefault","system","RulesTable","lazy","pathwayName","useParams","useSelector","recFilters","recState","sysFilters","sysState","useGetPathwayQuery","pathway","isFetching","pathname","useLocation","includes","activeTab","setActiveTab","initiaRecFilters","initiaSysFilters","defaultFilters","limit","offset","updateRecFilters","impacting","updateSysFilters","setTimeout","selector","Promise","resolve","document","querySelector","observer","MutationObserver","disconnect","getElementById","scrollIntoView","behavior","publish_date","hasGutter","sm","md","mountOnEnter","unmountOnExit","activeKey","onSelect","_e","tab","eventKey","T","tableProps","canSelectAll","isStickyHeader","showTags"],"sourceRoot":""}