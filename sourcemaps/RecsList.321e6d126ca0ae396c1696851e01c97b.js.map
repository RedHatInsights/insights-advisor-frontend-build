{"version":3,"file":"js/RecsList.6f62aaf2d00515ec13e5.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardExpandableContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/arrow-right-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/export-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/power-off-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_secondary_color_100.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/PresentationalComponents/Common/Common.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/Labels/LabelIcon.js","webpack:///./src/PresentationalComponents/Labels/CategoryLabel.js","webpack:///./src/PresentationalComponents/Labels/RuleLabels.js","webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/Utilities/Helpers.js","webpack:///./src/PresentationalComponents/ExecutiveReport/Download.js","webpack:///./src/PresentationalComponents/Cards/PathwayCard.js","webpack:///./src/PresentationalComponents/PathwaysPanel/PathwaysPanel.js","webpack:///./src/SmartComponents/Recs/List.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { CardContext } from './Card';\nexport const CardExpandableContent = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ isExpanded }) => isExpanded ? (React.createElement(\"div\", Object.assign({ className: css(styles.cardExpandableContent, className) }, props), children)) : null));\n};\nCardExpandableContent.displayName = 'CardExpandableContent';\n//# sourceMappingURL=CardExpandableContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => {\n        const cardHeaderToggle = (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, isToggleRightAligned && styles.modifiers.toggleRight, className), id: id }, props),\n            onExpand && !isToggleRightAligned && cardHeaderToggle,\n            children,\n            onExpand && isToggleRightAligned && cardHeaderToggle));\n    }));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { createIcon } from '../createIcon';\n\nexport const ArrowRightIconConfig = {\n  name: 'ArrowRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ArrowRightIcon = createIcon(ArrowRightIconConfig);\n\nexport default ArrowRightIcon;","import { createIcon } from '../createIcon';\n\nexport const ExportIconConfig = {\n  name: 'ExportIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExportIcon = createIcon(ExportIconConfig);\n\nexport default ExportIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const PowerOffIconConfig = {\n  name: 'PowerOffIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PowerOffIcon = createIcon(PowerOffIconConfig);\n\nexport default PowerOffIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_secondary_color_100 = {\n  \"name\": \"--pf-global--secondary-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--secondary-color--100)\"\n};\nexports[\"default\"] = exports.global_secondary_color_100;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title } from '@patternfly/react-core';\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, __assign({ headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\" }, { children: title })));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import './_Common.scss';\n\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/esm/components/Text/index';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport { createIntl, createIntlCache } from 'react-intl';\n\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport PowerOffIcon from '@patternfly/react-icons/dist/esm/icons/power-off-icon';\nimport React from 'react';\nimport { global_secondary_color_100 } from '@patternfly/react-tokens/dist/js/global_secondary_color_100';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\nconst intl = createIntl(\n  {\n    locale,\n  },\n  cache\n);\n\nconst RebootRequired = (reboot_required) => (\n  <span className=\"adv-system-reboot-message\">\n    <PowerOffIcon\n      className={\n        reboot_required\n          ? 'adv-c-icon-reboot-required'\n          : 'adv-c-icon-no-reboot-required'\n      }\n    />\n    <TextContent className=\"adv-c-text-system-reboot-message pf-u-font-size-sm\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(messages.systemReboot, {\n          strong: (str) => strong(str),\n          status: reboot_required\n            ? intl.formatMessage(messages.is)\n            : intl.formatMessage(messages.isNot),\n        })}\n      </Text>\n    </TextContent>\n  </span>\n);\n\nconst QuestionTooltip = (text) => (\n  <Tooltip\n    key={text}\n    position={TooltipPosition.right}\n    content={<div>{text}</div>}\n  >\n    <span aria-label=\"Action\">\n      <OutlinedQuestionCircleIcon color={global_secondary_color_100.value} />\n    </span>\n  </Tooltip>\n);\n\nexport { RebootRequired, QuestionTooltip };\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nimport { BASE_URL, exportNotifications } from '../../AppConstants';\nimport { Get } from '../../Utilities/Api';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst fileName = (exportTable) => {\n  const defaultParams = {\n    date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc',\n  };\n\n  return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (\n  exportTable,\n  format,\n  filters,\n  selectedTags,\n  workloads,\n  SID,\n  dispatch\n) => {\n  try {\n    let options = selectedTags?.length && { tags: selectedTags };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    dispatch(addNotification(exportNotifications.pending));\n    const data = (\n      await Get(\n        `${BASE_URL}/export/${exportTable}.${\n          format === 'json' ? 'json' : 'csv'\n        }`,\n        {},\n        { ...filters, ...options }\n      )\n        .then((result) => {\n          dispatch(addNotification(exportNotifications.success));\n          return result;\n        })\n        .catch(() => dispatch(addNotification(exportNotifications.error)))\n    ).data;\n\n    let formattedData = format === 'json' ? JSON.stringify(data) : data;\n    downloadFile(formattedData, fileName(exportTable), format);\n  } catch (error) {\n    throw `${error}`;\n  }\n};\n\nexport default downloadHelper;\n","import { Label } from '@patternfly/react-core/dist/esm/components/Label/index';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LabelIcon = ({ icon, text }) => (\n  <Label icon={icon} variant=\"outline\" color=\"blue\" isCompact>\n    {text}\n  </Label>\n);\n\nLabelIcon.propTypes = {\n  icon: PropTypes.object,\n  text: PropTypes.bool,\n};\n\nexport default LabelIcon;\n","/* eslint-disable react/jsx-key */\nimport AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { LabelGroup } from '@patternfly/react-core/dist/esm/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport LabelIcon from './LabelIcon';\n\nconst CategoryLabel = ({ labelList }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const labels = (id) =>\n    [\n      <LabelIcon\n        icon={<AutomationIcon />}\n        text={intl.formatMessage(messages.availability)}\n      />,\n      <LabelIcon\n        icon={<LockIcon />}\n        text={intl.formatMessage(messages.security)}\n      />,\n      <LabelIcon\n        icon={<CubeIcon />}\n        text={intl.formatMessage(messages.stability)}\n      />,\n      <LabelIcon\n        icon={<PortIcon />}\n        text={intl.formatMessage(messages.performance)}\n      />,\n    ][id];\n\n  return (\n    <LabelGroup numLabels={1} isCompact>\n      {sortedFrequencyList.map((id) => labels(Number(id[0] - 1)))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n  isCompact: PropTypes.bool,\n};\n\nCategoryLabel.defaultProps = {\n  isCompact: true,\n};\n\nexport default CategoryLabel;\n","import './_RuleLabels.scss';\n\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst RuleLabels = ({ rule, isCompact, noMargin }) => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      {rule?.tags?.search('incident') !== -1 && (\n        <Tooltip\n          content={intl.formatMessage(messages.incidentTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label\n            color=\"red\"\n            className={noMargin ? null : 'adv-c-label-incident'}\n            isCompact={isCompact}\n          >\n            {intl.formatMessage(messages.incident)}\n          </Label>\n        </Tooltip>\n      )}\n      {rule?.rule_status === 'disabled' && (\n        <Tooltip\n          content={intl.formatMessage(messages.ruleIsDisabledTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"gray\" isCompact={isCompact}>\n            {intl.formatMessage(messages.disabled)}\n          </Label>\n        </Tooltip>\n      )}\n      {rule?.rule_status === 'rhdisabled' && (\n        <Tooltip\n          content={intl.formatMessage(messages.ruleIsDisabledTooltip)}\n          position={TooltipPosition.right}\n        >\n          <Label color=\"gray\" isCompact={isCompact}>\n            {intl.formatMessage(messages.redhatDisabled)}\n          </Label>\n        </Tooltip>\n      )}\n    </React.Fragment>\n  );\n};\n\nRuleLabels.propTypes = {\n  rule: PropTypes.object,\n  isCompact: PropTypes.bool,\n  noMargin: PropTypes.bool,\n};\n\nRuleLabels.defaultProps = {\n  isCompact: true,\n};\n\nexport default RuleLabels;\n","import { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/esm/components/Card/CardBody';\nimport { List } from 'react-content-loader';\nimport React from 'react';\nconst Loading = () => (\n  <Card>\n    <CardBody>\n      <List />\n    </CardBody>\n  </Card>\n);\n\nexport default Loading;\n","import React, { useState } from 'react';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/esm/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/esm/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/esm/components/Modal/Modal';\nimport { Post } from '../../Utilities/Api';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport messages from '../../Messages';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { useSetAckMutation } from '../../Services/Acks';\n\nconst DisableRule = ({\n  handleModalToggle,\n  isModalOpen,\n  host,\n  hosts,\n  rule,\n  afterFn,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const notification = (data) => dispatch(addNotification(data));\n  const [justification, setJustificaton] = useState('');\n  const [singleSystem, setSingleSystem] = useState(\n    host !== undefined || hosts.length > 0\n  );\n\n  const [setAck] = useSetAckMutation();\n\n  const bulkHostActions = async () => {\n    const data = { systems: hosts, justification };\n    try {\n      await Post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`, {}, data);\n      !singleSystem &&\n        notification({\n          variant: 'success',\n          dismissable: true,\n          timeout: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabled),\n        });\n      afterFn && afterFn();\n    } catch (error) {\n      notification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const disableRule = async () => {\n    if (rule.rule_status === 'enabled' && !hosts.length) {\n      const options = singleSystem\n        ? {\n            type: 'HOST',\n            options: {\n              rule: rule.rule_id,\n              system_uuid: host.id,\n              justification,\n            },\n          }\n        : {\n            type: 'RULE',\n            options: {\n              rule_id: rule.rule_id,\n              ...(justification && { justification }),\n            },\n          };\n      try {\n        await setAck(options).unwrap();\n\n        notification({\n          variant: 'success',\n          timeout: true,\n          dismissable: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabled),\n        });\n\n        setJustificaton('');\n        afterFn && afterFn();\n      } catch (error) {\n        notification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${error}`,\n        });\n      }\n    } else {\n      bulkHostActions();\n    }\n\n    handleModalToggle(false);\n  };\n\n  return (\n    <Modal\n      variant=\"small\"\n      title={intl.formatMessage(messages.disableRule)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        handleModalToggle(false);\n        setJustificaton('');\n      }}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => disableRule()}\n          ouiaId=\"confirm\"\n        >\n          {intl.formatMessage(messages.save)}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={() => {\n            handleModalToggle(false);\n            setJustificaton('');\n          }}\n          ouiaId=\"cancel\"\n        >\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      {intl.formatMessage(messages.disableRuleBody)}\n      <Form>\n        <FormGroup fieldId=\"blank-form\" />\n        {(host !== undefined || hosts.length > 0) && (\n          <FormGroup fieldId=\"disable-rule-one-system\">\n            <Checkbox\n              isChecked={singleSystem}\n              onChange={() => {\n                setSingleSystem(!singleSystem);\n              }}\n              label={\n                hosts.length\n                  ? intl.formatMessage(messages.disableRuleForSystems)\n                  : intl.formatMessage(messages.disableRuleSingleSystem)\n              }\n              id=\"disable-rule-one-system\"\n              name=\"disable-rule-one-system\"\n            />\n          </FormGroup>\n        )}\n        <FormGroup\n          label={intl.formatMessage(messages.justificationNote)}\n          fieldId=\"disable-rule-justification\"\n        >\n          <TextInput\n            type=\"text\"\n            id=\"disable-rule-justification\"\n            aria-describedby=\"disable-rule-justification\"\n            value={justification}\n            onChange={(text) => setJustificaton(text)}\n            onKeyDown={(e) =>\n              e.key === 'Enter' && (e.preventDefault(), disableRule())\n            }\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nDisableRule.propTypes = {\n  isModalOpen: PropTypes.bool,\n  host: PropTypes.object,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n  hosts: PropTypes.array,\n};\n\nDisableRule.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  system: undefined,\n  rule: {},\n  afterFn: () => undefined,\n  host: undefined,\n  hosts: [],\n};\n\nexport default DisableRule;\n","export const renderPDF = (pdfBlob, fileName = 'new-report') => {\n  const url = window.URL.createObjectURL(pdfBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = fileName;\n  document.body.appendChild(a);\n  a.click();\n  a.remove();\n};\n","import './_Download.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport ExportIcon from '@patternfly/react-icons/dist/esm/icons/export-icon';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@patternfly/react-core';\nimport { fetchPDFReport } from '../../Utilities/Api';\nimport { renderPDF } from '../../Utilities/Helpers';\nimport { exportNotifications } from '../../AppConstants';\n\nconst DownloadExecReport = ({ isDisabled }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const dataFetch = async () => {\n    dispatch(addNotification(exportNotifications.pending));\n\n    try {\n      const result = await fetchPDFReport('advisor');\n      renderPDF(\n        result,\n        `Advisor-Executive-Report--${new Date()\n          .toUTCString()\n          .replace(/ /g, '-')}.pdf`\n      );\n      dispatch(addNotification(exportNotifications.success));\n    } catch (e) {\n      dispatch(addNotification(exportNotifications.error));\n    }\n  };\n\n  return (\n    <Button\n      onClick={dataFetch}\n      variant=\"link\"\n      isInline\n      isDisabled={isDisabled}\n      icon={<ExportIcon className=\"iconOverride\" />}\n      className=\"downloadButtonOverride\"\n    >\n      {intl.formatMessage(messages.downloadExecutiveLabel)}\n    </Button>\n  );\n};\n\nDownloadExecReport.propTypes = {\n  isDisabled: PropTypes.bool,\n};\nexport default DownloadExecReport;\n","/* eslint-disable react/prop-types */\nimport './Pathways.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { Text } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { RebootRequired } from '../Common/Common';\nimport RuleLabels from '../Labels/RuleLabels';\n\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const PathwayCard = ({\n  name,\n  categories,\n  impacted_systems_count,\n  description,\n  has_incident,\n  reboot_required,\n  slug,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <Card\n      isFlat\n      isPlain\n      className=\"adv-c-card-pathway adv__background--global-100\"\n    >\n      <CardBody className=\"body\">\n        <Text className=\"pf-u-pb-sm pf-u-font-weight-bold\">{name}</Text>\n        <CategoryLabel key={name} labelList={categories} />{' '}\n        <Link\n          to={`/recommendations/pathways/systems/${slug}`}\n          className=\"pf-u-font-size-sm\"\n        >\n          {intl.formatMessage(messages.topicCardSystemsaffected, {\n            systems: impacted_systems_count,\n          })}\n        </Link>\n      </CardBody>\n      <CardBody className=\"body pf-u-font-size-sm\">{description}</CardBody>\n      <CardBody className=\"body pf-u-font-size-sm\">\n        {has_incident && <RuleLabels rule={{ tags: 'incident' }} isCompact />}{' '}\n        {RebootRequired(reboot_required)}\n      </CardBody>\n      <CardFooter className=\"footer pf-u-font-size-sm\">\n        <Link to={`/recommendations/pathways/${slug}`}>\n          {`${intl.formatMessage(messages.viewPathway)} `}\n          <ArrowRightIcon />\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n};\n","import './_PathwaysPanel.scss';\n\nimport {\n  Card,\n  CardExpandableContent,\n  CardHeader,\n  CardTitle,\n} from '@patternfly/react-core/dist/esm/components/Card/index';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PathwayCard } from '../Cards/PathwayCard';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\nimport { useGetPathwaysQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst PathwaysPanel = () => {\n  const intl = useIntl();\n  const { offset } = useSelector(({ filters: { pathState } }) => pathState);\n  const [expanded, setExpanded] = useState(\n    JSON.parse(localStorage.getItem('advisor_pathwayspanel_expanded') || 'true')\n  );\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n\n  const options = {\n    ...(selectedTags?.length > 0 ? { tags: selectedTags.join(',') } : {}),\n    ...(workloads ? workloadQueryBuilder(workloads, SID) : {}),\n  };\n  const { data, isLoading, isFetching, isError } = useGetPathwaysQuery({\n    sort: '-recommendation_level',\n    offset,\n    limit: 3,\n    ...options,\n  });\n\n  return !isLoading ? (\n    <Card\n      className=\"adv-c-card adv-c-card-pathways-panel\"\n      id=\"adv-c-card-pathwayspanel\"\n      isExpanded={expanded}\n    >\n      <CardHeader\n        onExpand={() => {\n          setExpanded(!expanded);\n          localStorage.setItem('advisor_pathwayspanel_expanded', !expanded);\n        }}\n        toggleButtonProps={{\n          id: `ins-c-advisor__card-title--pathwayspanel-toggle-button`,\n          'aria-label': 'Details',\n          'aria-labelledby': `ins-c-advisor__card-title--pathwayspanel toggle-button`,\n        }}\n      >\n        <CardTitle>\n          <Title headingLevel=\"h2\" size=\"lg\">\n            {intl.formatMessage(messages.improveRecommended)}\n          </Title>\n        </CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        {isFetching ? (\n          <Loading />\n        ) : !isError && data.data?.length ? (\n          <Grid\n            md={data.data?.length === 1 ? 8 : data.data?.length === 2 ? 6 : 4}\n            sm={12}\n          >\n            {data.data.map((pathway) => (\n              <GridItem key={pathway.name}>\n                <PathwayCard {...pathway} />\n              </GridItem>\n            ))}\n          </Grid>\n        ) : isError ? (\n          <MessageState\n            icon={'none'}\n            title={intl.formatMessage(messages.noPathwaysAvailable)}\n            text={intl.formatMessage(messages.pathwaysPanelsError)}\n          />\n        ) : (\n          <MessageState\n            icon={'none'}\n            text={intl.formatMessage(messages.noPathways)}\n          />\n        )}\n      </CardExpandableContent>\n    </Card>\n  ) : (\n    <Loading />\n  );\n};\n\nPathwaysPanel.propTypes = {\n  className: propTypes.string,\n};\n\nexport default PathwaysPanel;\n","import {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { Suspense, lazy, useState } from 'react';\nimport {\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core/dist/esm/components/Tabs/index';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport DownloadExecReport from '../../PresentationalComponents/ExecutiveReport/Download';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PERMS } from '../../AppConstants';\nimport { QuestionTooltip } from '../../PresentationalComponents/Common/Common';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport PathwaysPanel from '../../PresentationalComponents/PathwaysPanel/PathwaysPanel';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\n\nconst PathwaysTable = lazy(() =>\n  import(\n    /* webpackChunkName: 'PathwaysTable' */ '../../PresentationalComponents/PathwaysTable/PathwaysTable'\n  )\n);\n\nconst List = () => {\n  const intl = useIntl();\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const permsExport = usePermissions('advisor', PERMS.export);\n  document.title = intl.formatMessage(messages.documentTitle, {\n    subnav: messages.recommendations.defaultMessage,\n  });\n  const [activeTab, setActiveTab] = useState(\n    pathname === '/recommendations/pathways' ? 1 : 0\n  );\n  const changeTab = (tab) => {\n    setActiveTab(tab);\n    history.push(tab === 1 ? '/recommendations/pathways' : '/recommendations');\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"adv-c-page-recommendations__header\">\n        <PageHeaderTitle\n          title={`${intl.formatMessage(messages.insightsHeader)} ${intl\n            .formatMessage(messages.recommendations)\n            .toLowerCase()}`}\n        />\n        {!permsExport.isLoading && (\n          <Tooltip\n            trigger={!permsExport.hasAccess ? 'mouseenter' : ''}\n            content={intl.formatMessage(messages.permsAction)}\n          >\n            <DownloadExecReport isDisabled={!permsExport.hasAccess} />\n          </Tooltip>\n        )}\n      </PageHeader>\n      <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n        <PathwaysPanel />\n        <Tabs\n          className=\"adv__background--global-100\"\n          activeKey={activeTab}\n          onSelect={(_e, tab) => changeTab(tab)}\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.recommendations)}\n              </TabTitleText>\n            }\n          >\n            <RulesTable isTabActive={activeTab === 0} />\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={\n              <TabTitleText>\n                {intl.formatMessage(messages.pathways)}{' '}\n                {QuestionTooltip(\n                  intl.formatMessage(messages.recommendedPathways)\n                )}\n              </TabTitleText>\n            }\n          >\n            {activeTab === 1 && (\n              <Suspense fallback={<Loading />}>\n                <PathwaysTable isTabActive={activeTab === 1} />\n              </Suspense>\n            )}\n          </Tab>\n        </Tabs>\n      </section>\n    </React.Fragment>\n  );\n};\n\nList.displayName = 'recommendations-list';\n\nexport default List;\n"],"names":["CardExpandableContent","_a","children","className","props","isExpanded","Object","assign","displayName","CardFooter","component","Component","CardHeader","id","onExpand","toggleButtonProps","isToggleRightAligned","cardId","cardHeaderToggle","variant","type","onClick","evt","ArrowRightIconConfig","name","height","width","svgPath","yOffset","xOffset","ArrowRightIcon","ExportIconConfig","ExportIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","PowerOffIconConfig","PowerOffIcon","exports","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","title","pageHeaderTitleClasses","Title","headingLevel","size","cache","createIntlCache","locale","navigator","language","slice","intl","createIntl","RebootRequired","reboot_required","TextVariants","formatMessage","messages","strong","str","status","QuestionTooltip","text","key","position","TooltipPosition","content","color","global_secondary_color_100","fileName","exportTable","defaultParams","date","Date","toISOString","replace","split","format","filters","selectedTags","workloads","SID","dispatch","options","tags","workloadQueryBuilder","addNotification","exportNotifications","Get","BASE_URL","then","result","data","formattedData","JSON","stringify","downloadFile","LabelIcon","icon","Label","isCompact","propTypes","PropTypes","CategoryLabel","arr","labelList","useIntl","sortedFrequencyList","map","label","entries","reduce","acc","curr","sort","a","b","LabelGroup","numLabels","labels","Number","defaultProps","RuleLabels","rule","noMargin","search","rule_status","DisableRule","handleModalToggle","isModalOpen","host","hosts","afterFn","useDispatch","notification","useState","justification","setJustificaton","undefined","singleSystem","setSingleSystem","useSetAckMutation","setAck","bulkHostActions","systems","Post","rule_id","dismissable","timeout","description","disableRule","system_uuid","unwrap","isOpen","onClose","actions","ouiaId","fieldId","isChecked","onChange","value","onKeyDown","e","preventDefault","system","renderPDF","pdfBlob","url","window","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","remove","DownloadExecReport","isDisabled","dataFetch","fetchPDFReport","toUTCString","Button","isInline","PathwayCard","categories","impacted_systems_count","has_incident","slug","Card","isFlat","isPlain","CardBody","Text","Link","to","PathwaysPanel","offset","useSelector","pathState","parse","localStorage","getItem","expanded","setExpanded","join","useGetPathwaysQuery","limit","isLoading","isFetching","isError","Loading","setItem","CardTitle","Grid","md","sm","pathway","GridItem","MessageState","PathwaysTable","lazy","List","pathname","useLocation","history","useHistory","permsExport","usePermissions","PERMS","subnav","activeTab","setActiveTab","PageHeader","PageHeaderTitle","toLowerCase","Tooltip","trigger","hasAccess","Download","Tabs","activeKey","onSelect","_e","tab","push","changeTab","Tab","eventKey","TabTitleText","T","RulesTable","isTabActive","Suspense","fallback"],"sourceRoot":""}