{"version":3,"sources":["webpack:///./src/SmartComponents/Overview/Dashboard.js","webpack:///./src/SmartComponents/Overview/Overview.js"],"names":["SummaryChart","asyncComponent","__webpack_require__","e","then","bind","OverviewDonut","Promise","all","OverviewDashboard","total","category","insights","chrome","auth","getUser","this","props","fetchStatsRules","fetchStatsSystems","setBreadcrumbs","title","navigate","prevProps","statsRules","rules","setState","Availability","Stability","Performance","Security","_this$props","statsRulesFetchStatus","statsSystemsFetchStatus","statsSystems","state","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","Fragment","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_17__","className","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_14__","gutter","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_15__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_16__","size","headingLevel","rulesTotalRisk","total_risk","reportsTotalRisk","_PresentationalComponents_Loading_Loading__WEBPACK_IMPORTED_MODULE_19__","Component","propTypes","match","PropTypes","object","breadcrumbs","array","func","string","routerParams","connect","ownProps","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","AdvisorStore","dispatch","url","AppActions","obj","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_3__","_Utilities_asyncComponent__WEBPACK_IMPORTED_MODULE_4__","resolve","Details","List","InventoryDetails","exact","path","component"],"mappings":"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","file":"js/Overview.js","sourcesContent":["import React, { Component } from 'react';\nimport asyncComponent from '../../Utilities/asyncComponent';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Gallery, GalleryItem, Title } from '@patternfly/react-core';\nimport { Main, PageHeader, PageHeaderTitle, routerParams } from '@red-hat-insights/insights-frontend-components';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport '../../App.scss';\n\nconst SummaryChart = asyncComponent(() => import('../../PresentationalComponents/Charts/SummaryChart/SummaryChart'));\nconst OverviewDonut = asyncComponent(() => import('../../PresentationalComponents/Charts/OverviewDonut'));\n\nclass OverviewDashboard extends Component {\n    state = {\n        total: 0,\n        category: []\n    };\n\n    async componentDidMount () {\n        await insights.chrome.auth.getUser();\n        this.props.fetchStatsRules();\n        this.props.fetchStatsSystems();\n        this.props.setBreadcrumbs([{ title: 'Overview', navigate: '/overview' }]);\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.statsRules !== prevProps.statsRules) {\n            const rules = this.props.statsRules;\n            this.setState({\n                category: [ rules.category.Availability, rules.category.Stability, rules.category.Performance, rules.category.Security ]\n            });\n            this.setState({ total: rules.total });\n        }\n    }\n\n    render () {\n        const {\n            statsRulesFetchStatus, statsSystemsFetchStatus, statsRules, statsSystems\n        } = this.props;\n        const { category } = this.state;\n        return <>\n            <PageHeader>\n                <PageHeaderTitle title='Overview'/>\n            </PageHeader>\n            <Main className='pf-m-light'>\n                <Gallery gutter=\"lg\">\n                    <GalleryItem>\n                        <Title size='lg' headingLevel='h3'>Rule hits by severity</Title>\n                        { statsRulesFetchStatus === 'fulfilled' && statsSystemsFetchStatus === 'fulfilled' ? (\n                            <SummaryChart rulesTotalRisk={ statsRules.total_risk } reportsTotalRisk={ statsSystems.total_risk }/>\n                        )\n                            : (<Loading/>)\n                        }\n                    </GalleryItem>\n                    <GalleryItem>\n                        <Title size='lg' headingLevel='h3'>Rule hits by category</Title>\n                        { statsRulesFetchStatus === 'fulfilled' ? (\n                            <OverviewDonut category={ category } className='pf-u-mt-md'/>\n                        )\n                            : (<Loading/>) }\n                    </GalleryItem>\n                </Gallery>\n            </Main>\n            <Main>&nbsp;</Main>\n        </>;\n    }\n}\n\nOverviewDashboard.propTypes = {\n    match: PropTypes.object,\n    breadcrumbs: PropTypes.array,\n    setBreadcrumbs: PropTypes.func,\n    statsRulesFetchStatus: PropTypes.string,\n    statsRules: PropTypes.object,\n    fetchStatsRules: PropTypes.func,\n    statsSystemsFetchStatus: PropTypes.string,\n    statsSystems: PropTypes.object,\n    fetchStatsSystems: PropTypes.func\n\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    statsRules: state.AdvisorStore.statsRules,\n    statsRulesFetchStatus: state.AdvisorStore.statsRulesFetchStatus,\n    statsSystems: state.AdvisorStore.statsSystems,\n    statsSystemsFetchStatus: state.AdvisorStore.statsSystemsFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchStatsRules: (url) => dispatch(AppActions.fetchStatsRules(url)),\n    fetchStatsSystems: (url) => dispatch(AppActions.fetchStatsSystems(url)),\n    setBreadcrumbs: (obj) => dispatch(AppActions.setBreadcrumbs(obj))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OverviewDashboard));\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport asyncComponent from '../../Utilities/asyncComponent';\n\nconst OverviewDashboard = asyncComponent(() => import(/* webpackChunkName: \"Overview\" */ './Dashboard'));\nconst Details = asyncComponent(() => import(/* webpackChunkName: \"Details\" */ './Details'));\nconst List = asyncComponent(() => import(/* webpackChunkName: \"Lists\" */ './List'));\nconst InventoryDetails = asyncComponent(() =>\n    import(/* webpackChunkName: \"InventoryDetails\" */ '../../PresentationalComponents/Inventory/InventoryDetails'));\n\nconst Overview = () => {\n    return (\n        <Switch>\n            <Route exact path='/overview' component={ OverviewDashboard } />\n            <Route exact path='/overview/:type' component={ List }/>\n            <Route exact path='/overview/by_id/:id' component={ Details }/>\n            <Route exact path='/overview/:type/:id' component={ Details }/>\n            <Route path='/overview/by_id/:id/:inventoryId/' component={ InventoryDetails }/>\n            <Route path='/overview/:type/:id/:inventoryId/' component={ InventoryDetails }/>\n        </Switch>\n    );\n};\n\nexport default routerParams(Overview);\n"],"sourceRoot":""}