{"version":3,"sources":["webpack:///./src/SmartComponents/Overview/Dashboard.scss","webpack:///./src/SmartComponents/Overview/Dashboard.js","webpack:///./src/SmartComponents/Overview/Dashboard.scss?d197","webpack:///./src/SmartComponents/Overview/Overview.js"],"names":["module","exports","__webpack_require__","push","i","SummaryChart","asyncComponent","e","then","bind","OverviewDonut","OverviewDashboard","total","category","insights","chrome","auth","getUser","this","props","fetchStatsRules","fetchStatsSystems","setBreadcrumbs","title","navigate","prevProps","statsRules","rules","setState","Availability","Stability","Performance","Security","_this$props","statsRulesFetchStatus","statsSystemsFetchStatus","statsSystems","_this$state","state","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","Fragment","_redhat_cloud_services_frontend_components__WEBPACK_IMPORTED_MODULE_18__","className","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_14__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_15__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_16__","size","headingLevel","rulesTotalRisk","total_risk","reportsTotalRisk","_PresentationalComponents_Loading_Loading__WEBPACK_IMPORTED_MODULE_23__","style","maxWidth","_PresentationalComponents_MessageState_MessageState__WEBPACK_IMPORTED_MODULE_25__","iconStyle","color","global_Color_100","value","icon","SERVER_STACK_ICON","text","key","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_17__","component","href","target","variant","ANSIBLE_MARK_ICON","GLOBAL_ECONSYSTEM_ICON","rel","global_primary_color_100","ChartSpikeIcon","Component","propTypes","match","PropTypes","object","breadcrumbs","array","func","string","routerParams","connect","ownProps","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","AdvisorStore","dispatch","url","AppActions","obj","content","options","hmr","transform","insertInto","undefined","update","locals","hot","accept","newContent","b","idx","Error","dispose","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_redhat_cloud_services_frontend_components_utilities_files_RouterParams__WEBPACK_IMPORTED_MODULE_3__","_redhat_cloud_services_frontend_components_utilities_files_RouterParams__WEBPACK_IMPORTED_MODULE_3___default","_Utilities_asyncComponent__WEBPACK_IMPORTED_MODULE_4__","Promise","resolve","Details","all","List","InventoryDetails","exact","path"],"mappings":"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","file":"js/Overview.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".levelAlignOverride {\\n  align-items: start; }\\n\\n.mainPaddingOverride {\\n  padding-top: 0;\\n  padding-bottom: 0; }\\n\\n.levelItemPaddingOverride {\\n  padding-bottom: 32px; }\\n\", \"\"]);\n\n","/* eslint camelcase: 0 */\nimport React, { Component } from 'react';\nimport asyncComponent from '../../Utilities/asyncComponent';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Level, LevelItem, Title } from '@patternfly/react-core';\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { global_Color_100, global_primary_color_100 } from '@patternfly/react-tokens';\nimport { ChartSpikeIcon } from '@patternfly/react-icons';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport '../../App.scss';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport { ANSIBLE_MARK_ICON, GLOBAL_ECONSYSTEM_ICON, SERVER_STACK_ICON } from '../../AppSvgs';\nimport './Dashboard.scss';\n\nconst SummaryChart = asyncComponent(() => import('../../PresentationalComponents/Charts/SummaryChart/SummaryChart'));\nconst OverviewDonut = asyncComponent(() => import('../../PresentationalComponents/Charts/OverviewDonut'));\n\nclass OverviewDashboard extends Component {\n    state = {\n        total: -1,\n        category: []\n    };\n\n    async componentDidMount () {\n        await insights.chrome.auth.getUser();\n        this.props.fetchStatsRules();\n        this.props.fetchStatsSystems();\n        this.props.setBreadcrumbs([{ title: 'Overview', navigate: '/overview' }]);\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.statsRules !== prevProps.statsRules) {\n            const rules = this.props.statsRules;\n            this.setState({\n                category: [ rules.category.Availability, rules.category.Stability, rules.category.Performance, rules.category.Security ]\n            });\n            this.setState({ total: rules.total });\n        }\n    }\n\n    render () {\n        const {\n            statsRulesFetchStatus, statsSystemsFetchStatus, statsRules, statsSystems\n        } = this.props;\n        const { category, total } = this.state;\n        return <>\n            <PageHeader>\n                <PageHeaderTitle title='Overview'/>\n            </PageHeader>\n            { total !== 0 ?\n                <>\n                    <Main className='pf-m-light mainPaddingOverride ins-test'>\n                        <Level className='levelAlignOverride'>\n                            <LevelItem className='levelItemPaddingOverride ins-test'>\n                                <Title size='lg' headingLevel='h3'>Rule hits by severity</Title>\n                                { statsRulesFetchStatus === 'fulfilled' && statsSystemsFetchStatus === 'fulfilled' ? (\n                                    <SummaryChart rulesTotalRisk={ statsRules.total_risk } reportsTotalRisk={ statsSystems.total_risk }/>\n                                )\n                                    : (<Loading/>)\n                                }\n                            </LevelItem>\n                            <LevelItem>\n                                <Title size='lg' headingLevel='h3'>Rule hits by category</Title>\n                                { statsRulesFetchStatus === 'fulfilled' ? (\n                                    <OverviewDonut category={ category } className='pf-u-mt-md'/>\n                                )\n                                    : (<Loading/>) }\n                            </LevelItem>\n                            <LevelItem>&nbsp;</LevelItem>\n                        </Level>\n                    </Main>\n                    <Main>\n                        <Main className='pf-m-light'>\n                            <Title size='2xl' headingLevel='h1'>Get started with Red Hat Insights</Title>\n                            <Level>\n                                <LevelItem style={ { maxWidth: '400px' } }>\n                                    <MessageState\n                                        iconStyle={ { color: global_Color_100.value } }\n                                        icon={ () => SERVER_STACK_ICON }\n                                        title='Connect your first systems'\n                                        text={ <span key='1'>Connect at least 10 systems to get a better<br/>\n                            awareness of issues and optimizations<br/>\n                            identified across your infastructure</span> }>\n                                        <Button component=\"a\" href=\"https://access.redhat.com/products/red-hat-insights#getstarted\"\n                                            target=\"_blank\" variant=\"link\">\n                                            Learn how to connect a system to insights\n                                        </Button>\n                                    </MessageState>\n                                </LevelItem>\n                                <LevelItem style={ { maxWidth: '400px' } }>\n                                    <MessageState\n                                        iconStyle={ { color: global_Color_100.value } }\n                                        icon={ () => ANSIBLE_MARK_ICON }\n                                        title='Remediate Insights findings with Ansible'\n                                        text={ <span key='1'>Easily generate an Ansible playbook to<br/>\n                            quickly and effectively remediate Insights <br/> findings</span> }>\n                                        <Button component=\"a\" href=\"https://cloud.redhat.com/insights/remediations\"\n                                            target=\"_blank\" variant=\"link\">\n                                            Get started with Insights and Ansible Playbooks\n                                        </Button>\n                                    </MessageState>\n                                </LevelItem>\n                                <LevelItem style={ { maxWidth: '400px' } }>\n                                    <MessageState\n                                        iconStyle={ { color: global_Color_100.value } }\n                                        icon={ () => GLOBAL_ECONSYSTEM_ICON }\n                                        title='Deploy Insights at scale'\n                                        text={ <span key='1'>Get more out of Insights with more systems.<br/>\n                            Quickly connect systems with <a rel=\"noopener noreferrer\" target=\"_blank\"\n                                                href=\"https://galaxy.ansible.com/redhatinsights/insights-client\">Ansible</a> <br/> or\n                                            <a rel=\"noopener noreferrer\" target=\"_blank\"\n                                                href=\"https://forge.puppetlabs.com/lphiri/access_insights_client\"> Puppet</a></span> }>\n                                        <Button component=\"a\" href=\"https://galaxy.ansible.com/redhatinsights/insights-client\"\n                                            target=\"_blank\" variant=\"secondary\">\n                                            Download Ansible Playbook\n                                        </Button>\n                                    </MessageState>\n                                </LevelItem>\n                            </Level>\n                        </Main>\n                    </Main>\n                </>\n                : <Main>\n                    <MessageState\n                        iconStyle={ { color: global_primary_color_100.value } }\n                        icon={ ChartSpikeIcon }\n                        title='Get started with Red Hat Insights'\n                        text={ <span key='1'>With predictive analytics, avoid problems and unplanned<br/>\n                            downtime in your Red Hat environment. Red Hat Insights is<br/>\n                            included with your Red Hat Enterprise Linux subscription</span> }>\n                        <Button component=\"a\" href=\"https://access.redhat.com/insights/getting-started/\" target=\"_blank\" variant=\"primary\">\n                            Get started\n                        </Button>\n                    </MessageState>\n                </Main> }\n        </>;\n    }\n}\n\nOverviewDashboard.propTypes = {\n    match: PropTypes.object,\n    breadcrumbs: PropTypes.array,\n    setBreadcrumbs: PropTypes.func,\n    statsRulesFetchStatus: PropTypes.string,\n    statsRules: PropTypes.object,\n    fetchStatsRules: PropTypes.func,\n    statsSystemsFetchStatus: PropTypes.string,\n    statsSystems: PropTypes.object,\n    fetchStatsSystems: PropTypes.func\n\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    statsRules: state.AdvisorStore.statsRules,\n    statsRulesFetchStatus: state.AdvisorStore.statsRulesFetchStatus,\n    statsSystems: state.AdvisorStore.statsSystems,\n    statsSystemsFetchStatus: state.AdvisorStore.statsSystemsFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchStatsRules: (url) => dispatch(AppActions.fetchStatsRules(url)),\n    fetchStatsSystems: (url) => dispatch(AppActions.fetchStatsSystems(url)),\n    setBreadcrumbs: (obj) => dispatch(AppActions.setBreadcrumbs(obj))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OverviewDashboard));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Dashboard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Dashboard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./Dashboard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport asyncComponent from '../../Utilities/asyncComponent';\n\nconst OverviewDashboard = asyncComponent(() => import(/* webpackChunkName: \"Overview\" */ './Dashboard'));\nconst Details = asyncComponent(() => import(/* webpackChunkName: \"Details\" */ './Details'));\nconst List = asyncComponent(() => import(/* webpackChunkName: \"Lists\" */ './List'));\nconst InventoryDetails = asyncComponent(() =>\n    import(/* webpackChunkName: \"InventoryDetails\" */ '../../PresentationalComponents/Inventory/InventoryDetails'));\n\nconst Overview = () => {\n    return (\n        <Switch>\n            <Route exact path='/overview' component={ OverviewDashboard } />\n            <Route exact path='/overview/:type' component={ List }/>\n            <Route exact path='/overview/by_id/:id' component={ Details }/>\n            <Route exact path='/overview/:type/:id' component={ Details }/>\n            <Route path='/overview/by_id/:id/:inventoryId/' component={ InventoryDetails }/>\n            <Route path='/overview/:type/:id/:inventoryId/' component={ InventoryDetails }/>\n        </Switch>\n    );\n};\n\nexport default routerParams(Overview);\n"],"sourceRoot":""}