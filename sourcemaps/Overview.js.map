{"version":3,"sources":["webpack:///./src/SmartComponents/Overview/Dashboard.js","webpack:///./src/SmartComponents/Overview/Dashboard.scss","webpack:///./src/SmartComponents/Overview/Overview.js"],"names":["SummaryChart","asyncComponent","OverviewDonut","OverviewDashboard","total","category","insights","chrome","auth","getUser","props","fetchStatsRules","fetchStatsSystems","setBreadcrumbs","title","navigate","prevProps","statsRules","rules","setState","Availability","Stability","Performance","Security","statsRulesFetchStatus","statsSystemsFetchStatus","statsSystems","state","total_risk","maxWidth","color","global_Color_100","value","SERVER_STACK_ICON","ANSIBLE_MARK_ICON","GLOBAL_ECONSYSTEM_ICON","global_primary_color_100","ChartSpikeIcon","Component","propTypes","match","PropTypes","object","breadcrumbs","array","func","string","mapStateToProps","ownProps","AdvisorStore","mapDispatchToProps","dispatch","url","AppActions","obj","routerParams","connect","Details","List","InventoryDetails","Overview"],"mappings":"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","file":"js/Overview.js","sourcesContent":["/* eslint camelcase: 0 */\nimport React, { Component } from 'react';\nimport asyncComponent from '../../Utilities/asyncComponent';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Level, LevelItem, Title } from '@patternfly/react-core';\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { global_Color_100, global_primary_color_100 } from '@patternfly/react-tokens';\nimport { ChartSpikeIcon } from '@patternfly/react-icons';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport '../../App.scss';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport { ANSIBLE_MARK_ICON, GLOBAL_ECONSYSTEM_ICON, SERVER_STACK_ICON } from '../../AppSvgs';\nimport './Dashboard.scss';\n\nconst SummaryChart = asyncComponent(() => import('../../PresentationalComponents/Charts/SummaryChart/SummaryChart'));\nconst OverviewDonut = asyncComponent(() => import('../../PresentationalComponents/Charts/OverviewDonut'));\n\nclass OverviewDashboard extends Component {\n    state = {\n        total: -1,\n        category: []\n    };\n\n    async componentDidMount () {\n        await insights.chrome.auth.getUser();\n        this.props.fetchStatsRules();\n        this.props.fetchStatsSystems();\n        this.props.setBreadcrumbs([{ title: 'Overview', navigate: '/overview' }]);\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.statsRules !== prevProps.statsRules) {\n            const rules = this.props.statsRules;\n            this.setState({\n                category: [ rules.category.Availability, rules.category.Stability, rules.category.Performance, rules.category.Security ]\n            });\n            this.setState({ total: rules.total });\n        }\n    }\n\n    render () {\n        const {\n            statsRulesFetchStatus, statsSystemsFetchStatus, statsRules, statsSystems\n        } = this.props;\n        const { category, total } = this.state;\n        return <>\n            <PageHeader>\n                <PageHeaderTitle title='Overview'/>\n            </PageHeader>\n            { total !== 0 ?\n                <>\n                    <Main className='pf-m-light mainPaddingOverride'>\n                        <Level className='levelAlignOverride'>\n                            <LevelItem className='levelItemPaddingOverride'>\n                                <Title size='lg' headingLevel='h3'>Rule hits by severity</Title>\n                                { statsRulesFetchStatus === 'fulfilled' && statsSystemsFetchStatus === 'fulfilled' ? (\n                                    <SummaryChart rulesTotalRisk={ statsRules.total_risk } reportsTotalRisk={ statsSystems.total_risk }/>\n                                )\n                                    : (<Loading/>)\n                                }\n                            </LevelItem>\n                            <LevelItem>\n                                <Title size='lg' headingLevel='h3'>Rule hits by category</Title>\n                                { statsRulesFetchStatus === 'fulfilled' ? (\n                                    <OverviewDonut category={ category } className='pf-u-mt-md'/>\n                                )\n                                    : (<Loading/>) }\n                            </LevelItem>\n                            <LevelItem>&nbsp;</LevelItem>\n                        </Level>\n                    </Main>\n                    <Main>\n                        <Main className='pf-m-light'>\n                            <Title size='2xl' headingLevel='h1'>Get started with Red Hat Insights</Title>\n                            <Level>\n                                <LevelItem style={ { maxWidth: '400px' } }>\n                                    <MessageState\n                                        iconStyle={ { color: global_Color_100.value } }\n                                        icon={ () => SERVER_STACK_ICON }\n                                        title='Connect your first systems'\n                                        text={ <span key='1'>Connect at least 10 systems to get a better<br/>\n                            awareness of issues and optimizations<br/>\n                            identified across your infastructure</span> }>\n                                        <Button component=\"a\" href=\"https://access.redhat.com/products/red-hat-insights#getstarted\"\n                                            target=\"_blank\" variant=\"link\">\n                                            Learn how to connect a system to insights\n                                        </Button>\n                                    </MessageState>\n                                </LevelItem>\n                                <LevelItem style={ { maxWidth: '400px' } }>\n                                    <MessageState\n                                        iconStyle={ { color: global_Color_100.value } }\n                                        icon={ () => ANSIBLE_MARK_ICON }\n                                        title='Remediate Insights findings with Ansible'\n                                        text={ <span key='1'>Easily generate an Ansible playbook to<br/>\n                            quickly and effectively remediate Insights <br/> findings</span> }>\n                                        <Button component=\"a\" href=\"https://cloud.redhat.com/insights/remediations\"\n                                            target=\"_blank\" variant=\"link\">\n                                            Get started with Insights and Ansible Playbooks\n                                        </Button>\n                                    </MessageState>\n                                </LevelItem>\n                                <LevelItem style={ { maxWidth: '400px' } }>\n                                    <MessageState\n                                        iconStyle={ { color: global_Color_100.value } }\n                                        icon={ () => GLOBAL_ECONSYSTEM_ICON }\n                                        title='Deploy Insights at scale'\n                                        text={ <span key='1'>Get more out of Insights with more systems.<br/>\n                            Quickly connect systems with <a rel=\"noopener noreferrer\" target=\"_blank\"\n                                                href=\"https://galaxy.ansible.com/redhatinsights/insights-client\">Ansible</a> <br/> or\n                                            <a rel=\"noopener noreferrer\" target=\"_blank\"\n                                                href=\"https://forge.puppetlabs.com/lphiri/access_insights_client\"> Puppet</a></span> }>\n                                        <Button component=\"a\" href=\"https://galaxy.ansible.com/redhatinsights/insights-client\"\n                                            target=\"_blank\" variant=\"secondary\">\n                                            Download Ansible Playbook\n                                        </Button>\n                                    </MessageState>\n                                </LevelItem>\n                            </Level>\n                        </Main>\n                    </Main>\n                </>\n                : <Main>\n                    <MessageState\n                        iconStyle={ { color: global_primary_color_100.value } }\n                        icon={ ChartSpikeIcon }\n                        title='Get started with Red Hat Insights'\n                        text={ <span key='1'>With predictive analytics, avoid problems and unplanned<br/>\n                            downtime in your Red Hat environment. Red Hat Insights is<br/>\n                            included with your Red Hat Enterprise Linux subscription</span> }>\n                        <Button component=\"a\" href=\"https://access.redhat.com/insights/getting-started/\" target=\"_blank\" variant=\"primary\">\n                            Get started\n                        </Button>\n                    </MessageState>\n                </Main> }\n        </>;\n    }\n}\n\nOverviewDashboard.propTypes = {\n    match: PropTypes.object,\n    breadcrumbs: PropTypes.array,\n    setBreadcrumbs: PropTypes.func,\n    statsRulesFetchStatus: PropTypes.string,\n    statsRules: PropTypes.object,\n    fetchStatsRules: PropTypes.func,\n    statsSystemsFetchStatus: PropTypes.string,\n    statsSystems: PropTypes.object,\n    fetchStatsSystems: PropTypes.func\n\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    statsRules: state.AdvisorStore.statsRules,\n    statsRulesFetchStatus: state.AdvisorStore.statsRulesFetchStatus,\n    statsSystems: state.AdvisorStore.statsSystems,\n    statsSystemsFetchStatus: state.AdvisorStore.statsSystemsFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchStatsRules: (url) => dispatch(AppActions.fetchStatsRules(url)),\n    fetchStatsSystems: (url) => dispatch(AppActions.fetchStatsSystems(url)),\n    setBreadcrumbs: (obj) => dispatch(AppActions.setBreadcrumbs(obj))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OverviewDashboard));\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport asyncComponent from '../../Utilities/asyncComponent';\n\nconst OverviewDashboard = asyncComponent(() => import(/* webpackChunkName: \"Overview\" */ './Dashboard'));\nconst Details = asyncComponent(() => import(/* webpackChunkName: \"Details\" */ './Details'));\nconst List = asyncComponent(() => import(/* webpackChunkName: \"Lists\" */ './List'));\nconst InventoryDetails = asyncComponent(() =>\n    import(/* webpackChunkName: \"InventoryDetails\" */ '../../PresentationalComponents/Inventory/InventoryDetails'));\n\nconst Overview = () => {\n    return (\n        <Switch>\n            <Route exact path='/overview' component={ OverviewDashboard } />\n            <Route exact path='/overview/:type' component={ List }/>\n            <Route exact path='/overview/by_id/:id' component={ Details }/>\n            <Route exact path='/overview/:type/:id' component={ Details }/>\n            <Route path='/overview/by_id/:id/:inventoryId/' component={ InventoryDetails }/>\n            <Route path='/overview/:type/:id/:inventoryId/' component={ InventoryDetails }/>\n        </Switch>\n    );\n};\n\nexport default routerParams(Overview);\n"],"sourceRoot":""}