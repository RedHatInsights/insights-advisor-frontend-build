{"version":3,"file":"js/3254.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/ZeroStateWrapper.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Services/Acks.js","webpack:///./src/Services/Filters.js","webpack:///./src/Services/Pathways.js","webpack:///./src/Services/Recs.js","webpack:///./src/Services/Topics.js","webpack:///./src/Store/AppReducer.js","webpack:///./src/Services/Systems.js","webpack:///./src/Store/index.js"],"sourcesContent":["import React, { Suspense, useState, useEffect } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport messages from './Messages';\n\nexport const ZeroStateWrapper = ({ children }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [hasSystems, setHasSystems] = useState(true);\n  useEffect(() => {\n    try {\n      axios\n        .get(`/api/inventory/v1/hosts?page=1&per_page=1`)\n        .then(({ data }) => {\n          setHasSystems(data.total > 0);\n        });\n    } catch (e) {\n      dispatch(\n        addNotification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${e}`,\n        })\n      );\n    }\n  }, [hasSystems]);\n\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      {!hasSystems ? (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          }\n        >\n          <AsynComponent\n            appId={'advisor_zero_state'}\n            appName=\"dashboard\"\n            module=\"./AppZeroState\"\n            scope=\"dashboard\"\n            ErrorComponent={<ErrorState />}\n            app=\"Advisor\"\n          />\n        </Suspense>\n      ) : (\n        <>{children}</>\n      )}\n    </Suspense>\n  );\n};\n\nZeroStateWrapper.propTypes = {\n  children: PropTypes.element,\n  check: PropTypes.boolean,\n};\n","import React, { lazy } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { ZeroStateWrapper } from './ZeroStateWrapper';\n\nconst RecsList = lazy(() =>\n  import(/* webpackChunkName: \"RecsList\" */ './SmartComponents/Recs/List')\n);\nconst RecsDetails = lazy(() =>\n  import(/* webpackChunkName: \"RecsDetails\" */ './SmartComponents/Recs/Details')\n);\nconst DetailsPathways = lazy(() =>\n  import(\n    /* webpackChunkName: \"Details-Pathways\" */ './SmartComponents/Recs/DetailsPathways'\n  )\n);\nconst InventoryDetails = lazy(() =>\n  import(\n    /* InventoryDetails: \"Details\" */ './PresentationalComponents/Inventory/InventoryDetails'\n  )\n);\nconst SystemsList = lazy(() =>\n  import(/* webpackChunkName: \"List\" */ './SmartComponents/Systems/List')\n);\nconst TopicsList = lazy(() =>\n  import(/* webpackChunkName: \"TopicsList\" */ './SmartComponents/Topics/List')\n);\nconst TopicDetails = lazy(() =>\n  import(\n    /* webpackChunkName: \"TopicDetails\" */ './SmartComponents/Topics/Details'\n  )\n);\nconst AdminProtectedRoute = lazy(() =>\n  import(\n    /* webpackChunkName: \"TopicAdmin\" */ './PresentationalComponents/TopicsAdminTable/TopicsAdminTable'\n  )\n);\n\nexport const AdvisorRoutes = () => {\n  return (\n    <ZeroStateWrapper>\n      <Routes>\n        <Route\n          key={'Recommendations'}\n          path=\"recommendations\"\n          element={<RecsList />}\n        ></Route>\n        <Route\n          key={'Recommendations Pathways'}\n          path=\"recommendations/pathways\"\n          element={<RecsList />}\n        ></Route>\n        <Route\n          key={'Pathway details'}\n          path=\"recommendations/pathways/:id\"\n          element={<DetailsPathways />}\n        ></Route>\n        <Route\n          key={'Pathway details'}\n          path=\"recommendations/pathways/systems/:id\"\n          element={<DetailsPathways />}\n        ></Route>\n        <Route\n          key={'Recommendation details'}\n          path=\"recommendations/:id\"\n          element={<RecsDetails />}\n        ></Route>\n        <Route\n          key={'Inventory details'}\n          path=\"recommendations/:id/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route\n          key={'Inventory details'}\n          path=\"recommendations/pathways/:id/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route\n          key={'Inventory details'}\n          path=\"recommendations/pathways/systems/:id/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route key={'Systems'} path=\"systems\" element={<SystemsList />}></Route>\n        <Route\n          key={'System detail'}\n          path=\"systems/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route key={'Topics'} path=\"topics\" element={<TopicsList />}></Route>\n        <Route\n          key={'Topic details'}\n          path=\"topics/:id\"\n          element={<TopicDetails />}\n        ></Route>\n        {/* this redirect will be replaced with the redirect to the overview page when it's ready */}\n        <Route\n          key={'Advisor'}\n          path=\"*\"\n          element={<Navigate replace to=\"recommendations\" />}\n        ></Route>\n        <Route\n          key={'TopicAdmin'}\n          path=\"/topics/admin/manage\"\n          element={<AdminProtectedRoute />}\n        ></Route>\n      </Routes>\n    </ZeroStateWrapper>\n  );\n};\n","import './App.scss';\n\nimport React, { useEffect } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { updateSID, updateTags, updateWorkloads } from './Services/Filters';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from './PresentationalComponents/MessageState/MessageState';\nimport { PERMS } from './AppConstants';\nimport { AdvisorRoutes } from './Routes';\nimport messages from './Messages';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst App = () => {\n  const intl = useIntl();\n  const permsViewRecs = usePermissions('advisor', PERMS.viewRecs);\n  const dispatch = useDispatch();\n  const chrome = useChrome();\n\n  useEffect(() => {\n    chrome.identifyApp('advisor');\n    chrome?.globalFilterScope?.('insights');\n    if (chrome?.globalFilterScope) {\n      chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n        const [workloads, SID, selectedTags] =\n          chrome?.mapGlobalFilter?.(data, false, true) || [];\n        batch(() => {\n          dispatch(updateWorkloads(workloads));\n          dispatch(updateTags(selectedTags));\n          dispatch(updateSID(SID));\n        });\n      });\n    }\n  }, []);\n\n  return (\n    !permsViewRecs?.isLoading &&\n    (permsViewRecs?.hasAccess ? (\n      <AdvisorRoutes />\n    ) : (\n      <MessageState\n        variant=\"large\"\n        icon={LockIcon}\n        title={intl.formatMessage(messages.permsTitle)}\n        text={intl.formatMessage(messages.permsBody)}\n      />\n    ))\n  );\n};\n\nexport default App;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Acks = createApi({\n  reducerPath: 'acks',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  endpoints: (build) => ({\n    getRecAcks: build.query({\n      query: (options) => ({ url: `/ack/${options.ruleId}/` }),\n    }),\n    getHostAcks: build.query({\n      query: (options) => ({ url: `/hostack/`, options }),\n      transformResponse: (response) => response.data,\n    }),\n    setAck: build.mutation({\n      query: (options) => ({\n        url: `${options.type === 'RULE' ? '/ack/' : '/hostack/'}`,\n        options: options.options,\n        method: 'post',\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecAcksQuery, useGetHostAcksQuery, useSetAckMutation } =\n  Acks;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filtersInitialState = {\n  recState: {\n    impacting: ['true'],\n    rule_status: 'enabled',\n    sort: '-total_risk',\n    limit: 20,\n    offset: 0,\n  },\n  pathState: {\n    sort: '-recommendation_level',\n    limit: 20,\n    offset: 0,\n  },\n  sysState: { sort: '-last_seen', limit: 20, offset: 0 },\n  selectedTags: [],\n  workloads: {},\n  SID: [],\n};\n\nconst filters = createSlice({\n  name: 'filters',\n  initialState: filtersInitialState,\n  reducers: {\n    updateRecFilters(state, action) {\n      state.recState = action.payload;\n    },\n    updateSysFilters(state, action) {\n      state.sysState = action.payload;\n    },\n    updatePathFilters(state, action) {\n      state.pathState = action.payload;\n    },\n    updateTags(state, action) {\n      state.selectedTags = action.payload;\n    },\n    updateWorkloads(state, action) {\n      state.workloads = action.payload;\n    },\n    updateSID(state, action) {\n      state.SID = action.payload;\n    },\n  },\n});\n\nexport const {\n  updateRecFilters,\n  updateSysFilters,\n  updatePathFilters,\n  updateTags,\n  updateWorkloads,\n  updateSID,\n} = filters.actions;\n\nexport default filters.reducer;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Pathways = createApi({\n  reducerPath: 'pathways',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  keepUnusedDataFor: 5,\n  endpoints: (build) => ({\n    getPathways: build.query({\n      query: (options) => ({ url: `/pathway/`, options }),\n    }),\n    getPathway: build.query({\n      query: (options) => ({ url: `/pathway/${options.slug}/`, options }),\n    }),\n    getPathwayRules: build.query({\n      query: (name) => ({ url: `/pathway/${name}/rules/` }),\n    }),\n    getPathwaySystems: build.query({\n      query: (name) => ({ url: `/pathway/${name}/systems/` }),\n    }),\n  }),\n});\n\nexport const {\n  useGetPathwaysQuery,\n  useGetPathwayQuery,\n  useGetPathwayRulesQuery,\n  useGetPathwaySystemsQuery,\n} = Pathways;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Recs = createApi({\n  reducerPath: 'recs',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  keepUnusedDataFor: 5,\n  endpoints: (build) => ({\n    getRecs: build.query({\n      query: (options) => ({ url: `/rule/`, options }),\n    }),\n    getRec: build.query({\n      query: (options) => ({\n        url: `/rule/${options.ruleId}/`,\n        options,\n      }),\n    }),\n    getRecSystems: build.query({\n      query: (options, search) => ({\n        url: `/rule/${encodeURI(options.ruleId)}/systems/`,\n        options,\n        search,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecsQuery, useGetRecQuery, useGetRecsystemsQuery } = Recs;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Topics = createApi({\n  reducerPath: 'topics',\n  baseQuery: AxiosBaseQuery({\n    baseUrl: `${BASE_URL}`,\n  }),\n  endpoints: (build) => ({\n    getTopics: build.query({\n      query: (options) => ({ url: `/topic/`, options }),\n      // transformResponse: (response) => response.data,\n    }),\n    getTopicsAdmin: build.query({\n      query: (options) => ({ url: `/topic?show_disabled=true`, options }),\n    }),\n    getTopic: build.query({\n      query: (options) => ({\n        url: `/topic/${options.topicId}/`,\n        options,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetTopicsQuery, useGetTopicQuery, useGetTopicsAdminQuery } =\n  Topics;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nexport function systemReducer() {\n  return applyReducerHash({\n    ['SELECT_ENTITIES']: (state, { payload: { selected } }) => ({\n      ...state,\n      rows: selectRows(state.rows, selected),\n    }),\n  });\n}\n\nexport function entitiesDetailsReducer(ActionTypes) {\n  return applyReducerHash(\n    {\n      [`${ActionTypes.LOAD_ENTITY}_FULFILLED`]: enableApplications,\n    },\n    {}\n  );\n}\n\nfunction enableApplications(state) {\n  return {\n    ...state,\n    loaded: true,\n  };\n}\n\nconst selectRows = (rows, selected = []) =>\n  (rows || []).map((row) => ({\n    ...row,\n    selected: selected.includes(row.id),\n  }));\n","import * as AppConst from '../AppConstants';\n\nimport { AxiosBaseQuery } from '../Utilities/Api';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Systems = createApi({\n  reducerPath: 'systems',\n  baseQuery: AxiosBaseQuery({ baseUrl: AppConst.BASE_URL }),\n  endpoints: (build) => ({\n    getSystems: build.query({\n      query: (options) => ({ url: `/system/`, options }),\n    }),\n    getSystem: build.query({\n      query: (ruleId, options, search) => ({\n        url: `/rule/${encodeURI(ruleId)}/systems/`,\n        options,\n        search,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetSystemsQuery,\n  useLazygetSystemsQuery,\n  useGetSystemQuery,\n  useLazygetSystemQuery,\n} = Systems;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { entitiesDetailsReducer, systemReducer } from './AppReducer';\n\nimport { Acks } from '../Services/Acks';\nimport { Pathways } from '../Services/Pathways';\nimport { Recs } from '../Services/Recs';\nimport { Systems } from '../Services/Systems';\nimport { Topics } from '../Services/Topics';\nimport filters from '../Services/Filters';\nimport logger from 'redux-logger';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nconst env = 'development';\nconst production = env !== 'production';\nconst reducer = {\n  [Pathways.reducerPath]: Pathways.reducer,\n  [Recs.reducerPath]: Recs.reducer,\n  [Topics.reducerPath]: Topics.reducer,\n  [Systems.reducerPath]: Systems.reducer,\n  [Acks.reducerPath]: Acks.reducer,\n  filters,\n  notifications: notificationsReducer,\n  systemReducer: systemReducer([], {}),\n  entitiesDetailsReducer: entitiesDetailsReducer({}),\n};\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        'LOAD_ENTITIES',\n        'LOAD_ENTITY',\n        'CLEAR_FILTERS',\n        'LOAD_ENTITY_FULFILLED',\n      ],\n    },\n    immutableCheck: {\n      ignoredPaths: ['entities'],\n    },\n  }).concat(\n    promiseMiddleware,\n    Pathways.middleware,\n    Recs.middleware,\n    Systems.middleware,\n    Topics.middleware,\n    Acks.middleware,\n    notificationsMiddleware({\n      errorTitleKey: ['message'],\n      errorDescriptionKey: ['response.data.detail'],\n    }),\n    production && logger\n  );\n\nconst getStore = () => {\n  return configureStore({\n    reducer,\n    middleware,\n    devTools: production,\n  });\n};\n\nconst updateReducers = (newReducers = {}) =>\n  combineReducers({\n    ...reducer,\n    ...newReducers,\n  });\n\nexport { getStore, updateReducers };\n"],"names":["ZeroStateWrapper","children","intl","useIntl","dispatch","useDispatch","useState","hasSystems","setHasSystems","useEffect","axios","then","data","total","e","addNotification","variant","dismissable","title","formatMessage","messages","description","Suspense","fallback","Bullseye","Spinner","size","appId","appName","module","scope","ErrorComponent","ErrorState","app","propTypes","PropTypes","check","RecsList","lazy","RecsDetails","DetailsPathways","InventoryDetails","SystemsList","TopicsList","TopicDetails","AdminProtectedRoute","AdvisorRoutes","Routes","Route","key","path","element","Navigate","replace","to","permsViewRecs","usePermissions","PERMS","chrome","useChrome","identifyApp","globalFilterScope","on","mapGlobalFilter","workloads","SID","selectedTags","batch","updateWorkloads","updateTags","updateSID","isLoading","hasAccess","MessageState","icon","LockIcon","text","Acks","createApi","reducerPath","baseQuery","AxiosBaseQuery","baseUrl","BASE_URL","endpoints","build","getRecAcks","query","options","url","ruleId","getHostAcks","transformResponse","response","setAck","mutation","type","method","useGetRecAcksQuery","useGetHostAcksQuery","useSetAckMutation","filters","createSlice","name","initialState","recState","impacting","rule_status","sort","limit","offset","pathState","sysState","reducers","updateRecFilters","state","action","payload","updateSysFilters","updatePathFilters","actions","Pathways","keepUnusedDataFor","getPathways","getPathway","slug","getPathwayRules","getPathwaySystems","useGetPathwaysQuery","useGetPathwayQuery","useGetPathwayRulesQuery","useGetPathwaySystemsQuery","Recs","getRecs","getRec","getRecSystems","search","encodeURI","useGetRecsQuery","useGetRecQuery","useGetRecsystemsQuery","Topics","getTopics","getTopicsAdmin","getTopic","topicId","useGetTopicsQuery","useGetTopicQuery","useGetTopicsAdminQuery","systemReducer","applyReducerHash","selected","rows","selectRows","entitiesDetailsReducer","ActionTypes","LOAD_ENTITY","enableApplications","loaded","map","row","includes","id","Systems","AppConst","getSystems","getSystem","useGetSystemsQuery","useLazygetSystemsQuery","useGetSystemQuery","useLazygetSystemQuery","reducer","notificationsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","ignoredPaths","concat","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","logger","getStore","configureStore","devTools","env","updateReducers","newReducers","combineReducers"],"sourceRoot":""}