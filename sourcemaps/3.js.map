{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesCard/RulesCard.js"],"names":["RulesCard","category","description","summary","ansible","impact","likelihood","totalRisk","riskOfChange","hitCount","ruleID","className","props","rulesCardClasses","renderHitCount","toLowerCase","__html","propTypes","string","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;AAEA;;AACA;;AAEA;;;;AAEA;;;;;AAKA,IAAMA,YACN,SADMA,SACN,OAaM;AAAA,QAZFC,QAYE,QAZFA,QAYE;AAAA,QAXFC,WAWE,QAXFA,WAWE;AAAA,QAVFC,OAUE,QAVFA,OAUE;AAAA,QATFC,OASE,QATFA,OASE;AAAA,QARFC,MAQE,QARFA,MAQE;AAAA,QAPFC,UAOE,QAPFA,UAOE;AAAA,QANFC,SAME,QANFA,SAME;AAAA,QALFC,YAKE,QALFA,YAKE;AAAA,QAJFC,QAIE,QAJFA,QAIE;AAAA,QAHFC,MAGE,QAHFA,MAGE;AAAA,QAFFC,SAEE,QAFFA,SAEE;AAAA,QADCC,KACD;;;AAEF,QAAIC,mBAAmB,0BACnB,kBADmB,EAEnB,YAFmB,EAGnB,iBAHmB,EAInBF,SAJmB,CAAvB;;AAOA,QAAIG,uBAAJ;AACA,QAAIL,WAAW,CAAf,EAAkB;AACdK,yBACA;AAAC,gCAAD;AAAA,cAAM,kBAAiBb,SAASc,WAAT,EAAjB,SAA2CL,MAAjD;AACI,8BAAgBD,QAAhB,yBAA2CA,WAAW,CAAX,GAAe,GAAf,GAAqB,EAAhE,CADJ;AAAA;AACqGA,oBADrG;AAAA;AAAA,SADA;AAGH,KAJD,MAKK;AACDK,yBAAiB;AAAA;AAAA,cAAG,cAAH,EAAY,cAAW,qBAAvB;AAAA;AAAA,SAAjB;AACH;;AAED,WACI;AAAC,uBAAD;AAAA,mCAAWF,KAAX,IAAmB,WAAcC,gBAAjC,EAAoD,eAAY,mBAAhE;AACI;AAAC,iCAAD;AAAA;AACI;AAAC,gCAAD;AAAA;AACI;AAAC,wCAAD;AAAA;AAAA;AAAcZ,4BAAd;AAAA;AAAA,iBADJ;AAEI;AAAC,wCAAD;AAAA,sBAAW,YAAX;AAAA;AAAqBC,+BAArB;AAAA;AAAA,iBAFJ;AAGI;AAAC,wCAAD;AAAA;AACI,kDAAC,mCAAD,IAAS,aAAgBE,OAAzB;AADJ;AAHJ;AADJ,SADJ;AAUI;AAAC,+BAAD;AAAA;AACI,mDAAK,yBAA0B,EAAEY,QAAQb,OAAV,EAA/B;AADJ,SAVJ;AAaI;AAAC,iCAAD;AAAA;AACI;AAAA;AAAA,kBAAK,WAAU,eAAf;AACI;AAAC,uDAAD;AAAA,sBAAS,MAAK,wBAAd;AACI,kDAAC,mCAAD,IAAS,OAAM,QAAf,EAAwB,UAAWE,MAAnC,GADJ;AAEI,kDAAC,mCAAD,IAAS,OAAM,YAAf,EAA4B,UAAWC,UAAvC,GAFJ;AAGI,kDAAC,mCAAD,IAAS,OAAM,YAAf,EAA4B,UAAWC,SAAvC,GAHJ;AAII,kDAAC,mCAAD,IAAS,OAAM,gBAAf,EAAgC,UAAWC,YAA3C;AAJJ,iBADJ;AAOI,oBAAKM,cAAL;AAPJ;AADJ;AAbJ,KADJ;AA2BH,CA5DD;;kBA8Ded,S;;;AAEfA,UAAUiB,SAAV,GAAsB;AAClBP,YAAQO,oBAAUC,MADA;AAElBjB,cAAUgB,oBAAUC,MAFF;AAGlBhB,iBAAae,oBAAUC,MAHL;AAIlBf,aAASc,oBAAUC,MAJD;AAKlBd,aAASa,oBAAUE,MALD;AAMlBd,YAAQY,oBAAUE,MANA;AAOlBb,gBAAYW,oBAAUE,MAPJ;AAQlBZ,eAAWU,oBAAUE,MARH;AASlBX,kBAAcS,oBAAUE,MATN;AAUlBV,cAAUQ,oBAAUE,MAVF;AAWlBR,eAAWM,oBAAUC;AAXH,CAAtB,C","file":"js/3.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport classNames from 'classnames';\n\nimport { Ansible, Battery, Section } from '@red-hat-insights/insights-frontend-components';\nimport { Card, CardHeader, CardBody, CardFooter, Split, SplitItem } from '@patternfly/react-core';\n\nimport './_RulesCard.scss';\n\n/**\n * This is the card that displays information for the rules as well as links to the proper\n * url of systems impacted under that rule (if there are systems)\n */\n\nconst RulesCard =\n({\n    category,\n    description,\n    summary,\n    ansible,\n    impact,\n    likelihood,\n    totalRisk,\n    riskOfChange,\n    hitCount,\n    ruleID,\n    className,\n    ...props\n}) => {\n\n    let rulesCardClasses = classNames(\n        'ins-c-rules-card',\n        'pf-t-light',\n        'pf-m-opaque-100',\n        className\n    );\n\n    let renderHitCount;\n    if (hitCount > 0) {\n        renderHitCount =\n        <Link to={ `/actions/${category.toLowerCase()}/${ruleID}` }\n            aria-label={ `${hitCount} impacted system${hitCount > 1 ? 's' : ''}` }> View Impacted Systems ({ hitCount }) </Link>;\n    }\n    else {\n        renderHitCount = <a disabled aria-label='No impacted systems'> View Impacted Systems (0) </a>;\n    }\n\n    return (\n        <Card { ...props } className = { rulesCardClasses } widget-type='InsightsRulesCard'>\n            <CardHeader>\n                <Split>\n                    <SplitItem> { category } &gt; </SplitItem>\n                    <SplitItem isMain> { description } </SplitItem>\n                    <SplitItem>\n                        <Ansible unsupported = { ansible }/>\n                    </SplitItem>\n                </Split>\n            </CardHeader>\n            <CardBody>\n                <div dangerouslySetInnerHTML={ { __html: summary } }/>\n            </CardBody>\n            <CardFooter>\n                <div className='space-between'>\n                    <Section type='icon-group__with-major'>\n                        <Battery label='Impact' severity={ impact }/>\n                        <Battery label='Likelihood' severity={ likelihood }/>\n                        <Battery label='Total Risk' severity={ totalRisk }/>\n                        <Battery label='Risk Of Change' severity={ riskOfChange }/>\n                    </Section>\n                    { ...renderHitCount }\n                </div>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default RulesCard;\n\nRulesCard.propTypes = {\n    ruleID: propTypes.string,\n    category: propTypes.string,\n    description: propTypes.string,\n    summary: propTypes.string,\n    ansible: propTypes.number,\n    impact: propTypes.number,\n    likelihood: propTypes.number,\n    totalRisk: propTypes.number,\n    riskOfChange: propTypes.number,\n    hitCount: propTypes.number,\n    className: propTypes.string\n};\n"],"sourceRoot":""}