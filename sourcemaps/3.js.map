{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./src/PresentationalComponents/RulesCard/RulesCard.js"],"names":["RulesCard","category","description","summary","ansible","impact","likelihood","totalRisk","riskOfChange","hitCount","ruleID","className","props","rulesCardClasses","classNames","__html","toLowerCase","propTypes","string","number"],"mappings":"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","file":"js/3.js","sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport classNames from 'classnames';\n\nimport { Ansible, Battery, Section } from '@red-hat-insights/insights-frontend-components';\nimport { Card, CardHeader, CardBody, CardFooter, Split, SplitItem } from '@patternfly/react-core';\n\nimport './_RulesCard.scss';\n\n/**\n * This is the card that displays information for the rules as well as links to the proper\n * url of systems impacted under that rule (if there are systems)\n */\n\nconst RulesCard =\n({\n    category,\n    description,\n    summary,\n    ansible,\n    impact,\n    likelihood,\n    totalRisk,\n    riskOfChange,\n    hitCount,\n    ruleID,\n    className,\n    ...props\n}) => {\n\n    let rulesCardClasses = classNames(\n        'ins-c-rules-card',\n        'pf-t-light',\n        'pf-m-opaque-100',\n        className\n    );\n\n    return (\n        <Card { ...props } className = { rulesCardClasses } widget-type='InsightsRulesCard'>\n            <CardHeader>\n                <Split>\n                    <SplitItem> { category } &gt; </SplitItem>\n                    <SplitItem isMain> { description } </SplitItem>\n                    <SplitItem>\n                        <Ansible unsupported = { ansible }/>\n                    </SplitItem>\n                </Split>\n            </CardHeader>\n            <CardBody>\n                <div dangerouslySetInnerHTML={ { __html: summary } }/>\n            </CardBody>\n            <CardFooter>\n                <div className='space-between'>\n                    <Section type='icon-group__with-major'>\n                        <Battery label='Impact' severity={ impact }/>\n                        <Battery label='Likelihood' severity={ likelihood }/>\n                        <Battery label='Total Risk' severity={ totalRisk }/>\n                        <Battery label='Risk Of Change' severity={ riskOfChange }/>\n                    </Section>\n                    { hitCount > 0 && (\n                        <Link to={ `/actions/${category.toLowerCase()}/${ruleID}` }\n                            aria-label={ `${hitCount} impacted system${hitCount > 1 ? 's' : ''}` }> View Impacted Systems ({ hitCount }) </Link>\n                    ) }\n                    { hitCount <= 0 && (\n                        <a disabled aria-label='No impacted systems'> View Impacted Systems (0) </a>\n                    ) }\n                </div>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default RulesCard;\n\nRulesCard.propTypes = {\n    ruleID: propTypes.string,\n    category: propTypes.string,\n    description: propTypes.string,\n    summary: propTypes.string,\n    ansible: propTypes.number,\n    impact: propTypes.number,\n    likelihood: propTypes.number,\n    totalRisk: propTypes.number,\n    riskOfChange: propTypes.number,\n    hitCount: propTypes.number,\n    className: propTypes.string\n};\n"],"sourceRoot":""}