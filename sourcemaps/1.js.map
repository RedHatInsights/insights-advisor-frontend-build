{"version":3,"sources":["webpack:///./src/PresentationalComponents/SummaryChartItem/SummaryChartItem.js","webpack:///./src/PresentationalComponents/SummaryChartItem/SummaryChartItem.scss"],"names":["SummaryChartItem","props","numIssues","percentage","totalIssues","toFixed","lowerCaseName","name","toLowerCase","barWidth","width","propTypes","PropTypes","string","isRequired","number"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,QAAMC,YAAYD,MAAMC,SAAxB;AACA,QAAIC,aAAa,CAAED,YAAYD,MAAMG,WAAnB,GAAkC,GAAnC,EAAwCC,OAAxC,CAAgD,CAAhD,CAAjB;AACA,QAAIC,gBAAgBL,MAAMM,IAAN,CAAWC,WAAX,EAApB;;AAEA,QAAIC,WAAW,EAAEC,OAAOP,aAAa,GAAtB,EAAf;;AAEA,WACI;AAAA;AAAA,UAAI,eAAY,0BAAhB,EAA2C,aAAYF,MAAMM,IAA7D;AACML,oBAAY,CAAZ,IACF;AAAC,2BAAD,CAAO,QAAP;AAAA;AACI;AAAA;AAAA,kBAAK,WAAU,SAAf;AACI;AAAA;AAAA;AAAUD,0BAAMM,IAAhB;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA,sBAAM,WAAU,KAAhB;AAAA;AAAyBJ,8BAAzB;AAAA;AAAA;AAFJ,aADJ;AAKI;AAAA;AAAA,kBAAK,WAAU,eAAf;AACI;AACI,+BAAa,+BAA+BG,aADhD;AAEI,2BAASG;AAFb,kBADJ;AAKI,uDAAK,WAAU,KAAf;AALJ;AALJ,SAFJ;AAgBMP,sBAAc,CAAd,IACF;AAAA;AAAA,cAAK,WAAU,WAAf;AACI,iDAAG,WAAU,wCAAb,GADJ;AAAA;AAE4BI,yBAF5B;AAAA;AAAA;AAjBJ,KADJ;AAyBH,CAhCD;;AAkCAN,iBAAiBW,SAAjB,GAA6B;AACzBJ,UAAMK,oBAAUC,MAAV,CAAiBC,UADE;AAEzBV,iBAAaQ,oBAAUG,MAAV,CAAiBD,UAFL;AAGzBZ,eAAWU,oBAAUG,MAAV,CAAiBD;AAHH,CAA7B;;kBAMed,gB;;;;;;;;;;;AC5Cf,uC","file":"js/1.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SummaryChartItem.scss';\n\nconst SummaryChartItem = (props) => {\n    const numIssues = props.numIssues;\n    let percentage = ((numIssues / props.totalIssues) * 100).toFixed(1);\n    let lowerCaseName = props.name.toLowerCase();\n\n    let barWidth = { width: percentage + '%' };\n\n    return (\n        <li widget-type='InsightsSummaryChartItem' widget-id={ props.name }>\n            { numIssues > 0 &&\n            <React.Fragment>\n                <div className='metrics'>\n                    <strong>{ props.name } </strong>\n                    <span className='num'>({ percentage }%)</span>\n                </div>\n                <div className='progress-bars'>\n                    <div\n                        className= { 'progress-bar progress-bar-' + lowerCaseName }\n                        style= { barWidth }\n                    ></div>\n                    <div className='bar'></div>\n                </div>\n            </React.Fragment>\n            }\n            { numIssues === 0 &&\n            <div className='no-errors'>\n                <i className='fas fa-check-circle small-spacer green'></i>\n                You have no issues of { lowerCaseName } severity\n            </div>\n            }\n        </li>\n    );\n};\n\nSummaryChartItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    totalIssues: PropTypes.number.isRequired,\n    numIssues: PropTypes.number.isRequired\n};\n\nexport default SummaryChartItem;\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}