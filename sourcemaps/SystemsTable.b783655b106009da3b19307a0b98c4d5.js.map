{"version":3,"file":"js/SystemsTable.1648116600813.ead1cbde5dca8aeb794e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_link_Color.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_md.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/Export/SystemsPdfBuild.js","webpack:///./src/PresentationalComponents/Export/SystemsPdf.js","webpack:///./src/PresentationalComponents/SystemsTable/Components/NoSystemsTable.js","webpack:///./src/PresentationalComponents/SystemsTable/SystemsTable.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.global_link_Color = {\n  \"name\": \"--pf-global--link--Color\",\n  \"value\": \"#2b9af3\",\n  \"var\": \"var(--pf-global--link--Color)\"\n};\nexports[\"default\"] = exports.global_link_Color;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_md = {\n  \"name\": \"--pf-global--spacer--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--spacer--md)\"\n};\nexports[\"default\"] = exports.global_spacer_md;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nimport { BASE_URL, exportNotifications } from '../../AppConstants';\nimport { Get } from '../../Utilities/Api';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst fileName = (exportTable) => {\n  const defaultParams = {\n    date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc',\n  };\n\n  return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nfunction objectsToCSV(arr) {\n  const array = [Object.keys(arr[0])].concat(arr);\n  return array\n    .map((row) => {\n      return Object.values(row)\n        .map((value) => {\n          return typeof value === 'string' ? JSON.stringify(value) : value;\n        })\n        .toString();\n    })\n    .join('\\n');\n}\n\nconst downloadHelper = async (\n  exportTable,\n  format,\n  filters,\n  selectedTags,\n  workloads,\n  SID,\n  overrideData,\n  dispatch\n) => {\n  try {\n    let data;\n    if (overrideData) {\n      data = format === 'json' ? overrideData : objectsToCSV(overrideData);\n    } else {\n      let options = selectedTags?.length && { tags: selectedTags };\n      workloads &&\n        (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n      dispatch(addNotification(exportNotifications.pending));\n      data = (\n        await Get(\n          `${BASE_URL}/export/${exportTable}.${\n            format === 'json' ? 'json' : 'csv'\n          }`,\n          {},\n          { ...filters, ...options }\n        )\n          .then((result) => {\n            dispatch(addNotification(exportNotifications.success));\n            return result;\n          })\n          .catch(() => dispatch(addNotification(exportNotifications.error)))\n      ).data;\n    }\n    let formattedData = format === 'json' ? JSON.stringify(data) : data;\n    downloadFile(formattedData, fileName(exportTable), format);\n  } catch (error) {\n    throw `${error}`;\n  }\n};\n\nexport default downloadHelper;\n","/* eslint-disable react/prop-types */\n\nimport {\n  Column,\n  Section,\n  Table,\n} from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { Link, StyleSheet, Text } from '@react-pdf/renderer';\n\nimport { BASE_URI } from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport c_table_m_compact_cell_PaddingBottom from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingBottom';\nimport c_table_m_compact_cell_PaddingLeft from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingLeft';\nimport c_table_m_compact_cell_PaddingTop from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingTop';\nimport chart_global_Fill_Color_700 from '@patternfly/react-tokens/dist/js/chart_global_Fill_Color_700';\nimport global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_link_Color from '@patternfly/react-tokens/dist/js/global_link_Color';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport messages from '../../Messages';\n\nconst styles = StyleSheet.create({\n  bold: { fontWeight: global_FontWeight_bold.value },\n  link: { color: global_link_Color.value },\n  text: { marginTop: global_spacer_md.value },\n  nameColumn: { width: '220px' },\n  header: {\n    fontSize: 9,\n    color: chart_global_Fill_Color_700.value,\n    paddingLeft: c_table_m_compact_cell_PaddingLeft.value,\n    paddingBottom: c_table_m_compact_cell_PaddingBottom.value,\n    paddingTop: c_table_m_compact_cell_PaddingTop.value,\n  },\n});\n\nexport const tablePage = ({ page, systems, intl }) => {\n  const header = [\n    { value: intl.formatMessage(messages.name), style: styles.nameColumn },\n    {\n      value: intl.formatMessage(messages.recommendations),\n      style: { width: '100px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.critical),\n      style: { width: '70px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.important),\n      style: { width: '70px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.moderate),\n      style: { width: '60px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.low),\n      style: { width: '90px', textAlign: 'center' },\n    },\n    {\n      value: intl.formatMessage(messages.lastSeen),\n      style: { marginLeft: '20px' },\n    },\n  ];\n  const hitColumns = [\n    'hits',\n    'critical_hits',\n    'important_hits',\n    'moderate_hits',\n    'low_hits',\n  ];\n  const headerBuilder = ({ value, style }) => (\n    <Text style={{ ...style, ...styles.header, ...styles.bold }}>{value}</Text>\n  );\n  const rowBuilder = ({ value, style }) => <Text style={style}>{value}</Text>;\n  const rows = [\n    ...systems.map((system) => {\n      const [, date, month, year, time] = new Date(system.last_seen)\n        .toUTCString()\n        .split(' ');\n      const sysDate = `${date} ${month} ${year}, ${time\n        .split(':')\n        .slice(0, 2)\n        .join(':')} UTC`;\n      return [\n        <Text key={system.system_uuid} style={styles.nameColumn}>\n          <Link\n            style={styles.link}\n            src={`${BASE_URI}/insights/advisor/systems/${system.system_uuid}/`}\n          >\n            {system.display_name}\n          </Link>\n        </Text>,\n        ...hitColumns.map((item) =>\n          rowBuilder({ style: { width: '10px' }, value: system[item] })\n        ),\n        <Text\n          key={system.last_seen}\n          style={{ width: '100px' }}\n        >{`${sysDate}`}</Text>,\n      ];\n    }),\n  ];\n\n  return (\n    <React.Fragment key={page}>\n      <Column>\n        <Table\n          withHeader\n          rows={[header.map((item) => headerBuilder(item)), ...rows]}\n        />\n      </Column>\n    </React.Fragment>\n  );\n};\n\ntablePage.propTypes = {\n  systems: PropTypes.object,\n  page: PropTypes.number,\n  intl: PropTypes.any,\n};\n\nexport const leadPage = ({ systemsTotal, systems, filters, tags, intl }) => {\n  delete filters.offset;\n  delete filters.limit;\n  return (\n    <React.Fragment\n      key={`${intl.formatMessage(\n        messages.insightsHeader\n      )}: ${intl.formatMessage(messages.systems)}`}\n    >\n      <Text key=\"sys-count\" style={styles.text}>\n        {intl.formatMessage(messages.sysTableCount, {\n          systems: (\n            <Text key=\"sys-count-count\" style={styles.bold}>\n              {intl.formatMessage(messages.execReportHeaderSystems, {\n                systems: systemsTotal,\n              })}\n              {systemsTotal > 1000 && intl.formatMessage(messages.dueTo)}\n            </Text>\n          ),\n        })}\n      </Text>\n      <Text key=\"sys-filters\" style={styles.text}>\n        {intl.formatMessage(messages.filtersApplied)}\n      </Text>\n      <Text key=\"sys-filters-values\" style={styles.bold}>\n        {Object.entries(filters).map((value) => (\n          <Text key={value}>{`${value[0]}: ${value[1]}     `}</Text>\n        ))}\n      </Text>\n      <Text key=\"sys-tags\" style={styles.text}>\n        {intl.formatMessage(messages.tagsApplied)}\n      </Text>\n      <Text key=\"sys-tags-values\" style={styles.bold}>\n        {tags ? decodeURIComponent(tags) : intl.formatMessage(messages.noTags)}\n      </Text>\n      <Section key=\"systems\" title=\"Systems\">\n        {tablePage({ systems, intl })}\n      </Section>\n    </React.Fragment>\n  );\n};\n\nleadPage.propTypes = {\n  systems: PropTypes.object,\n  systemsTotal: PropTypes.number,\n  filters: PropTypes.object,\n  tags: PropTypes.array,\n  intl: PropTypes.any,\n};\n","import './_Export.scss';\n\nimport React, { useMemo, useState } from 'react';\nimport { leadPage, tablePage } from './SystemsPdfBuild';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { Get } from '../../Utilities/Api';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { workloadQueryBuilder } from '../Common/Tables';\n\nconst SystemsPdf = ({ filters }) => {\n  const intl = useIntl();\n  const [loading, setLoading] = useState(false);\n  const selectedTags = useSelector(\n    ({ AdvisorStore }) => AdvisorStore.selectedTags\n  );\n  const workloads = useSelector(({ AdvisorStore }) => AdvisorStore.workloads);\n  const SID = useSelector(({ AdvisorStore }) => AdvisorStore.SID);\n\n  const dataFetch = async () => {\n    setLoading(true);\n    let options = selectedTags?.length && { tags: selectedTags };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    const systems = (\n      await Get(`${BASE_URL}/export/systems/`, {}, { ...filters, ...options })\n    ).data;\n\n    const firstPage = leadPage({\n      systemsTotal: systems?.length,\n      systems: systems.slice(0, 18),\n      filters,\n      tags: selectedTags,\n      intl,\n    });\n\n    const otherPages = systems\n      .slice(18, 982)\n      .reduce((resultArray, item, index) => {\n        const chunkIndex = Math.floor(index / 31);\n        !resultArray[chunkIndex] && (resultArray[chunkIndex] = []);\n        resultArray[chunkIndex].push(item);\n\n        return resultArray;\n      }, []);\n\n    setLoading(false);\n\n    return [\n      firstPage,\n      ...otherPages.map((pageSystems, index) =>\n        tablePage({ page: index, systems: pageSystems, intl })\n      ),\n    ];\n  };\n\n  return useMemo(() => {\n    return (\n      <DownloadButton\n        groupName={intl.formatMessage(messages.redHatInsights)}\n        allPagesHaveTitle={false}\n        label={\n          loading\n            ? intl.formatMessage(messages.loading)\n            : intl.formatMessage(messages.exportPdf)\n        }\n        asyncFunction={dataFetch}\n        buttonProps={{\n          variant: '',\n          component: 'button',\n          className:\n            'pf-c-dropdown__menu-item adv-c-dropdown-systems-pdf__menu-item',\n          ...(loading ? { isDisabled: true } : null),\n        }}\n        reportName={`${intl.formatMessage(messages.insightsHeader)}:`}\n        type={intl.formatMessage(messages.systems)}\n        fileName={`Advisor_systems--${new Date()\n          .toUTCString()\n          .replace(/ /g, '-')}.pdf`}\n        size={[841.89, 595.28]}\n      />\n    );\n  }, [loading]);\n};\n\nSystemsPdf.propTypes = {\n  filters: PropTypes.object,\n  systemsCount: PropTypes.number,\n};\n\nexport default SystemsPdf;\n","import React from 'react';\nimport {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  Bullseye,\n} from '@patternfly/react-core';\n\nconst NoSystemsTable = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full}>\n      <Title headingLevel=\"h2\" size=\"lg\" style={{ fontWeight: 'bold' }}>\n        No matching systems found\n      </Title>\n      <EmptyStateBody>\n        <TextContent>\n          <Text component={TextVariants.p}>\n            To continue, edit your filter settings and search again.\n          </Text>\n        </TextContent>\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoSystemsTable;\n","import './SystemsTable.scss';\n\nimport {\n  PERMS,\n  SYSTEM_FILTER_CATEGORIES as SFC,\n  SYSTEMS_FETCH_URL,\n} from '../../AppConstants';\nimport React, { useEffect, useState } from 'react';\nimport { TableVariant, sortable, wrappable } from '@patternfly/react-table';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n  buildTagFilter,\n} from '../Common/Tables';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\n\nimport { Get } from '../../Utilities/Api';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { Link } from 'react-router-dom';\nimport Loading from '../Loading/Loading';\nimport RuleLabels from '../Labels/RuleLabels';\nimport SystemsPdf from '../Export/SystemsPdf';\nimport downloadReport from '../Common/DownloadHelper';\nimport { mergeArraysByDiffKeys } from '../Common/Tables';\nimport messages from '../../Messages';\nimport { systemReducer } from '../../Store/AppReducer';\nimport { updateReducers } from '../../Store';\nimport { updateSysFilters } from '../../Services/Filters';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport NoSystemsTable from './Components/NoSystemsTable';\n\nconst SystemsTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const store = useStore();\n\n  const { search } = useLocation();\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.sysState);\n  const setFilters = (filters) => dispatch(updateSysFilters(filters));\n  const permsExport = usePermissions('advisor', PERMS.export).hasAccess;\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const columns = [\n    {\n      title: intl.formatMessage(messages.numberRuleHits),\n      transforms: [sortable, wrappable],\n      key: 'hits',\n    },\n    {\n      title: intl.formatMessage(messages.critical),\n      transforms: [sortable, wrappable],\n      key: 'critical_hits',\n    },\n    {\n      title: intl.formatMessage(messages.important),\n      transforms: [sortable, wrappable],\n      key: 'important_hits',\n    },\n    {\n      title: intl.formatMessage(messages.moderate),\n      transforms: [sortable, wrappable],\n      key: 'moderate_hits',\n    },\n    {\n      title: intl.formatMessage(messages.low),\n      transforms: [sortable, wrappable],\n      key: 'low_hits',\n    },\n  ];\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    delete filter[param];\n    param === 'hits' && filter.hits === undefined && (filter.hits = ['yes']);\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    // remove 'yes' from the hits filter if the user chooses any other filters (its always the first item)\n    param === 'hits' &&\n      values.length > 1 &&\n      values.includes('yes') &&\n      values.shift();\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n  const filterConfigItems = [\n    {\n      label: SFC.hits.title.toLowerCase(),\n      type: SFC.hits.type,\n      id: SFC.hits.urlParam,\n      value: `checkbox-${SFC.hits.urlParam}`,\n      filterValues: {\n        key: `${SFC.hits.urlParam}-filter`,\n        onChange: (_e, values) => addFilterParam(SFC.hits.urlParam, values),\n        value: filters.hits,\n        items: SFC.hits.values,\n      },\n    },\n    {\n      label: SFC.incident.title.toLowerCase(),\n      type: SFC.incident.type,\n      id: SFC.incident.urlParam,\n      value: `checkbox-${SFC.incident.urlParam}`,\n      filterValues: {\n        key: `${SFC.incident.urlParam}-filter`,\n        onChange: (_e, values) => {\n          addFilterParam(SFC.incident.urlParam, values);\n        },\n        value: filters.incident,\n        items: SFC.incident.values,\n      },\n    },\n    {\n      label: SFC.rhel_version.title.toLowerCase(),\n      type: SFC.rhel_version.type,\n      id: SFC.rhel_version.urlParam,\n      value: `checkbox-${SFC.rhel_version.urlParam}`,\n      filterValues: {\n        key: `${SFC.rhel_version.urlParam}-filter`,\n        onChange: (_e, values) => {\n          addFilterParam(SFC.rhel_version.urlParam, values);\n        },\n        value: filters.rhel_version,\n        items: SFC.rhel_version.values,\n      },\n    },\n  ];\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    localFilters.hits &&\n      localFilters.hits.includes('yes') &&\n      delete localFilters.hits;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, SFC);\n  };\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setFilters({\n          sort: filters.sort,\n          limit: filters.limit,\n          offset: filters.offset,\n          hits: ['all'],\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const handleRefresh = (options) => {\n    const { display_name, hits } = options;\n    const refreshedFilters = {\n      ...options,\n      ...(display_name && {\n        display_name,\n      }),\n      ...(hits && { hits }),\n    };\n    urlBuilder(refreshedFilters, selectedTags);\n  };\n\n  const createColumns = (defaultColumns) => {\n    let lastSeenColumn = defaultColumns.filter(({ key }) => key === 'updated');\n    let displayName = defaultColumns.filter(\n      ({ key }) => key === 'display_name'\n    );\n    let systemProfile = defaultColumns.filter(\n      ({ key }) => key === 'system_profile'\n    );\n    let tags = defaultColumns.filter(({ key }) => key === 'tags');\n    displayName = {\n      ...displayName[0],\n      transforms: [sortable, wrappable],\n      props: { isStatic: true },\n      // eslint-disable-next-line react/display-name\n      renderFunc: (_data, _id, system) => (\n        <React.Fragment>\n          <Link key={_id} to={`/systems/${system.system_uuid}`}>\n            {`${system.display_name} `}\n          </Link>\n          {system.incident_hits > 0 && (\n            <RuleLabels rule={{ tags: 'incident' }} />\n          )}\n        </React.Fragment>\n      ),\n    };\n\n    lastSeenColumn = {\n      ...lastSeenColumn[0],\n      transforms: [sortable, wrappable],\n      props: { width: 20 },\n    };\n\n    systemProfile = {\n      ...systemProfile[0],\n      transforms: [wrappable],\n    };\n\n    tags = {\n      ...tags[0],\n    };\n\n    return [displayName, tags, systemProfile, ...columns, lastSeenColumn];\n  };\n\n  useEffect(() => {\n    let combinedFilters;\n    if (search) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n      paramsObject.sort !== undefined &&\n        (paramsObject.sort = paramsObject.sort[0]);\n      paramsObject.display_name !== undefined &&\n        (paramsObject.display_name = paramsObject.display_name[0]);\n      paramsObject.hits === undefined && (paramsObject.hits = ['all']);\n      paramsObject.offset === undefined || isNaN(paramsObject.offset)\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined || isNaN(paramsObject.limit)\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      combinedFilters = { ...filters, ...paramsObject };\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      setFilters(combinedFilters);\n    } else if (\n      filters.limit === undefined ||\n      filters.offset === undefined ||\n      filters.hits === undefined\n    ) {\n      combinedFilters = {\n        ...filters,\n        offset: 0,\n        limit: 20,\n        hits: ['all'],\n      };\n      setFilters(combinedFilters);\n    }\n    setFilterBuilding(false);\n    urlBuilder(combinedFilters, selectedTags);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    !filterBuilding && (\n      <InventoryTable\n        hideFilters={{ all: true, name: false, tags: false }}\n        initialLoading\n        autoRefresh\n        showTags\n        disableDefaultColumns\n        customFilters={{\n          advisorFilters: filters,\n          selectedTags,\n          workloads,\n          SID,\n        }}\n        columns={(defaultColumns) => createColumns(defaultColumns)}\n        onLoad={({\n          mergeWithEntities,\n          INVENTORY_ACTION_TYPES,\n          mergeWithDetail,\n        }) => {\n          store.replaceReducer(\n            updateReducers({\n              ...mergeWithEntities(systemReducer([], INVENTORY_ACTION_TYPES), {\n                page: Number(filters.offset / filters.limit + 1 || 1),\n                perPage: Number(filters.limit || 20),\n              }),\n              ...mergeWithDetail(),\n            })\n          );\n        }}\n        getEntities={async (_items, config, showTags, defaultGetEntities) => {\n          const {\n            per_page,\n            page,\n            orderBy,\n            orderDirection,\n            advisorFilters,\n            filters,\n            workloads,\n            SID,\n          } = config;\n          const sort = `${orderDirection === 'ASC' ? '' : '-'}${\n            orderBy === 'updated' ? 'last_seen' : orderBy\n          }`;\n\n          let options = {\n            ...advisorFilters,\n            limit: per_page,\n            offset: page * per_page - per_page,\n            sort,\n            ...(config.filters.hostnameOrId && {\n              display_name: config?.filters?.hostnameOrId,\n            }),\n            ...(Array.isArray(advisorFilters.incident) && {\n              incident: advisorFilters?.incident?.join(','),\n            }),\n            ...(Array.isArray(advisorFilters.rhel_version) && {\n              rhel_version: advisorFilters.rhel_version?.join(','),\n            }),\n            ...(filters.tagFilters?.length &&\n              buildTagFilter(filters.tagFilters)),\n          };\n\n          workloads &&\n            (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n          const fetchedSystems = (await Get(SYSTEMS_FETCH_URL, {}, options))\n            ?.data;\n\n          handleRefresh(options);\n          const results = await defaultGetEntities(\n            fetchedSystems.data.map((system) => system.system_uuid),\n            {\n              page,\n              per_page,\n              hasItems: true,\n              fields: { system_profile: ['operating_system'] },\n            },\n            showTags\n          );\n\n          return Promise.resolve({\n            results: mergeArraysByDiffKeys(\n              fetchedSystems.data,\n              results.results\n            ),\n            total: fetchedSystems.meta.count,\n          });\n        }}\n        tableProps={{\n          isStickyHeader: true,\n          variant: TableVariant.compact,\n        }}\n        isFullView\n        hasCheckbox={false}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n        noSystemsTable={NoSystemsTable}\n        exportConfig={{\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'systems',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID,\n              null,\n              dispatch\n            ),\n          extraItems: [\n            <li key=\"download-pd\" role=\"menuitem\">\n              <SystemsPdf filters={{ ...filterFetchBuilder(filters) }} />\n            </li>,\n          ],\n          isDisabled: !permsExport,\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        fallback={Loading}\n      />\n    )\n  );\n};\n\nexport default SystemsTable;\n"],"names":["exports","_a","component","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","useEffect","console","error","concat","__assign","assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Cmp","className","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","size","fileName","exportTable","defaultParams","date","Date","toISOString","replace","split","format","filters","selectedTags","workloads","SID","overrideData","dispatch","data","arr","keys","map","row","values","value","JSON","stringify","toString","join","options","tags","workloadQueryBuilder","addNotification","exportNotifications","Get","BASE_URL","then","result","formattedData","downloadFile","styles","StyleSheet","bold","fontWeight","global_FontWeight_bold","link","color","global_link_Color","text","marginTop","global_spacer_md","nameColumn","width","header","fontSize","chart_global_Fill_Color_700","paddingLeft","c_table_m_compact_cell_PaddingLeft","paddingBottom","c_table_m_compact_cell_PaddingBottom","paddingTop","c_table_m_compact_cell_PaddingTop","tablePage","page","systems","intl","formatMessage","messages","style","textAlign","marginLeft","hitColumns","rows","system","last_seen","toUTCString","month","year","time","sysDate","slice","key","system_uuid","src","BASE_URI","display_name","item","withHeader","PropTypes","leadPage","systemsTotal","offset","limit","entries","decodeURIComponent","title","SystemsPdf","useIntl","useState","loading","setLoading","useSelector","AdvisorStore","dataFetch","firstPage","otherPages","reduce","resultArray","index","chunkIndex","Math","floor","push","pageSystems","useMemo","groupName","allPagesHaveTitle","label","asyncFunction","buttonProps","variant","isDisabled","reportName","type","systemsCount","EmptyState","EmptyStateVariant","Title","headingLevel","EmptyStateBody","TextContent","Text","TextVariants","localFilters","useDispatch","search","useLocation","sysState","setFilters","updateSysFilters","permsExport","usePermissions","PERMS","hasAccess","filterBuilding","setFilterBuilding","columns","transforms","sortable","wrappable","removeFilterParam","param","filter","undefined","hits","addFilterParam","includes","shift","filterConfigItems","SFC","id","filterValues","onChange","_e","items","incident","rhel_version","activeFiltersConfig","deleteTitle","sort","pruneFilters","onDelete","event","itemsToRemove","isAll","newFilter","urlParam","Array","isArray","String","chips","handleRefresh","refreshedFilters","urlBuilder","combinedFilters","paramsObject","paramParser","isNaN","Number","InventoryTable","hideFilters","all","name","initialLoading","autoRefresh","showTags","disableDefaultColumns","customFilters","advisorFilters","defaultColumns","lastSeenColumn","displayName","systemProfile","isStatic","renderFunc","_data","_id","Link","to","incident_hits","RuleLabels","rule","createColumns","onLoad","mergeWithEntities","INVENTORY_ACTION_TYPES","mergeWithDetail","replaceReducer","updateReducers","systemReducer","perPage","getEntities","_items","config","defaultGetEntities","per_page","orderBy","orderDirection","hostnameOrId","tagFilters","buildTagFilter","SYSTEMS_FETCH_URL","fetchedSystems","hasItems","fields","system_profile","results","Promise","resolve","mergeArraysByDiffKeys","total","meta","count","tableProps","isStickyHeader","TableVariant","isFullView","hasCheckbox","filterConfig","noSystemsTable","NoSystemsTable","exportConfig","onSelect","fileType","downloadReport","extraItems","role","filterFetchBuilder","tooltipText","Loading"],"sourceRoot":""}