{"version":3,"file":"js/PathwaysTable.4d0295891bf4ed6046e0.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/PathwaysTable/PathwaysTable.js"],"sourcesContent":["import {\n  DEBOUNCE_DELAY,\n  FILTER_CATEGORIES as FC,\n  PATHWAYS_FILTER_CATEGORIES as PFC,\n} from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  info,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport Failed from '../Loading/Failed';\nimport Loading from '../Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport RuleLabels from '../Labels/RuleLabels';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport debounce from '../../Utilities/Debounce';\nimport messages from '../../Messages';\nimport { updatePathFilters } from '../../Services/Filters';\nimport { useGetPathwaysQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\n\nconst PathwaysTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.pathState);\n  const setFilters = (filters) => dispatch(updatePathFilters(filters));\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const {\n    data: pathways = [],\n    isFetching,\n    isLoading,\n    isError,\n  } = useGetPathwaysQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const cols = [\n    {\n      title: intl.formatMessage(messages.pathway),\n      transforms: [sortable, cellWidth(45)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      // transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reboot),\n      // transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reclvl),\n      transforms: [\n        // sortable,\n        cellWidth(20),\n        fitContent,\n        info({\n          tooltip: intl.formatMessage(messages.reclvldetails),\n          tooltipProps: {\n            isContentLeftAligned: true,\n          },\n        }),\n      ],\n    },\n  ];\n  const sortIndices = {\n    0: 'name',\n    // 1: 'category',\n    2: 'impacted_systems_count',\n    // 3: 'reboot_required',\n    // 4: 'recommendation_level',\n  };\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  const rowBuilder = (pathways) =>\n    pathways.length === 0\n      ? [\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={SearchIcon}\n                    title={intl.formatMessage(messages.noResults)}\n                    text={intl.formatMessage(messages.adjustFilters)}\n                  />\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]\n      : pathways.flatMap((pathway, key) => [\n          {\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link\n                      key={key}\n                      to={`/recommendations/pathways/${pathway.slug}`}\n                    >\n                      {' '}\n                      {pathway.name}{' '}\n                    </Link>\n                    {pathway.has_incident && (\n                      <RuleLabels rule={{ tags: 'incident' }} />\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <CategoryLabel key={key} labelList={pathway.categories} />\n                ),\n              },\n              {\n                title: (\n                  <div\n                    key={key}\n                  >{`${pathway.impacted_systems_count.toLocaleString()}`}</div>\n                ),\n              },\n              {\n                title: (\n                  <span key={key}>\n                    {intl.formatMessage(\n                      pathway.reboot_required\n                        ? messages.required\n                        : messages.notRequired\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: <RecommendationLevel key={key} {...pathway} />,\n              },\n            ],\n          },\n        ]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: PFC.has_incident.title,\n      type: PFC.has_incident.type,\n      id: PFC.has_incident.urlParam,\n      value: `checkbox-${PFC.has_incident.urlParam}`,\n      filterValues: {\n        key: `${PFC.has_incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.has_incident.urlParam, values),\n        value: filters.has_incident,\n        items: PFC.has_incident.values,\n      },\n    },\n    {\n      label: PFC.reboot_required.title,\n      type: PFC.reboot_required.type,\n      id: PFC.reboot_required.urlParam,\n      value: `checkbox-${PFC.reboot_required.urlParam}`,\n      filterValues: {\n        key: `${PFC.reboot_required.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.reboot_required.urlParam, values),\n        value: filters.reboot_required,\n        items: PFC.reboot_required.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined\n          ? '-impacted_systems_count'\n          : paramsObject.sort[0];\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot !== undefined &&\n        !Array.isArray(paramsObject.reboot) &&\n        (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (filters.sort !== undefined && sortIndices) {\n      let sortInput = filters.sort;\n      const sortIndex = Number(\n        Object.entries(sortIndices).find(\n          (item) => item[1] === sortInput || `-${item[1]}` === sortInput\n        )[0]\n      );\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: sortIndex, direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar\n        pagination={{\n          itemCount: pathways?.meta?.count || 0,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      ) : (\n        <Table\n          aria-label={'pathways-table'}\n          variant={TableVariant.compact}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rowBuilder(pathways?.data)}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={pathways?.meta?.count || 0}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PathwaysTable;\n"],"names":["intl","useIntl","dispatch","useDispatch","search","useLocation","selectedTags","useSelector","filters","workloads","SID","pathState","setFilters","updatePathFilters","options","length","tags","join","workloadQueryBuilder","localFilters","useGetPathwaysQuery","filterFetchBuilder","data","pathways","isFetching","isLoading","isError","cols","title","formatMessage","messages","transforms","sortable","cellWidth","fitContent","info","tooltip","tooltipProps","isContentLeftAligned","sortIndices","0","2","useState","sortBy","setSortBy","filterBuilding","setFilterBuilding","text","searchText","setSearchText","debouncedSearchText","debounce","DEBOUNCE_DELAY","onSetPage","pageNumber","newOffset","limit","offset","removeFilterParam","param","filter","addFilterParam","values","filterConfigItems","label","toLowerCase","filterValues","key","onChange","_event","value","placeholder","FC","type","id","category","items","PFC","has_incident","reboot_required","activeFiltersConfig","deleteTitle","sort","pruneFilters","onDelete","itemsToRemove","isAll","map","item","newFilter","urlParam","Array","isArray","String","chips","useEffect","urlBuilder","paramsObject","paramParser","undefined","Number","reboot","sortInput","sortIndex","Object","entries","find","sortDirection","index","direction","pagination","itemCount","meta","count","page","perPage","onPerPageSelect","isCompact","filterConfig","message","Table","aria-label","variant","TableVariant","onSort","orderParam","cells","rows","icon","SearchIcon","props","colSpan","flatMap","pathway","Link","to","slug","name","rule","labelList","categories","impacted_systems_count","toLocaleString","rowBuilder","isStickyHeader","TableHeader","TableBody","ouiaId","_e","widgetId","PaginationVariant"],"sourceRoot":""}