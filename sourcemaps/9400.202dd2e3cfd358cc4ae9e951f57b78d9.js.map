{"version":3,"file":"js/9400.xxxxxxxxxxxxxxxxxxxx.js","mappings":"+OAIMA,GAAWC,EAAAA,EAAAA,OAAK,kBACpB,mPAAwE,IAEpEC,GAAcD,EAAAA,EAAAA,OAAK,kBACvB,4JAA8E,IAE1EE,GAAkBF,EAAAA,EAAAA,OAAK,kBAC3B,0JAEC,IAEGG,GAAmBH,EAAAA,EAAAA,OAAK,kBAC5B,+KAEC,IAEGI,GAAcJ,EAAAA,EAAAA,OAAK,kBACvB,uIAAuE,IAEnEK,GAAaL,EAAAA,EAAAA,OAAK,kBACtB,mHAA4E,IAExEM,GAAeN,EAAAA,EAAAA,OAAK,kBACxB,yLAEC,IAEGO,GAAsBP,EAAAA,EAAAA,OAAK,kBAC/B,6HAEC,IAGUQ,EAAgB,WAC3B,OACEC,IAAAA,cAACC,EAAAA,EAAgB,KACfD,IAAAA,cAACE,EAAAA,OAAM,KACLF,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,kBACLC,KAAK,kBACLC,QAASN,IAAAA,cAACV,EAAQ,QAEpBU,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,2BACLC,KAAK,2BACLC,QAASN,IAAAA,cAACV,EAAQ,QAEpBU,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,kBACLC,KAAK,+BACLC,QAASN,IAAAA,cAACP,EAAe,QAE3BO,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,kBACLC,KAAK,uCACLC,QAASN,IAAAA,cAACP,EAAe,QAE3BO,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,yBACLC,KAAK,sBACLC,QAASN,IAAAA,cAACR,EAAW,QAEvBQ,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,yBACLC,KAAK,4CACLC,QAASN,IAAAA,cAACR,EAAW,CAACe,oBAAkB,MAE1CP,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,oBACLC,KAAK,oCACLC,QAASN,IAAAA,cAACN,EAAgB,QAE5BM,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,oBACLC,KAAK,6CACLC,QAASN,IAAAA,cAACN,EAAgB,QAE5BM,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,oBACLC,KAAK,qDACLC,QAASN,IAAAA,cAACN,EAAgB,QAE5BM,IAAAA,cAACG,EAAAA,MAAK,CAACC,IAAK,UAAWC,KAAK,UAAUC,QAASN,IAAAA,cAACL,EAAW,QAC3DK,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,gBACLC,KAAK,wBACLC,QAASN,IAAAA,cAACN,EAAgB,QAE5BM,IAAAA,cAACG,EAAAA,MAAK,CAACC,IAAK,SAAUC,KAAK,SAASC,QAASN,IAAAA,cAACJ,EAAU,QACxDI,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,gBACLC,KAAK,aACLC,QAASN,IAAAA,cAACH,EAAY,QAGxBG,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,UACLC,KAAK,IACLC,QAASN,IAAAA,cAACQ,EAAAA,SAAQ,CAACC,SAAO,EAACC,GAAG,sBAEhCV,IAAAA,cAACG,EAAAA,MAAK,CACJC,IAAK,aACLC,KAAK,uBACLC,QAASN,IAAAA,cAACF,EAAmB,SAKvC,E,iCC7DA,QArCY,WACV,IAAMa,GAAOC,EAAAA,EAAAA,KACPC,GAAgBC,EAAAA,EAAAA,IAAe,UAAWC,EAAAA,GAAAA,UAC1CC,GAAWC,EAAAA,EAAAA,eACXC,GAASC,EAAAA,EAAAA,KAkBf,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,IAAAC,EACdH,EAAOI,YAAY,WACnBJ,SAAyB,QAAnBG,EAANH,EAAQK,yBAAiB,IAAAF,GAAzBA,EAAAG,KAAAN,EAA4B,YACxBA,SAAAA,EAAQK,mBACVL,EAAOO,GAAG,wBAAwB,SAAAC,GAAc,IAAAC,EAAXC,EAAIF,EAAJE,KACnCC,GACEX,SAAuB,QAAjBS,EAANT,EAAQY,uBAAe,IAAAH,OAAjB,EAANA,EAAAH,KAAAN,EAA0BU,GAAM,GAAO,KAAS,GAAEG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAD7CI,EAASF,EAAA,GAAEG,EAAGH,EAAA,GAAEI,EAAYJ,EAAA,IAEnCK,EAAAA,EAAAA,QAAM,WACJpB,GAASqB,EAAAA,EAAAA,IAAgBJ,IACzBjB,GAASsB,EAAAA,EAAAA,IAAWH,IACpBnB,GAASuB,EAAAA,EAAAA,GAAUL,GACrB,GACF,GAEJ,GAAG,MAGArB,SAAAA,EAAe2B,aACf3B,SAAAA,EAAe4B,UACdzC,IAAAA,cAACD,EAAa,MAEdC,IAAAA,cAAC0C,EAAAA,EAAY,CACXC,QAAQ,QACRC,KAAMC,EAAAA,GACNC,MAAOnC,EAAKoC,cAAcC,EAAAA,EAAAA,YAC1BC,KAAMtC,EAAKoC,cAAcC,EAAAA,EAAAA,aAIjC,C,yFC7CaE,GAAOC,E,SAAAA,IAAU,CAC5BC,YAAa,OACbC,WAAWC,EAAAA,EAAAA,IAAe,CAAEC,QAASC,EAAAA,KACrCC,UAAW,SAACC,GAAK,MAAM,CACrBC,WAAYD,EAAME,MAAM,CACtBA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,QAAFC,OAAUF,EAAQG,OAAM,KAAK,IAEzDC,YAAaP,EAAME,MAAM,CACvBA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,YAAaD,QAAAA,EAAS,EAClDK,kBAAmB,SAACC,GAAQ,OAAKA,EAASvC,IAAI,IAEhDwC,OAAQV,EAAMW,SAAS,CACrBT,MAAO,SAACC,GAAO,MAAM,CACnBC,IAAK,GAAFC,OAAsB,SAAjBF,EAAQS,KAAkB,QAAU,aAC5CT,QAASA,EAAQA,QACjBU,OAAQ,OACT,IAEJ,IAGYC,EACbtB,EADasB,mBAAoBC,EACjCvB,EADiCuB,oBAAqBC,EACtDxB,EADsDwB,iB,6FCJlDC,GAAUC,E,SAAAA,IAAY,CAC1BC,KAAM,UACNC,aArB0B,CAC1BC,SAAU,CACRC,UAAW,CAAC,QACZC,YAAa,UACbC,KAAM,cACNC,MAAO,GACPC,OAAQ,GAEVC,UAAW,CACTH,KAAM,wBACNC,MAAO,GACPC,OAAQ,GAEVE,SAAU,CAAEJ,KAAM,aAAcC,MAAO,GAAIC,OAAQ,GACnDjD,aAAc,GACdF,UAAW,CAAC,EACZC,IAAK,IAMLqD,SAAU,CACRC,iBAAgB,SAACC,EAAOC,GACtBD,EAAMV,SAAWW,EAAOC,OAC1B,EACAC,iBAAgB,SAACH,EAAOC,GACtBD,EAAMH,SAAWI,EAAOC,OAC1B,EACAE,kBAAiB,SAACJ,EAAOC,GACvBD,EAAMJ,UAAYK,EAAOC,OAC3B,EACArD,WAAU,SAACmD,EAAOC,GAChBD,EAAMtD,aAAeuD,EAAOC,OAC9B,EACAtD,gBAAe,SAACoD,EAAOC,GACrBD,EAAMxD,UAAYyD,EAAOC,OAC3B,EACApD,UAAS,SAACkD,EAAOC,GACfD,EAAMvD,IAAMwD,EAAOC,OACrB,KAIGG,EAOHnB,EAAQoB,QANVP,EAAgBM,EAAhBN,iBACAI,EAAgBE,EAAhBF,iBACAC,EAAiBC,EAAjBD,kBACAvD,EAAUwD,EAAVxD,WACAD,EAAeyD,EAAfzD,gBACAE,EAASuD,EAATvD,UAGF,QAAeoC,EAAe,O,+ECnDjBqB,GAAW7C,E,SAAAA,IAAU,CAChCC,YAAa,WACbC,WAAWC,EAAAA,EAAAA,IAAe,CAAEC,QAASC,EAAAA,KACrCyC,kBAAmB,EACnBxC,UAAW,SAACC,GAAK,MAAM,CACrBwC,YAAaxC,EAAME,MAAM,CACvBA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,YAAaD,QAAAA,EAAS,IAEpDsC,WAAYzC,EAAME,MAAM,CACtBA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,YAAFC,OAAcF,EAAQuC,KAAI,KAAKvC,QAAAA,EAAS,IAEpEwC,gBAAiB3C,EAAME,MAAM,CAC3BA,MAAO,SAACiB,GAAI,MAAM,CAAEf,IAAK,YAAFC,OAAcc,EAAI,WAAW,IAEtDyB,kBAAmB5C,EAAME,MAAM,CAC7BA,MAAO,SAACiB,GAAI,MAAM,CAAEf,IAAK,YAAFC,OAAcc,EAAI,aAAa,IAEzD,IAID0B,EAIEP,EAJFO,oBACAC,EAGER,EAHFQ,mBAGER,EAFFS,wBAEET,EADFU,yB,gFCxBWC,GAAOxD,E,SAAAA,IAAU,CAC5BC,YAAa,OACbC,WAAWC,EAAAA,EAAAA,IAAe,CAAEC,QAASC,EAAAA,KACrCyC,kBAAmB,EACnBxC,UAAW,SAACC,GAAK,MAAM,CACrBkD,QAASlD,EAAME,MAAM,CACnBA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,SAAUD,QAAAA,EAAS,IAEjDgD,OAAQnD,EAAME,MAAM,CAClBA,MAAO,SAACC,GAAO,MAAM,CACnBC,IAAK,SAAFC,OAAWF,EAAQG,OAAM,KAC5BH,QAAAA,EACD,IAEHiD,cAAepD,EAAME,MAAM,CACzBA,MAAO,SAACC,EAASkD,GAAM,MAAM,CAC3BjD,IAAK,SAAFC,OAAWiD,UAAUnD,EAAQG,QAAO,aACvCH,QAAAA,EACAkD,OAAAA,EACD,IAEJ,IAGYE,EAA2DN,EAA3DM,gBAAiBC,EAA0CP,EAA1CO,eAA0CP,EAA1BQ,qB,yFCxBnCC,GAASjE,E,SAAAA,IAAU,CAC9BC,YAAa,SACbC,WAAWC,EAAAA,EAAAA,IAAe,CACxBC,QAAS,GAAFQ,OAAKP,EAAAA,MAEdC,UAAW,SAACC,GAAK,MAAM,CACrB2D,UAAW3D,EAAME,MAAM,CACrBA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,UAAWD,QAAAA,EAAS,IAGlDyD,eAAgB5D,EAAME,MAAM,CAC1BA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,4BAA6BD,QAAAA,EAAS,IAEpE0D,SAAU7D,EAAME,MAAM,CACpBA,MAAO,SAACC,GAAO,MAAM,CACnBC,IAAK,UAAFC,OAAYF,EAAQ2D,QAAO,KAC9B3D,QAAAA,EACD,IAEJ,IAGY4D,EACbL,EADaK,kBAAmBC,EAChCN,EADgCM,iBAAkBC,EAClDP,EADkDO,sB,woBCxB7C,SAASC,IACd,OAAOC,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAC,CAAC,EACtB,mBAAoB,SAACrC,EAAK/D,GAAA,IAAeqG,EAAQrG,EAAnBiE,QAAWoC,SAAQ,OAAAC,EAAAA,EAAA,GAC7CvC,GAAK,IACRwC,KAAMC,EAAWzC,EAAMwC,KAAMF,IAAS,IAG5C,CAEO,SAASI,EAAuBC,GACrC,OAAOP,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAC,CAAD,KAAA/D,OAEfqE,EAAYC,YAAW,cAAeC,GAE5C,CAAC,EAEL,CAEA,SAASA,EAAmB7C,GAC1B,OAAAuC,EAAAA,EAAA,GACKvC,GAAK,IACR8C,QAAQ,GAEZ,CAEA,IAAML,EAAa,SAACD,GAAI,IAAEF,EAAQS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OACpCP,GAAQ,IAAIU,KAAI,SAACC,GAAG,OAAAZ,EAAAA,EAAA,GAChBY,GAAG,IACNb,SAAUA,EAASc,SAASD,EAAIE,KAAG,GAClC,C,kJC1BQC,GAAU5F,E,SAAAA,IAAU,CAC/BC,YAAa,UACbC,WAAWC,EAAAA,EAAAA,IAAe,CAAEC,QAASyF,EAAAA,KACrCvF,UAAW,SAACC,GAAK,MAAM,CACrBuF,WAAYvF,EAAME,MAAM,CACtBA,MAAO,SAACC,GAAO,MAAM,CAAEC,IAAK,WAAYD,QAAAA,EAAS,IAEnDqF,UAAWxF,EAAME,MAAM,CACrBA,MAAO,SAACI,EAAQH,EAASkD,GAAM,MAAM,CACnCjD,IAAK,SAAFC,OAAWiD,UAAUhD,GAAO,aAC/BH,QAAAA,EACAkD,OAAAA,EACD,IAEJ,I,GAQCgC,EAJFI,mBAIEJ,EAHFK,uBAGEL,EAFFM,kBAEEN,EADFO,sB,wpBCZF,IAEMC,GAAOC,EAAG,CAAC,GAAJ1B,EAAAA,EAAAA,GAAA0B,EACVxD,EAAAA,GAAAA,YAAuBA,EAAAA,GAAAA,UAAgB8B,EAAAA,EAAAA,GAAA0B,EACvC7C,EAAAA,GAAAA,YAAmBA,EAAAA,GAAAA,UAAYmB,EAAAA,EAAAA,GAAA0B,EAC/BpC,EAAAA,GAAAA,YAAqBA,EAAAA,GAAAA,UAAcU,EAAAA,EAAAA,GAAA0B,EACnCT,EAAQ3F,YAAc2F,EAAQQ,UAAOzB,EAAAA,EAAAA,GAAA0B,EACrCtG,EAAAA,GAAAA,YAAmBA,EAAAA,GAAAA,UAAY4E,EAAAA,EAAAA,GAAA0B,EAAA,UAChC7E,EAAAA,KAAOmD,EAAAA,EAAAA,GAAA0B,EAAA,gBACQC,EAAAA,KAAoB3B,EAAAA,EAAAA,GAAA0B,EAAA,iBACpB5B,EAAAA,EAAAA,GAAc,GAAI,CAAC,KAAEE,EAAAA,EAAAA,GAAA0B,EAAA,0BACZrB,EAAAA,EAAAA,GAAuB,CAAC,IAAEqB,GAG9CE,EAAa,SAACC,GAAoB,OACtCA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CACd,gBACA,cACA,gBACA,0BAGJC,eAAgB,CACdC,aAAc,CAAC,eAEhBhG,OACDiG,IACAhE,EAAAA,GAAAA,WACAW,EAAAA,GAAAA,WACAoC,EAAQW,WACRtC,EAAAA,GAAAA,WACAlE,EAAAA,GAAAA,YACA+G,EAAAA,EAAAA,yBAAwB,CACtBC,cAAe,CAAC,WAChBC,oBAAqB,CAAC,0BAEVC,IACf,EAEGC,EAAW,WACf,OAAOC,EAAAA,EAAAA,IAAe,CACpBf,QAAAA,EACAG,WAAAA,EACAa,UA5CeC,GA8CnB,EAEMC,EAAiB,WAAH,IAAIC,EAAWlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACtCmC,EAAAA,EAAAA,IAAe3C,EAAAA,EAAC,CAAC,EACZuB,GACAmB,GACH,C,kDCjESE,EAAiB,SAACC,GAC7B,IAAQC,GAAeC,EAAAA,EAAAA,kBAAfD,WACFE,GAAgBC,EAAAA,EAAAA,SAAQJ,GAC9B,QAAOC,GAAaE,CACtB,C,uNCMaE,GAAqBC,EAAAA,EAAAA,eAAc,CAC9CC,wBAAwB,EACxBC,gBAAgB,IAGLpL,EAAmB,SAAHyB,GAAqB,IAAf4J,EAAQ5J,EAAR4J,SAC3B3K,GAAOC,EAAAA,EAAAA,KACPI,GAAWC,EAAAA,EAAAA,eACXsK,GAAsBX,EAAAA,EAAAA,GAAe,uBAC3CY,GAA4DC,EAAAA,EAAAA,WAAS,GAAKC,GAAA1J,EAAAA,EAAAA,GAAAwJ,EAAA,GAAnEJ,EAAsBM,EAAA,GAAEC,EAAyBD,EAAA,GACxDE,GAA4CH,EAAAA,EAAAA,WAAS,GAAKI,GAAA7J,EAAAA,EAAAA,GAAA4J,EAAA,GAAnDP,EAAcQ,EAAA,GAAEC,EAAiBD,EAAA,IAExCzK,EAAAA,EAAAA,YAAU,WACR,IACE2K,IAAAA,IACO,mFAGJC,MAAK,SAAAnK,GAAc,IAAXD,EAAIC,EAAJD,KACP+J,EAA0B/J,EAAKqK,MAAQ,EACzC,IACFF,IAAAA,IACO,oFAGJC,MAAK,SAAAjK,GAAc,IAAXH,EAAIG,EAAJH,KACPkK,EAAkBlK,EAAKqK,MAAQ,EACjC,GAUJ,CATE,MAAOC,GACPlL,GACEmL,EAAAA,EAAAA,iBAAgB,CACdxJ,QAAS,SACTyJ,aAAa,EACbtJ,MAAOnC,EAAKoC,cAAcC,EAAAA,EAAAA,OAC1BqJ,YAAa,GAAFtI,OAAKmI,KAGtB,CACF,GAAG,IAEH,IAAMI,EAAaf,GACfF,GACAD,EAEJ,OACEpL,IAAAA,cAACuM,EAAAA,SAAQ,CACPC,SACExM,IAAAA,cAACyM,EAAAA,EAAQ,KACPzM,IAAAA,cAAC0M,EAAAA,EAAO,CAACC,KAAK,SAIhBL,EAkBAtM,IAAAA,cAACkL,EAAmB0B,SAAQ,CAC1BC,MAAO,CAAEzB,uBAAAA,EAAwBC,eAAAA,IAEhCC,GApBHtL,IAAAA,cAACuM,EAAAA,SAAQ,CACPC,SACExM,IAAAA,cAACyM,EAAAA,EAAQ,KACPzM,IAAAA,cAAC0M,EAAAA,EAAO,CAACC,KAAK,SAIlB3M,IAAAA,cAAC8M,EAAAA,EAAa,CACZC,MAAO,qBACPC,QAAQ,YACRC,OAAO,iBACPC,MAAM,YACNC,eAAgBnN,IAAAA,cAACoN,EAAAA,EAAU,MAC3BC,IAAI,aAYhB,EAEApN,EAAiBqN,UAAY,CAC3BhC,SAAUiC,IAAAA,QACVC,MAAOD,IAAAA,Q","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Services/Acks.js","webpack:///./src/Services/Filters.js","webpack:///./src/Services/Pathways.js","webpack:///./src/Services/Recs.js","webpack:///./src/Services/Topics.js","webpack:///./src/Store/AppReducer.js","webpack:///./src/Services/Systems.js","webpack:///./src/Store/index.js","webpack:///./src/Utilities/Hooks.js","webpack:///./src/ZeroStateWrapper.js"],"sourcesContent":["import React, { lazy } from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { ZeroStateWrapper } from './ZeroStateWrapper';\n\nconst RecsList = lazy(() =>\n  import(/* webpackChunkName: \"RecsList\" */ './SmartComponents/Recs/List')\n);\nconst RecsDetails = lazy(() =>\n  import(/* webpackChunkName: \"RecsDetails\" */ './SmartComponents/Recs/Details')\n);\nconst DetailsPathways = lazy(() =>\n  import(\n    /* webpackChunkName: \"Details-Pathways\" */ './SmartComponents/Recs/DetailsPathways'\n  )\n);\nconst InventoryDetails = lazy(() =>\n  import(\n    /* InventoryDetails: \"Details\" */ './PresentationalComponents/Inventory/InventoryDetails'\n  )\n);\nconst SystemsList = lazy(() =>\n  import(/* webpackChunkName: \"List\" */ './SmartComponents/Systems/List')\n);\nconst TopicsList = lazy(() =>\n  import(/* webpackChunkName: \"TopicsList\" */ './SmartComponents/Topics/List')\n);\nconst TopicDetails = lazy(() =>\n  import(\n    /* webpackChunkName: \"TopicDetails\" */ './SmartComponents/Topics/Details'\n  )\n);\nconst AdminProtectedRoute = lazy(() =>\n  import(\n    /* webpackChunkName: \"TopicAdmin\" */ './PresentationalComponents/TopicsAdminTable/TopicsAdminTable'\n  )\n);\n\nexport const AdvisorRoutes = () => {\n  return (\n    <ZeroStateWrapper>\n      <Routes>\n        <Route\n          key={'Recommendations'}\n          path=\"recommendations\"\n          element={<RecsList />}\n        ></Route>\n        <Route\n          key={'Recommendations Pathways'}\n          path=\"recommendations/pathways\"\n          element={<RecsList />}\n        ></Route>\n        <Route\n          key={'Pathway details'}\n          path=\"recommendations/pathways/:id\"\n          element={<DetailsPathways />}\n        ></Route>\n        <Route\n          key={'Pathway details'}\n          path=\"recommendations/pathways/systems/:id\"\n          element={<DetailsPathways />}\n        ></Route>\n        <Route\n          key={'Recommendation details'}\n          path=\"recommendations/:id\"\n          element={<RecsDetails />}\n        ></Route>\n        <Route\n          key={'Recommendation details'}\n          path=\"recommendations/:id/manage-edge-inventory\"\n          element={<RecsDetails isImmutableTabOpen />}\n        ></Route>\n        <Route\n          key={'Inventory details'}\n          path=\"recommendations/:id/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route\n          key={'Inventory details'}\n          path=\"recommendations/pathways/:id/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route\n          key={'Inventory details'}\n          path=\"recommendations/pathways/systems/:id/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route key={'Systems'} path=\"systems\" element={<SystemsList />}></Route>\n        <Route\n          key={'System detail'}\n          path=\"systems/:inventoryId/\"\n          element={<InventoryDetails />}\n        ></Route>\n        <Route key={'Topics'} path=\"topics\" element={<TopicsList />}></Route>\n        <Route\n          key={'Topic details'}\n          path=\"topics/:id\"\n          element={<TopicDetails />}\n        ></Route>\n        {/* this redirect will be replaced with the redirect to the overview page when it's ready */}\n        <Route\n          key={'Advisor'}\n          path=\"*\"\n          element={<Navigate replace to=\"recommendations\" />}\n        ></Route>\n        <Route\n          key={'TopicAdmin'}\n          path=\"/topics/admin/manage\"\n          element={<AdminProtectedRoute />}\n        ></Route>\n      </Routes>\n    </ZeroStateWrapper>\n  );\n};\n","import './App.scss';\n\nimport React, { useEffect } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { updateSID, updateTags, updateWorkloads } from './Services/Filters';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from './PresentationalComponents/MessageState/MessageState';\nimport { PERMS } from './AppConstants';\nimport { AdvisorRoutes } from './Routes';\nimport messages from './Messages';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst App = () => {\n  const intl = useIntl();\n  const permsViewRecs = usePermissions('advisor', PERMS.viewRecs);\n  const dispatch = useDispatch();\n  const chrome = useChrome();\n\n  useEffect(() => {\n    chrome.identifyApp('advisor');\n    chrome?.globalFilterScope?.('insights');\n    if (chrome?.globalFilterScope) {\n      chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n        const [workloads, SID, selectedTags] =\n          chrome?.mapGlobalFilter?.(data, false, true) || [];\n        batch(() => {\n          dispatch(updateWorkloads(workloads));\n          dispatch(updateTags(selectedTags));\n          dispatch(updateSID(SID));\n        });\n      });\n    }\n  }, []);\n\n  return (\n    !permsViewRecs?.isLoading &&\n    (permsViewRecs?.hasAccess ? (\n      <AdvisorRoutes />\n    ) : (\n      <MessageState\n        variant=\"large\"\n        icon={LockIcon}\n        title={intl.formatMessage(messages.permsTitle)}\n        text={intl.formatMessage(messages.permsBody)}\n      />\n    ))\n  );\n};\n\nexport default App;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Acks = createApi({\n  reducerPath: 'acks',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  endpoints: (build) => ({\n    getRecAcks: build.query({\n      query: (options) => ({ url: `/ack/${options.ruleId}/` }),\n    }),\n    getHostAcks: build.query({\n      query: (options) => ({ url: `/hostack/`, options }),\n      transformResponse: (response) => response.data,\n    }),\n    setAck: build.mutation({\n      query: (options) => ({\n        url: `${options.type === 'RULE' ? '/ack/' : '/hostack/'}`,\n        options: options.options,\n        method: 'post',\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecAcksQuery, useGetHostAcksQuery, useSetAckMutation } =\n  Acks;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filtersInitialState = {\n  recState: {\n    impacting: ['true'],\n    rule_status: 'enabled',\n    sort: '-total_risk',\n    limit: 20,\n    offset: 0,\n  },\n  pathState: {\n    sort: '-recommendation_level',\n    limit: 20,\n    offset: 0,\n  },\n  sysState: { sort: '-last_seen', limit: 20, offset: 0 },\n  selectedTags: [],\n  workloads: {},\n  SID: [],\n};\n\nconst filters = createSlice({\n  name: 'filters',\n  initialState: filtersInitialState,\n  reducers: {\n    updateRecFilters(state, action) {\n      state.recState = action.payload;\n    },\n    updateSysFilters(state, action) {\n      state.sysState = action.payload;\n    },\n    updatePathFilters(state, action) {\n      state.pathState = action.payload;\n    },\n    updateTags(state, action) {\n      state.selectedTags = action.payload;\n    },\n    updateWorkloads(state, action) {\n      state.workloads = action.payload;\n    },\n    updateSID(state, action) {\n      state.SID = action.payload;\n    },\n  },\n});\n\nexport const {\n  updateRecFilters,\n  updateSysFilters,\n  updatePathFilters,\n  updateTags,\n  updateWorkloads,\n  updateSID,\n} = filters.actions;\n\nexport default filters.reducer;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Pathways = createApi({\n  reducerPath: 'pathways',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  keepUnusedDataFor: 5,\n  endpoints: (build) => ({\n    getPathways: build.query({\n      query: (options) => ({ url: `/pathway/`, options }),\n    }),\n    getPathway: build.query({\n      query: (options) => ({ url: `/pathway/${options.slug}/`, options }),\n    }),\n    getPathwayRules: build.query({\n      query: (name) => ({ url: `/pathway/${name}/rules/` }),\n    }),\n    getPathwaySystems: build.query({\n      query: (name) => ({ url: `/pathway/${name}/systems/` }),\n    }),\n  }),\n});\n\nexport const {\n  useGetPathwaysQuery,\n  useGetPathwayQuery,\n  useGetPathwayRulesQuery,\n  useGetPathwaySystemsQuery,\n} = Pathways;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Recs = createApi({\n  reducerPath: 'recs',\n  baseQuery: AxiosBaseQuery({ baseUrl: BASE_URL }),\n  keepUnusedDataFor: 5,\n  endpoints: (build) => ({\n    getRecs: build.query({\n      query: (options) => ({ url: `/rule/`, options }),\n    }),\n    getRec: build.query({\n      query: (options) => ({\n        url: `/rule/${options.ruleId}/`,\n        options,\n      }),\n    }),\n    getRecSystems: build.query({\n      query: (options, search) => ({\n        url: `/rule/${encodeURI(options.ruleId)}/systems/`,\n        options,\n        search,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetRecsQuery, useGetRecQuery, useGetRecsystemsQuery } = Recs;\n","import { AxiosBaseQuery } from '../Utilities/Api';\nimport { BASE_URL } from '../AppConstants';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Topics = createApi({\n  reducerPath: 'topics',\n  baseQuery: AxiosBaseQuery({\n    baseUrl: `${BASE_URL}`,\n  }),\n  endpoints: (build) => ({\n    getTopics: build.query({\n      query: (options) => ({ url: `/topic/`, options }),\n      // transformResponse: (response) => response.data,\n    }),\n    getTopicsAdmin: build.query({\n      query: (options) => ({ url: `/topic?show_disabled=true`, options }),\n    }),\n    getTopic: build.query({\n      query: (options) => ({\n        url: `/topic/${options.topicId}/`,\n        options,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetTopicsQuery, useGetTopicQuery, useGetTopicsAdminQuery } =\n  Topics;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nexport function systemReducer() {\n  return applyReducerHash({\n    ['SELECT_ENTITIES']: (state, { payload: { selected } }) => ({\n      ...state,\n      rows: selectRows(state.rows, selected),\n    }),\n  });\n}\n\nexport function entitiesDetailsReducer(ActionTypes) {\n  return applyReducerHash(\n    {\n      [`${ActionTypes.LOAD_ENTITY}_FULFILLED`]: enableApplications,\n    },\n    {}\n  );\n}\n\nfunction enableApplications(state) {\n  return {\n    ...state,\n    loaded: true,\n  };\n}\n\nconst selectRows = (rows, selected = []) =>\n  (rows || []).map((row) => ({\n    ...row,\n    selected: selected.includes(row.id),\n  }));\n","import * as AppConst from '../AppConstants';\n\nimport { AxiosBaseQuery } from '../Utilities/Api';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nexport const Systems = createApi({\n  reducerPath: 'systems',\n  baseQuery: AxiosBaseQuery({ baseUrl: AppConst.BASE_URL }),\n  endpoints: (build) => ({\n    getSystems: build.query({\n      query: (options) => ({ url: `/system/`, options }),\n    }),\n    getSystem: build.query({\n      query: (ruleId, options, search) => ({\n        url: `/rule/${encodeURI(ruleId)}/systems/`,\n        options,\n        search,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetSystemsQuery,\n  useLazygetSystemsQuery,\n  useGetSystemQuery,\n  useLazygetSystemQuery,\n} = Systems;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { entitiesDetailsReducer, systemReducer } from './AppReducer';\n\nimport { Acks } from '../Services/Acks';\nimport { Pathways } from '../Services/Pathways';\nimport { Recs } from '../Services/Recs';\nimport { Systems } from '../Services/Systems';\nimport { Topics } from '../Services/Topics';\nimport filters from '../Services/Filters';\nimport logger from 'redux-logger';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nconst env = 'development';\nconst production = env !== 'production';\nconst reducer = {\n  [Pathways.reducerPath]: Pathways.reducer,\n  [Recs.reducerPath]: Recs.reducer,\n  [Topics.reducerPath]: Topics.reducer,\n  [Systems.reducerPath]: Systems.reducer,\n  [Acks.reducerPath]: Acks.reducer,\n  filters,\n  notifications: notificationsReducer,\n  systemReducer: systemReducer([], {}),\n  entitiesDetailsReducer: entitiesDetailsReducer({}),\n};\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        'LOAD_ENTITIES',\n        'LOAD_ENTITY',\n        'CLEAR_FILTERS',\n        'LOAD_ENTITY_FULFILLED',\n      ],\n    },\n    immutableCheck: {\n      ignoredPaths: ['entities'],\n    },\n  }).concat(\n    promiseMiddleware,\n    Pathways.middleware,\n    Recs.middleware,\n    Systems.middleware,\n    Topics.middleware,\n    Acks.middleware,\n    notificationsMiddleware({\n      errorTitleKey: ['message'],\n      errorDescriptionKey: ['response.data.detail'],\n    }),\n    production && logger\n  );\n\nconst getStore = () => {\n  return configureStore({\n    reducer,\n    middleware,\n    devTools: production,\n  });\n};\n\nconst updateReducers = (newReducers = {}) =>\n  combineReducers({\n    ...reducer,\n    ...newReducers,\n  });\n\nexport { getStore, updateReducers };\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport const useFeatureFlag = (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n  return flagsReady ? isFlagEnabled : false;\n};\n","import React, { Suspense, useState, useEffect, createContext } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux/actions/notifications';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport messages from './Messages';\nimport { useFeatureFlag } from './Utilities/Hooks';\n\nexport const AccountStatContext = createContext({\n  hasConventionalSystems: true,\n  hasEdgeDevices: false,\n});\n\nexport const ZeroStateWrapper = ({ children }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const isEdgeParityEnabled = useFeatureFlag('advisor.edge_parity');\n  const [hasConventionalSystems, setHasConventionalSystems] = useState(true);\n  const [hasEdgeDevices, setHasEdgeDevices] = useState(true);\n\n  useEffect(() => {\n    try {\n      axios\n        .get(\n          `/api/inventory/v1/hosts?page=1&per_page=1&filter[system_profile][host_type]=nil`\n        )\n        .then(({ data }) => {\n          setHasConventionalSystems(data.total > 0);\n        });\n      axios\n        .get(\n          `/api/inventory/v1/hosts?page=1&per_page=1&filter[system_profile][host_type]=edge`\n        )\n        .then(({ data }) => {\n          setHasEdgeDevices(data.total > 0);\n        });\n    } catch (e) {\n      dispatch(\n        addNotification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${e}`,\n        })\n      );\n    }\n  }, []);\n\n  const hasSystems = isEdgeParityEnabled\n    ? hasEdgeDevices || hasConventionalSystems\n    : hasConventionalSystems;\n\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      {!hasSystems ? (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          }\n        >\n          <AsynComponent\n            appId={'advisor_zero_state'}\n            appName=\"dashboard\"\n            module=\"./AppZeroState\"\n            scope=\"dashboard\"\n            ErrorComponent={<ErrorState />}\n            app=\"Advisor\"\n          />\n        </Suspense>\n      ) : (\n        <AccountStatContext.Provider\n          value={{ hasConventionalSystems, hasEdgeDevices }}\n        >\n          {children}\n        </AccountStatContext.Provider>\n      )}\n    </Suspense>\n  );\n};\n\nZeroStateWrapper.propTypes = {\n  children: PropTypes.element,\n  check: PropTypes.boolean,\n};\n"],"names":["RecsList","lazy","RecsDetails","DetailsPathways","InventoryDetails","SystemsList","TopicsList","TopicDetails","AdminProtectedRoute","AdvisorRoutes","React","ZeroStateWrapper","Routes","Route","key","path","element","isImmutableTabOpen","Navigate","replace","to","intl","useIntl","permsViewRecs","usePermissions","PERMS","dispatch","useDispatch","chrome","useChrome","useEffect","_chrome$globalFilterS","identifyApp","globalFilterScope","call","on","_ref","_chrome$mapGlobalFilt","data","_ref2","mapGlobalFilter","_ref3","_slicedToArray","workloads","SID","selectedTags","batch","updateWorkloads","updateTags","updateSID","isLoading","hasAccess","MessageState","variant","icon","LockIcon","title","formatMessage","messages","text","Acks","createApi","reducerPath","baseQuery","AxiosBaseQuery","baseUrl","BASE_URL","endpoints","build","getRecAcks","query","options","url","concat","ruleId","getHostAcks","transformResponse","response","setAck","mutation","type","method","useGetRecAcksQuery","useGetHostAcksQuery","useSetAckMutation","filters","createSlice","name","initialState","recState","impacting","rule_status","sort","limit","offset","pathState","sysState","reducers","updateRecFilters","state","action","payload","updateSysFilters","updatePathFilters","_filters$actions","actions","Pathways","keepUnusedDataFor","getPathways","getPathway","slug","getPathwayRules","getPathwaySystems","useGetPathwaysQuery","useGetPathwayQuery","useGetPathwayRulesQuery","useGetPathwaySystemsQuery","Recs","getRecs","getRec","getRecSystems","search","encodeURI","useGetRecsQuery","useGetRecQuery","useGetRecsystemsQuery","Topics","getTopics","getTopicsAdmin","getTopic","topicId","useGetTopicsQuery","useGetTopicQuery","useGetTopicsAdminQuery","systemReducer","applyReducerHash","_defineProperty","selected","_objectSpread","rows","selectRows","entitiesDetailsReducer","ActionTypes","LOAD_ENTITY","enableApplications","loaded","arguments","length","undefined","map","row","includes","id","Systems","AppConst","getSystems","getSystem","useGetSystemsQuery","useLazygetSystemsQuery","useGetSystemQuery","useLazygetSystemQuery","reducer","_reducer","notificationsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","ignoredPaths","promiseMiddleware","notificationsMiddleware","errorTitleKey","errorDescriptionKey","logger","getStore","configureStore","devTools","env","updateReducers","newReducers","combineReducers","useFeatureFlag","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","AccountStatContext","createContext","hasConventionalSystems","hasEdgeDevices","children","isEdgeParityEnabled","_useState","useState","_useState2","setHasConventionalSystems","_useState3","_useState4","setHasEdgeDevices","axios","then","total","e","addNotification","dismissable","description","hasSystems","Suspense","fallback","Bullseye","Spinner","size","Provider","value","AsynComponent","appId","appName","module","scope","ErrorComponent","ErrorState","app","propTypes","PropTypes","check"],"sourceRoot":""}