{"version":3,"file":"js/2788.482b0fcab4f1d5fb0377.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/RulesTable/Components/EmptyState.js","webpack:///./src/PresentationalComponents/RulesTable/helpers.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { DeleteApi } from '../../Utilities/Api';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/esm/components/Modal/Modal';\nimport OutlinedBellIcon from '@patternfly/react-icons/dist/esm/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport messages from '../../Messages';\nimport { addNotification as notification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useDispatch } from 'react-redux';\nimport { useGetHostAcksQuery } from '../../Services/Acks';\nimport { useIntl } from 'react-intl';\n\nconst ViewHostAcks = ({ handleModalToggle, isModalOpen, rule, afterFn }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const addNotification = (data) => dispatch(notification(data));\n  const columns = [\n    intl.formatMessage(messages.systemName),\n    intl.formatMessage(messages.justificationNote),\n    intl.formatMessage(messages.dateDisabled),\n    '',\n  ];\n  const [rows, setRows] = useState([]);\n  const [unclean, setUnclean] = useState(false);\n  const {\n    data: hostAcks = [],\n    isFetching,\n    isLoading,\n    refetch,\n  } = useGetHostAcksQuery({\n    rule_id: rule.rule_id,\n    limit: rule.hosts_acked_count,\n  });\n  const deleteAck = async (host) => {\n    try {\n      await DeleteApi(`${BASE_URL}/hostack/${host.id}/`);\n      refetch();\n      setUnclean(true);\n    } catch (error) {\n      handleModalToggle(false);\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    const rows = hostAcks?.map((item) => ({\n      cells: [\n        item.display_name || item.system_uuid,\n        item.justification || intl.formatMessage(messages.none),\n        {\n          title: (\n            <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" />\n          ),\n        },\n        {\n          title: (\n            <Button\n              key={item.system_uuid}\n              isInline\n              variant=\"link\"\n              onClick={() => deleteAck(item)}\n            >\n              <OutlinedBellIcon size=\"sm\" />\n              {` ${intl.formatMessage(messages.enable)}`}\n            </Button>\n          ),\n        },\n      ],\n    }));\n\n    if (!isLoading && hostAcks.length === 0) {\n      afterFn();\n      handleModalToggle(false);\n    }\n\n    setRows(rows);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hostAcks]);\n\n  return (\n    <Modal\n      width={'75%'}\n      title={intl.formatMessage(messages.hostAckModalTitle)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        unclean && afterFn();\n        handleModalToggle(false);\n      }}\n    >\n      {!isFetching ? (\n        <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n          <TableHeader />\n          <TableBody />\n        </Table>\n      ) : (\n        <Table\n          aria-label=\"host-ack-table\"\n          rows={[\n            {\n              cells: [{ props: { colSpan: 3 }, title: <List /> }],\n            },\n          ]}\n          cells={columns}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n    </Modal>\n  );\n};\n\nViewHostAcks.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n};\n\nViewHostAcks.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  rule: {},\n  afterFn: () => undefined,\n};\n\nexport default ViewHostAcks;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\nimport MessageState from '../../MessageState/MessageState';\nimport { messageMapping } from '../helpers';\n\nconst EmptyState = ({ filters, toggleRulesDisabled }) => {\n  const message =\n    messageMapping()[filters.rule_status] || messageMapping().default;\n\n  return (\n    <MessageState\n      icon={CheckCircleIcon}\n      iconClass=\"ansibleCheck\"\n      title={message.title}\n      text={message.body}\n    >\n      {filters.rule_status === 'enabled' && (\n        <Button\n          variant=\"link\"\n          style={{ paddingTop: 24 }}\n          onClick={() => toggleRulesDisabled('all')}\n        >\n          <FormattedMessage id=\"rulestable.norulehits.adddisabledbutton\" />\n        </Button>\n      )}\n    </MessageState>\n  );\n};\n\nEmptyState.propTypes = {\n  filters: propTypes.object,\n  toggleRulesDisabled: propTypes.func,\n};\n\nexport default EmptyState;\n","import React from 'react';\nimport EmptyState from './Components/EmptyState';\nimport { FormattedMessage } from 'react-intl';\nimport { paramParser } from '../Common/Tables';\nimport { DeleteApi } from '../../Utilities/Api';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport * as AppConstants from '../../AppConstants';\nimport messages from '../../Messages';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link } from 'react-router-dom';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/esm/layouts/Stack/index';\nimport { Text } from '@patternfly/react-core';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/esm/icons/ansibeTower-icon';\nimport BellSlashIcon from '@patternfly/react-icons/dist/esm/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RuleDetails,\n  RuleDetailsMessagesKeys,\n  AdvisorProduct,\n} from '@redhat-cloud-services/frontend-components-advisor-components';\nimport RuleLabels from '../Labels/RuleLabels';\nimport CategoryLabel from '../Labels/CategoryLabel';\n\nimport {\n  formatMessages,\n  mapContentToValues,\n  strong,\n} from '../../Utilities/intlHelper';\nimport { ruleResolutionRisk } from '../Common/Tables';\n\nexport const emptyRows = (filters, toggleRulesDisabled) => [\n  {\n    cells: [\n      {\n        title: <EmptyState {...{ filters, toggleRulesDisabled }} />,\n        props: { colSpan: 6 },\n      },\n    ],\n  },\n];\n\nexport const messageMapping = () => {\n  const title = <FormattedMessage id=\"rulestable.norulehits.title\" />;\n\n  return {\n    enabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norulehits.enabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    disabled: {\n      title,\n      body: (\n        <>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbody\" />\n          </Text>\n          <Text>\n            <FormattedMessage id=\"rulestable.norules.disabledrulesbodysecondline\" />\n          </Text>\n        </>\n      ),\n    },\n    rhdisabled: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"rulestable.norules.redhatdisabledrulesbody\" />\n        </Text>\n      ),\n    },\n    default: {\n      title,\n      body: (\n        <Text>\n          <FormattedMessage id=\"noRecommendations\" />\n        </Text>\n      ),\n    },\n  };\n};\n\nexport const urlFilterBuilder = (\n  sortIndices,\n  setSearchText,\n  setFilters,\n  filters\n) => {\n  let sortingValues = Object.values(sortIndices);\n  const paramsObject = paramParser();\n  delete paramsObject.tags;\n\n  if (Array.isArray(paramsObject.sort)) {\n    if (\n      !sortingValues?.includes(paramsObject.sort[0]) ||\n      !sortingValues?.includes(`-${paramsObject.sort[0]}`)\n    ) {\n      paramsObject.sort = '-total_risk';\n    }\n  } else if (!sortingValues?.includes(paramsObject.sort)) {\n    paramsObject.sort = '-total_risk';\n  }\n  paramsObject.text === undefined\n    ? setSearchText('')\n    : setSearchText(paramsObject.text);\n  paramsObject.has_playbook !== undefined &&\n    !Array.isArray(paramsObject.has_playbook) &&\n    (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n  paramsObject.incident !== undefined &&\n    !Array.isArray(paramsObject.incident) &&\n    (paramsObject.incident = [`${paramsObject.incident}`]);\n  paramsObject.offset === undefined\n    ? (paramsObject.offset = 0)\n    : (paramsObject.offset = Number(paramsObject.offset[0]));\n  paramsObject.limit === undefined\n    ? (paramsObject.limit = 20)\n    : (paramsObject.limit = Number(paramsObject.limit[0]));\n  paramsObject.reboot !== undefined &&\n    !Array.isArray(paramsObject.reboot) &&\n    (paramsObject.reboot = [`${paramsObject.reboot}`]);\n  paramsObject.impacting !== undefined &&\n    !Array.isArray(paramsObject.impacting) &&\n    (paramsObject.impacting = [`${paramsObject.impacting}`]);\n  setFilters({ ...filters, ...paramsObject });\n};\n\nexport const hideReports = async (\n  rowId,\n  rows,\n  setSelectedRule,\n  setDisableRuleOpen,\n  refetch,\n  dispatch,\n  intl\n) => {\n  const rule = rows[rowId].rule;\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n\n  try {\n    if (rule.rule_status === 'enabled') {\n      setSelectedRule(rule);\n      setDisableRuleOpen(true);\n    } else {\n      try {\n        await DeleteApi(`${AppConstants.BASE_URL}/ack/${rule.rule_id}/`);\n        addNotification({\n          variant: 'success',\n          timeout: true,\n          dismissable: true,\n          title: intl.formatMessage(messages.recSuccessfullyEnabled),\n        });\n        refetch();\n      } catch (error) {\n        addNotification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${error}`,\n        });\n      }\n    }\n  } catch (error) {\n    addNotification({\n      variant: 'danger',\n      dismissable: true,\n      title:\n        rule.rule_status === 'enabled'\n          ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n          : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n      description: `${error}`,\n    });\n  }\n};\nexport const removeFilterParam = (\n  param,\n  filters,\n  setFilters,\n  setSearchText\n) => {\n  const filter = { ...filters, offset: 0 };\n  param === 'text' && setSearchText('');\n  delete filter[param];\n  setFilters(filter);\n};\n\nexport const filterConfigItems = (\n  filters,\n  setFilters,\n  searchText,\n  setSearchText,\n  toggleRulesDisabled,\n  intl\n) => {\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  return [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (_event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n};\n\nexport const buildRows = (\n  rules,\n  isAllExpanded,\n  setViewSystemsModalRule,\n  setViewSystemsModalOpen,\n  intl\n) => {\n  const rows = rules.data.flatMap((value, key) => [\n    {\n      isOpen: isAllExpanded,\n      rule: value,\n      cells: [\n        {\n          title: (\n            <span key={key}>\n              <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                {' '}\n                {value.description}{' '}\n              </Link>\n              <RuleLabels rule={value} isCompact />\n            </span>\n          ),\n        },\n        {\n          title: (\n            <DateFormat\n              key={key}\n              date={value.publish_date}\n              variant=\"relative\"\n            />\n          ),\n        },\n        {\n          title: (\n            <CategoryLabel key={key} labelList={[value.category]} isCompact />\n          ),\n        },\n        {\n          title: (\n            <div key={key}>\n              <Tooltip\n                key={key}\n                position={TooltipPosition.bottom}\n                content={intl.formatMessage(\n                  messages.rulesDetailsTotalRiskBody,\n                  {\n                    risk:\n                      AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] ||\n                      intl.formatMessage(messages.undefined),\n                    strong: (str) => strong(str),\n                  }\n                )}\n              >\n                <InsightsLabel value={value.total_risk} isCompact />\n              </Tooltip>\n            </div>\n          ),\n        },\n        {\n          title:\n            value.rule_status === 'rhdisabled' ? (\n              <Tooltip\n                content={intl.formatMessage(messages.byEnabling, {\n                  systems: value.impacted_systems_count,\n                })}\n              >\n                <span>{intl.formatMessage(messages.nA)}</span>\n              </Tooltip>\n            ) : (\n              <div\n                key={key}\n              >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n            ),\n        },\n        {\n          title: (\n            <div className=\"ins-c-center-text \" key={key}>\n              {value.playbook_count ? (\n                <span>\n                  <AnsibeTowerIcon size=\"sm\" />{' '}\n                  {intl.formatMessage(messages.playbook)}\n                </span>\n              ) : (\n                intl.formatMessage(messages.manual)\n              )}\n            </div>\n          ),\n        },\n      ],\n    },\n    {\n      parent: key * 2,\n      fullWidth: true,\n      cells: [\n        {\n          title: (\n            <section className=\"pf-c-page__main-section pf-m-light\">\n              <Stack hasGutter>\n                {value.hosts_acked_count ? (\n                  <StackItem>\n                    <BellSlashIcon size=\"sm\" />\n                    &nbsp;\n                    {value.hosts_acked_count && !value.impacted_systems_count\n                      ? intl.formatMessage(messages.ruleIsDisabledForAllSystems)\n                      : intl.formatMessage(\n                          messages.ruleIsDisabledForSystemsBody,\n                          { systems: value.hosts_acked_count }\n                        )}\n                    &nbsp;{' '}\n                    <Button\n                      isInline\n                      variant=\"link\"\n                      ouiaId=\"viewSystem\"\n                      onClick={() => {\n                        setViewSystemsModalRule(value);\n                        setViewSystemsModalOpen(true);\n                      }}\n                    >\n                      {intl.formatMessage(messages.viewSystems)}\n                    </Button>\n                  </StackItem>\n                ) : (\n                  <React.Fragment></React.Fragment>\n                )}\n                <RuleDetails\n                  messages={formatMessages(\n                    intl,\n                    RuleDetailsMessagesKeys,\n                    mapContentToValues(intl, value)\n                  )}\n                  product={AdvisorProduct.rhel}\n                  rule={value}\n                  resolutionRisk={ruleResolutionRisk(value)}\n                  resolutionRiskDesc={\n                    AppConstants.RISK_OF_CHANGE_DESC[ruleResolutionRisk(value)]\n                  }\n                  isDetailsPage={false}\n                  showViewAffected\n                  linkComponent={Link}\n                  knowledgebaseUrl={\n                    value.node_id\n                      ? `https://access.redhat.com/node/${value.node_id}`\n                      : ''\n                  }\n                />\n              </Stack>\n            </section>\n          ),\n        },\n      ],\n    },\n  ]);\n\n  return rows;\n};\n","import './_RulesTable.scss';\nimport * as AppConstants from '../../AppConstants';\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/esm/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\n\nimport {\n  filterFetchBuilder,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport DisableRule from '../Modals/DisableRule';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\n\nimport { updateRecFilters } from '../../Services/Filters';\nimport { useGetRecsQuery } from '../../Services/Recs';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport PropTypes from 'prop-types';\n\nimport {\n  buildRows,\n  emptyRows,\n  filterConfigItems,\n  hideReports,\n  removeFilterParam,\n  urlFilterBuilder,\n} from './helpers';\n\nconst RulesTable = ({ isTabActive }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.modified),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, fitContent],\n    },\n    {\n      title: intl.formatMessage(messages.remediation),\n      transforms: [sortable, fitContent],\n    },\n  ]);\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.recState);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const setFilters = (filters) => dispatch(updateRecFilters(filters));\n\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n\n  const {\n    data: rules = [],\n    isFetching,\n    isLoading,\n    isError,\n    refetch,\n  } = useGetRecsQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'impacted_count',\n    6: 'playbook_count',\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (_event, rowId) =>\n              hideReports(\n                rowId,\n                rows,\n                setSelectedRule,\n                setDisableRuleOpen,\n                refetch,\n                dispatch,\n                intl\n              ),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (_event, rowId) =>\n              hideReports(\n                rowId,\n                rows,\n                setSelectedRule,\n                setDisableRuleOpen,\n                refetch,\n                dispatch,\n                intl\n              ),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (isTabActive && search && filterBuilding) {\n      urlFilterBuilder(sortIndices, setSearchText, setFilters, filters);\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sortIndex = Object.entries(sortIndices)?.find(\n      (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n    );\n    if (filters.sort !== undefined && sortIndex) {\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: Number(sortIndex[0]), direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows(emptyRows(filters, toggleRulesDisabled));\n      } else {\n        const rows = buildRows(\n          rules,\n          isAllExpanded,\n          setViewSystemsModalRule,\n          setViewSystemsModalOpen,\n          intl\n        );\n        setRows(rows);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rules]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    showDeleteButton: true,\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n          pathway: filters.pathway,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(\n                item.urlParam,\n                filters,\n                setFilters,\n                setSearchText\n              );\n        });\n      }\n    },\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={refetch}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={refetch}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID,\n              dispatch\n            ),\n          isDisabled: !permsExport,\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{\n          items: filterConfigItems(\n            filters,\n            setFilters,\n            searchText,\n            setSearchText,\n            toggleRulesDisabled,\n            intl\n          ),\n        }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Table>\n          <ErrorState />\n        </Table>\n      ) : (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody className=\"pf-m-width-100\" />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nRulesTable.propTypes = {\n  isTabActive: PropTypes.bool,\n};\n\nexport default RulesTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["ViewHostAcks","handleModalToggle","isModalOpen","rule","afterFn","intl","useIntl","dispatch","useDispatch","columns","formatMessage","messages","useState","rows","setRows","unclean","setUnclean","useGetHostAcksQuery","rule_id","limit","hosts_acked_count","data","hostAcks","isFetching","isLoading","refetch","deleteAck","host","DeleteApi","BASE_URL","id","variant","dismissable","title","description","notification","useEffect","map","item","cells","display_name","system_uuid","justification","date","Date","updated_at","type","key","isInline","onClick","size","length","width","isOpen","onClose","props","colSpan","propTypes","PropTypes","defaultProps","EmptyState","filters","toggleRulesDisabled","message","messageMapping","rule_status","MessageState","icon","CheckCircleIcon","iconClass","text","body","Button","style","paddingTop","enabled","Text","disabled","rhdisabled","default","hideReports","rowId","setSelectedRule","setDisableRuleOpen","addNotification","addNotificationAction","AppConstants","timeout","removeFilterParam","param","setFilters","setSearchText","filter","offset","filterConfigItems","searchText","addFilterParam","values","label","toLowerCase","filterValues","onChange","_event","value","placeholder","FC","total_risk","items","res_risk","impact","likelihood","category","incident","has_playbook","reboot","e","impacting","RulesTable","isTabActive","search","useLocation","permsExport","usePermissions","hasAccess","permsDisableRec","transforms","sortable","cellWidth","fitContent","cols","selectedTags","useSelector","workloads","SID","recState","sortBy","setSortBy","filterBuilding","setFilterBuilding","disableRuleOpen","selectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","updateRecFilters","options","tags","join","workloadQueryBuilder","useGetRecsQuery","filterFetchBuilder","rules","isError","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","urlBuilder","onSetPage","pageNumber","newOffset","sortingValues","Object","paramsObject","paramParser","Array","isArray","sort","includes","undefined","Number","urlFilterBuilder","sortIndex","entries","find","sortDirection","index","direction","emptyRows","flatMap","Link","to","RuleLabels","isCompact","DateFormat","publish_date","CategoryLabel","labelList","Tooltip","position","TooltipPosition","content","risk","strong","str","InsightsLabel","systems","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Stack","hasGutter","StackItem","ouiaId","formatMessages","RuleDetailsMessagesKeys","mapContentToValues","product","AdvisorProduct","resolutionRisk","ruleResolutionRisk","resolutionRiskDesc","isDetailsPage","showViewAffected","linkComponent","knowledgebaseUrl","node_id","buildRows","localFilters","activeFiltersConfig","deleteTitle","topic","pruneFilters","showDeleteButton","onDelete","itemsToRemove","isAll","pathway","newFilter","urlParam","String","chips","toggleModal","DisableRule","PrimaryToolbar","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","fileType","downloadReport","filterConfig","Loading","Table","ErrorState","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","orderParam","areActionsDisabled","isStickyHeader","Pagination","widgetId","PaginationVariant","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}