{"version":3,"file":"js/PathwaysTable.1685715632019.f7d207e3723930eb64b7.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/search-icon.js","webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js","webpack:///./src/PresentationalComponents/PathwaysTable/PathwaysTable.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SearchIcon = createIcon(SearchIconConfig);\n\nexport default SearchIcon;","import { Label } from '@patternfly/react-core/dist/esm/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nexport const RecommendationLevel = ({ recLvl, isCompact }) => {\n  const intl = useIntl();\n  const label = (text, recLvl, color) => (\n    <Label color={color} isCompact>{`${text} - ${recLvl}%`}</Label>\n  );\n\n  if (recLvl >= 80) {\n    return label(intl.formatMessage(messages.high), recLvl, 'red', isCompact);\n  } else if (recLvl < 80 && recLvl >= 50) {\n    return label(\n      intl.formatMessage(messages.medium),\n      recLvl,\n      'orange',\n      isCompact\n    );\n  } else {\n    return label(intl.formatMessage(messages.low), recLvl, 'blue', isCompact);\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\nRecommendationLevel.defaultProps = {\n  isCompact: true,\n};\n\nexport default RecommendationLevel;\n","import {\n  DEBOUNCE_DELAY,\n  FILTER_CATEGORIES as FC,\n  PATHWAYS_FILTER_CATEGORIES as PFC,\n} from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/esm/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  info,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport Loading from '../Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport RuleLabels from '../Labels/RuleLabels';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport debounce from '../../Utilities/Debounce';\nimport messages from '../../Messages';\nimport { updatePathFilters } from '../../Services/Filters';\nimport { useGetPathwaysQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst PathwaysTable = ({ isTabActive }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.pathState);\n  const setFilters = (filters) => dispatch(updatePathFilters(filters));\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const {\n    data: pathways = [],\n    isFetching,\n    isLoading,\n    isError,\n  } = useGetPathwaysQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const cols = [\n    {\n      title: intl.formatMessage(messages.pathwaysName),\n      transforms: [sortable, cellWidth(45)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      // transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reboot),\n      // transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reclvl),\n      transforms: [\n        sortable,\n        cellWidth(20),\n        fitContent,\n        info({\n          tooltip: intl.formatMessage(messages.reclvldetails),\n          tooltipProps: {\n            isContentLeftAligned: true,\n          },\n        }),\n      ],\n    },\n  ];\n  const sortIndices = {\n    0: 'name',\n    // 1: 'category',\n    2: 'impacted_systems_count',\n    // 3: 'reboot_required',\n    4: 'recommendation_level',\n  };\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, { ...FC, ...PFC });\n  };\n\n  const rowBuilder = (pathways) =>\n    pathways.length === 0\n      ? [\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={SearchIcon}\n                    title={intl.formatMessage(messages.noResults)}\n                    text={intl.formatMessage(messages.adjustFilters)}\n                  />\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]\n      : pathways.flatMap((pathway, key) => [\n          {\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link\n                      key={key}\n                      to={`/recommendations/pathways/${pathway.slug}`}\n                    >\n                      {' '}\n                      {pathway.name}{' '}\n                    </Link>\n                    {pathway.has_incident && (\n                      <RuleLabels rule={{ tags: 'incident' }} isCompact />\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <CategoryLabel\n                    key={key}\n                    labelList={pathway.categories}\n                    isCompact\n                  />\n                ),\n              },\n              {\n                title: (\n                  <div\n                    key={key}\n                  >{`${pathway.impacted_systems_count.toLocaleString()}`}</div>\n                ),\n              },\n              {\n                title: (\n                  <span key={key}>\n                    {intl.formatMessage(\n                      pathway.reboot_required\n                        ? messages.required\n                        : messages.notRequired\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <RecommendationLevel\n                    key={key}\n                    recLvl={pathway.recommendation_level}\n                  />\n                ),\n              },\n            ],\n          },\n        ]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: PFC.has_incident.title,\n      type: PFC.has_incident.type,\n      id: PFC.has_incident.urlParam,\n      value: `checkbox-${PFC.has_incident.urlParam}`,\n      filterValues: {\n        key: `${PFC.has_incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.has_incident.urlParam, values),\n        value: filters.has_incident,\n        items: PFC.has_incident.values,\n      },\n    },\n    {\n      label: PFC.reboot_required.title,\n      type: PFC.reboot_required.type,\n      id: PFC.reboot_required.urlParam,\n      value: `checkbox-${PFC.reboot_required.urlParam}`,\n      filterValues: {\n        key: `${PFC.reboot_required.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.reboot_required.urlParam, values),\n        value: filters.reboot_required,\n        items: PFC.reboot_required.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  useEffect(() => {\n    if (isTabActive && search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ||\n        !Object.values(sortIndices).includes(paramsObject?.sort[0])\n          ? '-impacted_systems_count'\n          : paramsObject.sort[0];\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot_required !== undefined &&\n        !Array.isArray(paramsObject.reboot_required) &&\n        (paramsObject.reboot_required = [`${paramsObject.reboot_required}`]);\n\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (filters.sort !== undefined && sortIndices) {\n      let sortInput = filters.sort;\n      const sortIndex = Number(\n        Object.entries(sortIndices).find(\n          (item) => item[1] === sortInput || `-${item[1]}` === sortInput\n        )[0]\n      );\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: sortIndex, direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar\n        pagination={{\n          itemCount: pathways?.meta?.count || 0,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Table>\n          <ErrorState />\n        </Table>\n      ) : (\n        <Table\n          aria-label={'pathways-table'}\n          variant={TableVariant.compact}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rowBuilder(pathways?.data)}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={pathways?.meta?.count || 0}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nPathwaysTable.propTypes = {\n  isTabActive: PropTypes.bool,\n};\n\nexport default PathwaysTable;\n"],"names":["SearchIconConfig","name","height","width","svgPath","yOffset","xOffset","SearchIcon","RecommendationLevel","recLvl","intl","isCompact","useIntl","label","text","color","formatMessage","messages","propTypes","props","PropTypes","defaultProps","PathwaysTable","isTabActive","dispatch","useDispatch","search","useLocation","selectedTags","useSelector","filters","workloads","SID","pathState","setFilters","updatePathFilters","options","length","tags","join","workloadQueryBuilder","localFilters","useGetPathwaysQuery","filterFetchBuilder","data","pathways","isFetching","isLoading","isError","cols","title","transforms","sortable","cellWidth","fitContent","info","tooltip","tooltipProps","isContentLeftAligned","sortIndices","useState","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","debouncedSearchText","debounce","DEBOUNCE_DELAY","onSetPage","pageNumber","newOffset","limit","offset","removeFilterParam","param","filter","addFilterParam","values","filterConfigItems","toLowerCase","filterValues","key","onChange","_event","value","placeholder","FC","type","id","category","items","PFC","has_incident","reboot_required","activeFiltersConfig","deleteTitle","sort","pruneFilters","onDelete","itemsToRemove","isAll","map","item","newFilter","urlParam","Array","isArray","String","chips","useEffect","urlBuilder","paramsObject","paramParser","undefined","Object","includes","Number","sortInput","sortIndex","entries","find","sortDirection","index","direction","pagination","itemCount","meta","count","page","perPage","onPerPageSelect","filterConfig","variant","TableVariant","onSort","orderParam","cells","rows","icon","colSpan","flatMap","pathway","Link","to","slug","rule","labelList","categories","impacted_systems_count","toLocaleString","recommendation_level","rowBuilder","isStickyHeader","ouiaId","_e","widgetId","PaginationVariant"],"sourceRoot":""}