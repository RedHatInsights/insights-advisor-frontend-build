{"version":3,"file":"js/2119.e353df366efce965a852.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/LabelGroup/label-group.mjs"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": `${id} ${contentId}`, \"aria-expanded\": isExpanded }, props), isExpanded ? React.createElement(AngleDownIcon, { \"aria-hidden\": \"true\" }) : React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e.target.innerText, e), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", null, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverPosition } from '../Popover';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nexport class ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                this.updateText(this.props.children);\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.expandContent = (_event) => {\n            this.setState(prevState => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (text) => {\n            this.setState({ text });\n            this.props.onChange(text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            switchDelay, \n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe, removeFindDomNode } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"switchDelay\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\", \"removeFindDomNode\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, id => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, id => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: this.expandContent, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, { isReadOnly: isReadOnly || this.state.expanded, onChange: this.updateText, value: this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }), removeFindDomNode: removeFindDomNode }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateText }, this.state.text))))))));\n        };\n        this.state = {\n            text: Array.isArray(this.props.children)\n                ? this.props.children.join('')\n                : this.props.children,\n            expanded: this.props.isExpanded,\n            copied: false\n        };\n        if (this.props.switchDelay !== undefined) {\n            // eslint-disable-next-line no-console\n            console.warn('ClipboardCopy: switchDelay prop has been deprecated. ' +\n                'The tooltip message will switch back to the hover tip as soon as the tooltip is hidden.');\n        }\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: PopoverPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true,\n    removeFindDomNode: false\n};\n//# sourceMappingURL=ClipboardCopy.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nexport const ClipboardCopyButton = (_a) => {\n    var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children, variant = 'control', onTooltipHidden = () => { }, removeFindDomNode = false } = _a, props = __rest(_a, [\"onClick\", \"exitDelay\", \"entryDelay\", \"maxWidth\", \"position\", 'aria-label', \"id\", \"textId\", \"children\", \"variant\", \"onTooltipHidden\", \"removeFindDomNode\"]);\n    return (React.createElement(Tooltip, { trigger: \"mouseenter focus click\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, \"aria-live\": \"polite\", aria: \"none\", content: React.createElement(\"div\", null, children), onTooltipHidden: onTooltipHidden, removeFindDomNode: removeFindDomNode },\n        React.createElement(Button, Object.assign({ type: \"button\", variant: variant, onClick: onClick, \"aria-label\": ariaLabel, id: id, \"aria-labelledby\": `${id} ${textId}` }, props),\n            React.createElement(CopyIcon, null))));\n};\nClipboardCopyButton.displayName = 'ClipboardCopyButton';\n//# sourceMappingURL=ClipboardCopyButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nconst colorStyles = {\n    blue: styles.modifiers.blue,\n    cyan: styles.modifiers.cyan,\n    green: styles.modifiers.green,\n    orange: styles.modifiers.orange,\n    purple: styles.modifiers.purple,\n    red: styles.modifiers.red,\n    gold: styles.modifiers.gold,\n    grey: ''\n};\nexport const Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', isCompact = false, isEditable = false, editableProps, isTruncated = false, tooltipPosition, icon, onClose, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isEditable\", \"editableProps\", \"isTruncated\", \"tooltipPosition\", \"icon\", \"onClose\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n    const [isEditableActive, setIsEditableActive] = useState(false);\n    const [currValue, setCurrValue] = useState(children);\n    const editableButtonRef = React.useRef();\n    const editableInputRef = React.useRef();\n    React.useEffect(() => {\n        document.addEventListener('mousedown', onDocMouseDown);\n        document.addEventListener('keydown', onKeyDown);\n        return () => {\n            document.removeEventListener('mousedown', onDocMouseDown);\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    });\n    const onDocMouseDown = (event) => {\n        if (isEditableActive &&\n            editableInputRef &&\n            editableInputRef.current &&\n            !editableInputRef.current.contains(event.target)) {\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n        }\n    };\n    const onKeyDown = (event) => {\n        var _a, _b;\n        const key = event.key;\n        if ((!isEditableActive &&\n            (!editableButtonRef ||\n                !editableButtonRef.current ||\n                !editableButtonRef.current.contains(event.target))) ||\n            (isEditableActive &&\n                (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target)))) {\n            return;\n        }\n        if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n            (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        if (isEditableActive && key === 'Escape') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            // Reset div text to initial children prop - pre-edit\n            if (editableInputRef.current.value) {\n                editableInputRef.current.value = children;\n                onEditCancel && onEditCancel(event, children);\n            }\n            setIsEditableActive(false);\n            (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        if (!isEditableActive && key === 'Enter') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            setIsEditableActive(true);\n            // Set cursor position to end of text\n            const el = event.target;\n            const range = document.createRange();\n            const sel = window.getSelection();\n            range.selectNodeContents(el);\n            range.collapse(false);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    };\n    const LabelComponent = (isOverflowLabel ? 'button' : 'span');\n    const button = closeBtn ? (closeBtn) : (React.createElement(Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose, \"aria-label\": closeBtnAriaLabel || `Close ${children}` }, closeBtnProps),\n        React.createElement(TimesIcon, null)));\n    const textRef = React.createRef();\n    // ref to apply tooltip when rendered is used\n    const componentRef = React.useRef();\n    const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n    useIsomorphicLayoutEffect(() => {\n        const currTextRef = isEditable ? editableButtonRef : textRef;\n        if (!isEditableActive) {\n            setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n        }\n    }, [isEditableActive]);\n    const content = (React.createElement(React.Fragment, null,\n        icon && React.createElement(\"span\", { className: css(styles.labelIcon) }, icon),\n        isTruncated && (React.createElement(\"span\", { ref: textRef, className: css(styles.labelText) }, children)),\n        !isTruncated && children));\n    React.useEffect(() => {\n        if (isEditableActive && editableInputRef) {\n            editableInputRef.current && editableInputRef.current.focus();\n        }\n    }, [editableInputRef, isEditableActive]);\n    const updateVal = () => {\n        setCurrValue(editableInputRef.current.value);\n    };\n    let labelComponentChild = React.createElement(\"span\", { className: css(styles.labelContent) }, content);\n    if (href) {\n        labelComponentChild = (React.createElement(\"a\", { className: css(styles.labelContent), href: href }, content));\n    }\n    else if (isEditable) {\n        labelComponentChild = (React.createElement(\"button\", Object.assign({ ref: editableButtonRef, className: css(styles.labelContent), onClick: (e) => {\n                setIsEditableActive(true);\n                e.stopPropagation();\n            } }, editableProps), content));\n    }\n    if (render) {\n        labelComponentChild = (React.createElement(React.Fragment, null,\n            isTooltipVisible && React.createElement(Tooltip, { reference: componentRef, content: children, position: tooltipPosition }),\n            render({\n                className: styles.labelContent,\n                content,\n                componentRef\n            })));\n    }\n    else if (isTooltipVisible) {\n        labelComponentChild = (React.createElement(Tooltip, { content: children, position: tooltipPosition }, labelComponentChild));\n    }\n    return (React.createElement(LabelComponent, Object.assign({}, props, { className: css(styles.label, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className) }),\n        !isEditableActive && labelComponentChild,\n        !isEditableActive && onClose && button,\n        isEditableActive && (React.createElement(\"input\", Object.assign({ className: css(styles.labelContent), type: \"text\", id: \"editable-input\", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps)))));\n};\nLabel.displayName = 'Label';\n//# sourceMappingURL=Label.js.map","import { createIcon } from '../createIcon';\n\nexport const CopyIconConfig = {\n  name: 'CopyIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CopyIcon = createIcon(CopyIconConfig);\n\nexport default CopyIcon;","import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"clipboardCopy\": \"pf-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-c-clipboard-copy__toggle-icon\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './label.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"label\": \"pf-c-label\",\n  \"labelContent\": \"pf-c-label__content\",\n  \"labelIcon\": \"pf-c-label__icon\",\n  \"labelText\": \"pf-c-label__text\",\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"gold\": \"pf-m-gold\",\n    \"outline\": \"pf-m-outline\",\n    \"overflow\": \"pf-m-overflow\",\n    \"add\": \"pf-m-add\",\n    \"editable\": \"pf-m-editable\",\n    \"editableActive\": \"pf-m-editable-active\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './label-group.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"labelGroup\": \"pf-c-label-group\",\n  \"labelGroupClose\": \"pf-c-label-group__close\",\n  \"labelGroupLabel\": \"pf-c-label-group__label\",\n  \"labelGroupList\": \"pf-c-label-group__list\",\n  \"labelGroupListItem\": \"pf-c-label-group__list-item\",\n  \"labelGroupMain\": \"pf-c-label-group__main\",\n  \"labelGroupTextarea\": \"pf-c-label-group__textarea\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\",\n    \"vertical\": \"pf-m-vertical\",\n    \"editable\": \"pf-m-editable\",\n    \"textarea\": \"pf-m-textarea\"\n  }\n};"],"names":["ClipboardCopyToggle","_a","onClick","id","textId","contentId","isExpanded","props","Button","Object","assign","type","variant","displayName","ClipboardCopyExpanded","constructor","super","render","this","className","children","onChange","isReadOnly","isCode","suppressContentEditableWarning","clipboardCopyExpandableContent","onInput","e","target","innerText","contentEditable","defaultProps","clipboardCopyFunc","event","text","navigator","clipboard","writeText","toString","ClipboardCopyVariant","ClipboardCopy","timer","componentDidUpdate","prevProps","prevState","updateText","componentWillUnmount","window","clearTimeout","expandContent","_event","setState","expanded","switchDelay","isBlock","exitDelay","maxWidth","entryDelay","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","position","additionalActions","ouiaId","ouiaSafe","removeFindDomNode","divProps","textIdPrefix","clipboardCopy","modifiers","inline","block","state","GenerateId","prefix","clipboardCopyText","code","clipboardCopyActions","clipboardCopyActionsItem","ClipboardCopyButton","copied","onTooltipHidden","clipboardCopyGroup","TextInput","value","Array","isArray","join","undefined","console","warn","Popover","top","ariaLabel","trigger","aria","content","colorStyles","blue","cyan","green","orange","purple","red","gold","grey","Label","color","isCompact","isEditable","editableProps","isTruncated","tooltipPosition","icon","onClose","onEditCancel","onEditComplete","closeBtn","closeBtnAriaLabel","closeBtnProps","href","isOverflowLabel","isEditableActive","setIsEditableActive","useState","currValue","setCurrValue","editableButtonRef","editableInputRef","document","addEventListener","onDocMouseDown","onKeyDown","removeEventListener","current","contains","_b","key","preventDefault","stopImmediatePropagation","focus","el","range","createRange","sel","getSelection","selectNodeContents","collapse","removeAllRanges","addRange","LabelComponent","button","textRef","componentRef","isTooltipVisible","setIsTooltipVisible","currTextRef","offsetWidth","scrollWidth","labelIcon","ref","labelText","labelComponentChild","labelContent","stopPropagation","reference","label","outline","overflow","compact","editable","editableActive","CopyIconConfig","name","height","width","svgPath","yOffset","xOffset","CopyIcon"],"sourceRoot":""}