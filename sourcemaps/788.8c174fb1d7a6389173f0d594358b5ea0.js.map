{"version":3,"file":"js/788.8b81da3b9ccc9d2d5f54.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/Modals/DisableRule.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Post } from '../../Utilities/Api';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport messages from '../../Messages';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { useSetAckMutation } from '../../Services/Acks';\n\nconst DisableRule = ({\n  handleModalToggle,\n  isModalOpen,\n  host,\n  hosts,\n  rule,\n  afterFn,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const notification = (data) => dispatch(addNotification(data));\n  const [justification, setJustificaton] = useState('');\n  const [singleSystem, setSingleSystem] = useState(\n    host !== undefined || hosts.length > 0\n  );\n\n  // eslint-disable-next-line no-unused-vars\n  const [setAck, { isLoading }] = useSetAckMutation();\n\n  const bulkHostActions = async () => {\n    const data = { systems: hosts, justification };\n    try {\n      await Post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`, {}, data);\n      !singleSystem &&\n        notification({\n          variant: 'success',\n          dismissable: true,\n          timeout: true,\n          title: intl.formatMessage(messages.recSuccessfullyDisabledForSystem),\n        });\n      afterFn && afterFn();\n    } catch (error) {\n      notification({\n        variant: 'danger',\n        dismissable: true,\n        title: intl.formatMessage(messages.error),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const disableRule = async () => {\n    if (rule.rule_status === 'enabled' && !hosts.length) {\n      const options = singleSystem\n        ? {\n            type: 'HOST',\n            options: {\n              rule: rule.rule_id,\n              system_uuid: host.id,\n              justification,\n            },\n          }\n        : {\n            type: 'RULE',\n            options: {\n              rule_id: rule.rule_id,\n              ...(justification && { justification }),\n            },\n          };\n      try {\n        await setAck(options).unwrap();\n        singleSystem\n          ? notification({\n              variant: 'success',\n              timeout: true,\n              dismissable: true,\n              title: intl.formatMessage(\n                messages.recSuccessfullyDisabledForSystem\n              ),\n            })\n          : notification({\n              variant: 'success',\n              timeout: true,\n              dismissable: true,\n              title: intl.formatMessage(messages.recSuccessfullyDisabled),\n            });\n        setJustificaton('');\n        afterFn && afterFn();\n      } catch (error) {\n        notification({\n          variant: 'danger',\n          dismissable: true,\n          title: intl.formatMessage(messages.error),\n          description: `${error}`,\n        });\n      }\n    } else {\n      bulkHostActions();\n    }\n\n    handleModalToggle(false);\n  };\n\n  return (\n    <Modal\n      variant=\"small\"\n      title={intl.formatMessage(messages.disableRule)}\n      isOpen={isModalOpen}\n      onClose={() => {\n        handleModalToggle(false);\n        setJustificaton('');\n      }}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={() => disableRule()}\n          ouiaId=\"confirm\"\n        >\n          {intl.formatMessage(messages.save)}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={() => {\n            handleModalToggle(false);\n            setJustificaton('');\n          }}\n          ouiaId=\"cancel\"\n        >\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n      ]}\n    >\n      {intl.formatMessage(messages.disableRuleBody)}\n      <Form>\n        <FormGroup fieldId=\"blank-form\" />\n        {(host !== undefined || hosts.length > 0) && (\n          <FormGroup fieldId=\"disable-rule-one-system\">\n            <Checkbox\n              isChecked={singleSystem}\n              onChange={() => {\n                setSingleSystem(!singleSystem);\n              }}\n              label={\n                hosts.length\n                  ? intl.formatMessage(messages.disableRuleForSystems)\n                  : intl.formatMessage(messages.disableRuleSingleSystem)\n              }\n              id=\"disable-rule-one-system\"\n              name=\"disable-rule-one-system\"\n            />\n          </FormGroup>\n        )}\n        <FormGroup\n          label={intl.formatMessage(messages.justificationNote)}\n          fieldId=\"disable-rule-justification\"\n        >\n          <TextInput\n            type=\"text\"\n            id=\"disable-rule-justification\"\n            aria-describedby=\"disable-rule-justification\"\n            value={justification}\n            onChange={(text) => setJustificaton(text)}\n            onKeyDown={(e) =>\n              e.key === 'Enter' && (e.preventDefault(), disableRule())\n            }\n          />\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n\nDisableRule.propTypes = {\n  isModalOpen: PropTypes.bool,\n  host: PropTypes.object,\n  handleModalToggle: PropTypes.func,\n  rule: PropTypes.object,\n  afterFn: PropTypes.func,\n  hosts: PropTypes.array,\n};\n\nDisableRule.defaultProps = {\n  isModalOpen: false,\n  handleModalToggle: () => undefined,\n  system: undefined,\n  rule: {},\n  afterFn: () => undefined,\n  host: undefined,\n  hosts: [],\n};\n\nexport default DisableRule;\n"],"names":["DisableRule","handleModalToggle","isModalOpen","host","hosts","rule","afterFn","intl","useIntl","dispatch","useDispatch","notification","data","addNotification","useState","justification","setJustificaton","undefined","length","singleSystem","setSingleSystem","useSetAckMutation","setAck","bulkHostActions","isLoading","systems","Post","BASE_URL","rule_id","variant","dismissable","timeout","title","formatMessage","messages","description","disableRule","rule_status","options","type","system_uuid","id","unwrap","isOpen","onClose","actions","Button","key","onClick","ouiaId","fieldId","isChecked","onChange","label","name","aria-describedby","value","text","onKeyDown","e","preventDefault","propTypes","PropTypes","defaultProps","system"],"sourceRoot":""}