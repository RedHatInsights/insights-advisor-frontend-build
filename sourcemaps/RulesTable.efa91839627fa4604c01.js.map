{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?0723"],"names":["intl","useIntl","dispatch","useDispatch","search","useLocation","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","useState","title","formatMessage","messages","transforms","sortable","cellWidth","size","fitContent","dataLabel","cols","rules","useSelector","AdvisorStore","rulesFetchStatus","filters","selectedTags","workloads","SID","rows","setRows","sortBy","setSortBy","filterBuilding","setFilterBuilding","text","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","addNotification","data","addNotificationAction","setFilters","AppActions","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","rule","resolution","resolution_set","find","system_type","resolution_risk","risk","undefined","fetchRulesFn","useCallback","urlBuilder","options","length","tags","map","tag","encodeURIComponent","workloadQueryBuilder","fetchRulesAction","filterFetchBuilder","encodeOptionsToURL","onSetPage","pageNumber","newOffset","limit","offset","toggleRulesDisabled","rule_status","impacting","hideReports","rowId","API","BASE_URL","rule_id","variant","timeout","dismissable","description","noRuleHitsBodyMessage","useEffect","paramsObject","paramParser","sort","has_playbook","Array","isArray","incident","Number","reboot","sortIndex","Object","entries","item","sortDirection","index","direction","cells","icon","CheckCircleIcon","iconClass","Button","style","paddingTop","onClick","props","colSpan","flatMap","value","key","isOpen","Link","to","date","publish_date","Tooltip","position","TooltipPosition","content","total_risk","strong","str","hideIcon","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Stack","hasGutter","hosts_acked_count","StackItem","systems","isInline","ouiaId","resolutionRisk","asMutable","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","label","toLowerCase","filterValues","onChange","event","placeholder","FC","type","id","items","res_risk","impact","likelihood","category","e","activeFiltersConfig","deleteTitle","topic","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","urlParam","String","chips","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","_e","fileType","downloadReport","every","filterConfig","Table","aria-label","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","_event","orderParam","areActionsDisabled","isStickyHeader","TableHeader","TableBody","message","widgetId","PaginationVariant","___CSS_LOADER_EXPORT___","push","module","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/RulesTable.16d427d25683d452956d.js","sourcesContent":["import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport {\n  encodeOptionsToURL,\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RulesTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(45)],\n    },\n    {\n      title: intl.formatMessage(messages.added),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.riskofchange),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: (\n        <React.Fragment>\n          <AnsibeTowerIcon size=\"md\" /> {intl.formatMessage(messages.ansible)}\n        </React.Fragment>\n      ),\n      transforms: [sortable, cellWidth(15), fitContent],\n      dataLabel: intl.formatMessage(messages.ansible),\n    },\n  ]);\n  const rules = useSelector(({ AdvisorStore }) => AdvisorStore.rules);\n  const rulesFetchStatus = useSelector(\n    ({ AdvisorStore }) => AdvisorStore.rulesFetchStatus\n  );\n  const filters = useSelector(({ AdvisorStore }) => AdvisorStore.filters);\n  const selectedTags = useSelector(\n    ({ AdvisorStore }) => AdvisorStore.selectedTags\n  );\n  const workloads = useSelector(({ AdvisorStore }) => AdvisorStore.workloads);\n  const SID = useSelector(({ AdvisorStore }) => AdvisorStore.SID);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n  const setFilters = (filters) => dispatch(AppActions.setFilters(filters));\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'total_risk',\n    4: 'resolution_risk',\n    5: 'impacted_count',\n    6: 'playbook_count',\n  };\n\n  const ruleResolutionRisk = (rule) => {\n    const resolution = rule.resolution_set.find(\n      (resolution) =>\n        resolution.system_type === AppConstants.SYSTEM_TYPES.rhel ||\n        AppConstants.SYSTEM_TYPES.ocp\n    );\n    return resolution ? resolution.resolution_risk.risk : undefined;\n  };\n\n  const fetchRulesFn = useCallback(() => {\n    const fetchRulesAction = (options, search) =>\n      dispatch(AppActions.fetchRules(options, search));\n    urlBuilder(filters, selectedTags);\n    let options = selectedTags?.length && {\n      tags: selectedTags.map((tag) => encodeURIComponent(tag)),\n    };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    return fetchRulesAction(\n      options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n      options.tags &&\n        encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n    );\n  }, [filters, selectedTags, workloads, SID, dispatch]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const handleOnCollapse = (event, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n\n  const hideReports = async (rowId) => {\n    const rule = rows[rowId].rule;\n\n    try {\n      if (rule.rule_status === 'enabled') {\n        setSelectedRule(rule);\n        setDisableRuleOpen(true);\n      } else {\n        try {\n          await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n          addNotification({\n            variant: 'success',\n            timeout: true,\n            dismissable: true,\n            title: intl.formatMessage(messages.recSuccessfullyEnabled),\n          });\n          fetchRulesFn();\n        } catch (error) {\n          addNotification({\n            variant: 'danger',\n            dismissable: true,\n            title: intl.formatMessage(messages.error),\n            description: `${error}`,\n          });\n        }\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title:\n          rule.rule_status === 'enabled'\n            ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n            : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (event, rowId) => hideReports(rowId),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (event, rowId) => hideReports(rowId),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  const noRuleHitsBodyMessage = (rule_status) => {\n    switch (rule_status) {\n      case 'enabled':\n        return messages.rulesTableNoRuleHitsEnabledRulesBody;\n      case 'disabled':\n        return messages.rulesTableNoRuleHitsDisabledRulesBody;\n      case 'rhdisabled':\n        return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n      default:\n        return messages.noRecommendations;\n    }\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      fetchRulesFn();\n    }\n  }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n      paramsObject.has_playbook !== undefined &&\n        !Array.isArray(paramsObject.has_playbook) &&\n        (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 10)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot !== undefined &&\n        !Array.isArray(paramsObject.reboot) &&\n        (paramsObject.reboot = [`${paramsObject.reboot}`]);\n      paramsObject.impacting !== undefined &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (filters.sort !== undefined) {\n      const sortIndex = Number(\n        Object.entries(sortIndices).find(\n          (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n        )[0]\n      );\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: sortIndex, direction: sortDirection });\n    }\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows([\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={CheckCircleIcon}\n                    iconClass=\"ansibleCheck\"\n                    title={intl.formatMessage(\n                      messages.rulesTableNoRuleHitsTitle\n                    )}\n                    text={intl.formatMessage(\n                      noRuleHitsBodyMessage(filters.rule_status)\n                    )}\n                  >\n                    {filters.rule_status === 'enabled' && (\n                      <Button\n                        variant=\"link\"\n                        style={{ paddingTop: 24 }}\n                        onClick={() => toggleRulesDisabled('all')}\n                      >\n                        {intl.formatMessage(\n                          messages.rulesTableNoRuleHitsAddDisabledButton\n                        )}\n                      </Button>\n                    )}\n                  </MessageState>\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]);\n      } else {\n        const rows = rules.data.flatMap((value, key) => [\n          {\n            isOpen: false,\n            rule: value,\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <RuleLabels rule={value} />\n                    <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                      {' '}\n                      {value.description}{' '}\n                    </Link>\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <DateFormat\n                    key={key}\n                    date={value.publish_date}\n                    variant=\"relative\"\n                  />\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <Tooltip\n                      key={key}\n                      position={TooltipPosition.bottom}\n                      content={intl.formatMessage(\n                        messages.rulesDetailsTotalriskBody,\n                        {\n                          risk:\n                            AppConstants.TOTAL_RISK_LABEL_LOWER[\n                              value.total_risk\n                            ] || intl.formatMessage(messages.undefined),\n                          strong: (str) => strong(str),\n                        }\n                      )}\n                    >\n                      <InsightsLabel value={value.total_risk} />\n                    </Tooltip>\n                  </div>\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <InsightsLabel\n                      text={\n                        AppConstants.RISK_OF_CHANGE_LABEL[\n                          ruleResolutionRisk(value)\n                        ]\n                      }\n                      value={ruleResolutionRisk(value)}\n                      hideIcon\n                    />\n                    <div></div>\n                  </div>\n                ),\n              },\n              {\n                title: (\n                  <div\n                    key={key}\n                  >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                ),\n              },\n              {\n                title: (\n                  <div className=\"ins-c-center-text \" key={key}>\n                    {value.playbook_count ? (\n                      <CheckCircleIcon className=\"ansibleCheck\" />\n                    ) : (\n                      intl.formatMessage(messages.no)\n                    )}\n                  </div>\n                ),\n              },\n            ],\n          },\n          {\n            parent: key * 2,\n            fullWidth: true,\n            cells: [\n              {\n                title: (\n                  <Main className=\"pf-m-light\">\n                    <Stack hasGutter>\n                      {value.hosts_acked_count ? (\n                        <StackItem>\n                          <BellSlashIcon size=\"sm\" />\n                          &nbsp;\n                          {value.hosts_acked_count &&\n                          !value.impacted_systems_count\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledForAllSystems\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledForSystemsBody,\n                                { systems: value.hosts_acked_count }\n                              )}\n                          &nbsp;{' '}\n                          <Button\n                            isInline\n                            variant=\"link\"\n                            ouiaId=\"viewSystem\"\n                            onClick={() => {\n                              setViewSystemsModalRule(value);\n                              setViewSystemsModalOpen(true);\n                            }}\n                          >\n                            {intl.formatMessage(messages.viewSystems)}\n                          </Button>\n                        </StackItem>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )}\n                      <RuleDetails\n                        rule={value}\n                        resolutionRisk={ruleResolutionRisk(value)}\n                      />\n                    </Stack>\n                  </Main>\n                ),\n              },\n            ],\n          },\n        ]);\n        setRows(rows.asMutable());\n      }\n    }\n  }, [rules]);\n\n  // Debounced function, sets text filter after specified time (800ms)\n  useEffect(() => {\n    if (!filterBuilding && rulesFetchStatus !== 'pending') {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n  }, [debouncedSearchText]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const afterViewSystemsFn = () => {\n    fetchRulesFn();\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={afterViewSystemsFn}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={fetchRulesFn}\n        />\n      )}\n      <PrimaryToolbar\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID\n            ),\n          isDisabled:\n            !permsExport ||\n            !filters.impacting ||\n            (Array.isArray(filters.impacting) &&\n              !filters.impacting.every((item) => item === 'true')),\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {rulesFetchStatus === 'fulfilled' && (\n        <Table\n          aria-label={'rule-table'}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      {rulesFetchStatus === 'pending' && <Loading />}\n      {rulesFetchStatus === 'failed' && (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(event, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(event, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default RulesTable;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advisor .ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.advisor .ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.advisor .ins-c-center-text{text-align:center}.advisor .pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/PresentationalComponents/RulesTable/_RulesTable.scss\"],\"names\":[],\"mappings\":\"AAAA,uBACc,0CAA0C,CAAC,qCADzD,gGACqL,0BAA0B,CAAE,CADjN,4BACoO,iBAAiB,CADrP,oCACiR,qCAAiC\",\"sourcesContent\":[\".advisor{\\n.ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}