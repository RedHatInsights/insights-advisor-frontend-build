{"version":3,"file":"js/PathwaysTable.1646325726930.e9749a7db932573a6292.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-right-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack:///./src/PresentationalComponents/Labels/CategoryLabel.js","webpack:///./src/PresentationalComponents/Labels/RecommendationLevel.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/PathwaysTable/PathwaysTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.AngleRightIconConfig = {\n  name: 'AngleRightIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.AngleRightIcon = require('../createIcon').createIcon(exports.AngleRightIconConfig);\nexports[\"default\"] = exports.AngleRightIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","import AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport { LabelGroup } from '@patternfly/react-core/dist/js/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CategoryLabel = ({ labelList }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const label = (icon, text) => (\n    <Label icon={icon} variant=\"outline\" color=\"blue\">\n      {text}\n    </Label>\n  );\n  const labels = (id) => {\n    if (id === 1) {\n      return label(\n        <AutomationIcon />,\n        intl.formatMessage(messages.availability)\n      );\n    }\n    if (id === 2) {\n      return label(<LockIcon />, intl.formatMessage(messages.security));\n    }\n    if (id === 3) {\n      return label(<CubeIcon />, intl.formatMessage(messages.stability));\n    }\n    if (id === 4) {\n      return label(<PortIcon />, intl.formatMessage(messages.performance));\n    }\n  };\n  return (\n    <LabelGroup numLabels={1}>\n      {sortedFrequencyList.map((id) => labels(Number(id[0])))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n};\n\nexport default CategoryLabel;\n","import { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst RecommendationLevel = (props) => {\n  const intl = useIntl();\n  const { recommendation_level: lvl } = props;\n\n  const label = (text, lvl, color) => (\n    <Label color={color}>{`${text} - ${lvl}%`}</Label>\n  );\n\n  if (lvl >= 80) {\n    return label(intl.formatMessage(messages.high), lvl, 'red');\n  } else if (lvl < 80 && lvl >= 50) {\n    return label(intl.formatMessage(messages.medium), lvl, 'orange');\n  } else {\n    return label(intl.formatMessage(messages.low), lvl, 'blue');\n  }\n};\n\nRecommendationLevel.propTypes = {\n  props: PropTypes.array,\n};\n\nexport default RecommendationLevel;\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport FrownOpenIcon from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => (\n  <>\n    <Card className=\"ins-empty-rule-cards\">\n      <CardHeader>\n        <FrownOpenIcon size=\"lg\" />\n      </CardHeader>\n      <CardBody>{message}</CardBody>\n    </Card>\n  </>\n);\n\nexport default Failed;\n\nFailed.propTypes = {\n  message: propTypes.string,\n};\n","import {\n  DEBOUNCE_DELAY,\n  FILTER_CATEGORIES as FC,\n  PATHWAYS_FILTER_CATEGORIES as PFC,\n} from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  info,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CategoryLabel from '../Labels/CategoryLabel';\nimport Failed from '../Loading/Failed';\nimport Loading from '../Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RecommendationLevel from '../Labels/RecommendationLevel';\nimport RuleLabels from '../Labels/RuleLabels';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport debounce from '../../Utilities/Debounce';\nimport messages from '../../Messages';\nimport { updatePathFilters } from '../../Services/Filters';\nimport { useGetPathwaysQuery } from '../../Services/Pathways';\nimport { useIntl } from 'react-intl';\n\nconst PathwaysTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n\n  const selectedTags = useSelector(({ filters }) => filters.selectedTags);\n  const workloads = useSelector(({ filters }) => filters.workloads);\n  const SID = useSelector(({ filters }) => filters.SID);\n  const filters = useSelector(({ filters }) => filters.pathState);\n  const setFilters = (filters) => dispatch(updatePathFilters(filters));\n  let options = {};\n  selectedTags?.length &&\n    (options = {\n      ...options,\n      ...{ tags: selectedTags.join(',') },\n    });\n  workloads &&\n    (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n  const {\n    data: pathways = [],\n    isFetching,\n    isLoading,\n    isError,\n  } = useGetPathwaysQuery({ ...filterFetchBuilder(filters), ...options });\n\n  const cols = [\n    {\n      title: intl.formatMessage(messages.pathway),\n      transforms: [sortable, cellWidth(45)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      // transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reboot),\n      // transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.reclvl),\n      transforms: [\n        // sortable,\n        cellWidth(20),\n        fitContent,\n        info({\n          tooltip: intl.formatMessage(messages.reclvldetails),\n          tooltipProps: {\n            isContentLeftAligned: true,\n          },\n        }),\n      ],\n    },\n  ];\n  const sortIndices = {\n    0: 'name',\n    // 1: 'category',\n    2: 'impacted_systems_count',\n    // 3: 'reboot_required',\n    // 4: 'recommendation_level',\n  };\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, { ...FC, ...PFC });\n  };\n\n  const rowBuilder = (pathways) =>\n    pathways.length === 0\n      ? [\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={SearchIcon}\n                    title={intl.formatMessage(messages.noResults)}\n                    text={intl.formatMessage(messages.adjustFilters)}\n                  />\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]\n      : pathways.flatMap((pathway, key) => [\n          {\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link\n                      key={key}\n                      to={`/recommendations/pathways/${pathway.slug}`}\n                    >\n                      {' '}\n                      {pathway.name}{' '}\n                    </Link>\n                    {pathway.has_incident && (\n                      <RuleLabels rule={{ tags: 'incident' }} />\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <CategoryLabel key={key} labelList={pathway.categories} />\n                ),\n              },\n              {\n                title: (\n                  <div\n                    key={key}\n                  >{`${pathway.impacted_systems_count.toLocaleString()}`}</div>\n                ),\n              },\n              {\n                title: (\n                  <span key={key}>\n                    {intl.formatMessage(\n                      pathway.reboot_required\n                        ? messages.required\n                        : messages.notRequired\n                    )}\n                  </span>\n                ),\n              },\n              {\n                title: <RecommendationLevel key={key} {...pathway} />,\n              },\n            ],\n          },\n        ]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (_event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: PFC.has_incident.title,\n      type: PFC.has_incident.type,\n      id: PFC.has_incident.urlParam,\n      value: `checkbox-${PFC.has_incident.urlParam}`,\n      filterValues: {\n        key: `${PFC.has_incident.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.has_incident.urlParam, values),\n        value: filters.has_incident,\n        items: PFC.has_incident.values,\n      },\n    },\n    {\n      label: PFC.reboot_required.title,\n      type: PFC.reboot_required.type,\n      id: PFC.reboot_required.urlParam,\n      value: `checkbox-${PFC.reboot_required.urlParam}`,\n      filterValues: {\n        key: `${PFC.reboot_required.urlParam}-filter`,\n        onChange: (_event, values) =>\n          addFilterParam(PFC.reboot_required.urlParam, values),\n        value: filters.reboot_required,\n        items: PFC.reboot_required.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (_event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      urlBuilder(filters, selectedTags);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, selectedTags, workloads, SID]);\n\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined\n          ? '-impacted_systems_count'\n          : paramsObject.sort[0];\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot_required !== undefined &&\n        !Array.isArray(paramsObject.reboot_required) &&\n        (paramsObject.reboot_required = [`${paramsObject.reboot_required}`]);\n\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (filters.sort !== undefined && sortIndices) {\n      let sortInput = filters.sort;\n      const sortIndex = Number(\n        Object.entries(sortIndices).find(\n          (item) => item[1] === sortInput || `-${item[1]}` === sortInput\n        )[0]\n      );\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: sortIndex, direction: sortDirection });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (!filterBuilding && !isLoading) {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchText]);\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar\n        pagination={{\n          itemCount: pathways?.meta?.count || 0,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(_event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(_event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {isFetching ? (\n        <Loading />\n      ) : isError ? (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      ) : (\n        <Table\n          aria-label={'pathways-table'}\n          variant={TableVariant.compact}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rowBuilder(pathways?.data)}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={pathways?.meta?.count || 0}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(_e, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(_e, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PathwaysTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["exports","__esModule","AngleRightIconConfig","name","height","width","svgPath","yOffset","xOffset","AngleRightIcon","CategoryLabel","arr","labelList","intl","useIntl","sortedFrequencyList","map","label","id","Object","entries","reduce","acc","curr","sort","a","b","icon","text","Label","variant","color","numLabels","formatMessage","messages","labels","Number","propTypes","PropTypes","RecommendationLevel","props","lvl","recommendation_level","Failed","message","Card","className","CardHeader","size","CardBody","dispatch","useDispatch","search","useLocation","selectedTags","useSelector","filters","workloads","SID","pathState","setFilters","updatePathFilters","options","length","tags","join","workloadQueryBuilder","localFilters","useGetPathwaysQuery","filterFetchBuilder","data","pathways","isFetching","isLoading","isError","cols","title","transforms","sortable","cellWidth","fitContent","info","tooltip","tooltipProps","isContentLeftAligned","sortIndices","0","2","useState","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","debouncedSearchText","debounce","DEBOUNCE_DELAY","onSetPage","pageNumber","newOffset","limit","offset","removeFilterParam","param","filter","addFilterParam","values","filterConfigItems","toLowerCase","filterValues","key","onChange","_event","value","placeholder","FC","type","category","items","PFC","has_incident","reboot_required","activeFiltersConfig","deleteTitle","pruneFilters","onDelete","itemsToRemove","isAll","item","newFilter","urlParam","Array","isArray","String","chips","useEffect","urlBuilder","paramsObject","paramParser","undefined","sortInput","sortIndex","find","sortDirection","index","direction","pagination","itemCount","meta","count","page","perPage","onPerPageSelect","isCompact","filterConfig","Table","aria-label","TableVariant","onSort","orderParam","cells","rows","SearchIcon","colSpan","flatMap","pathway","Link","to","slug","rule","categories","impacted_systems_count","toLocaleString","rowBuilder","isStickyHeader","TableHeader","TableBody","ouiaId","_e","widgetId","PaginationVariant","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sourceRoot":""}