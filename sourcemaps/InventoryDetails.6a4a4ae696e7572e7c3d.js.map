{"version":3,"file":"js/InventoryDetails.8736bb91bf7b7b46f193.js","mappings":"i5BAqBA,IAAMA,EAAmB,SAAC,GAAe,IAAbC,EAAa,EAAbA,OACpBC,GAAOC,EAAAA,EAAAA,KAWb,OATAC,EAAAA,EAAAA,YAAU,WACR,GAAIH,IAAWA,EAAOI,cAAgBJ,EAAOK,IAAK,CAChD,IAAMC,EAAS,GAAH,OAAMN,EAAOI,cAAgBJ,EAAOK,GAApC,cACVE,EAAAA,EAAAA,QAAAA,gBAEFC,SAASC,MAAQR,EAAKS,cAAcH,EAAAA,EAAAA,cAAwB,CAAED,OAAAA,OAE/D,CAACN,EAAQC,IAGV,kBAAC,IAAD,CACEU,OAAQ,YAAiD,IAA9CC,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,wBAC1BC,EAAAA,EAAAA,MAAcC,SAAd,KACKH,GAAgBI,EAAAA,EAAAA,IAAuBH,QAI9C,kBAAC,IAAD,CAAYI,UAAU,mCACnBjB,GAAU,kBAAC,IAAD,CAAakB,QAASlB,EAAOI,cAAgBJ,EAAOK,KAC/D,kBAAC,IAAD,CAAqBc,UAAQ,EAACC,SAAS,MAEzC,kBAAC,IAAD,KACE,kBAAC,EAAAC,KAAD,CAAMC,WAAS,GACb,kBAAC,EAAAC,SAAD,CAAUC,KAAM,IACd,kBAAC,IAAD,CAASJ,SAAS,UAQ9BrB,EAAiB0B,UAAY,CAC3BC,QAASC,IAAAA,OACT3B,OAAQ2B,IAAAA,OACRC,SAAUD,IAAAA,MAQZ,SAAeE,EAAAA,EAAAA,UALS,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,MAAlB,UACtB/B,OAAQ8B,GAAiBA,EAAc9B,QACpC+B,KAGmC,KAAxC,CAA8ChC","sources":["webpack:///./src/PresentationalComponents/Inventory/InventoryDetails.js"],"sourcesContent":["import {\n  AppInfo,\n  DetailWrapper,\n  InventoryDetailHead,\n} from '@redhat-cloud-services/frontend-components/Inventory';\nimport {\n  Grid,\n  GridItem,\n} from '@patternfly/react-core/dist/js/layouts/Grid/index';\nimport React, { useEffect } from 'react';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { entitiesDetailsReducer } from '../../Store/AppReducer';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst InventoryDetails = ({ entity }) => {\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (entity && (entity.display_name || entity.id)) {\n      const subnav = `${entity.display_name || entity.id} - ${\n        messages.systems.defaultMessage\n      }`;\n      document.title = intl.formatMessage(messages.documentTitle, { subnav });\n    }\n  }, [entity, intl]);\n\n  return (\n    <DetailWrapper\n      onLoad={({ mergeWithDetail, INVENTORY_ACTION_TYPES }) => {\n        getRegistry().register({\n          ...mergeWithDetail(entitiesDetailsReducer(INVENTORY_ACTION_TYPES)),\n        });\n      }}\n    >\n      <PageHeader className=\"pf-m-light ins-inventory-detail\">\n        {entity && <Breadcrumbs current={entity.display_name || entity.id} />}\n        <InventoryDetailHead hideBack fallback=\"\" />\n      </PageHeader>\n      <Main>\n        <Grid hasGutter>\n          <GridItem span={12}>\n            <AppInfo fallback=\"\" />\n          </GridItem>\n        </Grid>\n      </Main>\n    </DetailWrapper>\n  );\n};\n\nInventoryDetails.propTypes = {\n  history: PropTypes.object,\n  entity: PropTypes.object,\n  addAlert: PropTypes.func,\n};\n\nconst mapStateToProps = ({ entityDetails, props }) => ({\n  entity: entityDetails && entityDetails.entity,\n  ...props,\n});\n\nexport default connect(mapStateToProps, null)(InventoryDetails);\n"],"names":["InventoryDetails","entity","intl","useIntl","useEffect","display_name","id","subnav","messages","document","title","formatMessage","onLoad","mergeWithDetail","INVENTORY_ACTION_TYPES","getRegistry","register","entitiesDetailsReducer","className","current","hideBack","fallback","Grid","hasGutter","GridItem","span","propTypes","history","PropTypes","addAlert","connect","entityDetails","props"],"sourceRoot":""}