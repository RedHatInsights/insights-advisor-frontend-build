{"version":3,"file":"js/RulesTable.bf918ccacafb503a1362.js","mappings":"meAWMA,EAAgB,SAAC,GAAkB,IAEdC,EAFFC,EAAgB,EAAhBA,UACjBC,GAAOC,EAAAA,EAAAA,KAKPC,GAJmBJ,EAKvBC,EAAUI,KAAI,SAACC,GAAD,OAAWA,EAAMC,MAJ/BC,OAAOC,QACLT,EAAIU,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAIC,IAASD,EAAIC,IAAS,GAAK,EAAID,IAAM,KACrEE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,OAKtBR,EAAQ,SAACU,EAAMC,GAAP,OACZ,kBAACC,EAAAA,MAAD,CAAOF,KAAMA,EAAMG,QAAQ,UAAUC,MAAM,QACxCH,IAoBL,OACE,kBAACI,EAAA,EAAD,CAAYC,UAAW,GACpBlB,EAAoBC,KAAI,SAACE,GAAD,OAnBd,SAACA,GACd,OAAW,IAAPA,EACKD,EACL,kBAAC,KAAD,MACAJ,EAAKqB,cAAcC,EAAAA,EAAAA,eAGZ,IAAPjB,EACKD,EAAM,kBAAC,KAAD,MAAcJ,EAAKqB,cAAcC,EAAAA,EAAAA,WAErC,IAAPjB,EACKD,EAAM,kBAAC,KAAD,MAAcJ,EAAKqB,cAAcC,EAAAA,EAAAA,YAErC,IAAPjB,EACKD,EAAM,kBAAC,KAAD,MAAcJ,EAAKqB,cAAcC,EAAAA,EAAAA,mBADhD,EAMmCC,CAAOC,OAAOnB,EAAG,UAKxDR,EAAc4B,UAAY,CACxB1B,UAAW2B,IAAAA,OAGb,U,6vBCqwBA,SA1vBmB,WAAM,QACjB1B,GAAOC,EAAAA,EAAAA,KACP0B,GAAWC,EAAAA,EAAAA,eACTC,GAAWC,EAAAA,EAAAA,eAAXD,OACFE,GAAcC,EAAAA,EAAAA,GAClB,UACAC,EAAaC,MAAMC,QACnBC,UACIC,GAAkBL,EAAAA,EAAAA,GACtB,UACAC,EAAaC,MAAMI,YACnBF,UACF,GAAeG,EAAAA,EAAAA,UAAS,CACtB,CACEC,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,MAC1BmB,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEH,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,OAC1BmB,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEH,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,UAC1BmB,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEH,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,WAC1BmB,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEH,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,cAC1BmB,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEH,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,SAC1BmB,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,MAEnC,CACEH,MACE,kBAAC,aAAD,KACE,kBAAC,KAAD,CAAiBI,KAAK,OADxB,IACiC5C,EAAKqB,cAAcC,EAAAA,EAAAA,UAGtDmB,WAAY,CAACC,EAAAA,UAAUC,EAAAA,EAAAA,WAAU,IAAKE,EAAAA,YACtCC,UAAW9C,EAAKqB,cAAcC,EAAAA,EAAAA,YAhC3ByB,GAAP,eAmCMC,GAAQC,EAAAA,EAAAA,cAAY,qBAAGC,aAAgCF,SACvDG,GAAmBF,EAAAA,EAAAA,cACvB,qBAAGC,aAAgCC,oBAE/BC,GAAUH,EAAAA,EAAAA,cAAY,qBAAGC,aAAgCE,WACzDC,GAAeJ,EAAAA,EAAAA,cACnB,qBAAGC,aAAgCG,gBAE/BC,GAAYL,EAAAA,EAAAA,cAAY,qBAAGC,aAAgCI,aAC3DC,IAAMN,EAAAA,EAAAA,cAAY,qBAAGC,aAAgCK,OAE3D,IAAwBhB,EAAAA,EAAAA,UAAS,IAAjC,iBAAOiB,GAAP,MAAaC,GAAb,MACA,IAA4BlB,EAAAA,EAAAA,UAAS,IAArC,iBAAOmB,GAAP,MAAeC,GAAf,MACA,IAA4CpB,EAAAA,EAAAA,WAAS,GAArD,iBAAOqB,GAAP,MAAuBC,GAAvB,MACA,IAAoCtB,EAAAA,EAAAA,WAASa,MAAAA,OAAA,EAAAA,EAASrC,OAAQ,IAA9D,iBAAO+C,GAAP,MAAmBC,GAAnB,MACA,IAA8CxB,EAAAA,EAAAA,WAAS,GAAvD,iBAAOyB,GAAP,MAAwBC,GAAxB,MACA,IAAwC1B,EAAAA,EAAAA,UAAS,IAAjD,iBAAO2B,GAAP,MAAqBC,GAArB,MACA,IAAwD5B,EAAAA,EAAAA,WAAS,GAAjE,iBAAO6B,GAAP,MAA6BC,GAA7B,MACA,IAAwD9B,EAAAA,EAAAA,UAAS,IAAjE,iBAAO+B,GAAP,MAA6BC,GAA7B,MACA,IAA0ChC,EAAAA,EAAAA,WAAS,GAAnD,iBAAOiC,GAAP,MAAsBC,GAAtB,MAEMC,GAAkB,SAACC,GAAD,OAAUhD,GAASiD,EAAAA,EAAAA,IAAsBD,KAC3DE,GAAa,SAACzB,GAAD,OAAazB,EAASmD,EAAAA,GAAsB1B,KAEzD2B,GCtIS,SAACC,EAAOC,GACvB,OAA4C1C,EAAAA,EAAAA,UAASyC,GAArD,eAAOE,EAAP,KAAuBC,EAAvB,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAkBH,KACjBC,GACH,OAAO,WACLM,aAAaF,MAEd,CAACJ,EAAOD,IAEJE,ED2HqBM,CAAS1B,GAAY2B,EAAAA,gBAC3CC,IAAU1C,MAAAA,GAAA,UAAAA,EAAO2C,YAAP,eAAaC,QAAS,EAChCC,GAAc,CAClBC,EAAG,cACHC,EAAG,eACHC,EAAG,WACHC,EAAG,aACHC,EAAG,kBACHC,EAAG,iBACHC,EAAG,kBAGCC,GAAqB,SAACC,GAC1B,IAAMC,EAAaD,EAAKE,eAAeC,MACrC,SAACF,GAAD,OACEA,EAAWG,cAAgBzE,EAAa0E,aAAaC,MACrD3E,EAAa0E,aAAaE,OAE9B,OAAON,EAAaA,EAAWO,gBAAgBC,UAAOC,GAGlDC,IAAeC,EAAAA,EAAAA,cAAY,YAG/BC,EAAAA,EAAAA,IAAW/D,EAASC,GACpB,IAAI+D,GAAU/D,MAAAA,OAAA,EAAAA,EAAcgE,SAAU,CACpCC,KAAMjE,EAAalD,KAAI,SAACoH,GAAD,OAASC,mBAAmBD,OAIrD,OAFAjE,IACG8D,EAAU,EAAH,KAAQA,IAAYK,EAAAA,EAAAA,IAAqBnE,EAAWC,MAPrC,SAAC6D,EAASvF,GAAV,OACvBF,EAASmD,EAAAA,EAAsBsC,EAASvF,IAOnC6F,CACLN,EAAQE,KAAO,GAAf,QAAyBK,EAAAA,EAAAA,IAAmBvE,IAAagE,GACzDA,EAAQE,OACNM,EAAAA,EAAAA,IAAmB,EAAD,MAAMD,EAAAA,EAAAA,IAAmBvE,IAAagE,OAE3D,CAAChE,EAASC,EAAcC,EAAWC,GAAK5B,IAQrCkG,GAAY,SAACC,GACjB,IAAMC,EAAYD,EAAa1E,EAAQ4E,MAAQ5E,EAAQ4E,MACvDnD,GAAW,EAAD,KAAMzB,GAAN,IAAe6E,OAAQF,MAG7BG,GAAsB,SAACC,GAC3BtD,GAAW,EAAD,KACLzB,GADK,IAER+E,YAAAA,EACAF,OAAQ,GACY,YAAhBE,GAA6B,CAAEC,UAAW,CAAC,aAU7CC,GAAW,mCAAG,WAAOC,GAAP,0EACZhC,EAAO9C,GAAK8E,GAAOhC,KADP,SAIS,YAArBA,EAAK6B,YAJO,gBAKdhE,GAAgBmC,GAChBrC,IAAmB,GANL,iDASNsE,EAAAA,EAAAA,OAAA,UAAcC,EAAAA,SAAd,gBAA8BlC,EAAKmC,QAAnC,MATM,QAUZ/D,GAAgB,CACdzD,QAAS,UACTyH,SAAS,EACTC,aAAa,EACbnG,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,0BAE5B2F,KAhBY,kDAkBZvC,GAAgB,CACdzD,QAAS,SACT0H,aAAa,EACbnG,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,OAC1BsH,YAAa,GAAF,eAtBD,0DA2BhBlE,GAAgB,CACdzD,QAAS,SACT0H,aAAa,EACbnG,MACuB,YAArB8D,EAAK6B,YACDnI,EAAKqB,cAAcC,EAAAA,EAAAA,oCACnBtB,EAAKqB,cAAcC,EAAAA,EAAAA,mCACzBsH,YAAa,GAAF,eAlCG,iEAAH,sDAsEXC,GAAwB,SAACV,GAC7B,OAAQA,GACN,IAAK,UACH,OAAO7G,EAAAA,EAAAA,qCACT,IAAK,WACH,OAAOA,EAAAA,EAAAA,sCACT,IAAK,aACH,OAAOA,EAAAA,EAAAA,4CACT,QACE,OAAOA,EAAAA,EAAAA,qBAIb8D,EAAAA,EAAAA,YAAU,WACHxB,IAAmC,OAAjBP,GACrB4D,OAED,CAACA,GAAcrD,GAAgBR,EAASC,KAG3C+B,EAAAA,EAAAA,YAAU,WACR,GAAIvD,GAAU+B,GAAgB,CAC5B,IAAMkF,GAAeC,EAAAA,EAAAA,aACdD,EAAaxB,UAEEN,IAAtB8B,EAAa/H,KACTgD,GAAc,IACdA,GAAc+E,EAAa/H,MAC/B+H,EAAanI,UACWqG,IAAtB8B,EAAanI,KAAqB,cAAgBmI,EAAanI,KAAK,QACxCqG,IAA9B8B,EAAaE,eACVC,MAAMC,QAAQJ,EAAaE,gBAC3BF,EAAaE,aAAe,CAAC,GAAD,OAAIF,EAAaE,qBACtBhC,IAA1B8B,EAAaK,WACVF,MAAMC,QAAQJ,EAAaK,YAC3BL,EAAaK,SAAW,CAAC,GAAD,OAAIL,EAAaK,iBACpBnC,IAAxB8B,EAAab,OACRa,EAAab,OAAS,EACtBa,EAAab,OAASzG,OAAOsH,EAAab,OAAO,SAC/BjB,IAAvB8B,EAAad,MACRc,EAAad,MAAQ,GACrBc,EAAad,MAAQxG,OAAOsH,EAAad,MAAM,SAC5BhB,IAAxB8B,EAAaM,SACVH,MAAMC,QAAQJ,EAAaM,UAC3BN,EAAaM,OAAS,CAAC,GAAD,OAAIN,EAAaM,eACfpC,IAA3B8B,EAAaV,YACVa,MAAMC,QAAQJ,EAAaV,aAC3BU,EAAaV,UAAY,CAAC,GAAD,OAAIU,EAAaV,aAC7CvD,GAAW,EAAD,KAAMzB,GAAY0F,IAG9BjF,IAAkB,KACjB,KAEHuB,EAAAA,EAAAA,YAAU,WACR,QAAqB4B,IAAjB5D,EAAQzC,KAAoB,CAC9B,IAAM0I,EAAY7H,OAChBlB,OAAOC,QAAQsF,IAAaY,MAC1B,SAAC6C,GAAD,OAAUA,EAAK,KAAOlG,EAAQzC,MAAQ,WAAI2I,EAAK,MAASlG,EAAQzC,QAChE,IAEE4I,EAAoC,MAApBnG,EAAQzC,KAAK,GAAa,OAAS,MACzDgD,GAAU,CAAE6F,MAAOH,EAAWI,UAAWF,OAE1C,CAACnG,EAAQzC,QAEZyE,EAAAA,EAAAA,YAAU,WACR,GAAIpC,EAAM2B,KACR,GAA0B,IAAtB3B,EAAM2B,KAAK0C,OACb5D,GAAQ,CACN,CACEiG,MAAO,CACL,CACElH,MACE,kBAACmH,EAAA,EAAD,CACE7I,KAAM8I,EAAAA,QACNC,UAAU,eACVrH,MAAOxC,EAAKqB,cACVC,EAAAA,EAAAA,2BAEFP,KAAMf,EAAKqB,cACTwH,GAAsBzF,EAAQ+E,eAGP,YAAxB/E,EAAQ+E,aACP,kBAAC2B,EAAAA,OAAD,CACE7I,QAAQ,OACR8I,MAAO,CAAEC,WAAY,IACrBC,QAAS,kBAAM/B,GAAoB,SAElClI,EAAKqB,cACJC,EAAAA,EAAAA,yCAMV4I,MAAO,CAAEC,QAAS,YAKrB,CACL,IAAM3G,EAAOR,EAAM2B,KAAKyF,SAAQ,SAACpF,EAAOqF,GAAR,MAAgB,CAC9C,CACEC,OAAQ9F,GACR8B,KAAMtB,EACN0E,MAAO,CACL,CACElH,MACE,0BAAM6H,IAAKA,GACT,kBAAC,EAAAE,KAAD,CAAMF,IAAKA,EAAKG,GAAE,2BAAsBxF,EAAMyD,UAC3C,IACAzD,EAAM4D,YAAa,KAEtB,kBAAC6B,EAAA,EAAD,CAAYnE,KAAMtB,MAIxB,CACExC,MACE,kBAACkI,EAAA,EAAD,CACEL,IAAKA,EACLM,KAAM3F,EAAM4F,aACZ3J,QAAQ,cAId,CACEuB,MAAO,kBAAC,EAAD,CAAe6H,IAAKA,EAAKtK,UAAW,CAACiF,EAAM6F,aAEpD,CACErI,MACE,yBAAK6H,IAAKA,GACR,kBAACS,EAAAA,QAAD,CACET,IAAKA,EACLU,SAAUC,EAAAA,gBAAAA,OACVC,QAASjL,EAAKqB,cACZC,EAAAA,EAAAA,0BACA,CACEyF,KACE9E,EAAaiJ,uBACXlG,EAAMmG,aACHnL,EAAKqB,cAAcC,EAAAA,EAAAA,WAC1B8J,OAAQ,SAACC,GAAD,OAASD,EAAAA,EAAAA,GAAOC,OAI5B,kBAACC,EAAA,EAAD,CAAetG,MAAOA,EAAMmG,gBAKpC,CACE3I,MACE,yBAAK6H,IAAKA,GACR,kBAACiB,EAAA,EAAD,CACEvK,KACEkB,EAAasJ,qBACXlF,GAAmBrB,IAGvBA,MAAOqB,GAAmBrB,GAC1BwG,UAAQ,IAEV,gCAIN,CACEhJ,MACwB,eAAtBwC,EAAMmD,YACJ,kBAAC2C,EAAAA,QAAD,CACEG,QAASjL,EAAKqB,cAAcC,EAAAA,EAAAA,WAAqB,CAC/CmK,QAASzG,EAAM0G,0BAGjB,8BAAO1L,EAAKqB,cAAcC,EAAAA,EAAAA,MAG5B,yBACE+I,IAAKA,GADP,UAEKrF,EAAM0G,uBAAuBC,oBAGxC,CACEnJ,MACE,yBAAKoJ,UAAU,qBAAqBvB,IAAKA,GACtCrF,EAAM6G,eACL,kBAAC,UAAD,CAAiBD,UAAU,iBAE3B5L,EAAKqB,cAAcC,EAAAA,EAAAA,QAO/B,CACEwK,OAAc,EAANzB,EACR0B,WAAW,EACXrC,MAAO,CACL,CACElH,MACE,kBAACwJ,EAAA,EAAD,CAAMJ,UAAU,cACd,kBAACK,EAAAA,MAAD,CAAOC,WAAS,GACblH,EAAMmH,kBACL,kBAACF,EAAAG,UAAD,KACE,kBAAC,KAAD,CAAexJ,KAAK,OADtB,IAGGoC,EAAMmH,oBACNnH,EAAM0G,uBACH1L,EAAKqB,cACHC,EAAAA,EAAAA,6BAEFtB,EAAKqB,cACHC,EAAAA,EAAAA,6BACA,CAAEmK,QAASzG,EAAMmH,oBAVzB,IAYS,IACP,kBAACrC,EAAAA,OAAD,CACEuC,UAAQ,EACRpL,QAAQ,OACRqL,OAAO,aACPrC,QAAS,WACP1F,GAAwBS,GACxBX,IAAwB,KAGzBrE,EAAKqB,cAAcC,EAAAA,EAAAA,eAIxB,kBAAC,aAAD,MAEF,kBAACiL,EAAA,EAAD,CACEjG,KAAMtB,EACNwH,eAAgBnG,GAAmBrB,cASnDvB,GAAQD,EAAKiJ,gBAGhB,CAACzJ,KAGJoC,EAAAA,EAAAA,YAAU,WACR,IAAKxB,IAAuC,YAArBT,EAAgC,CACrD,IAAMuJ,EAAS,EAAH,GAAQtJ,GACdrC,EAAO+C,GAAWuD,OAAS,CAAEtG,KAAM+C,IAAe,UACjD4I,EAAO3L,KACd8D,GAAW,EAAD,OAAM6H,GAAW3L,GAAjB,IAAuBkH,OAAQ,QAE1C,CAAClD,KAEJ,IA9QQ4H,GA8QFC,GAAoB,SAACC,GACzB,IAAMH,EAAS,EAAH,KAAQtJ,GAAR,IAAiB6E,OAAQ,IAC3B,SAAV4E,GAAoB9I,GAAc,WAC3B2I,EAAOG,GACdhI,GAAW6H,IAGPI,GAAiB,SAACD,EAAOE,GAC7BA,EAAO1F,OAAS,EACZxC,GAAW,EAAD,KAAMzB,GAAN,IAAe6E,OAAQ,IAAvB,UAAgC4E,EAAQE,KAClDH,GAAkBC,IAGlBG,GAAoB,CACxB,CACE5M,MAAOJ,EAAKqB,cAAcC,EAAAA,EAAAA,MAAe2L,cACzCC,aAAc,CACZ7C,IAAK,cACL8C,SAAU,SAACC,EAAOpI,GAAR,OAAkBjB,GAAciB,IAC1CA,MAAOlB,GACPuJ,YAAarN,EAAKqB,cAAcC,EAAAA,EAAAA,YAGpC,CACElB,MAAOkN,EAAAA,kBAAAA,WAAAA,MACPC,KAAMD,EAAAA,kBAAAA,WAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,WAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,WAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,WAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OACRD,GAAeQ,EAAAA,kBAAAA,WAAAA,SAAwBP,IACzC/H,MAAO5B,EAAQ+H,WACfqC,MAAOF,EAAAA,kBAAAA,WAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,SAAAA,MACPC,KAAMD,EAAAA,kBAAAA,SAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,SAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,SAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,SAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OACRD,GAAeQ,EAAAA,kBAAAA,SAAAA,SAAsBP,IACvC/H,MAAO5B,EAAQqK,SACfD,MAAOF,EAAAA,kBAAAA,SAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,OAAAA,MACPC,KAAMD,EAAAA,kBAAAA,OAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,OAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,OAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,OAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OAAmBD,GAAeQ,EAAAA,kBAAAA,OAAAA,SAAoBP,IAChE/H,MAAO5B,EAAQsK,OACfF,MAAOF,EAAAA,kBAAAA,OAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,WAAAA,MACPC,KAAMD,EAAAA,kBAAAA,WAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,WAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,WAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,WAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OACRD,GAAeQ,EAAAA,kBAAAA,WAAAA,SAAwBP,IACzC/H,MAAO5B,EAAQuK,WACfH,MAAOF,EAAAA,kBAAAA,WAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,SAAAA,MACPC,KAAMD,EAAAA,kBAAAA,SAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,SAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,SAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,SAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OACRD,GAAeQ,EAAAA,kBAAAA,SAAAA,SAAsBP,IACvC/H,MAAO5B,EAAQyH,SACf2C,MAAOF,EAAAA,kBAAAA,SAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,SAAAA,MACPC,KAAMD,EAAAA,kBAAAA,SAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,SAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,SAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,SAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OACRD,GAAeQ,EAAAA,kBAAAA,SAAAA,SAAsBP,IACvC/H,MAAO5B,EAAQ+F,SACfqE,MAAOF,EAAAA,kBAAAA,SAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,aAAAA,MACPC,KAAMD,EAAAA,kBAAAA,aAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,aAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,aAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,aAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OACRD,GAAeQ,EAAAA,kBAAAA,aAAAA,SAA0BP,IAC3C/H,MAAO5B,EAAQ4F,aACfwE,MAAOF,EAAAA,kBAAAA,aAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,OAAAA,MACPC,KAAMD,EAAAA,kBAAAA,OAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,OAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,OAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,OAAAA,SAAL,WACHH,SAAU,SAACC,EAAOL,GAAR,OAAmBD,GAAeQ,EAAAA,kBAAAA,OAAAA,SAAoBP,IAChE/H,MAAO5B,EAAQgG,OACfoE,MAAOF,EAAAA,kBAAAA,OAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,YAAAA,MACPC,KAAMD,EAAAA,kBAAAA,YAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,YAAAA,SACJtI,MAAO,SAAF,OAAWsI,EAAAA,kBAAAA,YAAAA,UAChBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,YAAAA,SAAL,WACHH,SAAU,SAACC,EAAOpI,GAAR,OAAkBkD,GAAoBlD,IAChDA,MAAO,GAAF,OAAK5B,EAAQ+E,aAClBqF,MAAOF,EAAAA,kBAAAA,YAAAA,SAGX,CACElN,MAAOkN,EAAAA,kBAAAA,UAAAA,MACPC,KAAMD,EAAAA,kBAAAA,UAAAA,KACNjN,GAAIiN,EAAAA,kBAAAA,UAAAA,SACJtI,MAAO,YAAF,OAAcsI,EAAAA,kBAAAA,UAAAA,UACnBJ,aAAc,CACZ7C,IAAK,GAAF,OAAKiD,EAAAA,kBAAAA,UAAAA,SAAL,WACHH,SAAU,SAACS,EAAGb,GAAJ,OAAeD,GAAeQ,EAAAA,kBAAAA,UAAAA,SAAuBP,IAC/D/H,MAAO5B,EAAQgF,UACfoF,MAAOF,EAAAA,kBAAAA,UAAAA,UAKPO,GAAsB,CAC1BC,YAAa9N,EAAKqB,cAAcC,EAAAA,EAAAA,cAChC8B,SAvaMuJ,GAAe,EAAH,GAAQvJ,UACnBuJ,GAAaoB,aACbpB,GAAahM,YACbgM,GAAa1E,cACb0E,GAAa3E,OAEbgG,EAAAA,EAAAA,IAAarB,GAAcW,EAAAA,oBAkalCW,SAAU,SAACb,EAAOc,EAAeC,GAC3BA,GACFpK,GAAc,IACdc,GAAW,EAAD,KACJzB,EAAQ2K,OAAS,CAAEA,MAAO3K,EAAQ2K,QAD9B,IAER3F,UAAW,CAAC,QACZD,YAAa,UACbH,MAAO5E,EAAQ4E,MACfC,OAAQ7E,EAAQ6E,WAGlBiG,EAAc/N,KAAI,SAACmJ,GACjB,IAAM8E,GAAY,UACf9E,EAAK+E,SAAWpF,MAAMC,QAAQ9F,EAAQkG,EAAK+E,WACxCjL,EAAQkG,EAAK+E,UAAU3B,QACrB,SAAC1H,GAAD,OAAWsJ,OAAOtJ,KAAWsJ,OAAOhF,EAAKiF,MAAM,GAAGvJ,UAEpD,IAENoJ,EAAU9E,EAAK+E,UAAUhH,OAAS,EAC9BxC,GAAW,EAAD,KAAMzB,GAAYgL,IAC5BxB,GAAkBtD,EAAK+E,eAsBnC,OACE,kBAAC,aAAD,KACGjK,IACC,kBAACoK,EAAA,EAAD,CACEC,kBAAmB,SAACC,GAAD,OACjBrK,GAAwBqK,IAE1BC,YAAavK,GACbwK,QAxBmB,WACzB3H,MAwBMX,KAAMhC,KAGTN,IACC,kBAAC6K,EAAA,EAAD,CACEJ,kBAAmBxK,GACnB0K,YAAa3K,GACbsC,KAAMpC,GACN0K,QAAS3H,KAGb,kBAAC6H,EAAA,EAAD,CACEC,UAAW,CAAEvK,cAAAA,GAAeyF,QAjCT,SAAC+E,EAAI1E,GAC5B,IAAM2E,GAAU,OAAIzL,IACpBiB,GAAiB6F,GACjB2E,EAAQ9O,KAAI,SAAC+O,EAAK7E,GACZ/J,OAAO6O,UAAUC,eAAeC,KAAKH,EAAK,YAC5CD,EAAQ5E,GAAR,OAAoB6E,GAApB,IAAyB5E,OAAAA,QAI7B7G,GAAQwL,KAyBJK,WAAY,CACVC,UAAW7J,GACX8J,KAAMpM,EAAQ6E,OAAS7E,EAAQ4E,MAAQ,EACvCyH,QAASjO,OAAO4B,EAAQ4E,OACxBH,UAJU,SAIAuF,EAAOoC,GACf3H,GAAU2H,IAEZE,gBAPU,SAOMtC,EAAOqC,GACrB5K,GAAW,EAAD,KAAMzB,GAAN,IAAe4E,MAAOyH,EAASxH,OAAQ,MAEnD0H,WAAW,GAEbC,cAAY,GACVxP,MAAOJ,EAAKqB,cAAcC,EAAAA,EAAAA,aADhB,iBAGHtB,EAAKqB,cAAcC,EAAAA,EAAAA,cAHhB,qBAIA,SAAC0N,EAAIa,GAAL,OACRC,EAAAA,EAAAA,GACE,OACAD,EACAzM,EACAC,EACAC,EACAC,QAXM,uBAcPxB,IACAqB,EAAQgF,WACRa,MAAMC,QAAQ9F,EAAQgF,aACpBhF,EAAQgF,UAAU2H,OAAM,SAACzG,GAAD,MAAmB,SAATA,OAjB7B,uBAkBGvH,EACT/B,EAAKqB,cAAcC,EAAAA,EAAAA,YACnBtB,EAAKqB,cAAcC,EAAAA,EAAAA,cApBb,GAsBZ0O,aAAc,CAAExC,MAAOR,IACvBa,oBAAqBA,KAED,cAArB1K,GACC,kBAAC,EAAA8M,MAAD,CACEC,aAAY,aACZjP,QAASkP,EAAAA,aAAAA,QACTC,eAxiBe,SAACC,EAAD,GAA2B,IAAfC,EAAe,EAAfA,SAC3BhK,EAAO9C,GAAK8M,GAAUhK,KAAO9C,GAAK8M,GAAUhK,KAAO,KACzD,OAAIgK,EAAW,GAAM,GAAMhK,EAIpBA,GAA6B,YAArBA,EAAK6B,YAChB,CACE,CACE3F,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,aAC1B2I,QAAS,SAACmD,EAAO9E,GAAR,OAAkBD,GAAYC,MAG3C,CACE,CACE9F,MAAOxC,EAAKqB,cAAcC,EAAAA,EAAAA,YAC1B2I,QAAS,SAACmD,EAAO9E,GAAR,OAAkBD,GAAYC,MAbtC,MAsiBHiI,WAtlBiB,SAACvB,EAAI1G,EAAOgC,GACnC,IAAMkG,GAAe,OAAIhN,IACzBgN,EAAalI,GAAb,OAA2BkI,EAAalI,IAAxC,IAAgDgC,OAAAA,IAChD7G,GAAQ+M,IAolBF9M,OAAQA,GACR+M,OA5mBO,SAACC,EAAQlH,EAAOC,GAC7B,IAAMkH,EAAa,GAAH,OAAoB,QAAdlH,EAAsB,GAAK,KAAjC,OAAuC5D,GAAY2D,IACnE7F,GAAU,CAAE6F,MAAAA,EAAOC,UAAAA,IACnB5E,GAAW,EAAD,KAAMzB,GAAN,IAAezC,KAAMgQ,EAAY1I,OAAQ,MA0mB7CyB,MAAO3G,EACPS,KAAMA,GACNoN,mBAAoB,kBAAOvO,GAC3BwO,gBAAc,GAEd,kBAAC,EAAAC,YAAD,MACA,kBAAC,EAAAC,UAAD,OAGkB,YAArB5N,GAAkC,kBAAC6N,EAAA,EAAD,MACb,WAArB7N,GACC,kBAAC8N,EAAA,EAAD,CACEC,QAASlR,EAAKqB,cAAcC,EAAAA,EAAAA,6BAGhC,kBAAC6P,EAAA,GAAD,CACE7E,OAAO,OACPiD,UAAW7J,GACX8J,KAAMpM,EAAQ6E,OAAS7E,EAAQ4E,MAAQ,EACvCyH,QAASjO,OAAO4B,EAAQ4E,OACxBH,UAAW,SAACuF,EAAOoC,GACjB3H,GAAU2H,IAEZE,gBAAiB,SAACtC,EAAOqC,GACvB5K,GAAW,EAAD,KAAMzB,GAAN,IAAe4E,MAAOyH,EAASxH,OAAQ,MAEnDmJ,SAAQ,iCACRnQ,QAASoQ,EAAAA,GAAAA","sources":["webpack:///./src/PresentationalComponents/CategoryLabel/CategoryLabel.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/Utilities/Debounce.js"],"sourcesContent":["import AutomationIcon from '@patternfly/react-icons/dist/esm/icons/automation-icon';\nimport CubeIcon from '@patternfly/react-icons/dist/esm/icons/cube-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/index';\nimport { LabelGroup } from '@patternfly/react-core/dist/js/components/LabelGroup/LabelGroup';\nimport LockIcon from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport PortIcon from '@patternfly/react-icons/dist/esm/icons/port-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CategoryLabel = ({ labelList }) => {\n  const intl = useIntl();\n  const sortedFrequency = (arr) =>\n    Object.entries(\n      arr.reduce((acc, curr) => ((acc[curr] = (acc[curr] || 0) + 1), acc), {})\n    ).sort((a, b) => b[1] - a[1]);\n  const sortedFrequencyList = sortedFrequency(\n    labelList.map((label) => label.id)\n  );\n\n  const label = (icon, text) => (\n    <Label icon={icon} variant=\"outline\" color=\"blue\">\n      {text}\n    </Label>\n  );\n  const labels = (id) => {\n    if (id === 1) {\n      return label(\n        <AutomationIcon />,\n        intl.formatMessage(messages.availability)\n      );\n    }\n    if (id === 2) {\n      return label(<LockIcon />, intl.formatMessage(messages.security));\n    }\n    if (id === 3) {\n      return label(<CubeIcon />, intl.formatMessage(messages.stability));\n    }\n    if (id === 4) {\n      return label(<PortIcon />, intl.formatMessage(messages.performance));\n    }\n  };\n  return (\n    <LabelGroup numLabels={1}>\n      {sortedFrequencyList.map((id) => labels(Number(id[0])))}\n    </LabelGroup>\n  );\n};\n\nCategoryLabel.propTypes = {\n  labelList: PropTypes.array,\n};\n\nexport default CategoryLabel;\n","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Pagination,\n  PaginationVariant,\n} from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  cellWidth,\n  fitContent,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport {\n  encodeOptionsToURL,\n  filterFetchBuilder,\n  paramParser,\n  pruneFilters,\n  urlBuilder,\n  workloadQueryBuilder,\n} from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CategoryLabel from '../CategoryLabel/CategoryLabel';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RulesTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const permsExport = usePermissions(\n    'advisor',\n    AppConstants.PERMS.export\n  ).hasAccess;\n  const permsDisableRec = usePermissions(\n    'advisor',\n    AppConstants.PERMS.disableRec\n  ).hasAccess;\n  const [cols] = useState([\n    {\n      title: intl.formatMessage(messages.name),\n      transforms: [sortable, cellWidth(40)],\n    },\n    {\n      title: intl.formatMessage(messages.added),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.category),\n      transforms: [sortable, cellWidth(10)],\n    },\n    {\n      title: intl.formatMessage(messages.totalRisk),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.riskofchange),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: intl.formatMessage(messages.systems),\n      transforms: [sortable, cellWidth(15)],\n    },\n    {\n      title: (\n        <React.Fragment>\n          <AnsibeTowerIcon size=\"md\" /> {intl.formatMessage(messages.ansible)}\n        </React.Fragment>\n      ),\n      transforms: [sortable, cellWidth(15), fitContent],\n      dataLabel: intl.formatMessage(messages.ansible),\n    },\n  ]);\n  const rules = useSelector(({ AdvisorStore }) => AdvisorStore.rules);\n  const rulesFetchStatus = useSelector(\n    ({ AdvisorStore }) => AdvisorStore.rulesFetchStatus\n  );\n  const filters = useSelector(({ AdvisorStore }) => AdvisorStore.filters);\n  const selectedTags = useSelector(\n    ({ AdvisorStore }) => AdvisorStore.selectedTags\n  );\n  const workloads = useSelector(({ AdvisorStore }) => AdvisorStore.workloads);\n  const SID = useSelector(({ AdvisorStore }) => AdvisorStore.SID);\n\n  const [rows, setRows] = useState([]);\n  const [sortBy, setSortBy] = useState({});\n  const [filterBuilding, setFilterBuilding] = useState(true);\n  const [searchText, setSearchText] = useState(filters?.text || '');\n  const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n  const [selectedRule, setSelectedRule] = useState({});\n  const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n  const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n  const [isAllExpanded, setIsAllExpanded] = useState(false);\n\n  const addNotification = (data) => dispatch(addNotificationAction(data));\n  const setFilters = (filters) => dispatch(AppActions.setFilters(filters));\n\n  const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n  const results = rules?.meta?.count || 0;\n  const sortIndices = {\n    1: 'description',\n    2: 'publish_date',\n    3: 'category',\n    4: 'total_risk',\n    5: 'resolution_risk',\n    6: 'impacted_count',\n    7: 'playbook_count',\n  };\n\n  const ruleResolutionRisk = (rule) => {\n    const resolution = rule.resolution_set.find(\n      (resolution) =>\n        resolution.system_type === AppConstants.SYSTEM_TYPES.rhel ||\n        AppConstants.SYSTEM_TYPES.ocp\n    );\n    return resolution ? resolution.resolution_risk.risk : undefined;\n  };\n\n  const fetchRulesFn = useCallback(() => {\n    const fetchRulesAction = (options, search) =>\n      dispatch(AppActions.fetchRules(options, search));\n    urlBuilder(filters, selectedTags);\n    let options = selectedTags?.length && {\n      tags: selectedTags.map((tag) => encodeURIComponent(tag)),\n    };\n    workloads &&\n      (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n    return fetchRulesAction(\n      options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n      options.tags &&\n        encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n    );\n  }, [filters, selectedTags, workloads, SID, dispatch]);\n\n  const onSort = (_event, index, direction) => {\n    const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n    setSortBy({ index, direction });\n    setFilters({ ...filters, sort: orderParam, offset: 0 });\n  };\n\n  const onSetPage = (pageNumber) => {\n    const newOffset = pageNumber * filters.limit - filters.limit;\n    setFilters({ ...filters, offset: newOffset });\n  };\n\n  const toggleRulesDisabled = (rule_status) => {\n    setFilters({\n      ...filters,\n      rule_status,\n      offset: 0,\n      ...(rule_status !== 'enabled' && { impacting: ['false'] }),\n    });\n  };\n\n  const handleOnCollapse = (_e, rowId, isOpen) => {\n    const collapseRows = [...rows];\n    collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n    setRows(collapseRows);\n  };\n\n  const hideReports = async (rowId) => {\n    const rule = rows[rowId].rule;\n\n    try {\n      if (rule.rule_status === 'enabled') {\n        setSelectedRule(rule);\n        setDisableRuleOpen(true);\n      } else {\n        try {\n          await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n          addNotification({\n            variant: 'success',\n            timeout: true,\n            dismissable: true,\n            title: intl.formatMessage(messages.recSuccessfullyEnabled),\n          });\n          fetchRulesFn();\n        } catch (error) {\n          addNotification({\n            variant: 'danger',\n            dismissable: true,\n            title: intl.formatMessage(messages.error),\n            description: `${error}`,\n          });\n        }\n      }\n    } catch (error) {\n      addNotification({\n        variant: 'danger',\n        dismissable: true,\n        title:\n          rule.rule_status === 'enabled'\n            ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n            : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n        description: `${error}`,\n      });\n    }\n  };\n\n  const actionResolver = (rowData, { rowIndex }) => {\n    const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n    if (rowIndex % 2 !== 0 || !rule) {\n      return null;\n    }\n\n    return rule && rule.rule_status === 'enabled'\n      ? [\n          {\n            title: intl.formatMessage(messages.disableRule),\n            onClick: (event, rowId) => hideReports(rowId),\n          },\n        ]\n      : [\n          {\n            title: intl.formatMessage(messages.enableRule),\n            onClick: (event, rowId) => hideReports(rowId),\n          },\n        ];\n  };\n\n  const buildFilterChips = () => {\n    const localFilters = { ...filters };\n    delete localFilters.topic;\n    delete localFilters.sort;\n    delete localFilters.offset;\n    delete localFilters.limit;\n\n    return pruneFilters(localFilters, FC);\n  };\n\n  const noRuleHitsBodyMessage = (rule_status) => {\n    switch (rule_status) {\n      case 'enabled':\n        return messages.rulesTableNoRuleHitsEnabledRulesBody;\n      case 'disabled':\n        return messages.rulesTableNoRuleHitsDisabledRulesBody;\n      case 'rhdisabled':\n        return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n      default:\n        return messages.noRecommendations;\n    }\n  };\n\n  useEffect(() => {\n    if (!filterBuilding && selectedTags !== null) {\n      fetchRulesFn();\n    }\n  }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n  // Builds table filters from url params\n  useEffect(() => {\n    if (search && filterBuilding) {\n      const paramsObject = paramParser();\n      delete paramsObject.tags;\n\n      paramsObject.text === undefined\n        ? setSearchText('')\n        : setSearchText(paramsObject.text);\n      paramsObject.sort =\n        paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n      paramsObject.has_playbook !== undefined &&\n        !Array.isArray(paramsObject.has_playbook) &&\n        (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n      paramsObject.incident !== undefined &&\n        !Array.isArray(paramsObject.incident) &&\n        (paramsObject.incident = [`${paramsObject.incident}`]);\n      paramsObject.offset === undefined\n        ? (paramsObject.offset = 0)\n        : (paramsObject.offset = Number(paramsObject.offset[0]));\n      paramsObject.limit === undefined\n        ? (paramsObject.limit = 20)\n        : (paramsObject.limit = Number(paramsObject.limit[0]));\n      paramsObject.reboot !== undefined &&\n        !Array.isArray(paramsObject.reboot) &&\n        (paramsObject.reboot = [`${paramsObject.reboot}`]);\n      paramsObject.impacting !== undefined &&\n        !Array.isArray(paramsObject.impacting) &&\n        (paramsObject.impacting = [`${paramsObject.impacting}`]);\n      setFilters({ ...filters, ...paramsObject });\n    }\n\n    setFilterBuilding(false);\n  }, []);\n\n  useEffect(() => {\n    if (filters.sort !== undefined) {\n      const sortIndex = Number(\n        Object.entries(sortIndices).find(\n          (item) => item[1] === filters.sort || `-${item[1]}` === filters.sort\n        )[0]\n      );\n      const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n      setSortBy({ index: sortIndex, direction: sortDirection });\n    }\n  }, [filters.sort]);\n\n  useEffect(() => {\n    if (rules.data) {\n      if (rules.data.length === 0) {\n        setRows([\n          {\n            cells: [\n              {\n                title: (\n                  <MessageState\n                    icon={CheckCircleIcon}\n                    iconClass=\"ansibleCheck\"\n                    title={intl.formatMessage(\n                      messages.rulesTableNoRuleHitsTitle\n                    )}\n                    text={intl.formatMessage(\n                      noRuleHitsBodyMessage(filters.rule_status)\n                    )}\n                  >\n                    {filters.rule_status === 'enabled' && (\n                      <Button\n                        variant=\"link\"\n                        style={{ paddingTop: 24 }}\n                        onClick={() => toggleRulesDisabled('all')}\n                      >\n                        {intl.formatMessage(\n                          messages.rulesTableNoRuleHitsAddDisabledButton\n                        )}\n                      </Button>\n                    )}\n                  </MessageState>\n                ),\n                props: { colSpan: 6 },\n              },\n            ],\n          },\n        ]);\n      } else {\n        const rows = rules.data.flatMap((value, key) => [\n          {\n            isOpen: isAllExpanded,\n            rule: value,\n            cells: [\n              {\n                title: (\n                  <span key={key}>\n                    <Link key={key} to={`/recommendations/${value.rule_id}`}>\n                      {' '}\n                      {value.description}{' '}\n                    </Link>\n                    <RuleLabels rule={value} />\n                  </span>\n                ),\n              },\n              {\n                title: (\n                  <DateFormat\n                    key={key}\n                    date={value.publish_date}\n                    variant=\"relative\"\n                  />\n                ),\n              },\n              {\n                title: <CategoryLabel key={key} labelList={[value.category]} />,\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <Tooltip\n                      key={key}\n                      position={TooltipPosition.bottom}\n                      content={intl.formatMessage(\n                        messages.rulesDetailsTotalriskBody,\n                        {\n                          risk:\n                            AppConstants.TOTAL_RISK_LABEL_LOWER[\n                              value.total_risk\n                            ] || intl.formatMessage(messages.undefined),\n                          strong: (str) => strong(str),\n                        }\n                      )}\n                    >\n                      <InsightsLabel value={value.total_risk} />\n                    </Tooltip>\n                  </div>\n                ),\n              },\n              {\n                title: (\n                  <div key={key}>\n                    <InsightsLabel\n                      text={\n                        AppConstants.RISK_OF_CHANGE_LABEL[\n                          ruleResolutionRisk(value)\n                        ]\n                      }\n                      value={ruleResolutionRisk(value)}\n                      hideIcon\n                    />\n                    <div></div>\n                  </div>\n                ),\n              },\n              {\n                title:\n                  value.rule_status === 'rhdisabled' ? (\n                    <Tooltip\n                      content={intl.formatMessage(messages.byEnabling, {\n                        systems: value.impacted_systems_count,\n                      })}\n                    >\n                      <span>{intl.formatMessage(messages.nA)}</span>\n                    </Tooltip>\n                  ) : (\n                    <div\n                      key={key}\n                    >{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                  ),\n              },\n              {\n                title: (\n                  <div className=\"ins-c-center-text \" key={key}>\n                    {value.playbook_count ? (\n                      <CheckCircleIcon className=\"ansibleCheck\" />\n                    ) : (\n                      intl.formatMessage(messages.no)\n                    )}\n                  </div>\n                ),\n              },\n            ],\n          },\n          {\n            parent: key * 2,\n            fullWidth: true,\n            cells: [\n              {\n                title: (\n                  <Main className=\"pf-m-light\">\n                    <Stack hasGutter>\n                      {value.hosts_acked_count ? (\n                        <StackItem>\n                          <BellSlashIcon size=\"sm\" />\n                          &nbsp;\n                          {value.hosts_acked_count &&\n                          !value.impacted_systems_count\n                            ? intl.formatMessage(\n                                messages.ruleIsDisabledForAllSystems\n                              )\n                            : intl.formatMessage(\n                                messages.ruleIsDisabledForSystemsBody,\n                                { systems: value.hosts_acked_count }\n                              )}\n                          &nbsp;{' '}\n                          <Button\n                            isInline\n                            variant=\"link\"\n                            ouiaId=\"viewSystem\"\n                            onClick={() => {\n                              setViewSystemsModalRule(value);\n                              setViewSystemsModalOpen(true);\n                            }}\n                          >\n                            {intl.formatMessage(messages.viewSystems)}\n                          </Button>\n                        </StackItem>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )}\n                      <RuleDetails\n                        rule={value}\n                        resolutionRisk={ruleResolutionRisk(value)}\n                      />\n                    </Stack>\n                  </Main>\n                ),\n              },\n            ],\n          },\n        ]);\n        setRows(rows.asMutable());\n      }\n    }\n  }, [rules]);\n\n  // Debounced function, sets text filter after specified time (800ms)\n  useEffect(() => {\n    if (!filterBuilding && rulesFetchStatus !== 'pending') {\n      const filter = { ...filters };\n      const text = searchText.length ? { text: searchText } : {};\n      delete filter.text;\n      setFilters({ ...filter, ...text, offset: 0 });\n    }\n  }, [debouncedSearchText]);\n\n  const removeFilterParam = (param) => {\n    const filter = { ...filters, offset: 0 };\n    param === 'text' && setSearchText('');\n    delete filter[param];\n    setFilters(filter);\n  };\n\n  const addFilterParam = (param, values) => {\n    values.length > 0\n      ? setFilters({ ...filters, offset: 0, ...{ [param]: values } })\n      : removeFilterParam(param);\n  };\n\n  const filterConfigItems = [\n    {\n      label: intl.formatMessage(messages.name).toLowerCase(),\n      filterValues: {\n        key: 'text-filter',\n        onChange: (event, value) => setSearchText(value),\n        value: searchText,\n        placeholder: intl.formatMessage(messages.filterBy),\n      },\n    },\n    {\n      label: FC.total_risk.title,\n      type: FC.total_risk.type,\n      id: FC.total_risk.urlParam,\n      value: `checkbox-${FC.total_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.total_risk.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.total_risk.urlParam, values),\n        value: filters.total_risk,\n        items: FC.total_risk.values,\n      },\n    },\n    {\n      label: FC.res_risk.title,\n      type: FC.res_risk.type,\n      id: FC.res_risk.urlParam,\n      value: `checkbox-${FC.res_risk.urlParam}`,\n      filterValues: {\n        key: `${FC.res_risk.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.res_risk.urlParam, values),\n        value: filters.res_risk,\n        items: FC.res_risk.values,\n      },\n    },\n    {\n      label: FC.impact.title,\n      type: FC.impact.type,\n      id: FC.impact.urlParam,\n      value: `checkbox-${FC.impact.urlParam}`,\n      filterValues: {\n        key: `${FC.impact.urlParam}-filter`,\n        onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n        value: filters.impact,\n        items: FC.impact.values,\n      },\n    },\n    {\n      label: FC.likelihood.title,\n      type: FC.likelihood.type,\n      id: FC.likelihood.urlParam,\n      value: `checkbox-${FC.likelihood.urlParam}`,\n      filterValues: {\n        key: `${FC.likelihood.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.likelihood.urlParam, values),\n        value: filters.likelihood,\n        items: FC.likelihood.values,\n      },\n    },\n    {\n      label: FC.category.title,\n      type: FC.category.type,\n      id: FC.category.urlParam,\n      value: `checkbox-${FC.category.urlParam}`,\n      filterValues: {\n        key: `${FC.category.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.category.urlParam, values),\n        value: filters.category,\n        items: FC.category.values,\n      },\n    },\n    {\n      label: FC.incident.title,\n      type: FC.incident.type,\n      id: FC.incident.urlParam,\n      value: `checkbox-${FC.incident.urlParam}`,\n      filterValues: {\n        key: `${FC.incident.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.incident.urlParam, values),\n        value: filters.incident,\n        items: FC.incident.values,\n      },\n    },\n    {\n      label: FC.has_playbook.title,\n      type: FC.has_playbook.type,\n      id: FC.has_playbook.urlParam,\n      value: `checkbox-${FC.has_playbook.urlParam}`,\n      filterValues: {\n        key: `${FC.has_playbook.urlParam}-filter`,\n        onChange: (event, values) =>\n          addFilterParam(FC.has_playbook.urlParam, values),\n        value: filters.has_playbook,\n        items: FC.has_playbook.values,\n      },\n    },\n    {\n      label: FC.reboot.title,\n      type: FC.reboot.type,\n      id: FC.reboot.urlParam,\n      value: `checkbox-${FC.reboot.urlParam}`,\n      filterValues: {\n        key: `${FC.reboot.urlParam}-filter`,\n        onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n        value: filters.reboot,\n        items: FC.reboot.values,\n      },\n    },\n    {\n      label: FC.rule_status.title,\n      type: FC.rule_status.type,\n      id: FC.rule_status.urlParam,\n      value: `radio-${FC.rule_status.urlParam}`,\n      filterValues: {\n        key: `${FC.rule_status.urlParam}-filter`,\n        onChange: (event, value) => toggleRulesDisabled(value),\n        value: `${filters.rule_status}`,\n        items: FC.rule_status.values,\n      },\n    },\n    {\n      label: FC.impacting.title,\n      type: FC.impacting.type,\n      id: FC.impacting.urlParam,\n      value: `checkbox-${FC.impacting.urlParam}`,\n      filterValues: {\n        key: `${FC.impacting.urlParam}-filter`,\n        onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n        value: filters.impacting,\n        items: FC.impacting.values,\n      },\n    },\n  ];\n\n  const activeFiltersConfig = {\n    deleteTitle: intl.formatMessage(messages.resetFilters),\n    filters: buildFilterChips(),\n    onDelete: (event, itemsToRemove, isAll) => {\n      if (isAll) {\n        setSearchText('');\n        setFilters({\n          ...(filters.topic && { topic: filters.topic }),\n          impacting: ['true'],\n          rule_status: 'enabled',\n          limit: filters.limit,\n          offset: filters.offset,\n        });\n      } else {\n        itemsToRemove.map((item) => {\n          const newFilter = {\n            [item.urlParam]: Array.isArray(filters[item.urlParam])\n              ? filters[item.urlParam].filter(\n                  (value) => String(value) !== String(item.chips[0].value)\n                )\n              : '',\n          };\n          newFilter[item.urlParam].length > 0\n            ? setFilters({ ...filters, ...newFilter })\n            : removeFilterParam(item.urlParam);\n        });\n      }\n    },\n  };\n\n  const afterViewSystemsFn = () => {\n    fetchRulesFn();\n  };\n\n  const onExpandAllClick = (_e, isOpen) => {\n    const allRows = [...rows];\n    setIsAllExpanded(isOpen);\n    allRows.map((row, key) => {\n      if (Object.prototype.hasOwnProperty.call(row, 'isOpen')) {\n        allRows[key] = { ...row, isOpen };\n      }\n    });\n\n    setRows(allRows);\n  };\n\n  return (\n    <React.Fragment>\n      {viewSystemsModalOpen && (\n        <ViewHostAcks\n          handleModalToggle={(toggleModal) =>\n            setViewSystemsModalOpen(toggleModal)\n          }\n          isModalOpen={viewSystemsModalOpen}\n          afterFn={afterViewSystemsFn}\n          rule={viewSystemsModalRule}\n        />\n      )}\n      {disableRuleOpen && (\n        <DisableRule\n          handleModalToggle={setDisableRuleOpen}\n          isModalOpen={disableRuleOpen}\n          rule={selectedRule}\n          afterFn={fetchRulesFn}\n        />\n      )}\n      <PrimaryToolbar\n        expandAll={{ isAllExpanded, onClick: onExpandAllClick }}\n        pagination={{\n          itemCount: results,\n          page: filters.offset / filters.limit + 1,\n          perPage: Number(filters.limit),\n          onSetPage(event, page) {\n            onSetPage(page);\n          },\n          onPerPageSelect(event, perPage) {\n            setFilters({ ...filters, limit: perPage, offset: 0 });\n          },\n          isCompact: true,\n        }}\n        exportConfig={{\n          label: intl.formatMessage(messages.exportCsv),\n          // eslint-disable-next-line no-dupe-keys\n          label: intl.formatMessage(messages.exportJson),\n          onSelect: (_e, fileType) =>\n            downloadReport(\n              'hits',\n              fileType,\n              filters,\n              selectedTags,\n              workloads,\n              SID\n            ),\n          isDisabled:\n            !permsExport ||\n            !filters.impacting ||\n            (Array.isArray(filters.impacting) &&\n              !filters.impacting.every((item) => item === 'true')),\n          tooltipText: permsExport\n            ? intl.formatMessage(messages.exportData)\n            : intl.formatMessage(messages.permsAction),\n        }}\n        filterConfig={{ items: filterConfigItems }}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      {rulesFetchStatus === 'fulfilled' && (\n        <Table\n          aria-label={'rule-table'}\n          variant={TableVariant.compact}\n          actionResolver={actionResolver}\n          onCollapse={handleOnCollapse}\n          sortBy={sortBy}\n          onSort={onSort}\n          cells={cols}\n          rows={rows}\n          areActionsDisabled={() => !permsDisableRec}\n          isStickyHeader\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      )}\n      {rulesFetchStatus === 'pending' && <Loading />}\n      {rulesFetchStatus === 'failed' && (\n        <Failed\n          message={intl.formatMessage(messages.rulesTableFetchRulesError)}\n        />\n      )}\n      <Pagination\n        ouiaId=\"page\"\n        itemCount={results}\n        page={filters.offset / filters.limit + 1}\n        perPage={Number(filters.limit)}\n        onSetPage={(event, page) => {\n          onSetPage(page);\n        }}\n        onPerPageSelect={(event, perPage) => {\n          setFilters({ ...filters, limit: perPage, offset: 0 });\n        }}\n        widgetId={`pagination-options-menu-bottom`}\n        variant={PaginationVariant.bottom}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default RulesTable;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, value]);\n\n  return debouncedValue;\n};\n\nexport default Debounce;\n"],"names":["CategoryLabel","arr","labelList","intl","useIntl","sortedFrequencyList","map","label","id","Object","entries","reduce","acc","curr","sort","a","b","icon","text","Label","variant","color","LabelGroup","numLabels","formatMessage","messages","labels","Number","propTypes","PropTypes","dispatch","useDispatch","search","useLocation","permsExport","usePermissions","AppConstants","PERMS","export","hasAccess","permsDisableRec","disableRec","useState","title","transforms","sortable","cellWidth","size","fitContent","dataLabel","cols","rules","useSelector","AdvisorStore","rulesFetchStatus","filters","selectedTags","workloads","SID","rows","setRows","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","isAllExpanded","setIsAllExpanded","addNotification","data","addNotificationAction","setFilters","AppActions","debouncedSearchText","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","6","7","ruleResolutionRisk","rule","resolution","resolution_set","find","system_type","SYSTEM_TYPES","rhel","ocp","resolution_risk","risk","undefined","fetchRulesFn","useCallback","urlBuilder","options","length","tags","tag","encodeURIComponent","workloadQueryBuilder","fetchRulesAction","filterFetchBuilder","encodeOptionsToURL","onSetPage","pageNumber","newOffset","limit","offset","toggleRulesDisabled","rule_status","impacting","hideReports","rowId","API","BASE_URL","rule_id","timeout","dismissable","description","noRuleHitsBodyMessage","paramsObject","paramParser","has_playbook","Array","isArray","incident","reboot","sortIndex","item","sortDirection","index","direction","cells","MessageState","CheckCircleIcon","iconClass","Button","style","paddingTop","onClick","props","colSpan","flatMap","key","isOpen","Link","to","RuleLabels","DateFormat","date","publish_date","category","Tooltip","position","TooltipPosition","content","TOTAL_RISK_LABEL_LOWER","total_risk","strong","str","InsightsLabel","RISK_OF_CHANGE_LABEL","hideIcon","systems","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Main","Stack","hasGutter","hosts_acked_count","StackItem","isInline","ouiaId","RuleDetails","resolutionRisk","asMutable","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","toLowerCase","filterValues","onChange","event","placeholder","FC","type","items","res_risk","impact","likelihood","e","activeFiltersConfig","deleteTitle","topic","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","urlParam","String","chips","ViewHostAcks","handleModalToggle","toggleModal","isModalOpen","afterFn","DisableRule","PrimaryToolbar","expandAll","_e","allRows","row","prototype","hasOwnProperty","call","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","fileType","downloadReport","every","filterConfig","Table","aria-label","TableVariant","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","_event","orderParam","areActionsDisabled","isStickyHeader","TableHeader","TableBody","Loading","Failed","message","Pagination","widgetId","PaginationVariant"],"sourceRoot":""}