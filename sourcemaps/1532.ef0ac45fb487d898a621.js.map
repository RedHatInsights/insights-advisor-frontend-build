{"version":3,"sources":["webpack:///./src/PresentationalComponents/ReportDetails/ReportDetails.js"],"names":["ReportDetails","report","kbaDetail","kbaLoading","rule","rulesCardClasses","classNames","templateProcessor","template","definitions","DOT_SETTINGS","doT","varname","strip","sanitizeOptions","allowedAttributes","sanitizeHtml","transformTags","ul","tagName","attribs","class","textFilter","text","replace","compiledDot","compiledMd","marked","dangerouslySetInnerHTML","__html","error","console","warn","Card","className","style","boxShadow","CardBody","Stack","widget-type","hasGutter","StackItem","isCompact","CardHeader","reason","details","Divider","resolution","node_id","Skeleton","size","SkeletonSize","rel","target","href","view_uri","publishedTitle","more_info","defaultProps","propTypes"],"mappings":"6+BA6BA,IAAMA,EAAgB,SAAC,GAAsC,IAApCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACpCC,EAAOH,EAAOG,MAAQH,EACtBI,EAAmBC,IACvB,gCACA,oBAEIC,EAAoB,SAACC,EAAUC,GACnC,IAAMC,EAAe,EAAH,KACbC,sBADa,IAEhBC,QAAS,CAAC,UACVC,OAAO,IAEHC,EAAkB,CACtBC,kBAAmB,EAAF,KACZC,gCADY,IAEf,IAAK,CAAC,WAERC,cAAe,CACbC,GADa,WAEX,MAAO,CACLC,QAAS,KACTC,QAAS,CAAEC,MAAO,gBAIxBC,WAbsB,SAaXC,GACT,OAAOA,EACJC,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,OAKxB,IACE,IAAMC,EAAchB,EAChBE,aAAaH,EAAUE,EAAvBC,CAAqCF,GACrCD,EACEkB,EAAaC,IAAOX,IAAaS,EAAaX,IAEpD,OACE,yBACEc,wBAAyB,CACvBC,OAAQH,EACLF,QACC,UAFI,qDAKLA,QACC,SANI,iDASLA,QAAQ,WATH,WAXS,GAWT,YAad,MAAOM,GAEP,OADAC,QAAQC,KAAKF,EAAOrB,EAAaD,GAE/B,kBAAC,aAAD,KACG,IADH,yFAIE,6BACE,8BAAOA,OAOjB,OACE,kBAACyB,EAAA,EAAD,CACEC,UAAU,qDACVC,MAAO,CAAEC,UAAW,SAEpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEJ,UAAW7B,EACXkC,cAAY,oBACZC,WAAS,GAET,kBAACC,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAMC,UAAU,mBAAmBQ,WAAS,GAC1C,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAcT,UAAU,8BACxB,qDAEF,kBAACG,EAAA,EAAD,KACGjC,EAAKwC,QAAUrC,EAAkBH,EAAKwC,OAAQ3C,EAAO4C,YAI5D,kBAACC,EAAA,EAAD,MACA,kBAACL,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAMC,UAAU,mBAAmBQ,WAAS,GAC1C,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAcT,UAAU,8BACxB,sDAEF,kBAACG,EAAA,EAAD,KACGpC,EAAO8C,YACNxC,EACEN,EAAO8C,WAAWA,WAClB9C,EAAO4C,YAKhBzC,EAAK4C,SACJ,kBAAC,aAAD,KACE,kBAACF,EAAA,EAAD,MACA,kBAACL,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAMC,UAAU,mBAAmBQ,WAAS,GAC1C,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAeT,UAAU,8BACzB,oEAEF,kBAACG,EAAA,EAAD,KACGlC,EACC,kBAAC8C,EAAA,EAAD,CAAUC,KAAMC,SAEhB,uBACEC,IAAI,sBACJC,OAAO,SACPC,KAAI,UAAKpD,EAAUqD,WAElBrD,EAAUsD,eACPtD,EAAUsD,eADb,wBAE4B,IAC7B,kBAAC,KAAD,WAQbpD,EAAKqD,WACJ,kBAAC,aAAD,KACE,kBAACX,EAAA,EAAD,MACA,kBAACL,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAMC,UAAU,mBAAmBQ,WAAS,GAC1C,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAgBT,UAAU,8BAC1B,sDAEF,kBAACG,EAAA,EAAD,KACG9B,EAAkBH,EAAKqD,UAAWxD,EAAO4C,iBAY9D,UAEA7C,EAAc0D,aAAe,CAC3BzD,OAAQ,GACRC,UAAW,IAGbF,EAAc2D,UAAY,CACxB1D,OAAQ0D,WACRzD,UAAWyD,WACXxD,WAAYwD","file":"js/1532.c6fc7c1cfff8bdaa49db.js","sourcesContent":["import './report-details.scss';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n} from '@patternfly/react-core/dist/esm/components/Card';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport {\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/dist/esm/layouts/Stack';\n\nimport { BullseyeIcon } from '@patternfly/react-icons/dist/esm/icons/bullseye-icon';\nimport { Divider } from '@patternfly/react-core/dist/esm/components/Divider';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { LightbulbIcon } from '@patternfly/react-icons/dist/esm/icons/lightbulb-icon';\nimport React from 'react';\nimport { ThumbsUpIcon } from '@patternfly/react-icons/dist/esm/icons/thumbs-up-icon';\nimport classNames from 'classnames';\nimport doT from 'dot';\nimport marked from 'marked';\nimport propTypes from 'prop-types';\nimport sanitizeHtml from 'sanitize-html';\n\nconst ReportDetails = ({ report, kbaDetail, kbaLoading }) => {\n  const rule = report.rule || report;\n  const rulesCardClasses = classNames(\n    'ins-c-inventory-advisor__card',\n    'ins-c-rules-card'\n  );\n  const templateProcessor = (template, definitions) => {\n    const DOT_SETTINGS = {\n      ...doT.templateSettings,\n      varname: ['pydata'],\n      strip: false,\n    };\n    const sanitizeOptions = {\n      allowedAttributes: {\n        ...sanitizeHtml.defaults.allowedAttributes,\n        '*': ['style'],\n      },\n      transformTags: {\n        ul() {\n          return {\n            tagName: 'ul',\n            attribs: { class: 'pf-c-list' },\n          };\n        },\n      },\n      textFilter(text) {\n        return text\n          .replace(/&amp;/g, '&')\n          .replace(/&gt;/g, '>')\n          .replace(/&lt;/g, '<');\n      },\n    };\n    const externalLinkIcon = '';\n\n    try {\n      const compiledDot = definitions\n        ? doT.template(template, DOT_SETTINGS)(definitions)\n        : template;\n      const compiledMd = marked(sanitizeHtml(compiledDot, sanitizeOptions));\n\n      return (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: compiledMd\n              .replace(\n                /<ul>/gim,\n                `<ul class=\"pf-c-list\" style=\"font-size: inherit\">`\n              )\n              .replace(\n                /<a>/gim,\n                `<a> rel=\"noopener noreferrer\" target=\"_blank\"`\n              )\n              .replace(/<\\/a>/gim, ` ${externalLinkIcon}</a>`),\n          }}\n        />\n      );\n    } catch (error) {\n      console.warn(error, definitions, template); // eslint-disable-line no-console\n      return (\n        <React.Fragment>\n          {' '}\n          Ouch. We were unable to correctly render this text, instead please\n          enjoy the raw data.\n          <pre>\n            <code>{template}</code>\n          </pre>\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <Card\n      className=\"ins-c-inventory-insights__report-details__override\"\n      style={{ boxShadow: 'none' }}\n    >\n      <CardBody>\n        <Stack\n          className={rulesCardClasses}\n          widget-type=\"InsightsRulesCard\"\n          hasGutter\n        >\n          <StackItem>\n            <Card className=\"ins-m-card__flat\" isCompact>\n              <CardHeader>\n                <BullseyeIcon className=\"ins-c-report-details-icon\" />\n                <strong> Detected issues</strong>\n              </CardHeader>\n              <CardBody>\n                {rule.reason && templateProcessor(rule.reason, report.details)}\n              </CardBody>\n            </Card>\n          </StackItem>\n          <Divider />\n          <StackItem>\n            <Card className=\"ins-m-card__flat\" isCompact>\n              <CardHeader>\n                <ThumbsUpIcon className=\"ins-c-report-details-icon\" />\n                <strong> Steps to resolve</strong>\n              </CardHeader>\n              <CardBody>\n                {report.resolution &&\n                  templateProcessor(\n                    report.resolution.resolution,\n                    report.details\n                  )}\n              </CardBody>\n            </Card>\n          </StackItem>\n          {rule.node_id && (\n            <React.Fragment>\n              <Divider />\n              <StackItem>\n                <Card className=\"ins-m-card__flat\" isCompact>\n                  <CardHeader>\n                    <LightbulbIcon className=\"ins-c-report-details-icon\" />\n                    <strong> Related Knowledgebase article </strong>\n                  </CardHeader>\n                  <CardBody>\n                    {kbaLoading ? (\n                      <Skeleton size={SkeletonSize.sm} />\n                    ) : (\n                      <a\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                        href={`${kbaDetail.view_uri}`}\n                      >\n                        {kbaDetail.publishedTitle\n                          ? kbaDetail.publishedTitle\n                          : `Knowledgebase article`}{' '}\n                        <ExternalLinkAltIcon />\n                      </a>\n                    )}\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </React.Fragment>\n          )}\n          {rule.more_info && (\n            <React.Fragment>\n              <Divider />\n              <StackItem>\n                <Card className=\"ins-m-card__flat\" isCompact>\n                  <CardHeader>\n                    <InfoCircleIcon className=\"ins-c-report-details-icon\" />\n                    <strong> Additional info </strong>\n                  </CardHeader>\n                  <CardBody>\n                    {templateProcessor(rule.more_info, report.details)}\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </React.Fragment>\n          )}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ReportDetails;\n\nReportDetails.defaultProps = {\n  report: {},\n  kbaDetail: {},\n};\n\nReportDetails.propTypes = {\n  report: propTypes.object,\n  kbaDetail: propTypes.object,\n  kbaLoading: propTypes.bool,\n};\n"],"sourceRoot":""}