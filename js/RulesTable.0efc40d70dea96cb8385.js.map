{"version":3,"sources":["webpack://advisor-frontend/./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack://advisor-frontend/./src/PresentationalComponents/RulesTable/RulesTable.js","webpack://advisor-frontend/./src/PresentationalComponents/RulesTable/_RulesTable.scss?0723"],"names":["___CSS_LOADER_EXPORT___","push","module","id","intl","useIntl","dispatch","useDispatch","search","useLocation","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","useState","title","formatMessage","messages","transforms","sortable","cellWidth","size","fitContent","dataLabel","cols","rules","useSelector","AdvisorStore","rulesFetchStatus","filters","selectedTags","workloads","SID","rows","setRows","sortBy","setSortBy","filterBuilding","setFilterBuilding","text","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","addNotification","data","addNotificationAction","setFilters","AppActions","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","rule","resolution","resolution_set","find","system_type","resolution_risk","risk","undefined","fetchRulesFn","useCallback","urlBuilder","options","length","tags","map","tag","encodeURIComponent","workloadQueryBuilder","fetchRulesAction","filterFetchBuilder","encodeOptionsToURL","onSetPage","pageNumber","newOffset","limit","offset","toggleRulesDisabled","rule_status","impacting","hideReports","rowId","API","BASE_URL","rule_id","variant","timeout","dismissable","description","noRuleHitsBodyMessage","useEffect","paramsObject","paramParser","sap_system","sort","has_playbook","Array","isArray","incident","Number","reboot","sortIndex","Object","entries","item","sortDirection","index","direction","cells","icon","CheckCircleIcon","iconClass","Button","style","paddingTop","onClick","props","colSpan","flatMap","value","key","isOpen","Link","to","date","publish_date","Tooltip","position","TooltipPosition","content","total_risk","strong","str","hideIcon","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Stack","hasGutter","hosts_acked_count","StackItem","systems","isInline","ouiaId","resolutionRisk","asMutable","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","label","toLowerCase","filterValues","onChange","event","placeholder","FC","type","items","res_risk","impact","likelihood","category","e","activeFiltersConfig","topic","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","urlParam","String","chips","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","_e","fileType","downloadReport","every","filterConfig","Table","aria-label","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","_event","orderParam","areActionsDisabled","TableHeader","TableBody","message","widgetId","PaginationVariant","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/RulesTable.0efc40d70dea96cb8385.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advisor .ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.advisor .ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.advisor .ins-c-center-text{text-align:center}.advisor .pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/PresentationalComponents/RulesTable/_RulesTable.scss\"],\"names\":[],\"mappings\":\"AAAA,uBACc,0CAA0C,CAAC,qCADzD,gGACqL,0BAA0B,CAAE,CADjN,4BACoO,iBAAiB,CADrP,oCACiR,qCAAiC\",\"sourcesContent\":[\".advisor{\\n.ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { encodeOptionsToURL, filterFetchBuilder, paramParser, pruneFilters, urlBuilder, workloadQueryBuilder } from '../Common/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RulesTable = () => {\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const { search } = useLocation();\n    const permsExport = usePermissions('advisor', AppConstants.PERMS.export).hasAccess;\n    const permsDisableRec = usePermissions('advisor', AppConstants.PERMS.disableRec).hasAccess;\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const rules = useSelector(({ AdvisorStore }) => AdvisorStore.rules);\n    const rulesFetchStatus = useSelector(({ AdvisorStore }) => AdvisorStore.rulesFetchStatus);\n    const filters = useSelector(({ AdvisorStore }) => AdvisorStore.filters);\n    const selectedTags = useSelector(({ AdvisorStore }) => AdvisorStore.selectedTags);\n    const workloads = useSelector(({ AdvisorStore }) => AdvisorStore.workloads);\n    const SID = useSelector(({ AdvisorStore }) => AdvisorStore.SID);\n\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters?.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n\n    const addNotification = data => dispatch(addNotificationAction(data));\n    const setFilters = (filters) => dispatch(AppActions.setFilters(filters));\n\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules?.meta?.count || 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        const fetchRulesAction = (options, search) => dispatch(AppActions.fetchRules(options, search));\n        urlBuilder(filters, selectedTags, workloads);\n        let options = selectedTags?.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)) });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        return fetchRulesAction(\n            options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n            options.tags && encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n        );\n    }, [filters, selectedTags, workloads, SID, dispatch]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesDisabled = (rule_status) => {\n        setFilters({ ...filters, rule_status, offset: 0, ...(rule_status !== 'enabled' && { impacting: ['false'] }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.rule_status === 'enabled') {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                try {\n                    await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                    addNotification({\n                        variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n                    });\n                    fetchRulesFn();\n                } catch (error) {\n                    addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n                }\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.rule_status === 'enabled' ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.rule_status === 'enabled' ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    const noRuleHitsBodyMessage = (rule_status) => {\n        switch (rule_status) {\n            case 'enabled': return messages.rulesTableNoRuleHitsEnabledRulesBody;\n            case 'disabled': return messages.rulesTableNoRuleHitsDisabledRulesBody;\n            case 'rhdisabled': return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n            default: return messages.rulesTableNoRuleHitsAnyRulesBody;\n        }\n    };\n\n    useEffect(() => {\n        if (!filterBuilding && selectedTags !== null) {\n            fetchRulesFn();\n        }\n    }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            delete paramsObject.sap_system;\n\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n            paramsObject.impacting !== undefined && !Array.isArray(paramsObject.impacting) &&\n                (paramsObject.impacting = [`${paramsObject.impacting}`]);\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)}\n                                text={intl.formatMessage(noRuleHitsBodyMessage(filters.rule_status))}>\n                                {filters.rule_status === 'enabled' && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('all')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}>{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link' ouiaId=\"viewSystem\"\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.filterBy)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.rule_status.title,\n        type: FC.rule_status.type,\n        id: FC.rule_status.urlParam,\n        value: `radio-${FC.rule_status.urlParam}`,\n        filterValues: {\n            key: `${FC.rule_status.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: `${filters.rule_status}`,\n            items: FC.rule_status.values\n        }\n    }, {\n        label: FC.impacting.title,\n        type: FC.impacting.type,\n        id: FC.impacting.urlParam,\n        value: `checkbox-${FC.impacting.urlParam}`,\n        filterValues: {\n            key: `${FC.impacting.urlParam}-filter`,\n            onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n            value: filters.impacting,\n            items: FC.impacting.values\n        }\n    }\n    ];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: ['true'], rule_status: 'enabled', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !permsExport || !filters.impacting ||\n                    Array.isArray(filters.impacting) && !filters.impacting.every(item => item === 'true'),\n                tooltipText: permsExport ? intl.formatMessage(messages.exportData) : intl.formatMessage(messages.permsAction)\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows} areActionsDisabled={() => !permsDisableRec}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            ouiaId=\"page\"\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nexport default RulesTable;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}