{"version":3,"sources":["webpack:///./src/PresentationalComponents/TopicsAdminTable/_TopicsAdminTable.scss","webpack:///./src/PresentationalComponents/Modals/_AddEditTopic.scss","webpack:///./src/PresentationalComponents/TopicsAdminTable/_TopicsAdminTable.scss?1e54","webpack:///./src/PresentationalComponents/Modals/_AddEditTopic.scss?03c7","webpack:///./src/PresentationalComponents/Modals/AddEditTopic.js","webpack:///./src/PresentationalComponents/TopicsAdminTable/TopicsAdminTable.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","AddEditTopic","handleModalToggle","intl","isModalOpen","topic","addNotification","fetchTopicsAdmin","useState","name","setName","description","setDescription","tag","setTag","enabled","setEnabled","featured","setFeatured","slug","setSlug","editTopic","type","data","API","BASE_URL","put","post","variant","dismissable","title","formatMessage","messages","error","Object","entries","response","map","value","toUpperCase","setNameAndSlug","replace","toLowerCase","footer","Split","className","hasGutter","Button","onClick","ouiaId","save","cancel","isFilled","isDisabled","deleteTopic","Modal","topicAdminTitle","isOpen","onClose","Form","FormGroup","label","fieldId","TextInput","isRequired","id","onChange","topicAddEditDescription","helperText","topicAddEditDescriptionHelperText","TextArea","desc","isInline","topicAddEditTagHelperText","topicSlug","status","Radio","isChecked","topicAddEditDisabled","topicAddEditEnabled","Checkbox","topicAddEditFeatureBox","aria-label","propTypes","PropTypes","func","bool","object","any","injectIntl","connect","dispatch","TopicsAdminTable","topicsFetchStatus","topics","transforms","sortable","cols","rows","setRows","sortBy","setSortBy","addEditTopicOpen","setAddEditTopicOpen","selectedTopic","setSelectedTopic","topicsArray","setTopicsArray","onSort","useCallback","_event","index","direction","attr","0","1","2","3","4","Immutable","from","asMutable","sort","hideTopics","useEffect","length","cells","MessageState","icon","text","props","colSpan","flatMap","rule","disabled","topicAdminEdit","Fragment","PageHeader","Title","headingLevel","size","Main","PrimaryToolbar","_","topicAdminCreate","Table","Loading","Failed","message","systemTableFetchError","TableToolbar","string","array","history","routerParams","state","ownProps","AdvisorStore","AppActions"],"mappings":"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","file":"js/TopicAdmin.b57cb95eed3a02d5ac30.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".toolbar-padding-override{padding-left:0px}.success{color:var(--pf-global--success-color--100)}.ban{color:var(--pf-global--Color--200)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".text-area-override{max-width:30em;min-height:8em;max-height:12em}.text-input-override{width:22em;display:inline}.radio-override{padding-left:5px}.checkbox-override{padding-left:5px}.split-override{width:100%}.modal-width-override{width:60%}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TopicsAdminTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TopicsAdminTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TopicsAdminTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_AddEditTopic.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_AddEditTopic.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_AddEditTopic.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_AddEditTopic.scss';\n\nimport React, { useState } from 'react';\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { Radio } from '@patternfly/react-core/dist/js/components/Radio/Radio';\nimport { TextArea } from '@patternfly/react-core/dist/js/components/TextArea/TextArea';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { fetchTopicsAdmin } from '../../AppActions';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst AddEditTopic = ({ handleModalToggle, intl, isModalOpen, topic, addNotification, fetchTopicsAdmin }) => {\n\n    const [name, setName] = useState(topic.name || '');\n    const [description, setDescription] = useState(topic.description || '');\n    const [tag, setTag] = useState(topic.tag || '');\n    const [enabled, setEnabled] = useState(topic.enabled || false);\n    const [featured, setFeatured] = useState(topic.featured || false);\n    const [slug, setSlug] = useState(topic.slug || undefined);\n\n    const editTopic = async ({ type }) => {\n        try {\n            const data = { name, slug, tag, description, enabled, featured };\n            if (type === 'DELETE') {\n                await API.delete(`${BASE_URL}/topic/${slug}`);\n            } else if (topic.slug) {\n                await API.put(`${BASE_URL}/topic/${slug}/`, data);\n            } else {\n                await API.post(`${BASE_URL}/topic/`, {}, data);\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: Object.entries(error.response.data).map(([key, value]) => `${key.toUpperCase()}:${value} `)\n            });\n        } finally {\n            handleModalToggle(false);\n            fetchTopicsAdmin();\n        }\n    };\n\n    const setNameAndSlug = (name) => {\n        if (topic.slug) {\n            setName(name);\n        } else {\n            setName(name);\n            setSlug(name.replace(/\\s/g, '').toLowerCase());\n        }\n    };\n\n    const footer = (\n        <Split className='split-override' hasGutter>\n            <SplitItem>\n                <Button key='confirm' variant='primary' onClick={ () => editTopic({ type: 'POST/PUT' }) }\n                    ouiaId=\"confirm\">\n                    {intl.formatMessage(messages.save)}\n                </Button>\n            </SplitItem>\n            <SplitItem>\n                <Button key='cancel' variant='secondary' onClick={ () => handleModalToggle(false) }\n                    ouiaId=\"cancel\">\n                    {intl.formatMessage(messages.cancel)}\n                </Button>\n            </SplitItem>\n            <SplitItem isFilled/>\n            <SplitItem>\n                <Button\n                    key='delete'\n                    ouiaId=\"delete\"\n                    variant='danger'\n                    isDisabled={ topic.slug ? false : true }\n                    onClick={ () => editTopic({ type: 'DELETE' }) }\n                >\n                    {intl.formatMessage(messages.deleteTopic)}\n                </Button>\n            </SplitItem>\n        </Split>\n    );\n\n    return <Modal\n        title={intl.formatMessage(messages.topicAdminTitle)}\n        isOpen={isModalOpen}\n        onClose={ () => handleModalToggle(false) }\n        footer={footer}\n        className='modal-width-override'\n    >\n        <Form>\n            <FormGroup\n                label={intl.formatMessage(messages.name)}\n                fieldId='topic-form-name'\n                className='text-input-override'\n            >\n                <TextInput\n                    value={name}\n                    isRequired\n                    type='text'\n                    id='topic-form-name'\n                    name='topic-form-name'\n                    onChange={ (name) => setNameAndSlug(name) }\n                />\n            </FormGroup>\n            <FormGroup\n                label={intl.formatMessage(messages.topicAddEditDescription)}\n                fieldId='topic-form-description'\n                helperText={intl.formatMessage(\n                    messages.topicAddEditDescriptionHelperText\n                )}\n                className='text-area-override'\n            >\n                <TextArea\n                    value={description}\n                    isRequired\n                    name='topic-form-description'\n                    id='topic-form-description'\n                    onChange={ (desc) => setDescription(desc) }\n                />\n            </FormGroup>\n            <FormGroup isInline fieldId='topic-form-labels'>\n                <FormGroup\n                    label={intl.formatMessage(messages.tag)}\n                    fieldId='topic-form-tag'\n                    helperText={intl.formatMessage(\n                        messages.topicAddEditTagHelperText\n                    )}\n                    className='text-input-override'\n                >\n                    <TextInput\n                        value={tag.replace(/\\s/g, '').toLowerCase()}\n                        isRequired\n                        type='text'\n                        id='topic-form-tag'\n                        name='topic-form-tag'\n                        onChange={ (tag) => setTag(tag.replace(/\\s/g, '').toLowerCase()) }\n                    />\n                </FormGroup>\n                <FormGroup\n                    label={intl.formatMessage(messages.topicSlug)}\n                    fieldId='topic-form-name-2'\n                    helperText=''\n                    className='text-input-override'\n                >\n                    <TextInput\n                        value={ slug || name.replace(/\\s/g, '').toLowerCase()}\n                        isDisabled={ topic.slug }\n                        type='text'\n                        id='topic-form-name-2'\n                        name='topic-form-name-2'\n                        onChange={ (name) => setNameAndSlug(name) }\n                    />\n                </FormGroup>\n            </FormGroup>\n            <FormGroup\n                label={intl.formatMessage(messages.status)}\n                fieldId='topic-form-enabled'\n            >\n                <Radio\n                    isChecked={ !enabled }\n                    id='disabled'\n                    label={intl.formatMessage(messages.topicAddEditDisabled)}\n                    onChange={ () => setEnabled(!enabled) }\n                    className='radio-override'\n                />\n                <Radio\n                    isChecked={ enabled }\n                    id='enabled'\n                    label={intl.formatMessage(messages.topicAddEditEnabled)}\n                    onChange={ () => setEnabled(!enabled) }\n                    className='radio-override'\n                />\n            </FormGroup>\n            <FormGroup\n                label={intl.formatMessage(messages.featured)}\n                fieldId='topic-form-featured'\n            >\n                <Checkbox\n                    isChecked={ featured }\n                    label={intl.formatMessage(messages.topicAddEditFeatureBox)}\n                    id='checkbox-featured'\n                    name='checkbox-featured'\n                    aria-label='update-featured'\n                    onChange={ () => setFeatured(!featured) }\n                    className='checkbox-override'\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n\n};\n\nAddEditTopic.propTypes = {\n    handleModalToggle: PropTypes.func,\n    isModalOpen: PropTypes.bool,\n    topic: PropTypes.object,\n    intl: PropTypes.any,\n    addNotification: PropTypes.func,\n    fetchTopicsAdmin: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    fetchTopicsAdmin: () => dispatch(fetchTopicsAdmin())\n});\n\nexport default injectIntl(connect(null, mapDispatchToProps)(AddEditTopic));\n","import './_TopicsAdminTable.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, sortable } from '@patternfly/react-table';\n\nimport AddEditTopic from '../Modals/AddEditTopic';\nimport BanIcon from '@patternfly/react-icons/dist/js/icons/ban-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport EditAltIcon from '@patternfly/react-icons/dist/js/icons/edit-alt-icon';\nimport Failed from '../Loading/Failed';\nimport Immutable from 'seamless-immutable';\nimport Loading from '../Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport StarIcon  from '@patternfly/react-icons/dist/js/icons/star-icon';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst TopicsAdminTable = ({ topicsFetchStatus, fetchTopicsAdmin, topics, intl }) => {\n\n    const [cols] =  useState([\n        { title: intl.formatMessage(messages.title), transforms: [sortable] },\n        { title: intl.formatMessage(messages.tag), transforms: [sortable] },\n        { title: intl.formatMessage(messages.topicSlug), transforms: [sortable] },\n        { title: intl.formatMessage(messages.status), transforms: [sortable] },\n        { title: intl.formatMessage(messages.featured), transforms: [sortable] },\n        '', ''\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [addEditTopicOpen, setAddEditTopicOpen] = useState(false);\n    const [selectedTopic, setSelectedTopic] = useState({});\n    const [topicsArray, setTopicsArray] = useState([]);\n\n    const onSort = useCallback((_event, index, direction) => {\n        const attrIndex = {\n            0: 'name',\n            1: 'tag',\n            2: 'slug',\n            3: 'enabled',\n            4: 'featured'\n        };\n        const attr = attrIndex[index];\n        setSortBy({ index, direction });\n        setTopicsArray(\n            Immutable.from(\n                topicsArray.asMutable().sort((a, b) => {\n                    if (direction === 'asc') {\n                        if (attr === 'enabled' || attr === 'featured') {\n                            return a[attr] > b[attr] ? -1 : 1;\n                        } else { return a[attr] > b[attr] ? 1 : -1; }\n                    } else {\n                        if (attr === 'enabled' || attr === 'featured') {\n                            return a[attr] > b[attr] ? 1 : -1;\n                        } else { return a[attr] > b[attr] ? -1 : 1; }\n                    }\n                })\n            )\n        );\n    }, [setSortBy, setTopicsArray, topicsArray]);\n\n    const hideTopics = (topic) => {\n        if (!topic) {\n            setAddEditTopicOpen(true);\n        } else {\n            setSelectedTopic(topic);\n            setAddEditTopicOpen(true);\n        }\n    };\n\n    useEffect(() => {\n        setTopicsArray(topics);\n    }, [topics]);\n\n    useEffect(() => {\n        fetchTopicsAdmin();\n    }, [fetchTopicsAdmin]);\n\n    useEffect(() => {\n        if (topicsArray.length === 0) {\n            setRows([{\n                cells: [{\n                    title: (\n                        <MessageState icon='none' title={''}\n                            text={''}>\n                        </MessageState>),\n                    props: { colSpan: 7 }\n                }]\n            }]);\n        } else {\n            const rows = topicsArray.flatMap((value, key) => ([{\n                isOpen: false,\n                rule: value,\n                cells: [{\n                    title: <span key={key}> {value.name}</span>\n                }, {\n                    title: <span key={key}> {value.tag}</span>\n                }, {\n                    title: <span key={key}> {value.slug}</span>\n                }, {\n                    title: <span>\n                        {value.enabled ? <span>\n                            <CheckCircleIcon\n                                className='success'\n                            /> {intl.formatMessage(messages.enabled)}\n                        </span> : <span>\n                            <BanIcon\n                                className='ban'\n                            /> {intl.formatMessage(messages.disabled)}\n                        </span>}\n                    </span>\n                }, {\n                    title: <span>\n                        {value.featured ? <span>\n                            <StarIcon/> {intl.formatMessage(messages.featured)}\n                        </span> : <span></span>\n                        }\n                    </span>\n                }, '', {\n                    title: <Button\n                        ouiaId=\"hide\"\n                        variant='link'\n                        onClick={ () => hideTopics(value) }\n                    ><EditAltIcon/> {intl.formatMessage(messages.topicAdminEdit)}</Button>\n                }]\n            }]));\n            setRows(rows.asMutable());\n        }\n    }, [topicsArray, intl]);\n\n    return <React.Fragment>\n        {addEditTopicOpen && <AddEditTopic\n            isModalOpen={addEditTopicOpen}\n            handleModalToggle={setAddEditTopicOpen}\n            topic={selectedTopic}\n        />}\n        <PageHeader>\n            <Title headingLevel=\"h3\" size=\"2xl\" className='titlePaddingOverride'>\n                {intl.formatMessage(messages.topicAdminTitle)}\n            </Title>\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                <PrimaryToolbar className='toolbar-padding-override'>\n                    <Button\n                        variant='primary'\n                        ouiaId=\"adminCreate\"\n                        onClick={ (_) => hideTopics(_) }\n                    >\n                        {intl.formatMessage(messages.topicAdminCreate)}\n                    </Button>\n                </PrimaryToolbar>\n                { topicsFetchStatus === 'fulfilled' &&\n                    <Table\n                        ouiaId=\"adminTable\"\n                        aria-label={'topics-admin-table'}\n                        sortBy={sortBy}\n                        onSort={onSort}\n                        cells={cols}\n                        rows={rows}\n                    >\n                        <TableHeader/>\n                        <TableBody/>\n                    </Table>\n                }\n                { topicsFetchStatus === 'pending' && (<Loading />)}\n                { topicsFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.systemTableFetchError)} />)}\n                <TableToolbar/>\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n\n};\n\nTopicsAdminTable.propTypes = {\n    fetchTopicsAdmin: PropTypes.func,\n    topicsFetchStatus: PropTypes.string,\n    topics: PropTypes.array,\n    addNotification: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    topics: state.AdvisorStore.topics,\n    topicsFetchStatus: state.AdvisorStore.topicsFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopicsAdmin: () => dispatch(AppActions.fetchTopicsAdmin()),\n    addNotification: data => dispatch(addNotification(data))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TopicsAdminTable)));\n"],"sourceRoot":""}