{"version":3,"sources":["webpack:///./node_modules/lodash/_overRest.js","webpack:///./node_modules/lodash/_setToString.js","webpack:///./node_modules/lodash/_apply.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/identity.js","webpack:///./node_modules/lodash/_baseUnary.js","webpack:///./node_modules/lodash/_baseRest.js","webpack:///./node_modules/lodash/_SetCache.js","webpack:///./node_modules/lodash/_cacheHas.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/lodash/_baseIndexOf.js"],"names":["apply","nativeMax","Math","max","module","exports","func","start","transform","undefined","length","args","arguments","index","array","Array","otherArgs","this","value","thisArg","call","isArray","type","iteratee","result","identity","overRest","setToString","baseIndexOf","fromIndex"],"mappings":"8EAAA,IAAIA,EAAQ,EAAQ,MAGhBC,EAAYC,KAAKC,IAgCrBC,EAAOC,QArBP,SAAkBC,EAAMC,EAAOC,GAE7B,OADAD,EAAQN,OAAoBQ,IAAVF,EAAuBD,EAAKI,OAAS,EAAKH,EAAO,GAC5D,WAML,IALA,IAAII,EAAOC,UACPC,GAAS,EACTH,EAAST,EAAUU,EAAKD,OAASH,EAAO,GACxCO,EAAQC,MAAML,KAETG,EAAQH,GACfI,EAAMD,GAASF,EAAKJ,EAAQM,GAE9BA,GAAS,EAET,IADA,IAAIG,EAAYD,MAAMR,EAAQ,KACrBM,EAAQN,GACfS,EAAUH,GAASF,EAAKE,GAG1B,OADAG,EAAUT,GAASC,EAAUM,GACtBd,EAAMM,EAAMW,KAAMD,M,mBCX7BZ,EAAOC,QAJP,SAAkBa,GAChB,OAAOA,I,mBCGTd,EAAOC,QAVP,SAAeC,EAAMa,EAASR,GAC5B,OAAQA,EAAKD,QACX,KAAK,EAAG,OAAOJ,EAAKc,KAAKD,GACzB,KAAK,EAAG,OAAOb,EAAKc,KAAKD,EAASR,EAAK,IACvC,KAAK,EAAG,OAAOL,EAAKc,KAAKD,EAASR,EAAK,GAAIA,EAAK,IAChD,KAAK,EAAG,OAAOL,EAAKc,KAAKD,EAASR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE3D,OAAOL,EAAKN,MAAMmB,EAASR,K,kBCM7B,IAAIU,EAAUN,MAAMM,QAEpBjB,EAAOC,QAAUgB,G,kBCKjBjB,EAAOC,QALP,SAAkBa,GAChB,IAAII,SAAcJ,EAClB,OAAgB,MAATA,IAA0B,UAARI,GAA4B,YAARA,K,kBCP/ClB,EAAOC,QAXP,SAAkBS,EAAOS,GAKvB,IAJA,IAAIV,GAAS,EACTH,EAAkB,MAATI,EAAgB,EAAIA,EAAMJ,OACnCc,EAAST,MAAML,KAEVG,EAAQH,GACfc,EAAOX,GAASU,EAAST,EAAMD,GAAQA,EAAOC,GAEhD,OAAOU,I,kBCWTpB,EAAOC,QAJP,SAAsBa,GACpB,OAAgB,MAATA,GAAiC,iBAATA,I,kBCLjCd,EAAOC,QAJP,SAAkBa,GAChB,OAAOA,I,kBCJTd,EAAOC,QANP,SAAmBC,GACjB,OAAO,SAASY,GACd,OAAOZ,EAAKY,M,oBCThB,IAAIO,EAAW,EAAQ,KACnBC,EAAW,EAAQ,MACnBC,EAAc,EAAQ,MAc1BvB,EAAOC,QAJP,SAAkBC,EAAMC,GACtB,OAAOoB,EAAYD,EAASpB,EAAMC,EAAOkB,GAAWnB,EAAO,M,oBCb7D,IAAIe,EAAU,EAAQ,KA2CtBjB,EAAOC,QARP,WACE,IAAKO,UAAUF,OACb,MAAO,GAET,IAAIQ,EAAQN,UAAU,GACtB,OAAOS,EAAQH,GAASA,EAAQ,CAACA,K,oBCxCnC,IAAIU,EAAc,EAAQ,KAgB1BxB,EAAOC,QALP,SAAuBS,EAAOI,GAE5B,SADsB,MAATJ,EAAgB,EAAIA,EAAMJ,SACpBkB,EAAYd,EAAOI,EAAO,IAAM,I,kBCqBrDd,EAAOC,QALP,SAAkBa,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GA9Bb,mB,kBCqBvBd,EAAOC,QAZP,SAAuBS,EAAOI,EAAOW,GAInC,IAHA,IAAIhB,EAAQgB,EAAY,EACpBnB,EAASI,EAAMJ,SAEVG,EAAQH,GACf,GAAII,EAAMD,KAAWK,EACnB,OAAOL,EAGX,OAAQ","file":"js/vendors~Details~List~TopicDetails~TopicsList.js","sourcesContent":["var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n"],"sourceRoot":""}