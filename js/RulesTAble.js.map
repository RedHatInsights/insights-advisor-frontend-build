{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877"],"names":["module","exports","push","i","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","intl","useState","title","formatMessage","messages","description","transforms","sortable","added","cellWidth","totalRisk","systems","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","filterFetchBuilder","Object","assign","entries","map","filter","Array","isArray","join","fetchRulesFn","onSetPage","pageNumber","toggleRulesDisabled","param","reports_shown","undefined","hideReports","rowId","a","rule","API","BASE_URL","rule_id","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","useCallback","useEffect","location","search","searchParams","URLSearchParams","paramsObject","from","reduce","acc","key","value","JSON","parse","split","sort","keys","replace","sortIndex","Number","find","item","sortDirection","index","direction","data","length","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","isOpen","isRead","disabled","to","moment","publish_date","fromNow","className","position","TooltipPosition","bottom","content","rulesDetailsTotalriskBody","likelihood","AppConstants","impact","strong","str","label","total_risk","severity","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","isInline","viewSystems","Fragment","asMutable","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","id","urlParam","items","res_risk","category","activeFiltersConfig","localFilters","topic","prunedFilters","chips","selectedCategoryValue","String","name","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","isDisabled","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","propTypes","PropTypes","func","string","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","url","AppActions","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","arr2","iter","Symbol","iterator","prototype","toString","call","TypeError","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose"],"mappings":"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","file":"js/RulesTAble.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}\\n\", \"\"]);\n\n","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { AnsibeTowerIcon, BellSlashIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport { Badge, Button, Pagination, PaginationVariant, Stack, StackItem, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Battery, Main, PrimaryToolbar, TableToolbar } from '@redhat-cloud-services/frontend-components';\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    // transforms array of strings -> comma seperated strings, required by advisor api\n    const filterFetchBuilder = (filters) => (Object.assign({},\n        ...Object.entries(filters).map((filter) => (Array.isArray(filter[1]) ? { [filter[0]]: filter[1].join() }\n            : { [filter[0]]: filter[1] })))\n    );\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, ...(reports_shown !== 'true' && { impacting: false }) });\n        reports_shown !== 'true' && setImpacting(false);\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            if (FC[item[0]]) {\n                const category = FC[item[0]];\n                const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                    const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                    return { name: selectedCategoryValue.text || selectedCategoryValue.label, value };\n                })\n                    : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n                return { category: category.title, chips, urlParam: category.urlParam };\n            } else {\n                return { category: 'Description', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n            }\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const searchParams = new URLSearchParams(history.location.search);\n            const paramsObject = Array.from(searchParams).reduce((acc, [key, value]) => ({\n                ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n            }), {});\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&');\n        setQueryString(`?${queryString}`);\n        history.replace({\n            search: `?${queryString}`\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    toggleRulesDisabled('undefined');\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                {!value.reports_shown && <Badge isRead>\n                                    <BellSlashIcon size='md' />&nbsp;\n                                    {intl.formatMessage(messages.disabled)}</Badge>}\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ ...(filters.topic && { topic: filters.topic }), impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`,\n                isDisabled: !impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}