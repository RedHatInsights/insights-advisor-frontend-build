{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877"],"names":["module","exports","push","i","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","intl","useState","title","formatMessage","messages","description","transforms","sortable","added","cellWidth","totalRisk","systems","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","filterFetchBuilder","Object","assign","entries","map","filter","filterName","filterValue","Array","isArray","length","join","fetchRulesFn","onSetPage","pageNumber","toggleRulesDisabled","param","reports_shown","undefined","hideReports","rowId","a","rule","API","BASE_URL","rule_id","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","useCallback","useEffect","location","search","searchParams","URLSearchParams","paramsObject","from","reduce","acc","key","value","JSON","parse","split","sort","incident","keys","replace","sortIndex","Number","find","item","sortDirection","index","direction","data","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","isOpen","to","moment","publish_date","fromNow","className","position","TooltipPosition","bottom","content","rulesDetailsTotalriskBody","likelihood","AppConstants","impact","strong","str","label","total_risk","severity","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","isInline","viewSystems","Fragment","asMutable","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","id","urlParam","items","res_risk","category","activeFiltersConfig","localFilters","topic","prunedFilters","chips","selectedCategoryValue","String","name","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","isDisabled","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","propTypes","PropTypes","func","string","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","url","AppActions","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","arr2","iter","Symbol","iterator","prototype","toString","call","TypeError","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose"],"mappings":"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","file":"js/RulesTAble.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}\\n\", \"\"]);\n\n","/* eslint camelcase: 0 */\nimport './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { AnsibeTowerIcon, BellSlashIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport { Battery, Main, PrimaryToolbar, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination, PaginationVariant, Stack, StackItem, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    // transforms array of strings -> comma seperated strings, required by advisor api\n    const filterFetchBuilder = (filters) => (Object.assign({},\n        ...Object.entries(filters).map((filter) => {\n            const filterName = filter[0];\n            const filterValue = filter[1];\n\n            return (Array.isArray(filterValue) ?\n                (filterValue[0] === 'true' || 'false') && filterValue.length > 1 ? null : { [filterName]: filterValue.join() }\n                : { [filterName]: filterValue });\n        }))\n    );\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, ...(reports_shown !== 'true' && { impacting: false }) });\n        reports_shown !== 'true' && setImpacting(false);\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            if (FC[item[0]]) {\n                const category = FC[item[0]];\n                const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                    const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                    return { name: selectedCategoryValue.text || selectedCategoryValue.label, value };\n                })\n                    : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n                return { category: category.title, chips, urlParam: category.urlParam };\n            } else {\n                return { category: 'Description', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n            }\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const searchParams = new URLSearchParams(history.location.search);\n            const paramsObject = Array.from(searchParams).reduce((acc, [key, value]) => ({\n                ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n            }), {});\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&');\n        setQueryString(`?${queryString}`);\n        history.replace({\n            search: `?${queryString}`\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    toggleRulesDisabled('undefined');\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ ...(filters.topic && { topic: filters.topic }), impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`,\n                isDisabled: !impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}