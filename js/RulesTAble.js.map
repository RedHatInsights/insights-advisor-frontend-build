{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877"],"names":["module","exports","push","i","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","Array","isArray","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","intl","useState","title","formatMessage","messages","description","transforms","sortable","added","cellWidth","totalRisk","systems","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","filterFetchBuilder","assign","entries","map","filter","join","fetchRulesFn","onSetPage","pageNumber","toggleRulesDisabled","param","reports_shown","undefined","hideReports","rowId","a","rule","API","BASE_URL","rule_id","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","useCallback","useEffect","location","search","searchParams","URLSearchParams","paramsObject","reduce","acc","key","value","JSON","parse","split","sort","keys","replace","sortIndex","Number","find","item","sortDirection","index","direction","data","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","isOpen","isRead","disabled","to","moment","publish_date","fromNow","className","position","TooltipPosition","bottom","content","rulesDetailsTotalriskBody","likelihood","AppConstants","impact","strong","str","label","total_risk","severity","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","isInline","viewSystems","Fragment","asMutable","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","id","urlParam","items","res_risk","category","activeFiltersConfig","localFilters","topic","prunedFilters","chips","selectedCategoryValue","String","name","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","isDisabled","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","propTypes","PropTypes","func","string","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","url","AppActions","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose"],"mappings":"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","file":"js/RulesTAble.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}\\n\", \"\"]);\n\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { AnsibeTowerIcon, BellSlashIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport { Badge, Button, Pagination, PaginationVariant, Stack, StackItem, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Battery, Main, PrimaryToolbar, TableToolbar } from '@redhat-cloud-services/frontend-components';\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    // transforms array of strings -> comma seperated strings, required by advisor api\n    const filterFetchBuilder = (filters) => (Object.assign({},\n        ...Object.entries(filters).map((filter) => (Array.isArray(filter[1]) ? { [filter[0]]: filter[1].join() }\n            : { [filter[0]]: filter[1] })))\n    );\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        let reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown });\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.reports_shown;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            if (FC[item[0]]) {\n                const category = FC[item[0]];\n                const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                    const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                    return { name: selectedCategoryValue.text || selectedCategoryValue.label, value };\n                })\n                    : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n                return { category: category.title, chips, urlParam: category.urlParam };\n            } else {\n                return { category: 'Description', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n            }\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const searchParams = new URLSearchParams(history.location.search);\n            const paramsObject = Array.from(searchParams).reduce((acc, [key, value]) => ({\n                ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n            }), {});\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&');\n        setQueryString(`?${queryString}`);\n        history.replace({\n            search: `?${queryString}`\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    toggleRulesDisabled('undefined');\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                {!value.reports_shown && <Badge isRead>\n                                    <BellSlashIcon size='md' />&nbsp;\n                                    {intl.formatMessage(messages.disabled)}</Badge>}\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ ...(filters.topic && { topic: filters.topic }), impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`,\n                isDisabled: !impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}