{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877"],"names":["module","exports","push","i","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","intl","useState","title","formatMessage","messages","description","transforms","sortable","added","cellWidth","totalRisk","systems","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","fetchRulesFn","filterFetchBuilder","onSetPage","pageNumber","toggleRulesDisabled","param","reports_shown","undefined","hideReports","rowId","a","rule","API","BASE_URL","rule_id","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","useCallback","useEffect","location","search","paramsObject","paramParser","sort","incident","Array","isArray","urlBuilder","replace","sortIndex","Number","Object","entries","find","item","sortDirection","index","direction","data","length","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","value","key","isOpen","to","moment","publish_date","fromNow","className","position","TooltipPosition","bottom","content","rulesDetailsTotalriskBody","likelihood","AppConstants","impact","strong","str","label","total_risk","severity","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","isInline","viewSystems","Fragment","asMutable","filter","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","id","urlParam","items","res_risk","category","activeFiltersConfig","localFilters","topic","prunedFilters","map","chips","selectedCategoryValue","String","name","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","isDisabled","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","propTypes","PropTypes","func","string","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","url","AppActions","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose"],"mappings":"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","file":"js/RulesTAble.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}\\n\", \"\"]);\n\n","/* eslint camelcase: 0 */\nimport './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { filterFetchBuilder, paramParser, urlBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport { Battery } from '@redhat-cloud-services/frontend-components/components/Battery';\nimport  BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport CheckIcon  from '@patternfly/react-icons/dist/js/icons/check-icon';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, ...(reports_shown !== 'true' && { impacting: false }) });\n        reports_shown !== 'true' && setImpacting(false);\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            if (FC[item[0]]) {\n                const category = FC[item[0]];\n                const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                    const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                    return { name: selectedCategoryValue.text || selectedCategoryValue.label, value };\n                })\n                    : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n                return { category: category.title, chips, urlParam: category.urlParam };\n            } else {\n                return { category: 'Description', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n            }\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const paramsObject = paramParser(history);\n\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = urlBuilder(filters);\n        setQueryString(queryString);\n        history.replace({\n            search: queryString\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    toggleRulesDisabled('undefined');\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ ...(filters.topic && { topic: filters.topic }), impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`,\n                isDisabled: !impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}