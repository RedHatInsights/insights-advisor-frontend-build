{"version":3,"sources":["webpack://advisor-frontend/./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack://advisor-frontend/./src/PresentationalComponents/RulesTable/RulesTable.js","webpack://advisor-frontend/./src/PresentationalComponents/RulesTable/_RulesTable.scss?0723"],"names":["___CSS_LOADER_EXPORT___","push","module","id","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","selectedTags","workloads","SID","intl","useIntl","permsExport","usePermissions","AppConstants","hasAccess","permsDisableRec","useState","title","formatMessage","messages","transforms","sortable","cellWidth","size","fitContent","dataLabel","cols","rows","setRows","sortBy","setSortBy","filterBuilding","setFilterBuilding","text","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","rule","resolution","resolution_set","find","system_type","resolution_risk","risk","undefined","fetchRulesFn","useCallback","urlBuilder","options","length","tags","map","tag","encodeURIComponent","workloadQueryBuilder","filterFetchBuilder","encodeOptionsToURL","onSetPage","pageNumber","newOffset","limit","offset","toggleRulesDisabled","rule_status","impacting","hideReports","rowId","API","BASE_URL","rule_id","variant","timeout","dismissable","description","noRuleHitsBodyMessage","useEffect","window","location","search","paramsObject","paramParser","sap_system","sort","has_playbook","Array","isArray","incident","Number","reboot","sortIndex","Object","entries","item","sortDirection","index","direction","data","cells","icon","CheckCircleIcon","iconClass","Button","style","paddingTop","onClick","props","colSpan","flatMap","value","key","isOpen","Link","to","date","publish_date","Tooltip","position","TooltipPosition","content","total_risk","strong","str","hideIcon","impacted_systems_count","toLocaleString","className","playbook_count","parent","fullWidth","Stack","hasGutter","hosts_acked_count","StackItem","systems","isInline","ouiaId","resolutionRisk","asMutable","filter","localFilters","removeFilterParam","param","addFilterParam","values","filterConfigItems","label","toLowerCase","filterValues","onChange","event","placeholder","FC","type","items","res_risk","impact","likelihood","category","e","activeFiltersConfig","topic","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","urlParam","String","chips","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","_e","fileType","downloadReport","every","filterConfig","Table","aria-label","actionResolver","rowData","rowIndex","onCollapse","collapseRows","onSort","_event","orderParam","areActionsDisabled","TableHeader","TableBody","message","widgetId","PaginationVariant","propTypes","PropTypes","routerParams","connect","AdvisorStore","ownProps","dispatch","AppActions","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/RulesTable.a675942c89c8df3d0c16.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advisor .ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.advisor .ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.advisor .ins-c-center-text{text-align:center}.advisor .pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/PresentationalComponents/RulesTable/_RulesTable.scss\"],\"names\":[],\"mappings\":\"AAAA,uBACc,0CAA0C,CAAC,qCADzD,gGACqL,0BAA0B,CAAE,CADjN,4BACoO,iBAAiB,CADrP,oCACiR,qCAAiC\",\"sourcesContent\":[\".advisor{\\n.ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { encodeOptionsToURL, filterFetchBuilder, paramParser, pruneFilters, urlBuilder, workloadQueryBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\nimport { strong } from '../../Utilities/intlHelper';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, selectedTags, workloads, SID }) => {\n    const intl = useIntl();\n    const permsExport = usePermissions('advisor', AppConstants.PERMS.export).hasAccess;\n    const permsDisableRec = usePermissions('advisor', AppConstants.PERMS.disableRec).hasAccess;\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags, workloads);\n        let options = selectedTags?.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)) });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        fetchRules(\n            options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n            options.tags && encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n        );\n    }, [filters, selectedTags, workloads, SID, fetchRules]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesDisabled = (rule_status) => {\n        setFilters({ ...filters, rule_status, offset: 0, ...(rule_status !== 'enabled' && { impacting: ['false'] }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.rule_status === 'enabled') {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                try {\n                    await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                    addNotification({\n                        variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n                    });\n                    fetchRulesFn();\n                } catch (error) {\n                    addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n                }\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.rule_status === 'enabled' ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.rule_status === 'enabled' ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    const noRuleHitsBodyMessage = (rule_status) => {\n        switch (rule_status) {\n            case 'enabled': return messages.rulesTableNoRuleHitsEnabledRulesBody;\n            case 'disabled': return messages.rulesTableNoRuleHitsDisabledRulesBody;\n            case 'rhdisabled': return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n            default: return messages.rulesTableNoRuleHitsAnyRulesBody;\n        }\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            delete paramsObject.sap_system;\n\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n            paramsObject.impacting !== undefined && !Array.isArray(paramsObject.impacting) &&\n                (paramsObject.impacting = [`${paramsObject.impacting}`]);\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)}\n                                text={intl.formatMessage(noRuleHitsBodyMessage(filters.rule_status))}>\n                                {filters.rule_status === 'enabled' && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('all')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}>{`${value.impacted_systems_count.toLocaleString()}`}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link' ouiaId=\"viewSystem\"\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.rule_status.title,\n        type: FC.rule_status.type,\n        id: FC.rule_status.urlParam,\n        value: `radio-${FC.rule_status.urlParam}`,\n        filterValues: {\n            key: `${FC.rule_status.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: `${filters.rule_status}`,\n            items: FC.rule_status.values\n        }\n    }, {\n        label: FC.impacting.title,\n        type: FC.impacting.type,\n        id: FC.impacting.urlParam,\n        value: `checkbox-${FC.impacting.urlParam}`,\n        filterValues: {\n            key: `${FC.impacting.urlParam}-filter`,\n            onChange: (e, values) => addFilterParam(FC.impacting.urlParam, values),\n            value: filters.impacting,\n            items: FC.impacting.values\n        }\n    }\n    ];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: ['true'], rule_status: 'enabled', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !permsExport || !filters.impacting ||\n                    Array.isArray(filters.impacting) && !filters.impacting.every(item => item === 'true'),\n                tooltipText: permsExport ? intl.formatMessage(messages.exportData) : intl.formatMessage(messages.permsAction)\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows} areActionsDisabled={()=> !permsDisableRec}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            ouiaId=\"page\"\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object,\n    SID: PropTypes.array\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    rules: AdvisorStore.rules,\n    rulesFetchStatus: AdvisorStore.rulesFetchStatus,\n    filters: AdvisorStore.filters,\n    selectedTags: AdvisorStore.selectedTags,\n    workloads: AdvisorStore.workloads,\n    SID: AdvisorStore.SID,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (options, search) => dispatch(AppActions.fetchRules(options, search)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable));\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}