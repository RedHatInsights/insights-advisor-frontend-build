{"version":3,"sources":["webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/AppActions.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93"],"names":["content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","RuleLabels","intl","rule","Fragment","tags","search","formatMessage","messages","incidentTooltip","position","TooltipPosition","right","isCompact","className","incident","reports_shown","ruleIsDisabledTooltip","size","disabled","propTypes","PropTypes","any","object","injectIntl","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","handleModalToggle","isModalOpen","hostAcks","afterFn","columns","systemName","justificationNote","dateDisabled","useState","rows","setRows","unclean","setUnclean","deleteAck","host","API","BASE_URL","id","rule_id","limit","hosts_acked_count","addNotification","variant","dismissable","title","error","description","useEffect","data","map","item","cells","display_name","system_uuid","justification","none","date","Date","updated_at","type","isInline","onClick","enable","asMutable","length","width","hostAckModalTitle","isOpen","onClose","isFooterLeftAligned","aria-label","props","colSpan","bool","func","string","defaultProps","connect","AdvisorStore","ownProps","dispatch","setAck","Debounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","fileName","exportTable","defaultParams","toISOString","replace","split","downloadHelper","format","params","get","payload","JSON","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","post","AppConstants","console","ruleHelpful","Button","BarDividedList","list","element","index","RuleDetails","children","topics","header","isDetailsPage","resolutionRisk","resolution","resolution_set","find","system_type","rhel","ocp","resolution_risk","risk","ruleResolutionRisk","topicLinks","topic","tag","slug","to","name","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","gutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","systems","totalRisk","Battery","label","severity","total_risk","TextContent","Text","component","TextVariants","small","rulesDetailsTotalriskBody","likelihood","impact","strong","str","riskofchange","Shield","hasTooltip","reboot_required","Reboot","red","array","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","selectedTags","transforms","sortable","added","cellWidth","ansible","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","text","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","fetchRulesFn","useCallback","urlBuilder","join","filterFetchBuilder","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","param","impacting","hideReports","rowId","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","window","location","paramsObject","paramParser","sort","has_playbook","Array","isArray","Number","reboot","sortIndex","Object","entries","sortDirection","direction","icon","CheckCircleIcon","iconClass","rulesTableNoRuleHitsTitle","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","onChange","event","FC","urlParam","items","res_risk","category","activeFiltersConfig","localFilters","prunedFilters","chips","selectedCategoryValue","String","capitalize","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","routerParams","state","url","AppActions","fetchData","headers","insights","chrome","auth","getUser","response","setData","ActionTypes","fetchRule","fetchSystem","ruleId","encodeURI","fetchTopics","fetchTopicsAdmin","fetchTopic","topic_id","fetchSystems","fetchRuleAck","setFiltersSystems","setSelectedTags","setRule","setSystem","system","___CSS_LOADER_API_IMPORT___","push","URL","queryString","keys","URLSearchParams","set","history","replaceState","origin","pathname","toString","assign","filterName","filterValue","searchParams","from","reduce","acc","parse","toUpperCase","substring","MessageState","iconStyle","headingLevel","marginBottom","CubesIcon","EmptyStateVariant","full","Failed","DisableRule","hosts","setJustificaton","singleSystem","setSingleSystem","bulkHostActions","host_ids","isSmall","onKeyPress","save","cancel","disableRuleBody","fieldId","isChecked","disableRuleForSystems","disableRuleSingleSystem","aria-describedby"],"mappings":"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","file":"js/RulesTable.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label isCompact className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {!rule.reports_shown && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label isCompact className='disabledLabel'><BellSlashIcon size='sm' />&nbsp;{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n        isFooterLeftAligned\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Battery } from '@redhat-cloud-services/frontend-components/components/Battery';\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport { Reboot } from '@redhat-cloud-services/frontend-components/components/Reboot';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { Shield } from '@redhat-cloud-services/frontend-components/components/Shield';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleDetails = ({ children, rule, intl, topics, header, isDetailsPage }) => {\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const resolutionRisk = ruleResolutionRisk(rule);\n\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split gutter='sm'>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack>\n                        <StackItem>{intl.formatMessage(messages.totalRisk)}</StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='pf-u-display-inline-flex'>\n                                <Battery\n                                    label=''\n                                    severity={rule.total_risk} />\n                                <span className={`batteryTextMarginOverride pf-u-pl-sm ins-sev-clr-${rule.total_risk}`}>\n                                    {AppConstants.TOTAL_RISK_LABEL[rule.total_risk] || intl.formatMessage(messages.undefined)}\n                                </span>\n                            </span>\n                        </StackItem>\n                        <StackItem>\n                            <TextContent>\n                                <Text component={TextVariants.small}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                    likelihood: AppConstants.LIKELIHOOD_LABEL[rule.likelihood] || intl.formatMessage(messages.undefined),\n                                    impact: AppConstants.IMPACT_LABEL[rule.impact.impact] || intl.formatMessage(messages.undefined),\n                                    strong(str) { return <strong>{str}</strong>; }\n                                })}</Text>\n                            </TextContent>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem>{intl.formatMessage(messages.riskofchange)}</StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='pf-u-display-inline-flex'>\n                                <Shield\n                                    hasTooltip={false}\n                                    impact={resolutionRisk}\n                                    size={'md'}\n                                    title={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk] || intl.formatMessage(messages.undefined)} />\n                                <span className={`label pf-u-pl-sm ins-sev-clr-${resolutionRisk}`}>\n                                    {AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk] || intl.formatMessage(messages.undefined)}\n                                </span>\n                            </span>\n                        </StackItem>\n                        <StackItem>\n                            <TextContent>\n                                <Text component={TextVariants.small}>\n                                    {AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk]}\n                                </Text>\n                            </TextContent>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n                {rule.reboot_required && <StackItem><Reboot red /> </StackItem>}\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint camelcase: 0 */\nimport './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { capitalize, filterFetchBuilder, paramParser, urlBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport { Battery } from '@redhat-cloud-services/frontend-components/components/Battery';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 600);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags);\n        const options = selectedTags.length && ({ tags: selectedTags.join() });\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            ...options\n        });\n    }, [fetchRules, filters, selectedTags]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, offset: 0, ...(reports_shown !== 'true' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            if (FC[item[0]]) {\n                const category = FC[item[0]];\n                const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                    const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                    return { name: selectedCategoryValue.text || selectedCategoryValue.label, value };\n                })\n                    : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n                return { category: capitalize(category.title), chips, urlParam: category.urlParam };\n            } else {\n                return { category: 'Description', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n            }\n        })\n            : [];\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck' size='md'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('undefined')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    },  {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, reports_shown: 'true', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: false\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                page={(filters.offset / filters.limit + 1)}\n                perPage={Number(filters.limit)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    selectedTags: state.AdvisorStore.selectedTags,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","import * as ActionTypes from './AppConstants';\n\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.get(url, headers, options);\n    return response.data;\n};\n\nconst setData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.post(url, headers, options);\n    return response.data;\n};\n\nexport const fetchStatsRules = (options) => ({\n    type: ActionTypes.STATS_RULES_FETCH,\n    payload: fetchData(ActionTypes.STATS_RULES_FETCH_URL, {}, options)\n});\nexport const fetchStatsSystems = (options) => ({\n    type: ActionTypes.STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.STATS_SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchStatsStaleHosts = (options) => ({\n    type: ActionTypes.STATS_STALEHOSTS_FETCH,\n    payload: fetchData(ActionTypes.STATS_STALEHOSTS_FETCH_URL, {}, options)\n});\nexport const fetchRules = (options) => ({\n    type: ActionTypes.RULES_FETCH,\n    payload: fetchData(ActionTypes.RULES_FETCH_URL, {}, options)\n});\nexport const fetchRule = (options) => ({\n    type: ActionTypes.RULE_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${options.rule_id}/`, {}, options.tags && { tags: options.tags })\n});\nexport const fetchSystem = (ruleId, options) => ({\n    type: ActionTypes.SYSTEM_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${encodeURI(ruleId)}/systems`, {}, options)\n});\nexport const setFilters = (filters) => ({\n    type: ActionTypes.FILTERS_SET,\n    payload: filters\n});\nexport const fetchTopics = (options) => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(ActionTypes.TOPICS_FETCH_URL, {}, options)\n});\nexport const fetchTopicsAdmin = () => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}?show_disabled=true`)\n});\nexport const fetchTopic = (options) => ({\n    type: ActionTypes.TOPIC_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}${options.topic_id}/`)\n});\nexport const fetchSystems = (options) => ({\n    type: ActionTypes.SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchRuleAck = (options) => ({\n    type: ActionTypes.RULE_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.RULE_ACK_URL}${options.rule_id}/`)\n});\nexport const setAck = (options) => ({\n    type: ActionTypes[`${options.type}_ACK_SET`],\n    payload: setData(ActionTypes[`${options.type}_ACK_URL`], {}, options.options)\n});\nexport const fetchHostAcks = (options) => ({\n    type: ActionTypes.HOST_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.HOST_ACK_URL}`, {}, options)\n});\nexport const setFiltersSystems = (filters) => ({\n    type: ActionTypes.FILTERS_SYSTEMS_SET,\n    payload: filters\n});\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\nexport const setRule = (rule) => ({\n    type: ActionTypes.RULE_SET,\n    payload: rule\n});\nexport const setSystem = (system) => ({\n    type: ActionTypes.SYSTEM_SET,\n    payload: system\n});\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-sev-clr-1{color:var(--pf-global--Color--200)}.ins-sev-clr-2{color:var(--pf-global--warning-color--100)}.ins-sev-clr-3{color:var(--ins-color--orange)}.ins-sev-clr-4{color:var(--pf-global--danger-color--100)}.ansibleCol svg{vertical-align:text-bottom}.ansibleCheck{color:var(--pf-global--success-color--200)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center}.batteryTextMarginOverride{padding-top:3px}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--200)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:var(--pf-global--danger-color--100) !important}.disabledLabel{background-color:var(--pf-global--Color--200) !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n    selectedTags !== null && selectedTags.length ? params.set('tags', selectedTags.join()) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, size, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} size={size} />}\n        <Title headingLevel=\"h5\" size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    size: PropTypes.string,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full,\n    size: 'md'\n};\n\nexport default MessageState;\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable camelcase */\n\nimport React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.reports_shown && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            await setAck(options);\n            setJustificaton('');\n            afterFn && afterFn();\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') { disableRule(); }\n    };\n\n    return <Modal\n        isSmall\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        onKeyPress={handleKeyPress}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n        isFooterLeftAligned\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    name=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => { setJustificaton(text); }}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}