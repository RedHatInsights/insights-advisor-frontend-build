{"version":3,"sources":["webpack:///./src/AppActions.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js"],"names":["fetchData","url","headers","options","a","insights","chrome","auth","getUser","API","get","response","data","setData","post","fetchRules","type","ActionTypes","payload","fetchRule","rule_id","tags","fetchSystem","ruleId","encodeURI","setFilters","filters","fetchTopics","fetchTopicsAdmin","fetchTopic","topic_id","fetchSystems","fetchRuleAck","setAck","fetchHostAcks","setFiltersSystems","setSelectedTags","setRule","rule","setSystem","system","Debounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","exports","___CSS_LOADER_API_IMPORT___","push","module","i","MessageState","className","children","icon","iconClass","iconStyle","text","title","variant","style","headingLevel","size","marginBottom","propTypes","PropTypes","any","string","defaultProps","CubesIcon","EmptyStateVariant","full","Failed","message","DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","afterFn","addNotification","selectedTags","justification","setJustificaton","undefined","length","singleSystem","setSingleSystem","bulkHostActions","systems","BASE_URL","host_ids","hosts_acked_count","count","dismissable","formatMessage","messages","error","description","disableRule","reports_shown","system_uuid","id","timeout","ruleSuccessfullyDisabled","isOpen","onClose","onKeyPress","e","key","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","label","disableRuleForSystems","disableRuleSingleSystem","name","justificationNote","aria-describedby","bool","object","func","array","injectIntl","connect","AdvisorStore","dispatch","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","Fragment","search","incidentTooltip","position","TooltipPosition","right","color","incident","ruleIsDisabledTooltip","disabled","ViewHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","map","item","cells","display_name","none","date","Date","updated_at","isInline","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","ownProps","urlBuilder","URL","window","location","queryString","Object","keys","Array","isArray","join","params","URLSearchParams","set","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","from","reduce","acc","JSON","parse","split","pruneFilters","localFilters","filterCategories","prunedFilters","category","chips","selectedCategoryValue","values","find","String","toUpperCase","substring","urlParam","fileName","exportTable","defaultParams","toISOString","replace","downloadHelper","format","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","console","ruleHelpful","Button","BarDividedList","list","element","index","RuleDetails","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","to","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","RulesTable","rules","rulesFetchStatus","transforms","sortable","cellWidth","added","ansible","fitContent","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","resolution","resolution_set","system_type","rhel","ocp","resolution_risk","fetchRulesFn","useCallback","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","param","impacting","hideReports","rowId","ruleSuccessfullyEnabled","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","paramsObject","sort","has_playbook","Number","reboot","sortIndex","sortDirection","direction","CheckCircleIcon","rulesTableNoRuleHitsTitle","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","removeFilterParam","addFilterParam","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","event","placeholder","FC","items","res_risk","activeFiltersConfig","onDelete","itemsToRemove","isAll","newFilter","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","rulesTableFetchRulesError","widgetId","PaginationVariant","routerParams","state","AppActions"],"mappings":"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","file":"js/RulesTable.js","sourcesContent":["import * as ActionTypes from './AppConstants';\n\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.get(url, headers, options);\n    return response.data;\n};\n\nconst setData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.post(url, headers, options);\n    return response.data;\n};\n\nexport const fetchStatsRules = (options) => ({\n    type: ActionTypes.STATS_RULES_FETCH,\n    payload: fetchData(ActionTypes.STATS_RULES_FETCH_URL, {}, options)\n});\nexport const fetchStatsSystems = (options) => ({\n    type: ActionTypes.STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.STATS_SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchStatsStaleHosts = (options) => ({\n    type: ActionTypes.STATS_STALEHOSTS_FETCH,\n    payload: fetchData(ActionTypes.STATS_STALEHOSTS_FETCH_URL, {}, options)\n});\nexport const fetchRules = (options) => ({\n    type: ActionTypes.RULES_FETCH,\n    payload: fetchData(ActionTypes.RULES_FETCH_URL, {}, options)\n});\nexport const fetchRule = (options) => ({\n    type: ActionTypes.RULE_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${options.rule_id}/`, {}, options.tags && { tags: options.tags })\n});\nexport const fetchSystem = (ruleId, options) => ({\n    type: ActionTypes.SYSTEM_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${encodeURI(ruleId)}/systems`, {}, options)\n});\nexport const setFilters = (filters) => ({\n    type: ActionTypes.FILTERS_SET,\n    payload: filters\n});\nexport const fetchTopics = (options) => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(ActionTypes.TOPICS_FETCH_URL, {}, options)\n});\nexport const fetchTopicsAdmin = () => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}?show_disabled=true`)\n});\nexport const fetchTopic = (options) => ({\n    type: ActionTypes.TOPIC_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}${options.topic_id}/`)\n});\nexport const fetchSystems = (options) => ({\n    type: ActionTypes.SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchRuleAck = (options) => ({\n    type: ActionTypes.RULE_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.RULE_ACK_URL}${options.rule_id}/`)\n});\nexport const setAck = (options) => ({\n    type: ActionTypes[`${options.type}_ACK_SET`],\n    payload: setData(ActionTypes[`${options.type}_ACK_URL`], {}, options.options)\n});\nexport const fetchHostAcks = (options) => ({\n    type: ActionTypes.HOST_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.HOST_ACK_URL}`, {}, options)\n});\nexport const setFiltersSystems = (filters) => ({\n    type: ActionTypes.FILTERS_SYSTEMS_SET,\n    payload: filters\n});\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\nexport const setRule = (rule) => ({\n    type: ActionTypes.RULE_SET,\n    payload: rule\n});\nexport const setSystem = (system) => ({\n    type: ActionTypes.SYSTEM_SET,\n    payload: system\n});\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__split{display:inline-flex;justify-content:space-around}.ins-c-rule-details__split .pf-l-split__item{position:relative}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-center-text{text-align:left !important}.ins-c-rule-details__split{display:block}.ins-c-rule-details__split .pf-l-split__item{margin:var(--pf-global--spacer--md)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable camelcase */\n\nimport React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.reports_shown && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            try {\n                await setAck(options);\n                addNotification({\n                    variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyDisabled)\n                });\n                setJustificaton('');\n                afterFn && afterFn();\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        onKeyPress={(e) => e.key === 'Enter' && disableRule()}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {!rule.reports_shown && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n    selectedTags !== null && selectedTags.length ? params.set('tags', selectedTags.join()) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.map(item => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return { category: capitalize(category.title), chips, urlParam: category.urlParam };\n        } else {\n            return { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n        }\n    })\n        : [];\n};\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split className='ins-c-rule-details__split' hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint camelcase: 0 */\nimport './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { filterFetchBuilder, paramParser, pruneFilters, urlBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags);\n        const options = selectedTags.length && ({ tags: selectedTags.join() });\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            ...options\n        });\n    }, [fetchRules, filters, selectedTags]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, offset: 0, ...(reports_shown !== 'true' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                try {\n                    await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                    addNotification({\n                        variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n                    });\n                    fetchRulesFn();\n                } catch (error) {\n                    addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n                }\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('undefined')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, reports_shown: 'true', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    selectedTags: state.AdvisorStore.selectedTags,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n"],"sourceRoot":""}