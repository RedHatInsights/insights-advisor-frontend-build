{"version":3,"sources":["webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/AppActions.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93"],"names":["content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","RuleLabels","intl","rule","Fragment","tags","search","formatMessage","messages","incidentTooltip","position","TooltipPosition","right","color","className","incident","reports_shown","ruleIsDisabledTooltip","icon","disabled","propTypes","PropTypes","any","object","injectIntl","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","handleModalToggle","isModalOpen","hostAcks","afterFn","columns","systemName","justificationNote","dateDisabled","useState","rows","setRows","unclean","setUnclean","deleteAck","host","API","BASE_URL","id","rule_id","limit","hosts_acked_count","addNotification","variant","dismissable","title","error","description","useEffect","data","map","item","cells","display_name","system_uuid","justification","none","date","Date","updated_at","type","isInline","onClick","size","enable","asMutable","length","width","hostAckModalTitle","isOpen","onClose","aria-label","props","colSpan","bool","func","string","defaultProps","connect","AdvisorStore","ownProps","dispatch","setAck","fileName","exportTable","defaultParams","toISOString","replace","split","downloadHelper","format","params","get","payload","JSON","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","post","AppConstants","setTimeout","console","ruleHelpful","Button","BarDividedList","list","element","index","RuleDetails","children","topics","header","isDetailsPage","resolutionRisk","resolution","resolution_set","find","system_type","rhel","ocp","resolution_risk","risk","ruleResolutionRisk","topicLinks","topic","tag","slug","to","name","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","systems","gutter","totalRisk","Battery","label","severity","total_risk","TextContent","Text","component","TextVariants","small","rulesDetailsTotalriskBody","likelihood","impact","strong","str","riskofchange","Shield","hasTooltip","reboot_required","Reboot","red","array","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","selectedTags","transforms","sortable","added","cellWidth","ansible","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","text","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","count","sortIndices","1","2","3","4","5","fetchRulesFn","useCallback","urlBuilder","join","filterFetchBuilder","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","param","impacting","hideReports","rowId","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","window","location","paramsObject","paramParser","sort","has_playbook","Array","isArray","Number","reboot","sortIndex","Object","entries","sortDirection","direction","CheckCircleIcon","iconClass","rulesTableNoRuleHitsTitle","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","value","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","localFilters","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","onChange","event","placeholder","FC","urlParam","items","res_risk","category","activeFiltersConfig","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","String","chips","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","routerParams","state","url","AppActions","fetchData","headers","insights","chrome","auth","getUser","response","setData","ActionTypes","fetchRule","fetchSystem","ruleId","encodeURI","fetchTopics","fetchTopicsAdmin","fetchTopic","topic_id","fetchSystems","fetchRuleAck","setFiltersSystems","setSelectedTags","setRule","setSystem","system","Debounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","___CSS_LOADER_API_IMPORT___","push","URL","queryString","keys","URLSearchParams","set","history","replaceState","origin","pathname","toString","assign","filterName","filterValue","searchParams","from","reduce","acc","parse","capitalize","toUpperCase","substring","filterCategories","prunedFilters","selectedCategoryValue","MessageState","iconStyle","headingLevel","marginBottom","CubesIcon","EmptyStateVariant","full","Failed","DisableRule","hosts","setJustificaton","singleSystem","setSingleSystem","bulkHostActions","host_ids","onKeyPress","save","cancel","disableRuleBody","fieldId","isChecked","disableRuleForSystems","disableRuleSingleSystem","aria-describedby"],"mappings":"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","file":"js/RulesTable.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red'className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {!rule.reports_shown && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray' icon={<BellSlashIcon />}>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Battery } from '@redhat-cloud-services/frontend-components/components/Battery';\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport { Reboot } from '@redhat-cloud-services/frontend-components/components/Reboot';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { Shield } from '@redhat-cloud-services/frontend-components/components/Shield';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleDetails = ({ children, rule, intl, topics, header, isDetailsPage }) => {\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const resolutionRisk = ruleResolutionRisk(rule);\n\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack>\n                        <StackItem>{intl.formatMessage(messages.totalRisk)}</StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='pf-u-display-inline-flex'>\n                                <Battery\n                                    label=''\n                                    severity={rule.total_risk} />\n                                <span className={`batteryTextMarginOverride pf-u-pl-sm ins-sev-clr-${rule.total_risk}`}>\n                                    {AppConstants.TOTAL_RISK_LABEL[rule.total_risk] || intl.formatMessage(messages.undefined)}\n                                </span>\n                            </span>\n                        </StackItem>\n                        <StackItem>\n                            <TextContent>\n                                <Text component={TextVariants.small}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                    likelihood: AppConstants.LIKELIHOOD_LABEL[rule.likelihood] || intl.formatMessage(messages.undefined),\n                                    impact: AppConstants.IMPACT_LABEL[rule.impact.impact] || intl.formatMessage(messages.undefined),\n                                    strong(str) { return <strong>{str}</strong>; }\n                                })}</Text>\n                            </TextContent>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem>{intl.formatMessage(messages.riskofchange)}</StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='pf-u-display-inline-flex'>\n                                <Shield\n                                    hasTooltip={false}\n                                    impact={resolutionRisk}\n                                    size={'md'}\n                                    title={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk] || intl.formatMessage(messages.undefined)} />\n                                <span className={`label pf-u-pl-sm ins-sev-clr-${resolutionRisk}`}>\n                                    {AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk] || intl.formatMessage(messages.undefined)}\n                                </span>\n                            </span>\n                        </StackItem>\n                        <StackItem>\n                            <TextContent>\n                                <Text component={TextVariants.small}>\n                                    {AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk]}\n                                </Text>\n                            </TextContent>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n                {rule.reboot_required && <StackItem><Reboot red /> </StackItem>}\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint camelcase: 0 */\nimport './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { filterFetchBuilder, paramParser, pruneFilters, urlBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport { Battery } from '@redhat-cloud-services/frontend-components/components/Battery';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags);\n        const options = selectedTags.length && ({ tags: selectedTags.join() });\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            ...options\n        });\n    }, [fetchRules, filters, selectedTags]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, offset: 0, ...(reports_shown !== 'true' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('undefined')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, reports_shown: 'true', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: false\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    selectedTags: state.AdvisorStore.selectedTags,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","import * as ActionTypes from './AppConstants';\n\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.get(url, headers, options);\n    return response.data;\n};\n\nconst setData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.post(url, headers, options);\n    return response.data;\n};\n\nexport const fetchStatsRules = (options) => ({\n    type: ActionTypes.STATS_RULES_FETCH,\n    payload: fetchData(ActionTypes.STATS_RULES_FETCH_URL, {}, options)\n});\nexport const fetchStatsSystems = (options) => ({\n    type: ActionTypes.STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.STATS_SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchStatsStaleHosts = (options) => ({\n    type: ActionTypes.STATS_STALEHOSTS_FETCH,\n    payload: fetchData(ActionTypes.STATS_STALEHOSTS_FETCH_URL, {}, options)\n});\nexport const fetchRules = (options) => ({\n    type: ActionTypes.RULES_FETCH,\n    payload: fetchData(ActionTypes.RULES_FETCH_URL, {}, options)\n});\nexport const fetchRule = (options) => ({\n    type: ActionTypes.RULE_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${options.rule_id}/`, {}, options.tags && { tags: options.tags })\n});\nexport const fetchSystem = (ruleId, options) => ({\n    type: ActionTypes.SYSTEM_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${encodeURI(ruleId)}/systems`, {}, options)\n});\nexport const setFilters = (filters) => ({\n    type: ActionTypes.FILTERS_SET,\n    payload: filters\n});\nexport const fetchTopics = (options) => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(ActionTypes.TOPICS_FETCH_URL, {}, options)\n});\nexport const fetchTopicsAdmin = () => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}?show_disabled=true`)\n});\nexport const fetchTopic = (options) => ({\n    type: ActionTypes.TOPIC_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}${options.topic_id}/`)\n});\nexport const fetchSystems = (options) => ({\n    type: ActionTypes.SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchRuleAck = (options) => ({\n    type: ActionTypes.RULE_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.RULE_ACK_URL}${options.rule_id}/`)\n});\nexport const setAck = (options) => ({\n    type: ActionTypes[`${options.type}_ACK_SET`],\n    payload: setData(ActionTypes[`${options.type}_ACK_URL`], {}, options.options)\n});\nexport const fetchHostAcks = (options) => ({\n    type: ActionTypes.HOST_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.HOST_ACK_URL}`, {}, options)\n});\nexport const setFiltersSystems = (filters) => ({\n    type: ActionTypes.FILTERS_SYSTEMS_SET,\n    payload: filters\n});\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\nexport const setRule = (rule) => ({\n    type: ActionTypes.RULE_SET,\n    payload: rule\n});\nexport const setSystem = (system) => ({\n    type: ActionTypes.SYSTEM_SET,\n    payload: system\n});\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-sev-clr-1{color:var(--pf-global--Color--200)}.ins-sev-clr-2{color:var(--pf-global--warning-color--100)}.ins-sev-clr-3{color:var(--ins-color--orange)}.ins-sev-clr-4{color:var(--pf-global--danger-color--100)}.ansibleCol svg{vertical-align:text-bottom}.ansibleCheck{color:var(--pf-global--success-color--200)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center}.batteryTextMarginOverride{padding-top:3px}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--200)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n    selectedTags !== null && selectedTags.length ? params.set('tags', selectedTags.join()) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.map(item => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return { category: capitalize(category.title), chips, urlParam: category.urlParam };\n        } else {\n            return { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n        }\n    })\n        : [];\n};\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable camelcase */\n\nimport React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.reports_shown && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            await setAck(options);\n            setJustificaton('');\n            afterFn && afterFn();\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') { disableRule(); }\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        onKeyPress={handleKeyPress}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    name=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => { setJustificaton(text); }}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}