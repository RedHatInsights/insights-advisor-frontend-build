{"version":3,"sources":["webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/AppActions.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss"],"names":["DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","rule","afterFn","setAck","addNotification","setSystem","setRule","selectedTags","useState","justification","setJustificaton","undefined","length","singleSystem","setSingleSystem","bulkHostActions","a","data","systems","API","post","BASE_URL","rule_id","response","host_ids","hosts_acked_count","count","variant","dismissable","title","formatMessage","messages","error","description","disableRule","reports_shown","options","type","system_uuid","id","isOpen","onClose","onKeyPress","e","key","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","label","disableRuleForSystems","disableRuleSingleSystem","name","justificationNote","aria-describedby","value","text","propTypes","PropTypes","bool","object","func","any","array","defaultProps","system","injectIntl","connect","AdvisorStore","dispatch","content","module","i","transform","update","locals","exports","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","Fragment","tags","search","incidentTooltip","position","TooltipPosition","right","color","className","incident","ruleIsDisabledTooltip","disabled","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","useEffect","map","item","cells","display_name","none","date","Date","updated_at","isInline","size","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","string","ownProps","fileName","exportTable","defaultParams","toISOString","replace","split","downloadHelper","format","params","get","payload","JSON","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","setTimeout","console","ruleHelpful","Button","BarDividedList","list","element","index","RuleDetails","children","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","to","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","transforms","sortable","cellWidth","added","ansible","fitContent","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","resolution","resolution_set","find","system_type","rhel","ocp","resolution_risk","fetchRulesFn","useCallback","urlBuilder","join","filterFetchBuilder","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","param","impacting","hideReports","rowId","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","window","location","paramsObject","paramParser","sort","has_playbook","Array","isArray","Number","reboot","sortIndex","Object","entries","sortDirection","direction","icon","CheckCircleIcon","iconClass","rulesTableNoRuleHitsTitle","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","localFilters","removeFilterParam","addFilterParam","values","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","event","placeholder","FC","urlParam","items","res_risk","category","activeFiltersConfig","pruneFilters","onDelete","itemsToRemove","isAll","newFilter","String","chips","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","routerParams","state","url","AppActions","fetchData","headers","insights","chrome","auth","getUser","setData","ActionTypes","fetchRule","fetchSystem","ruleId","encodeURI","fetchTopics","fetchTopicsAdmin","fetchTopic","topic_id","fetchSystems","fetchRuleAck","setFiltersSystems","setSelectedTags","Debounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","___CSS_LOADER_API_IMPORT___","push","URL","queryString","keys","URLSearchParams","set","history","replaceState","origin","pathname","toString","assign","filterName","filterValue","searchParams","from","reduce","acc","parse","capitalize","toUpperCase","substring","filterCategories","prunedFilters","selectedCategoryValue","MessageState","iconStyle","headingLevel","marginBottom","CubesIcon","EmptyStateVariant","full","Failed"],"mappings":"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","file":"js/RulesTable.js","sourcesContent":["/* eslint-disable camelcase */\n\nimport React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.reports_shown && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            await setAck(options);\n            setJustificaton('');\n            afterFn && afterFn();\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        onKeyPress={(e) => e.key === 'Enter' && disableRule()}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {!rule.reports_shown && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint camelcase: 0 */\nimport './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { filterFetchBuilder, paramParser, pruneFilters, urlBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(30)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags);\n        const options = selectedTags.length && ({ tags: selectedTags.join() });\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            ...options\n        });\n    }, [fetchRules, filters, selectedTags]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, offset: 0, ...(reports_shown !== 'true' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('undefined')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, reports_shown: 'true', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    selectedTags: state.AdvisorStore.selectedTags,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","import * as ActionTypes from './AppConstants';\n\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.get(url, headers, options);\n    return response.data;\n};\n\nconst setData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.post(url, headers, options);\n    return response.data;\n};\n\nexport const fetchStatsRules = (options) => ({\n    type: ActionTypes.STATS_RULES_FETCH,\n    payload: fetchData(ActionTypes.STATS_RULES_FETCH_URL, {}, options)\n});\nexport const fetchStatsSystems = (options) => ({\n    type: ActionTypes.STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.STATS_SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchStatsStaleHosts = (options) => ({\n    type: ActionTypes.STATS_STALEHOSTS_FETCH,\n    payload: fetchData(ActionTypes.STATS_STALEHOSTS_FETCH_URL, {}, options)\n});\nexport const fetchRules = (options) => ({\n    type: ActionTypes.RULES_FETCH,\n    payload: fetchData(ActionTypes.RULES_FETCH_URL, {}, options)\n});\nexport const fetchRule = (options) => ({\n    type: ActionTypes.RULE_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${options.rule_id}/`, {}, options.tags && { tags: options.tags })\n});\nexport const fetchSystem = (ruleId, options) => ({\n    type: ActionTypes.SYSTEM_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${encodeURI(ruleId)}/systems`, {}, options)\n});\nexport const setFilters = (filters) => ({\n    type: ActionTypes.FILTERS_SET,\n    payload: filters\n});\nexport const fetchTopics = (options) => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(ActionTypes.TOPICS_FETCH_URL, {}, options)\n});\nexport const fetchTopicsAdmin = () => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}?show_disabled=true`)\n});\nexport const fetchTopic = (options) => ({\n    type: ActionTypes.TOPIC_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}${options.topic_id}/`)\n});\nexport const fetchSystems = (options) => ({\n    type: ActionTypes.SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchRuleAck = (options) => ({\n    type: ActionTypes.RULE_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.RULE_ACK_URL}${options.rule_id}/`)\n});\nexport const setAck = (options) => ({\n    type: ActionTypes[`${options.type}_ACK_SET`],\n    payload: setData(ActionTypes[`${options.type}_ACK_URL`], {}, options.options)\n});\nexport const fetchHostAcks = (options) => ({\n    type: ActionTypes.HOST_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.HOST_ACK_URL}`, {}, options)\n});\nexport const setFiltersSystems = (filters) => ({\n    type: ActionTypes.FILTERS_SYSTEMS_SET,\n    payload: filters\n});\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\nexport const setRule = (rule) => ({\n    type: ActionTypes.RULE_SET,\n    payload: rule\n});\nexport const setSystem = (system) => ({\n    type: ActionTypes.SYSTEM_SET,\n    payload: system\n});\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n    selectedTags !== null && selectedTags.length ? params.set('tags', selectedTags.join()) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.map(item => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return { category: capitalize(category.title), chips, urlParam: category.urlParam };\n        } else {\n            return { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n        }\n    })\n        : [];\n};\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}