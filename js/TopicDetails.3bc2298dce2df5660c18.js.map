{"version":3,"sources":["webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./node_modules/lodash/_arrayIncludes.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/SmartComponents/Topics/_Details.scss","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/SmartComponents/Topics/Details.js","webpack:///./src/SmartComponents/Topics/_Details.scss?e817"],"names":["Loading","exports","___CSS_LOADER_API_IMPORT___","push","module","i","MessageState","className","children","icon","iconClass","iconStyle","text","title","variant","style","headingLevel","size","marginBottom","propTypes","PropTypes","any","string","defaultProps","CubesIcon","EmptyStateVariant","full","urlBuilder","filters","selectedTags","workloads","url","URL","window","location","queryString","Object","keys","map","key","Array","isArray","join","params","URLSearchParams","get","SAP","set","length","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","search","from","reduce","acc","value","JSON","parse","split","encodeOptionsToURL","options","index","pruneFilters","localFilters","filterCategories","prunedFilters","arr","item","category","chips","selectedCategoryValue","values","find","String","name","label","toUpperCase","substring","urlParam","workloadQueryBuilder","SID","generateFilter","system_profile","isSelected","sap_system","sap_sids","Failed","message","DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","rule","afterFn","setAck","addNotification","setSystem","setRule","useState","justification","setJustificaton","undefined","singleSystem","setSingleSystem","bulkHostActions","a","data","systems","API","post","BASE_URL","rule_id","response","host_ids","hosts_acked_count","count","dismissable","formatMessage","messages","error","description","disableRule","rule_status","type","system_uuid","id","timeout","ruleSuccessfullyDisabled","isOpen","onClose","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","disableRuleForSystems","disableRuleSingleSystem","justificationNote","aria-describedby","onKeyDown","e","preventDefault","bool","object","func","array","system","injectIntl","connect","AdvisorStore","dispatch","baseIndexOf","comparator","Breadcrumbs","current","fetchRule","match","ruleFetchStatus","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","insightsHeader","navigate","inventoryId","useEffect","Fragment","oneLink","to","isActive","loading","routerParams","state","ownProps","AppActions","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","tags","incidentTooltip","position","TooltipPosition","right","color","incident","ruleIsDisabledTooltip","disabled","redhatDisabled","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","cells","display_name","none","date","Date","updated_at","isInline","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","Debounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","fileName","exportTable","defaultParams","toISOString","replace","downloadHelper","format","payload","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","console","ruleHelpful","Button","BarDividedList","list","element","RuleDetails","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","RulesTable","rules","rulesFetchStatus","setFilters","fetchRules","transforms","sortable","cellWidth","added","ansible","fitContent","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","resolution","resolution_set","system_type","rhel","ocp","resolution_risk","fetchRulesFn","encodeURIComponent","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","impacting","hideReports","rowId","ruleSuccessfullyEnabled","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","noRuleHitsBodyMessage","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsDisabledRulesBody","rulesTableNoRuleHitsRedHatDisabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","paramsObject","sort","has_playbook","Number","reboot","sortIndex","sortDirection","direction","CheckCircleIcon","rulesTableNoRuleHitsTitle","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","removeFilterParam","param","addFilterParam","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","event","placeholder","FC","res_risk","activeFiltersConfig","onDelete","itemsToRemove","isAll","newFilter","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","exportData","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","rulesTableFetchRulesError","widgetId","PaginationVariant","Details","fetchTopic","topicFetchStatus","topic_id","featured","expandText","readmore","collapseText","readless","inline","recommendations","TimesCircleIcon","topicDetailslNodetailsTitle","topicDetailslNodetailsBody"],"mappings":"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","file":"js/TopicDetails.3bc2298dce2df5660c18.js","sourcesContent":["import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { List } from 'react-content-loader';\nimport React from 'react';\nconst Loading = () => <>\n    <Card>\n        <CardBody>\n            <List />\n        </CardBody>\n    </Card></>;\n\nexport default Loading;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__split{display:inline-flex;justify-content:space-around}.ins-c-rule-details__split .pf-l-split__item{position:relative}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-center-text{text-align:left !important}.ins-c-rule-details__split{display:block}.ins-c-rule-details__split .pf-l-split__item{margin:var(--pf-global--spacer--md)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import { generateFilter } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\n// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags, workloads) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n\n    //Removes invalid 'undefined' url param value\n    params.get('reports_shown') === 'undefined' && params.delete('reports_shown');\n\n    workloads?.SAP ? params.set('sap_system', true) : params.delete('sap_system');\n    selectedTags?.length ? params.set('tags', selectedTags) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// create url from options\nexport const encodeOptionsToURL = (options) => {\n    return Object.entries(options).reduce((acc, [key, value], index) => {\n        return acc += index === 0 ? `${key}=${value}` : `&${key}=${value}`;\n    }, '');\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.reduce((arr, item) => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return [...arr, { category: capitalize(category.title), chips, urlParam: category.urlParam }];\n        } else if (item[0] === 'text') {\n            return [...arr, { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] }];\n        } else { return arr; }\n    }, []) : [];\n};\n\n// builds workload query filter\nexport const workloadQueryBuilder = (workloads, SID) => generateFilter({\n    system_profile: {\n        ...workloads?.SAP?.isSelected && { sap_system: true },\n        ...SID?.length > 0 && { sap_sids: SID }\n    }\n});\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.rule_status === 'enabled' && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            try {\n                await setAck(options);\n                addNotification({\n                    variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyDisabled)\n                });\n                setJustificaton('');\n                afterFn && afterFn();\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                    onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), disableRule())}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport * as AppActions from '../../AppActions';\n\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Breadcrumb } from '@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb';\nimport { BreadcrumbItem } from '@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add base\n        crumbs.push({ title: `${intl.formatMessage(messages.insightsHeader)} ${splitUrl[1]}`, navigate: `/${splitUrl[1]}` });\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: rule.description,\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[1] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id })\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{oneLink.title}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'disabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'rhdisabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.redhatDisabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split className='ins-c-rule-details__split' hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}.titleOverride{margin-bottom:var(--pf-global--spacer--lg)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { encodeOptionsToURL, filterFetchBuilder, paramParser, pruneFilters, urlBuilder, workloadQueryBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags, workloads, SID }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags, workloads);\n        let options = selectedTags?.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)) });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        fetchRules(\n            options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n            options.tags && encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n        );\n    }, [fetchRules, filters, selectedTags, workloads, SID]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (rule_status) => {\n        setFilters({ ...filters, rule_status, offset: 0, ...(rule_status !== 'enabled' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.rule_status === 'enabled') {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                try {\n                    await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                    addNotification({\n                        variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n                    });\n                    fetchRulesFn();\n                } catch (error) {\n                    addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n                }\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.rule_status === 'enabled' ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.rule_status === 'enabled' ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    const noRuleHitsBodyMessage = (rule_status) => {\n        switch (rule_status) {\n            case 'enabled': return messages.rulesTableNoRuleHitsEnabledRulesBody;\n            case 'disabled': return messages.rulesTableNoRuleHitsDisabledRulesBody;\n            case 'rhdisabled': return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n            default: return messages.rulesTableNoRuleHitsAnyRulesBody;\n        }\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            delete paramsObject.sap_system;\n\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)}\n                                text={intl.formatMessage(noRuleHitsBodyMessage(filters.rule_status))}>\n                                {filters.rule_status === 'enabled' && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('all')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.rule_status === 'enabled' ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.rule_status.title,\n        type: FC.rule_status.type,\n        id: FC.rule_status.urlParam,\n        value: `radio-${FC.rule_status.urlParam}`,\n        filterValues: {\n            key: `${FC.rule_status.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: `${filters.rule_status}`,\n            items: FC.rule_status.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, rule_status: 'enabled', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting,\n                tooltipText: intl.formatMessage(messages.exportData)\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object,\n    SID: PropTypes.Object\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    rules: AdvisorStore.rules,\n    rulesFetchStatus: AdvisorStore.rulesFetchStatus,\n    filters: AdvisorStore.filters,\n    selectedTags: AdvisorStore.selectedTags,\n    workloads: AdvisorStore.workloads,\n    SID: AdvisorStore.SID,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (options, search) => dispatch(AppActions.fetchRules(options, search)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","import './_Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport React, { useEffect } from 'react';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport PropTypes from 'prop-types';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport StarIcon from '@patternfly/react-icons/dist/js/icons/star-icon';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Truncate } from '@redhat-cloud-services/frontend-components/components/Truncate';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Details = ({ match, fetchTopic, setFilters, topic, topicFetchStatus, intl, filters }) => {\n    useEffect(() => {\n        if (typeof filters.topic === 'undefined') {\n            setFilters({ impacting: true, rule_status: 'enabled', topic: match.params.id, sort: `-total_risk`, limit: 10, offset: 0  });\n        }\n    });\n\n    useEffect(() => {\n        fetchTopic({ topic_id: match.params.id });\n        return () => {\n            setFilters({ impacting: true, rule_status: 'enabled', sort: '-total_risk', limit: 10, offset: 0 });\n        };\n    }, [fetchTopic, match.params.id, setFilters]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Breadcrumbs\n                current={topic.name}\n                match={match}\n            />\n            {topicFetchStatus === 'fulfilled' &&\n                <React.Fragment>\n                    <Title headingLevel='h3' size=\"2xl\" className='titleOverride'>\n                        {topic.name}{topic.featured && <Label color='blue' className='labelOverride' icon={<StarIcon />}>\n                            {intl.formatMessage(messages.featured)}\n                        </Label>}\n                    </Title>\n                    <TextContent className='textOverride'>\n                        <Text component={TextVariants.p}>\n                            <Truncate\n                                text={topic.description}\n                                length={600}\n                                expandText={intl.formatMessage(messages.readmore)}\n                                collapseText={intl.formatMessage(messages.readless)}\n                                inline\n                            />\n                        </Text>\n                    </TextContent>\n                </React.Fragment>\n            }\n            {topicFetchStatus === '' || topicFetchStatus === 'pending' && <Loading />}\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                {topicFetchStatus === '' || topicFetchStatus === 'pending' || topicFetchStatus === 'fulfilled' && <React.Fragment>\n                    <Title headingLevel=\"h3\" size=\"2xl\" className='titleOverride'>\n                        {intl.formatMessage(messages.recommendations)}\n                    </Title>\n                    {filters.topic && <RulesTable />}\n                </React.Fragment>}\n                {topicFetchStatus === 'failed' || topicFetchStatus === 'rejected' &&\n                    <MessageState icon={TimesCircleIcon} title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n                        text={intl.formatMessage(messages.topicDetailslNodetailsBody)} />}\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n};\n\nDetails.propTypes = {\n    match: PropTypes.any,\n    fetchTopic: PropTypes.func,\n    topic: PropTypes.object,\n    topicFetchStatus: PropTypes.string,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    filters: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    topic: state.AdvisorStore.topic,\n    topicFetchStatus: state.AdvisorStore.topicFetchStatus,\n    filters: state.AdvisorStore.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopic: (url) => dispatch(AppActions.fetchTopic(url)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Details)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}