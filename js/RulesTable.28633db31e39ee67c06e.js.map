{"version":3,"sources":["webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js"],"names":["Debounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","MessageState","className","children","icon","iconClass","iconStyle","text","title","variant","style","headingLevel","size","marginBottom","propTypes","PropTypes","any","string","defaultProps","CubesIcon","EmptyStateVariant","full","exports","___CSS_LOADER_API_IMPORT___","push","module","i","urlBuilder","filters","selectedTags","workloads","url","URL","window","location","queryString","Object","keys","map","key","Array","isArray","join","params","URLSearchParams","get","SAP","set","length","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","search","from","reduce","acc","JSON","parse","split","encodeOptionsToURL","options","index","pruneFilters","localFilters","filterCategories","prunedFilters","arr","item","category","chips","selectedCategoryValue","values","find","String","name","label","toUpperCase","substring","urlParam","workloadQueryBuilder","SID","generateFilter","system_profile","isSelected","sap_system","sap_sids","Failed","message","DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","rule","afterFn","setAck","addNotification","setSystem","setRule","justification","setJustificaton","undefined","singleSystem","setSingleSystem","bulkHostActions","a","data","systems","API","post","BASE_URL","rule_id","response","host_ids","hosts_acked_count","count","dismissable","formatMessage","messages","error","description","disableRule","rule_status","type","system_uuid","id","timeout","ruleSuccessfullyDisabled","isOpen","onClose","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","disableRuleForSystems","disableRuleSingleSystem","justificationNote","aria-describedby","onKeyDown","e","preventDefault","bool","object","func","array","system","injectIntl","connect","AdvisorStore","dispatch","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","Fragment","tags","incidentTooltip","position","TooltipPosition","right","color","incident","ruleIsDisabledTooltip","disabled","redhatDisabled","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","cells","display_name","none","date","Date","updated_at","isInline","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","ownProps","fileName","exportTable","defaultParams","toISOString","replace","downloadHelper","format","payload","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","console","ruleHelpful","Button","BarDividedList","list","element","RuleDetails","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","to","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","RulesTable","rules","rulesFetchStatus","setFilters","fetchRules","transforms","sortable","cellWidth","added","ansible","fitContent","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","resolution","resolution_set","system_type","rhel","ocp","resolution_risk","fetchRulesFn","useCallback","encodeURIComponent","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","impacting","hideReports","rowId","ruleSuccessfullyEnabled","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","noRuleHitsBodyMessage","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsDisabledRulesBody","rulesTableNoRuleHitsRedHatDisabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","paramsObject","sort","has_playbook","Number","reboot","sortIndex","sortDirection","direction","CheckCircleIcon","rulesTableNoRuleHitsTitle","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","removeFilterParam","param","addFilterParam","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","event","placeholder","FC","items","res_risk","activeFiltersConfig","onDelete","itemsToRemove","isAll","newFilter","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","exportData","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","rulesTableFetchRulesError","widgetId","PaginationVariant","routerParams","AppActions"],"mappings":"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","file":"js/RulesTable.28633db31e39ee67c06e.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__split{display:inline-flex;justify-content:space-around}.ins-c-rule-details__split .pf-l-split__item{position:relative}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-center-text{text-align:left !important}.ins-c-rule-details__split{display:block}.ins-c-rule-details__split .pf-l-split__item{margin:var(--pf-global--spacer--md)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { generateFilter } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\n// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags, workloads) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n\n    //Removes invalid 'undefined' url param value\n    params.get('reports_shown') === 'undefined' && params.delete('reports_shown');\n\n    workloads?.SAP ? params.set('sap_system', true) : params.delete('sap_system');\n    selectedTags?.length ? params.set('tags', selectedTags) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// create url from options\nexport const encodeOptionsToURL = (options) => {\n    return Object.entries(options).reduce((acc, [key, value], index) => {\n        return acc += index === 0 ? `${key}=${value}` : `&${key}=${value}`;\n    }, '');\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.reduce((arr, item) => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return [...arr, { category: capitalize(category.title), chips, urlParam: category.urlParam }];\n        } else if (item[0] === 'text') {\n            return [...arr, { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] }];\n        } else { return arr; }\n    }, []) : [];\n};\n\n// builds workload query filter\nexport const workloadQueryBuilder = (workloads, SID) => generateFilter({\n    system_profile: {\n        ...workloads?.SAP?.isSelected && { sap_system: true },\n        ...SID?.length > 0 && { sap_sids: SID }\n    }\n});\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.rule_status === 'enabled' && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            try {\n                await setAck(options);\n                addNotification({\n                    variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyDisabled)\n                });\n                setJustificaton('');\n                afterFn && afterFn();\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                    onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), disableRule())}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'disabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'rhdisabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.redhatDisabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split className='ins-c-rule-details__split' hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { encodeOptionsToURL, filterFetchBuilder, paramParser, pruneFilters, urlBuilder, workloadQueryBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags, workloads, SID }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags, workloads);\n        let options = selectedTags?.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)) });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        fetchRules(\n            options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n            options.tags && encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n        );\n    }, [fetchRules, filters, selectedTags, workloads, SID]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (rule_status) => {\n        setFilters({ ...filters, rule_status, offset: 0, ...(rule_status !== 'enabled' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.rule_status === 'enabled') {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                try {\n                    await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                    addNotification({\n                        variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n                    });\n                    fetchRulesFn();\n                } catch (error) {\n                    addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n                }\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.rule_status === 'enabled' ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.rule_status === 'enabled' ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    const noRuleHitsBodyMessage = (rule_status) => {\n        switch (rule_status) {\n            case 'enabled': return messages.rulesTableNoRuleHitsEnabledRulesBody;\n            case 'disabled': return messages.rulesTableNoRuleHitsDisabledRulesBody;\n            case 'rhdisabled': return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n            default: return messages.rulesTableNoRuleHitsAnyRulesBody;\n        }\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            delete paramsObject.sap_system;\n\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)}\n                                text={intl.formatMessage(noRuleHitsBodyMessage(filters.rule_status))}>\n                                {filters.rule_status === 'enabled' && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('all')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.rule_status === 'enabled' ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.rule_status.title,\n        type: FC.rule_status.type,\n        id: FC.rule_status.urlParam,\n        value: `radio-${FC.rule_status.urlParam}`,\n        filterValues: {\n            key: `${FC.rule_status.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: `${filters.rule_status}`,\n            items: FC.rule_status.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, rule_status: 'enabled', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting,\n                tooltipText: intl.formatMessage(messages.exportData)\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object,\n    SID: PropTypes.Object\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    rules: AdvisorStore.rules,\n    rulesFetchStatus: AdvisorStore.rulesFetchStatus,\n    filters: AdvisorStore.filters,\n    selectedTags: AdvisorStore.selectedTags,\n    workloads: AdvisorStore.workloads,\n    SID: AdvisorStore.SID,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (options, search) => dispatch(AppActions.fetchRules(options, search)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n"],"sourceRoot":""}