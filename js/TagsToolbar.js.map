{"version":3,"sources":["webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/lodash/_arrayIncludes.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./node_modules/lodash/isArrayLikeObject.js","webpack:///./node_modules/lodash/intersection.js","webpack:///./node_modules/lodash/_baseIntersection.js","webpack:///./node_modules/lodash/_castArrayLikeObject.js"],"names":["baseGetTag","isObject","module","exports","value","tag","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","nativeObjectToString","Object","prototype","toString","call","isFunction","isLength","length","arrayLikeToArray","Array","isArray","iter","Symbol","iterator","from","TypeError","baseIndexOf","array","comparator","index","isArrayLike","isObjectLike","arrayMap","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","iteratee","includes","othLength","othIndex","caches","maxLength","Infinity","result","undefined","seen","outer","computed","cache","push","isArrayLikeObject"],"mappings":"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","file":"js/TagsToolbar.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n"],"sourceRoot":""}