{"version":3,"sources":["webpack:///./src/PresentationalComponents/TagsToolbar/_TagsToolbar.scss?1dc4","webpack:///./src/PresentationalComponents/TagsToolbar/ManageTags.js","webpack:///./src/PresentationalComponents/TagsToolbar/Common.js","webpack:///./src/PresentationalComponents/TagsToolbar/TagsToolbar.js","webpack:///./src/AppActions.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/TagsToolbar/_TagsToolbar.scss"],"names":["content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","ManageTags","toggleModal","fetchTags","selectedTags","setSelectedTags","totalTags","isOpen","useState","tags","setTags","loaded","setLoaded","selected","setSelected","perPage","setPerPage","page","setPage","searchText","setSearchText","intl","useIntl","debouncedSearchText","debounce","DEBOUNCE_DELAY","activeFiltersConfig","useMemo","filters","map","tag","namespace","filter","value","index","self","indexOf","category","chips","name","id","urlParam","buildFilterChips","useEffect","length","split","decodeURIComponent","TagModal","title","formatMessage","messages","tagsCount","count","pagination","rows","find","selection","cells","width","label","filterTagsInModal","placeholder","filterValues","onChange","event","onUpdateData","data","columns","tagsModalName","tagsModalValue","tagsModalSources","systems","onSelect","onApply","tableProps","canSelectAll","primaryToolbarProps","onDelete","e","items","isAll","ids","flatMap","item","chip","propTypes","PropTypes","func","isRequired","number","bool","array","connect","AdvisorStore","dispatch","tagUrlBuilder","tagsToSet","url","URL","window","location","params","URLSearchParams","search","set","join","history","replaceState","origin","pathname","toString","TagsToolbar","setIsOpen","setTotalTags","setParams","setTagsCount","manageTagsModalOpen","setManageTagsModalOpen","groupTags","source","formatTags","formattedTags","push","encodeURIComponent","API","get","INV_BASE_URL","toLowerCase","response","total","results","intersection","addNotification","variant","dismissable","error","description","urlParams","className","Select","SelectVariant","checkbox","aria-label","onToggle","includes","selections","placeholderText","Fragment","filterResults","allSystems","noTags","ariaLabelledBy","isDisabled","InputGroup","TextInput","filterTagsInToolbar","Divider","group","tagIndex","isChecked","Tooltip","position","TooltipPosition","right","Badge","Button","onClick","countMoreTags","manageTags","any","state","fetchData","headers","insights","chrome","auth","getUser","setData","post","fetchRules","type","ActionTypes","payload","fetchRule","rule_id","fetchSystem","ruleId","encodeURI","setFilters","fetchTopics","fetchTopicsAdmin","fetchTopic","topic_id","fetchSystems","fetchRuleAck","setAck","fetchHostAcks","setFiltersSystems","setRule","rule","setSystem","system","Debounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"js/TagsToolbar.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useMemo, useState } from 'react';\n\nimport { DEBOUNCE_DELAY } from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/components/TagModal';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport messages from '../../Messages';\nimport { setSelectedTags } from '../../AppActions';\nimport { useIntl } from 'react-intl';\n\nconst buildFilterChips = (selected) => {\n    const filters = selected.map(tag => tag.namespace).filter(\n        (value, index, self) =>\n            self.indexOf(value) === index\n    ).map(category => ({\n        category,\n        chips: selected.filter(tag =>\n            tag.namespace === category\n        ).map(tag => ({\n            name: tag.value,\n            id: tag.id,\n            value: true\n        })),\n        urlParam: 'tags'\n    }));\n    return { filters };\n};\n\nconst ManageTags = ({ toggleModal, fetchTags, selectedTags, setSelectedTags, totalTags, isOpen }) => {\n    const [tags, setTags] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [perPage, setPerPage] = useState(10);\n    const [page, setPage] = useState(1);\n    const [searchText, setSearchText] = useState();\n    const intl = useIntl();\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const activeFiltersConfig = useMemo(() => buildFilterChips(selected), [selected]);\n\n    useEffect(() => {\n        (async () => {\n            setPage(1);\n            setTags(await fetchTags(perPage, 1, null, searchText));\n            setLoaded(true);\n        })();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    useEffect(() => {\n        (async () => {\n            setTags(await fetchTags(perPage, page, null, debouncedSearchText));\n            setLoaded(true);\n        })();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [perPage, page]);\n\n    useEffect(() => {\n        setSelected(selectedTags.length ? selectedTags.map(id => ({\n            id,\n            namespace: id.split('/')[0],\n            key: decodeURIComponent(id.split('/')[1].split('=')[0]),\n            value: decodeURIComponent(id.split('/')[1].split('=')[1])\n        })) : []);\n    }, [selectedTags, setSelected]);\n\n    const onDelete = (e, items, isAll) => {\n        if (isAll) {\n            setSelected([]);\n        } else {\n            const ids = items.flatMap(item => item.chips.map(chip => chip.id));\n            setSelected(selected.filter(tag => ids.filter(id => id !== tag.id).length));\n        }\n    };\n\n    return <TagModal\n        title={intl.formatMessage(messages.tagsCount, { count: totalTags })}\n        {...loaded && {\n            loaded,\n            pagination: {\n                perPage,\n                page,\n                count: totalTags\n            },\n            rows: tags.map(tag => ({\n                ...tag,\n                selected: selected.find(selection => selection.id === tag.id),\n                cells: [tag.key, tag.value, tag.namespace, tag.count]\n            }))\n        }}\n        loaded={ loaded }\n        width='50%'\n        isOpen={ isOpen }\n        toggleModal={() => {\n            setPerPage(10);\n            setPage(1);\n            setSearchText();\n            setSelected([]);\n            toggleModal();\n        }}\n        filters={[\n            {\n                label: intl.formatMessage(messages.filterTagsInModal),\n                placeholder: intl.formatMessage(messages.filterTagsInModal),\n                value: 'tags-filter',\n                filterValues: {\n                    key: 'text-filter',\n                    onChange: (event, value) => setSearchText(value),\n                    value: searchText\n                }\n            }\n        ]}\n        onUpdateData={(data) => {\n            setLoaded(false);\n            setPerPage(data.perPage);\n            setPage(data.page);\n        }}\n        columns={ [\n            { title: intl.formatMessage(messages.tagsModalName) },\n            { title: intl.formatMessage(messages.tagsModalValue) },\n            { title: intl.formatMessage(messages.tagsModalSources) },\n            { title: intl.formatMessage(messages.systems) }\n        ] }\n        selected={selected}\n        onSelect={(selected) => setSelected(selected.map(tag => ({\n            id: tag.id,\n            namespace: tag.namespace,\n            value: tag.value,\n            selected: true\n        })))}\n        onApply={() => {\n            setSelectedTags(selected.map(tag => tag.id));\n            setSelected([]);\n        }}\n        tableProps={{ canSelectAll: false }}\n        primaryToolbarProps={{\n            activeFiltersConfig: {\n                ...activeFiltersConfig,\n                onDelete\n            }\n        }}\n    />;\n};\n\nManageTags.propTypes = {\n    toggleModal: PropTypes.func.isRequired,\n    fetchTags: PropTypes.func.isRequired,\n    totalTags: PropTypes.number.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    selectedTags: PropTypes.array,\n    setSelectedTags: PropTypes.func\n};\n\nexport default connect(\n    ({ AdvisorStore }) => ({ selectedTags: AdvisorStore.selectedTags }),\n    dispatch => ({\n        setSelectedTags: (tags) => dispatch(setSelectedTags(tags))\n    }))(ManageTags);\n","const tagUrlBuilder = (tagsToSet) => {\n    if (tagsToSet !== null) {\n        const url = new URL(window.location);\n        let params = new URLSearchParams(url.search);\n        tagsToSet.length ? params.set('tags', tagsToSet.join()) : params.delete('tags');\n        window.history.replaceState(null, null, `${url.origin}${url.pathname}${params.toString().length ? '?' : ''}${params.toString()}`);\n    }\n};\n\nexport { tagUrlBuilder };\n","import './_TagsToolbar.scss';\n\nimport React, { useEffect, useState } from 'react';\nimport { Select, SelectGroup, SelectOption, SelectVariant } from '@patternfly/react-core/dist/js/components/Select/index';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport API from '../../Utilities/Api';\nimport { Badge } from '@patternfly/react-core/dist/js/components/Badge/Badge';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DEBOUNCE_DELAY } from '../../AppConstants';\nimport { Divider } from '@patternfly/react-core/dist/js/components/Divider/Divider';\nimport { INV_BASE_URL } from '../../AppConstants';\nimport { InputGroup } from '@patternfly/react-core/dist/js/components/InputGroup/InputGroup';\nimport ManageTags from './ManageTags';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport TagIcon from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport intersection from 'lodash/intersection';\nimport messages from '../../Messages';\nimport { setSelectedTags } from '../../AppActions';\nimport { tagUrlBuilder } from './Common';\nimport { useIntl } from 'react-intl';\n\nconst TagsToolbar = ({ selectedTags, setSelectedTags }) => {\n    const intl = useIntl();\n    const [isOpen, setIsOpen] = useState(false);\n    const [totalTags, setTotalTags] = useState();\n    const [tags, setTags] = useState([]);\n    const [searchText, setSearchText] = useState();\n    const [params, setParams] = useState();\n    const [tagsCount, setTagsCount] = useState();\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const [manageTagsModalOpen, setManageTagsModalOpen] = useState(false);\n    const showMoreCount = 20;\n\n    const groupTags = (tags) => {\n        return tags.map(tag => tag.namespace).filter((value, index, self) =>\n            self.indexOf(value) === index\n        ).map(source => ({\n            source,\n            data: tags.filter(tag => tag.namespace === source)\n        }));\n    };\n\n    const formatTags = (tags) => {\n        let formattedTags = [];\n        tags.map(item => {\n            const { namespace, key, value } = item.tag;\n            formattedTags.push({\n                ...item.tag,\n                count: item.count,\n                id: `${namespace}/${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n            });\n        });\n        return formattedTags;\n    };\n\n    const fetchTags = async (perPage, page, params, filter) => {\n        let formattedTags = [];\n        try {\n            const response = (filter === '' || !filter) ?\n                await API.get(`${INV_BASE_URL}/tags?per_page=${perPage}&page=${page}&registered_with=insights`) :\n                await API.get(`${INV_BASE_URL}/tags?per_page=${perPage}&page=${page}&search=${filter.toLowerCase()}&registered_with=insights`);\n            setTotalTags(response.data.total);\n            formattedTags = formatTags(response.data.results);\n            params === null && selectedTags === null && setSelectedTags([]);\n            if (params.length) {\n                const tagsToSet = intersection(params.split(','), selectedTags);\n                tagUrlBuilder(tagsToSet);\n                setSelectedTags(tagsToSet);\n            }\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n\n        return formattedTags;\n    };\n\n    // Force triggers the debounce function on mount (i.e. deleting this will break things)\n    useEffect(() => {\n        setSearchText('');\n    }, []);\n\n    useEffect(() => {\n        setTagsCount(tags.flatMap(source => source.data).length);\n    }, [tags]);\n\n    useEffect(() => {\n        const url = new URL(window.location);\n        let params = new URLSearchParams(url.search);\n        setParams(params.get('tags'));\n    }, [selectedTags]);\n\n    useEffect(() => {\n        const url = new URL(window.location);\n        let urlParams = new URLSearchParams(url.search);\n        urlParams.get('tags') === params ?\n            (async () => setTags(groupTags(await fetchTags(showMoreCount, 1, null, searchText))))() :\n            (async () => setTags(groupTags(await fetchTags(showMoreCount, 1, urlParams, searchText))))();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    useEffect(() => {\n        tagUrlBuilder(selectedTags);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.location]);\n\n    const titleFn = () => <React.Fragment>\n        <TagIcon />&nbsp;\n        {tags.length > 0 ?\n            <React.Fragment>\n                {intl.formatMessage(messages.filterResults)} {selectedTags.length === 0 && intl.formatMessage(messages.allSystems)}\n            </React.Fragment>\n            : intl.formatMessage(messages.noTags)}\n    </React.Fragment>;\n\n    const onToggle = isOpen => {\n        setSearchText('');\n        setIsOpen(isOpen);\n    };\n\n    const onSelect = (e, selection) => {\n        const tagsToSet = selectedTags.includes(selection) ? selectedTags.filter(item => item !== selection)\n            : [...selectedTags, selection];\n        setSelectedTags(tagsToSet);\n        tagUrlBuilder(tagsToSet);\n    };\n\n    return selectedTags !== null && <div className='tagsToolbarContainer'>\n        {<ManageTags\n            totalTags={totalTags}\n            toggleModal={() => setManageTagsModalOpen(!manageTagsModalOpen)}\n            isOpen={manageTagsModalOpen}\n            fetchTags={fetchTags}\n        />}\n        <Select\n            className='dropDownOverride'\n            variant={SelectVariant.checkbox}\n            aria-label='Select Group Input'\n            onToggle={onToggle}\n            onSelect={onSelect}\n            selections={selectedTags}\n            isOpen={isOpen}\n            placeholderText={titleFn()}\n            ariaLabelledBy='select-group-input'\n            isDisabled={tags.length === 0}\n        >\n            <InputGroup className='tags-filter-group' value=''>\n                <TextInput\n                    aria-label='tags-filter-input'\n                    placeholder={intl.formatMessage(messages.filterTagsInToolbar)}\n                    value={searchText}\n                    onChange={setSearchText}\n                />\n                <SearchIcon className='tags-filter-search-icon'/>\n            </InputGroup>\n            <Divider key=\"inline-filter-divider\" value=''/>\n            {tags.map((group, index) =>\n                <SelectGroup key={`group${index}`} label={group.source} value=''>\n                    {group.data.map((tag, tagIndex) =>\n                        <span key={tagIndex} className='tags-select-group'>\n                            <SelectOption value={tag.id} isChecked={\n                                selectedTags.find(selection => selection === tag.id)\n                            }>\n                                <Tooltip content={`${decodeURIComponent(tag.id)}`} position={TooltipPosition.right}>\n                                    <span>{`${decodeURIComponent(tag.key + '=' + tag.value)}`}</span>\n                                </Tooltip>\n                            </SelectOption>\n                            <Badge className='tags-select-badge'> {tag.count} </Badge>\n                        </span>\n                    )}\n                </SelectGroup>\n            )}\n            <Button key='manage all tags' value=''\n                variant='link' onClick={() => setManageTagsModalOpen(true)}>\n                {(showMoreCount > 0 && tagsCount >= showMoreCount) ?\n                    intl.formatMessage(\n                        messages.countMoreTags, {\n                            count: totalTags - tagsCount\n                        }) : intl.formatMessage(messages.manageTags)\n                }\n            </Button>\n        </Select>\n    </div >;\n};\n\nTagsToolbar.propTypes = {\n    selectedTags: PropTypes.array,\n    addNotification: PropTypes.func,\n    intl: PropTypes.any,\n    setSelectedTags: PropTypes.func,\n    history: PropTypes.any\n};\n\nexport default connect(\n    state => ({ selectedTags: state.AdvisorStore.selectedTags }),\n    dispatch => ({\n        addNotification: data => dispatch(addNotification(data)),\n        setSelectedTags: (tags) => dispatch(setSelectedTags(tags))\n    }))(TagsToolbar);\n","import * as ActionTypes from './AppConstants';\n\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.get(url, headers, options);\n    return response.data;\n};\n\nconst setData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.post(url, headers, options);\n    return response.data;\n};\n\nexport const fetchStatsRules = (options) => ({\n    type: ActionTypes.STATS_RULES_FETCH,\n    payload: fetchData(ActionTypes.STATS_RULES_FETCH_URL, {}, options)\n});\nexport const fetchStatsSystems = (options) => ({\n    type: ActionTypes.STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.STATS_SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchStatsStaleHosts = (options) => ({\n    type: ActionTypes.STATS_STALEHOSTS_FETCH,\n    payload: fetchData(ActionTypes.STATS_STALEHOSTS_FETCH_URL, {}, options)\n});\nexport const fetchRules = (options) => ({\n    type: ActionTypes.RULES_FETCH,\n    payload: fetchData(ActionTypes.RULES_FETCH_URL, {}, options)\n});\nexport const fetchRule = (options) => ({\n    type: ActionTypes.RULE_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${options.rule_id}/`, {}, options.tags && { tags: options.tags })\n});\nexport const fetchSystem = (ruleId, options) => ({\n    type: ActionTypes.SYSTEM_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${encodeURI(ruleId)}/systems`, {}, options)\n});\nexport const setFilters = (filters) => ({\n    type: ActionTypes.FILTERS_SET,\n    payload: filters\n});\nexport const fetchTopics = (options) => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(ActionTypes.TOPICS_FETCH_URL, {}, options)\n});\nexport const fetchTopicsAdmin = () => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}?show_disabled=true`)\n});\nexport const fetchTopic = (options) => ({\n    type: ActionTypes.TOPIC_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}${options.topic_id}/`)\n});\nexport const fetchSystems = (options) => ({\n    type: ActionTypes.SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchRuleAck = (options) => ({\n    type: ActionTypes.RULE_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.RULE_ACK_URL}${options.rule_id}/`)\n});\nexport const setAck = (options) => ({\n    type: ActionTypes[`${options.type}_ACK_SET`],\n    payload: setData(ActionTypes[`${options.type}_ACK_URL`], {}, options.options)\n});\nexport const fetchHostAcks = (options) => ({\n    type: ActionTypes.HOST_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.HOST_ACK_URL}`, {}, options)\n});\nexport const setFiltersSystems = (filters) => ({\n    type: ActionTypes.FILTERS_SYSTEMS_SET,\n    payload: filters\n});\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\nexport const setRule = (rule) => ({\n    type: ActionTypes.RULE_SET,\n    payload: rule\n});\nexport const setSystem = (system) => ({\n    type: ActionTypes.SYSTEM_SET,\n    payload: system\n});\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}.tagsToolbarContainer{background-color:var(--pf-global--BackgroundColor--100);border-bottom:var(--pf-global--BorderWidth--sm) solid var(--pf-global--BorderColor--light-100)}.tagsToolbarContainer .pf-c-dropdown__menu{top:36px !important}.tagsToolbarContainer .dropDownOverride{padding-left:var(--pf-global--spacer--md)}.tagsToolbarContainer .dropDownOverride button::before{border:none !important}.tagsToolbarContainer .tags-filter-group{display:flex;padding:var(--pf-global--spacer--sm) 0 var(--pf-global--spacer--md) var(--pf-global--spacer--md)}.tagsToolbarContainer .tags-filter-group .tags-filter-search-icon{position:relative;left:-30px;left:-1.875rem;top:10px;top:.625rem}.tagsToolbarContainer .tags-select-group{display:flex}.tagsToolbarContainer .tags-select-group:hover{background-color:var(--pf-c-select__menu-item--hover--BackgroundColor)}.tagsToolbarContainer .tags-select-group .tags-select-badge{position:relative;margin-top:var(--pf-global--spacer--md);left:-15px;left:-.9375rem;bottom:8px;bottom:.5rem}.tagsToolbarContainer .pf-c-select__toggle{width:220px;font-size:small}.tagsToolbarContainer .pf-c-select__toggle.pf-m-disabled,.tagsToolbarContainer .pf-c-select__toggle:disabled{background-color:var(--pf-global--BackgroundColor--100)}.tagsToolbarContainer .pf-c-select__toggle.pf-m-disabled .pf-c-select__toggle-arrow,.tagsToolbarContainer .pf-c-select__toggle:disabled .pf-c-select__toggle-arrow{color:var(--pf-global--BackgroundColor--100)}.tagsToolbarContainer .pf-c-select{max-width:400px !important}.tagsToolbarContainer .pf-c-check__label{max-width:400px !important;width:400px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tagsListContainer .pf-c-data-list{border:none}.tagsListContainer .pf-c-data-list__item{border:none}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-control{padding:8px 0 8px !important}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-content{padding-bottom:8px !important}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-content .pf-c-data-list__cell{padding-top:8px !important}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}