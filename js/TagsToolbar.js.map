{"version":3,"sources":["webpack:///./src/PresentationalComponents/TagsToolbar/_TagsToolbar.scss?1dc4","webpack:///./src/PresentationalComponents/TagsToolbar/ManageTags.js","webpack:///./src/PresentationalComponents/TagsToolbar/Common.js","webpack:///./src/PresentationalComponents/TagsToolbar/TagsToolbar.js","webpack:///./src/AppActions.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/TagsToolbar/_TagsToolbar.scss"],"names":["content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","ManageTags","toggleModal","fetchTags","selectedTags","setSelectedTags","totalTags","isOpen","useState","tags","setTags","loaded","setLoaded","selected","setSelected","perPage","setPerPage","page","setPage","searchText","setSearchText","intl","useIntl","debouncedSearchText","debounce","DEBOUNCE_DELAY","useEffect","length","map","id","TagModal","systemName","formatMessage","messages","insightsHeader","toLowerCase","pagination","count","rows","tag","find","selection","cells","value","namespace","width","filters","label","filterTagsInModal","placeholder","filterValues","onChange","event","onUpdateData","data","columns","title","tagsModalName","tagsModalValue","tagsModalSources","systems","onSelect","onApply","tableProps","canSelectAll","propTypes","PropTypes","func","isRequired","number","bool","array","connect","AdvisorStore","dispatch","tagUrlBuilder","tagsToSet","url","URL","window","location","params","URLSearchParams","search","set","join","history","replaceState","origin","pathname","toString","TagsToolbar","setIsOpen","setTotalTags","setParams","tagsCount","setTagsCount","manageTagsModalOpen","setManageTagsModalOpen","groupTags","filter","index","self","indexOf","source","formatTags","formattedTags","item","push","encodeURIComponent","API","get","INV_BASE_URL","response","total","results","intersection","split","addNotification","variant","dismissable","error","description","flatMap","urlParams","className","Select","SelectVariant","checkbox","aria-label","onToggle","e","includes","selections","placeholderText","Fragment","filterResults","allSystems","noTags","ariaLabelledBy","isDisabled","InputGroup","TextInput","filterTagsInToolbar","Divider","group","tagIndex","isChecked","Tooltip","position","TooltipPosition","right","decodeURIComponent","Badge","Button","onClick","countMoreTags","manageTags","any","state","fetchData","headers","insights","chrome","auth","getUser","setData","post","fetchRules","type","ActionTypes","payload","fetchRule","rule_id","fetchSystem","ruleId","encodeURI","setFilters","fetchTopics","fetchTopicsAdmin","fetchTopic","topic_id","fetchSystems","fetchRuleAck","setAck","fetchHostAcks","setFiltersSystems","setRule","rule","setSystem","system","Debounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"js/TagsToolbar.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useState } from 'react';\n\nimport { DEBOUNCE_DELAY } from '../../AppConstants';\nimport PropTypes from 'prop-types';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/components/TagModal';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport messages from '../../Messages';\nimport { setSelectedTags } from '../../AppActions';\nimport { useIntl } from 'react-intl';\n\nconst ManageTags = ({ toggleModal, fetchTags, selectedTags, setSelectedTags, totalTags, isOpen }) => {\n    const [tags, setTags] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [perPage, setPerPage] = useState(10);\n    const [page, setPage] = useState(1);\n    const [searchText, setSearchText] = useState();\n    const intl = useIntl();\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n\n    useEffect(() => {\n        (async () => {\n            setPage(1);\n            setTags(await fetchTags(perPage, 1, null, searchText));\n            setLoaded(true);\n        })();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    useEffect(() => {\n        (async () => {\n            setTags(await fetchTags(perPage, page, null, debouncedSearchText));\n            setLoaded(true);\n        })();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [perPage, page]);\n\n    useEffect(() => {\n        setSelected(selectedTags.length ? selectedTags.map(id => ({ id, selected: true })) : []);\n    }, [selectedTags, setSelected]);\n\n    return <TagModal\n        systemName={intl.formatMessage(messages.insightsHeader).toLowerCase()}\n        {...loaded && {\n            loaded,\n            pagination: {\n                perPage,\n                page,\n                count: totalTags\n            },\n            rows: tags.map(tag => ({\n                id: tag.id,\n                selected: selected.find(selection => selection.id === tag.id),\n                cells: [tag.key, tag.value, tag.namespace, tag.count]\n            }))\n        }}\n        loaded={ loaded }\n        width='auto'\n        isOpen={ isOpen }\n        toggleModal={() => {\n            setPerPage(10);\n            setPage(1);\n            setSearchText();\n            setSelected([]);\n            toggleModal();\n        }}\n        filters={[\n            {\n                label: intl.formatMessage(messages.filterTagsInModal),\n                placeholder: intl.formatMessage(messages.filterTagsInModal),\n                value: 'tags-filter',\n                filterValues: {\n                    key: 'text-filter',\n                    onChange: (event, value) => setSearchText(value),\n                    value: searchText\n                }\n            }\n        ]}\n        onUpdateData={(data) => {\n            setLoaded(false);\n            setPerPage(data.perPage);\n            setPage(data.page);\n        }}\n        columns={ [\n            { title: intl.formatMessage(messages.tagsModalName) },\n            { title: intl.formatMessage(messages.tagsModalValue) },\n            { title: intl.formatMessage(messages.tagsModalSources) },\n            { title: intl.formatMessage(messages.systems) }\n        ] }\n        selected={selected}\n        onSelect={(selected) => setSelected(selected.map(tag => ({ id: tag.id, selected: true })))}\n        onApply={() => {\n            setSelectedTags(selected.map(tag => tag.id));\n            setSelected([]);\n        }}\n        tableProps={{ canSelectAll: false }}\n    />;\n};\n\nManageTags.propTypes = {\n    toggleModal: PropTypes.func.isRequired,\n    fetchTags: PropTypes.func.isRequired,\n    totalTags: PropTypes.number.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    selectedTags: PropTypes.array,\n    setSelectedTags: PropTypes.func\n};\n\nexport default connect(\n    ({ AdvisorStore }) => ({ selectedTags: AdvisorStore.selectedTags }),\n    dispatch => ({\n        setSelectedTags: (tags) => dispatch(setSelectedTags(tags))\n    }))(ManageTags);\n","const tagUrlBuilder = (tagsToSet) => {\n    if (tagsToSet !== null) {\n        const url = new URL(window.location);\n        let params = new URLSearchParams(url.search);\n        tagsToSet.length ? params.set('tags', tagsToSet.join()) : params.delete('tags');\n        window.history.replaceState(null, null, `${url.origin}${url.pathname}${params.toString().length ? '?' : ''}${params.toString()}`);\n    }\n};\n\nexport { tagUrlBuilder };\n","import './_TagsToolbar.scss';\n\nimport React, { useEffect, useState } from 'react';\nimport { Select, SelectGroup, SelectOption, SelectVariant } from '@patternfly/react-core/dist/js/components/Select/index';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport API from '../../Utilities/Api';\nimport { Badge } from '@patternfly/react-core/dist/js/components/Badge/Badge';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DEBOUNCE_DELAY } from '../../AppConstants';\nimport { Divider } from '@patternfly/react-core/dist/js/components/Divider/Divider';\nimport { INV_BASE_URL } from '../../AppConstants';\nimport { InputGroup } from '@patternfly/react-core/dist/js/components/InputGroup/InputGroup';\nimport ManageTags from './ManageTags';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport TagIcon from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport intersection from 'lodash/intersection';\nimport messages from '../../Messages';\nimport { setSelectedTags } from '../../AppActions';\nimport { tagUrlBuilder } from './Common';\nimport { useIntl } from 'react-intl';\n\nconst TagsToolbar = ({ selectedTags, setSelectedTags }) => {\n    const intl = useIntl();\n    const [isOpen, setIsOpen] = useState(false);\n    const [totalTags, setTotalTags] = useState();\n    const [tags, setTags] = useState([]);\n    const [searchText, setSearchText] = useState();\n    const [params, setParams] = useState();\n    const [tagsCount, setTagsCount] = useState();\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const [manageTagsModalOpen, setManageTagsModalOpen] = useState(false);\n    const showMoreCount = 20;\n\n    const groupTags = (tags) => {\n        return tags.map(tag => tag.namespace).filter((value, index, self) =>\n            self.indexOf(value) === index\n        ).map(source => ({\n            source,\n            data: tags.filter(tag => tag.namespace === source)\n        }));\n    };\n\n    const formatTags = (tags) => {\n        let formattedTags = [];\n        tags.map(item => {\n            const { namespace, key, value } = item.tag;\n            formattedTags.push({\n                ...item.tag,\n                count: item.count,\n                id: `${namespace}/${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n            });\n        });\n        return formattedTags;\n    };\n\n    const fetchTags = async (perPage, page, params, filter) => {\n        let formattedTags = [];\n        try {\n            const response = (filter === '' || !filter) ?\n                await API.get(`${INV_BASE_URL}/tags?per_page=${perPage}&page=${page}&registered_with=insights`) :\n                await API.get(`${INV_BASE_URL}/tags?per_page=${perPage}&page=${page}&search=${filter.toLowerCase()}&registered_with=insights`);\n            setTotalTags(response.data.total);\n            formattedTags = formatTags(response.data.results);\n            params === null && selectedTags === null && setSelectedTags([]);\n            if (params.length) {\n                const tagsToSet = intersection(params.split(','), selectedTags);\n                tagUrlBuilder(tagsToSet);\n                setSelectedTags(tagsToSet);\n            }\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n\n        return formattedTags;\n    };\n\n    // Force triggers the debounce function on mount (i.e. deleting this will break things)\n    useEffect(() => {\n        setSearchText('');\n    }, []);\n\n    useEffect(() => {\n        setTagsCount(tags.flatMap(source => source.data).length);\n    }, [tags]);\n\n    useEffect(() => {\n        const url = new URL(window.location);\n        let params = new URLSearchParams(url.search);\n        setParams(params.get('tags'));\n    }, [selectedTags]);\n\n    useEffect(() => {\n        const url = new URL(window.location);\n        let urlParams = new URLSearchParams(url.search);\n        urlParams.get('tags') === params ?\n            (async () => setTags(groupTags(await fetchTags(showMoreCount, 1, null, searchText))))() :\n            (async () => setTags(groupTags(await fetchTags(showMoreCount, 1, urlParams, searchText))))();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    useEffect(() => {\n        tagUrlBuilder(selectedTags);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.location]);\n\n    const titleFn = () => <React.Fragment>\n        <TagIcon />&nbsp;\n        {tags.length > 0 ?\n            <React.Fragment>\n                {intl.formatMessage(messages.filterResults)} {selectedTags.length === 0 && intl.formatMessage(messages.allSystems)}\n            </React.Fragment>\n            : intl.formatMessage(messages.noTags)}\n    </React.Fragment>;\n\n    const onToggle = isOpen => {\n        setSearchText('');\n        setIsOpen(isOpen);\n    };\n\n    const onSelect = (e, selection) => {\n        const tagsToSet = selectedTags.includes(selection) ? selectedTags.filter(item => item !== selection)\n            : [...selectedTags, selection];\n        setSelectedTags(tagsToSet);\n        tagUrlBuilder(tagsToSet);\n    };\n\n    return selectedTags !== null && <div className='tagsToolbarContainer'>\n        {<ManageTags\n            totalTags={totalTags}\n            toggleModal={() => setManageTagsModalOpen(!manageTagsModalOpen)}\n            isOpen={manageTagsModalOpen}\n            fetchTags={fetchTags}\n        />}\n        <Select\n            className='dropDownOverride'\n            variant={SelectVariant.checkbox}\n            aria-label='Select Group Input'\n            onToggle={onToggle}\n            onSelect={onSelect}\n            selections={selectedTags}\n            isOpen={isOpen}\n            placeholderText={titleFn()}\n            ariaLabelledBy='select-group-input'\n            isDisabled={tags.length === 0}\n        >\n            <InputGroup className='tags-filter-group'>\n                <TextInput\n                    aria-label='tags-filter-input'\n                    placeholder={intl.formatMessage(messages.filterTagsInToolbar)}\n                    value={searchText}\n                    onChange={setSearchText}\n                />\n                <SearchIcon className='tags-filter-search-icon'/>\n            </InputGroup>\n            <Divider key=\"inline-filter-divider\" />\n            {tags.map((group, index) =>\n                <SelectGroup key={`group${index}`} label={group.source}>\n                    {group.data.map((tag, tagIndex) =>\n                        <span key={tagIndex} className='tags-select-group'>\n                            <SelectOption value={tag.id} isChecked={\n                                selectedTags.find(selection => selection === tag.id)\n                            }>\n                                <Tooltip content={`${tag.id}`} position={TooltipPosition.right}>\n                                    <span>{`${decodeURIComponent(tag.value)}`}</span>\n                                </Tooltip>\n                            </SelectOption>\n                            <Badge className='tags-select-badge'> {tag.count} </Badge>\n                        </span>\n                    )}\n                </SelectGroup>\n            )}\n            <Button key='manage all tags'\n                variant='link' onClick={() => setManageTagsModalOpen(true)}>\n                {(showMoreCount > 0 && tagsCount >= showMoreCount) ?\n                    intl.formatMessage(\n                        messages.countMoreTags, {\n                            count: totalTags - tagsCount\n                        }) : intl.formatMessage(messages.manageTags)\n                }\n            </Button>\n        </Select>\n    </div >;\n};\n\nTagsToolbar.propTypes = {\n    selectedTags: PropTypes.array,\n    addNotification: PropTypes.func,\n    intl: PropTypes.any,\n    setSelectedTags: PropTypes.func,\n    history: PropTypes.any\n};\n\nexport default connect(\n    state => ({ selectedTags: state.AdvisorStore.selectedTags }),\n    dispatch => ({\n        addNotification: data => dispatch(addNotification(data)),\n        setSelectedTags: (tags) => dispatch(setSelectedTags(tags))\n    }))(TagsToolbar);\n","import * as ActionTypes from './AppConstants';\n\nimport API from './Utilities/Api';\n\nconst fetchData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.get(url, headers, options);\n    return response.data;\n};\n\nconst setData = async (url, headers, options) => {\n    await insights.chrome.auth.getUser();\n    const response = await API.post(url, headers, options);\n    return response.data;\n};\n\nexport const fetchStatsRules = (options) => ({\n    type: ActionTypes.STATS_RULES_FETCH,\n    payload: fetchData(ActionTypes.STATS_RULES_FETCH_URL, {}, options)\n});\nexport const fetchStatsSystems = (options) => ({\n    type: ActionTypes.STATS_SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.STATS_SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchStatsStaleHosts = (options) => ({\n    type: ActionTypes.STATS_STALEHOSTS_FETCH,\n    payload: fetchData(ActionTypes.STATS_STALEHOSTS_FETCH_URL, {}, options)\n});\nexport const fetchRules = (options) => ({\n    type: ActionTypes.RULES_FETCH,\n    payload: fetchData(ActionTypes.RULES_FETCH_URL, {}, options)\n});\nexport const fetchRule = (options) => ({\n    type: ActionTypes.RULE_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${options.rule_id}/`, {}, options.tags && { tags: options.tags })\n});\nexport const fetchSystem = (ruleId, options) => ({\n    type: ActionTypes.SYSTEM_FETCH,\n    payload: fetchData(`${ActionTypes.RULES_FETCH_URL}${encodeURI(ruleId)}/systems`, {}, options)\n});\nexport const setFilters = (filters) => ({\n    type: ActionTypes.FILTERS_SET,\n    payload: filters\n});\nexport const fetchTopics = (options) => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(ActionTypes.TOPICS_FETCH_URL, {}, options)\n});\nexport const fetchTopicsAdmin = () => ({\n    type: ActionTypes.TOPICS_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}?show_disabled=true`)\n});\nexport const fetchTopic = (options) => ({\n    type: ActionTypes.TOPIC_FETCH,\n    payload: fetchData(`${ActionTypes.TOPICS_FETCH_URL}${options.topic_id}/`)\n});\nexport const fetchSystems = (options) => ({\n    type: ActionTypes.SYSTEMS_FETCH,\n    payload: fetchData(ActionTypes.SYSTEMS_FETCH_URL, {}, options)\n});\nexport const fetchRuleAck = (options) => ({\n    type: ActionTypes.RULE_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.RULE_ACK_URL}${options.rule_id}/`)\n});\nexport const setAck = (options) => ({\n    type: ActionTypes[`${options.type}_ACK_SET`],\n    payload: setData(ActionTypes[`${options.type}_ACK_URL`], {}, options.options)\n});\nexport const fetchHostAcks = (options) => ({\n    type: ActionTypes.HOST_ACK_FETCH,\n    payload: fetchData(`${ActionTypes.HOST_ACK_URL}`, {}, options)\n});\nexport const setFiltersSystems = (filters) => ({\n    type: ActionTypes.FILTERS_SYSTEMS_SET,\n    payload: filters\n});\nexport const setSelectedTags = (tags) => ({\n    type: ActionTypes.SELECTED_TAGS_SET,\n    payload: tags\n});\nexport const setRule = (rule) => ({\n    type: ActionTypes.RULE_SET,\n    payload: rule\n});\nexport const setSystem = (system) => ({\n    type: ActionTypes.SYSTEM_SET,\n    payload: system\n});\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}.tagsToolbarContainer{background-color:var(--pf-global--BackgroundColor--100);border-bottom:var(--pf-global--BorderWidth--sm) solid var(--pf-global--BorderColor--light-100)}.tagsToolbarContainer .pf-c-dropdown__menu{top:36px !important}.tagsToolbarContainer .dropDownOverride{padding-left:var(--pf-global--spacer--md)}.tagsToolbarContainer .dropDownOverride button::before{border:none !important}.tagsToolbarContainer .tags-filter-group{display:flex;padding:var(--pf-global--spacer--sm) 0 var(--pf-global--spacer--md) var(--pf-global--spacer--md)}.tagsToolbarContainer .tags-filter-group .tags-filter-search-icon{position:relative;left:-30px;left:-1.875rem;top:10px;top:.625rem}.tagsToolbarContainer .tags-select-group{display:flex}.tagsToolbarContainer .tags-select-group:hover{background-color:var(--pf-c-select__menu-item--hover--BackgroundColor)}.tagsToolbarContainer .tags-select-group .tags-select-badge{position:relative;margin-top:var(--pf-global--spacer--md);left:-15px;left:-.9375rem;bottom:8px;bottom:.5rem}.tagsToolbarContainer .pf-c-select__toggle{width:220px;font-size:small}.tagsToolbarContainer .pf-c-select__toggle.pf-m-disabled,.tagsToolbarContainer .pf-c-select__toggle:disabled{background-color:var(--pf-global--BackgroundColor--100)}.tagsToolbarContainer .pf-c-select__toggle.pf-m-disabled .pf-c-select__toggle-arrow,.tagsToolbarContainer .pf-c-select__toggle:disabled .pf-c-select__toggle-arrow{color:var(--pf-global--BackgroundColor--100)}.tagsToolbarContainer .pf-c-select{max-width:400px !important}.tagsToolbarContainer .pf-c-check__label{max-width:350px !important;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tagsListContainer .pf-c-data-list{border:none}.tagsListContainer .pf-c-data-list__item{border:none}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-control{padding:8px 0 8px !important}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-content{padding-bottom:8px !important}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-content .pf-c-data-list__cell{padding-top:8px !important}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}