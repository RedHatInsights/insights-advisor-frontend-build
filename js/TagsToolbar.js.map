{"version":3,"sources":["webpack:///./src/PresentationalComponents/TagsToolbar/Common.js","webpack:///./src/PresentationalComponents/TagsToolbar/TagsList.js","webpack:///./src/PresentationalComponents/TagsToolbar/ManageTags.js","webpack:///./src/PresentationalComponents/TagsToolbar/TagsToolbar.js","webpack:///./src/PresentationalComponents/TagsToolbar/_TagsToolbar.scss","webpack:///./src/PresentationalComponents/TagsToolbar/_TagsToolbar.scss?1dc4"],"names":["tagUrlBuilder","tagsToSet","url","URL","window","location","params","URLSearchParams","search","length","set","join","history","replaceState","origin","pathname","toString","TagsList","setSelectedTags","selectedTags","showMoreCount","intl","tags","handleModalToggle","updateSelectedTags","value","e","indexOf","target","name","filter","item","Fragment","ChipGroup","map","currentChip","Chip","key","onClick","decodeURIComponent","className","DataList","aria-label","slice","DataListItem","aria-labelledby","DataListItemRow","DataListCheck","onChange","checked","DataListItemCells","dataListCells","DataListCell","formatMessage","messages","noTags","Button","variant","countMore","count","propTypes","PropTypes","func","array","object","isRequired","number","any","defaultProps","injectIntl","connect","state","ownProps","AdvisorStore","dispatch","ViewHostAcks","isModalOpen","Modal","width","title","tagsCount","isOpen","onClose","isFooterLeftAligned","bool","TagsToolbar","useIntl","useState","setIsOpen","setTags","manageTagsModalOpen","setManageTagsModalOpen","useEffect","get","a","API","BASE_URL","response","data","intersection","split","addNotification","dismissable","error","description","fetchTags","ManageTags","toggleModal","Select","SelectVariant","checkbox","onToggle","onSelect","selection","includes","selections","isExpanded","placeholderText","filterResults","allSystems","ariaLabelledBy","isDisabled","Tooltip","content","position","TooltipPosition","right","countMoreTags","manageTags","exports","___CSS_LOADER_API_IMPORT___","push","module","i","options","transform","undefined","update","locals","hot","accept","newContent","b","idx","Error","dispose"],"mappings":"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","file":"js/TagsToolbar.js","sourcesContent":["const tagUrlBuilder = (tagsToSet) => {\n    if (tagsToSet !== null) {\n        const url = new URL(window.location);\n        let params = new URLSearchParams(url.search);\n        tagsToSet.length ? params.set('tags', tagsToSet.join()) : params.delete('tags');\n        window.history.replaceState(null, null, `${url.origin}${url.pathname}${params.toString().length ? '?' : ''}${params.toString()}`);\n    }\n};\n\nexport { tagUrlBuilder };\n","import './_TagsToolbar.scss';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Chip } from '@patternfly/react-core/dist/js/components/ChipGroup/Chip';\nimport { ChipGroup } from '@patternfly/react-core/dist/js/components/ChipGroup/ChipGroup';\nimport { DataList } from '@patternfly/react-core/dist/js/components/DataList/DataList';\nimport { DataListCell } from '@patternfly/react-core/dist/js/components/DataList/DataListCell';\nimport { DataListCheck } from '@patternfly/react-core/dist/js/components/DataList/DataListCheck';\nimport { DataListItem } from '@patternfly/react-core/dist/js/components/DataList/DataListItem';\nimport { DataListItemCells } from '@patternfly/react-core/dist/js/components/DataList/DataListItemCells';\nimport { DataListItemRow } from '@patternfly/react-core/dist/js/components/DataList/DataListItemRow';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { setSelectedTags } from '../../AppActions';\nimport { tagUrlBuilder } from './Common';\n\nconst TagsList = ({ setSelectedTags, selectedTags, showMoreCount, intl, tags, handleModalToggle }) => {\n    const updateSelectedTags = (value, e) => {\n        const tagsToSet = selectedTags.indexOf(e.target.name) > -1 ?\n            selectedTags.filter(item => item !== e.target.name) : [...selectedTags, e.target.name];\n        setSelectedTags(tagsToSet);\n        tagUrlBuilder(tagsToSet);\n    };\n\n    return <React.Fragment>\n        {!showMoreCount && <ChipGroup>\n            {selectedTags.map(currentChip => (\n                <Chip key={currentChip} onClick={() => updateSelectedTags(null, { target: { name: currentChip } })}>\n                    {decodeURIComponent(currentChip)}\n                </Chip>\n            ))}\n        </ChipGroup>}\n        <div className='tagsListContainer'>\n            <DataList aria-label=\"tag-list\">\n                {tags.slice(0, showMoreCount || tags.length).map(item => <DataListItem aria-labelledby=\"tag-list-item\" key={item}>\n                    <DataListItemRow>\n                        <DataListCheck aria-labelledby={`${item}-check`} name={item} onChange={updateSelectedTags}\n                            checked={selectedTags.indexOf(item) > -1} />\n                        <DataListItemCells dataListCells={[\n                            <DataListCell key=\"primary content\">\n                                {`${decodeURIComponent(item)}`}\n                            </DataListCell>]} />\n                    </DataListItemRow>\n                </DataListItem>)}\n                {tags.length === 0 && <DataListItem aria-labelledby=\"tag-list-item-no-tags\" key='no-tags'>\n                    <DataListItemRow>\n                        <DataListItemCells dataListCells={[\n                            <DataListCell key=\"primary content\">\n                                {intl.formatMessage(messages.noTags)}\n                            </DataListCell>]} />\n                    </DataListItemRow>\n                </DataListItem>}\n                {showMoreCount > 0 && tags.length > showMoreCount && <DataListItem aria-labelledby=\"tag-list-item-show-more\">\n                    <DataListItemRow>\n                        <DataListItemCells dataListCells={[\n                            <DataListCell key=\"primary content\">\n                                <Button key=\"view all tags\" variant=\"link\" onClick={() => handleModalToggle(true)}>\n                                    {intl.formatMessage(messages.countMore, { count: tags.length - showMoreCount })}\n                                </Button>\n                            </DataListCell>]} />\n                    </DataListItemRow>\n                </DataListItem>}\n            </DataList>\n        </div>\n    </React.Fragment>;\n};\n\nTagsList.propTypes = {\n    setSelectedTags: PropTypes.func,\n    selectedTags: PropTypes.array,\n    tags: PropTypes.object.isRequired,\n    showMoreCount: PropTypes.number,\n    handleModalToggle: PropTypes.func.isRequired,\n    intl: PropTypes.any,\n    history: PropTypes.object\n};\n\nTagsList.defaultProps = {\n    showMoreCount: 0\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedTags: state.AdvisorStore.selectedTags,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setSelectedTags: (tags) => dispatch(setSelectedTags(tags))\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TagsList));\n","import { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TagsList from './TagsList';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ handleModalToggle, intl, selectedTags, isModalOpen, tags }) => <Modal\n    width='50%'\n    title={intl.formatMessage(messages.tagsCount, { count: selectedTags.length })}\n    isOpen={isModalOpen}\n    onClose={() => { handleModalToggle(false); }}\n    isFooterLeftAligned>\n    <TagsList tags={tags} />\n</Modal>;\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    selectedTags: PropTypes.array,\n    handleModalToggle: PropTypes.func,\n    tags: PropTypes.array,\n    intl: PropTypes.any\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    selectedTags: AdvisorStore.selectedTags,\n    ...ownProps\n});\n\nexport default injectIntl(connect(mapStateToProps)(ViewHostAcks));\n","import './_TagsToolbar.scss';\n\nimport React, { useEffect, useState } from 'react';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core/dist/js/components/Select/index';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport ManageTags from './ManageTags';\nimport PropTypes from 'prop-types';\nimport TagIcon from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport intersection from 'lodash/intersection';\nimport messages from '../../Messages';\nimport { setSelectedTags } from '../../AppActions';\nimport { tagUrlBuilder } from './Common';\nimport { useIntl } from 'react-intl';\n\nconst TagsToolbar = ({ selectedTags, setSelectedTags }) => {\n    const intl = useIntl();\n    const [isOpen, setIsOpen] = useState(false);\n    const [tags, setTags] = useState([]);\n    const [manageTagsModalOpen, setManageTagsModalOpen] = useState(false);\n    const showMoreCount = 20;\n    const onToggle = isOpen => setIsOpen(isOpen);\n\n    useEffect(() => {\n        const url = new URL(window.location);\n        let params = new URLSearchParams(url.search);\n        params = params.get('tags');\n        const fetchTags = async () => {\n            try {\n                const response = await API.get(`${BASE_URL}/tag/`);\n                setTags(response.data.tags);\n                params === null && selectedTags === null && setSelectedTags([]);\n                if (params.length) {\n                    const tagsToSet = intersection(params.split(','), response.data.tags);\n                    tagUrlBuilder(tagsToSet);\n                    setSelectedTags(tagsToSet);\n                }\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        };\n\n        fetchTags();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        tagUrlBuilder(selectedTags);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.location]);\n\n    const titleFn = () => <React.Fragment>\n        <TagIcon />&nbsp;\n        {tags.length > 0 ?\n            <React.Fragment>\n                {intl.formatMessage(messages.filterResults)} {selectedTags.length === 0 && intl.formatMessage(messages.allSystems)}\n            </React.Fragment>\n            : intl.formatMessage(messages.noTags)}\n    </React.Fragment>;\n\n    const onSelect = (e, selection) => {\n        const tagsToSet = selectedTags.includes(selection) ? selectedTags.filter(item => item !== selection)\n            : [...selectedTags, selection];\n        setSelectedTags(tagsToSet);\n        tagUrlBuilder(tagsToSet);\n    };\n\n    return selectedTags !== null && <div className='tagsToolbarContainer'>\n        {<ManageTags\n            handleModalToggle={(toggleModal) => setManageTagsModalOpen(toggleModal)}\n            isModalOpen={manageTagsModalOpen}\n            tags={tags}\n        />}\n        <Select\n            className='dropDownOverride'\n            variant={SelectVariant.checkbox}\n            aria-label='Select Group Input'\n            onToggle={onToggle}\n            onSelect={onSelect}\n            selections={selectedTags}\n            isExpanded={isOpen}\n            placeholderText={titleFn()}\n            ariaLabelledBy='select-group-input'\n            isDisabled={tags.length === 0}\n        >\n            {tags.slice(0, showMoreCount || tags.length).map(item =>\n                <SelectOption key={item} value={`${item}`}>\n                    <Tooltip content={`${decodeURIComponent(item)}`} position={TooltipPosition.right}>\n                        <span>{`${decodeURIComponent(item)}`}</span>\n                    </Tooltip>\n                </SelectOption>\n            )}\n            <Button key='manage all tags'\n                variant='link' onClick={(toggleModal) => setManageTagsModalOpen(toggleModal)}>\n                {(showMoreCount > 0 && tags.length > showMoreCount) ?\n                    intl.formatMessage(messages.countMoreTags, { count: tags.length - showMoreCount }) : intl.formatMessage(messages.manageTags)\n                }\n            </Button>\n        </Select>\n    </div >;\n};\n\nTagsToolbar.propTypes = {\n    selectedTags: PropTypes.array,\n    addNotification: PropTypes.func,\n    intl: PropTypes.any,\n    setSelectedTags: PropTypes.func,\n    history: PropTypes.any\n};\n\nexport default connect(\n    state => ({ selectedTags: state.AdvisorStore.selectedTags }),\n    dispatch => ({\n        addNotification: data => dispatch(addNotification(data)),\n        setSelectedTags: (tags) => dispatch(setSelectedTags(tags))\n    }))(TagsToolbar);\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tagsToolbarContainer{background-color:var(--pf-global--BackgroundColor--100);border-bottom:var(--pf-global--BorderWidth--sm) solid var(--pf-global--BorderColor--light-100)}.tagsToolbarContainer .pf-c-dropdown__menu{top:36px !important}.tagsToolbarContainer .dropDownOverride{padding-left:var(--pf-global--spacer--md)}.tagsToolbarContainer .dropDownOverride button::before{border:none !important}.tagsToolbarContainer .pf-c-select__toggle{width:220px;font-size:small}.tagsToolbarContainer .pf-c-select__toggle.pf-m-disabled,.tagsToolbarContainer .pf-c-select__toggle:disabled{background-color:var(--pf-global--BackgroundColor--100)}.tagsToolbarContainer .pf-c-select__toggle.pf-m-disabled .pf-c-select__toggle-arrow,.tagsToolbarContainer .pf-c-select__toggle:disabled .pf-c-select__toggle-arrow{color:var(--pf-global--BackgroundColor--100)}.tagsToolbarContainer .pf-c-select{max-width:400px !important}.tagsToolbarContainer .pf-c-check__label{max-width:350px !important;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tagsListContainer .pf-c-data-list{border:none}.tagsListContainer .pf-c-data-list__item{border:none}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-control{padding:8px 0 8px !important}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-content{padding-bottom:8px !important}.tagsListContainer .pf-c-data-list__item .pf-c-data-list__item-content .pf-c-data-list__cell{padding-top:8px !important}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_TagsToolbar.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}