{"version":3,"sources":["webpack:///./src/SmartComponents/Topics/Topics.js"],"names":["List","asyncComponent","Details","Admin","reducer","state","type","setLoaded","loaded","isInternal","payload","ProtectedRoute","Component","component","props","useReducer","dispatch","useEffect","insights","chrome","auth","getUser","then","data","identity","user","is_internal","render","to","propTypes","PropTypes","any","Topics","exact","path","push"],"mappings":"8xBAMA,IAAMA,EAAOC,aAAe,kBAAM,6EAC5BC,EAAUD,aAAe,kBAAM,6EAC/BE,EAAQF,aAAe,kBAAM,6EAE7BG,EAAU,SAACC,EAAD,OAAUC,EAAV,EAAUA,KAAV,MAA+B,CAAEC,UAAW,EAAF,GAAOF,EAAP,CAAcG,QAAQ,EAAMC,WAAtE,EAAgBC,WAA8EJ,IAExGK,EAAiB,SAAC,GAAuC,IAA1BC,EAA0B,EAArCC,UAAyBC,EAAY,uBACjCC,qBAAWX,EAAS,CAAEK,YAAY,EAAOD,QAAQ,IADhB,WACpDH,EADoD,KAC7CW,EAD6C,KAK3D,OAFAC,qBAAU,WAAQC,SAASC,OAAOC,KAAKC,UAAUC,MAAK,SAACC,GAAD,OAAUP,EAAS,CAAEV,KAAM,YAAaI,QAASa,EAAKC,SAASC,KAAKC,mBAAoB,IAEvI,kBAAC,IAAD,OAAWZ,EAAX,CAAkBa,OAAQ,SAAAb,GAAK,OAAIT,EAAMG,SAAWH,EAAMI,WAAa,kBAACG,EAAcE,GAAY,kBAAC,IAAD,CAAUc,GAAG,kBAW1HjB,EAAekB,UAAY,CAAEhB,UAAWiB,IAAUC,KAEnCC,UAVA,kBAAM,kBAAC,IAAD,KACjB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUrB,UAAWb,IACvC,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,cAAcrB,UAAWX,IAC3C,kBAACS,EAAD,CAAgBsB,OAAK,EAACC,KAAK,uBAAuBrB,UAAWV,IAE7D,kBAAC,IAAD,CAAU+B,KAAK,IAAIN,GAAG,UAAUO,MAAI","file":"js/Topics.js","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport asyncComponent from '../../Utilities/asyncComponent';\n\nconst List = asyncComponent(() => import(/* webpackChunkName: \"TopicsList\" */ './List'));\nconst Details = asyncComponent(() => import(/* webpackChunkName: \"TopicDetails\" */ './Details'));\nconst Admin = asyncComponent(() => import(/* webpackChunkName: \"TopicAdmin\" */ '../../PresentationalComponents/TopicsAdminTable/TopicsAdminTable'));\n\nconst reducer = (state, { type, payload }) => ({ setLoaded: { ...state, loaded: true, isInternal: payload } }[type]);\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n    const [state, dispatch] = useReducer(reducer, { isInternal: false, loaded: false });\n\n    useEffect(() => { insights.chrome.auth.getUser().then((data) => dispatch({ type: 'setLoaded', payload: data.identity.user.is_internal })); }, []);\n\n    return <Route {...props} render={props => state.loaded && (state.isInternal ? <Component {...props} /> : <Redirect to='/topics' />)} />;\n};\n\nconst Topics = () => <Switch>\n    <Route exact path='/topics' component={List} />\n    <Route exact path='/topics/:id' component={Details} />\n    <ProtectedRoute exact path='/topics/admin/manage' component={Admin} />\n\n    <Redirect path='*' to='/topics' push />\n</Switch>;\n\nProtectedRoute.propTypes = { component: PropTypes.any };\n\nexport default Topics;\n"],"sourceRoot":""}