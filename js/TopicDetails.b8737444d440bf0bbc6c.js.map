{"version":3,"sources":["webpack://advisor-frontend/./src/SmartComponents/Topics/_Details.scss","webpack://advisor-frontend/./src/SmartComponents/Topics/Details.js","webpack://advisor-frontend/./src/SmartComponents/Topics/_Details.scss?0e34"],"names":["___CSS_LOADER_EXPORT___","push","module","id","Details","match","fetchTopic","setFilters","topic","topicFetchStatus","intl","filters","useEffect","impacting","rule_status","params","sort","limit","offset","topic_id","name","subnav","messages","document","title","formatMessage","PageHeader","current","ouiaId","headingLevel","size","className","featured","color","icon","component","TextVariants","Truncate","text","description","length","expandText","collapseText","inline","Main","TimesCircleIcon","propTypes","PropTypes","injectIntl","routerParams","connect","state","AdvisorStore","dispatch","url","AppActions","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/TopicDetails.b8737444d440bf0bbc6c.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}.titleOverride{margin-bottom:var(--pf-global--spacer--lg)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/SmartComponents/Topics/_Details.scss\"],\"names\":[],\"mappings\":\"AAAA,MAAM,4BAA4B,CAAC,0BAA0B,qBAAqB,CAAC,gBAAgB,CAAC,cAAc,uCAAuC,CAAC,eAAe,0CAA0C\",\"sourcesContent\":[\":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}.titleOverride{margin-bottom:var(--pf-global--spacer--lg)}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import './_Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport React, { useEffect } from 'react';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport PropTypes from 'prop-types';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport StarIcon from '@patternfly/react-icons/dist/js/icons/star-icon';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Truncate } from '@redhat-cloud-services/frontend-components/components/Truncate';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Details = ({ match, fetchTopic, setFilters, topic, topicFetchStatus, intl, filters }) => {\n    useEffect(() => {\n        if (typeof filters.topic === 'undefined') {\n            setFilters({ impacting: true, rule_status: 'enabled', topic: match.params.id, sort: `-total_risk`, limit: 10, offset: 0  });\n        }\n    });\n\n    useEffect(() => {\n        fetchTopic({ topic_id: match.params.id });\n        return () => {\n            setFilters({ impacting: true, rule_status: 'enabled', sort: '-total_risk', limit: 10, offset: 0 });\n        };\n    }, [fetchTopic, match.params.id, setFilters]);\n\n    useEffect(() => {\n        if (topic && topic.name) {\n            const subnav = `${topic.name} - ${messages.topics.defaultMessage}`;\n            document.title = intl.formatMessage(messages.documentTitle, { subnav });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [topic]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Breadcrumbs\n                current={topic.name}\n                match={match}\n                ouiaId=\"details\"\n            />\n            {topicFetchStatus === 'fulfilled' &&\n                <React.Fragment>\n                    <Title headingLevel='h3' size=\"2xl\" className='titleOverride'>\n                        {topic.name}{topic.featured && <Label color='blue' className='labelOverride' icon={<StarIcon />}>\n                            {intl.formatMessage(messages.featured)}\n                        </Label>}\n                    </Title>\n                    <TextContent className='textOverride'>\n                        <Text component={TextVariants.p}>\n                            <Truncate\n                                text={topic.description}\n                                length={600}\n                                expandText={intl.formatMessage(messages.readmore)}\n                                collapseText={intl.formatMessage(messages.readless)}\n                                inline\n                            />\n                        </Text>\n                    </TextContent>\n                </React.Fragment>\n            }\n            {topicFetchStatus === '' || topicFetchStatus === 'pending' && <Loading />}\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                {topicFetchStatus === '' || topicFetchStatus === 'pending' || topicFetchStatus === 'fulfilled' && <React.Fragment>\n                    <Title headingLevel=\"h3\" size=\"2xl\" className='titleOverride'>\n                        {intl.formatMessage(messages.recommendations)}\n                    </Title>\n                    {filters.topic && <RulesTable />}\n                </React.Fragment>}\n                {topicFetchStatus === 'failed' || topicFetchStatus === 'rejected' &&\n                    <MessageState icon={TimesCircleIcon} title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n                        text={intl.formatMessage(messages.topicDetailslNodetailsBody)} />}\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n};\n\nDetails.propTypes = {\n    match: PropTypes.any,\n    fetchTopic: PropTypes.func,\n    topic: PropTypes.object,\n    topicFetchStatus: PropTypes.string,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    filters: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    topic: state.AdvisorStore.topic,\n    topicFetchStatus: state.AdvisorStore.topicFetchStatus,\n    filters: state.AdvisorStore.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopic: (url) => dispatch(AppActions.fetchTopic(url)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Details)));\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@redhat-cloud-services/frontend-components-config/src/css-prefix-loader.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@redhat-cloud-services/frontend-components-config/src/css-prefix-loader.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}