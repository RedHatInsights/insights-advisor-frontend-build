{"version":3,"sources":["webpack://advisor-frontend/./src/PresentationalComponents/Common/DownloadHelper.js","webpack://advisor-frontend/./src/Utilities/Debounce.js"],"names":["fileName","exportTable","defaultParams","date","Date","toISOString","replace","split","format","params","API","BASE_URL","payload","data","JSON","stringify","downloadFile","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout"],"mappings":"iNAIMA,EAAW,SAACC,GACd,IAAMC,EAAgB,CAClBC,MAAM,IAAIC,MAAOC,cAAcC,QAAQ,QAAS,KAAKC,MAAM,KAAK,GAAK,QAGzE,iCAA2BN,EAA3B,aAA2CC,EAAcC,OAa7D,QAVoB,+BAAG,WAAOF,EAAaO,EAAQC,GAA5B,kGAEOC,QAAA,UAAWC,WAAX,mBAA8BV,EAA9B,YAAwD,SAAXO,EAAoB,OAAS,OAA1E,OAAkFC,IAFzF,OAETG,EAFS,OAGXC,EAAkB,SAAXL,EAAoBM,KAAKC,UAAUH,EAAQC,MAAQD,EAAQC,MACtEG,kBAAaH,EAAMb,EAASC,GAAcO,GAJ3B,+HAAH,2D,iFCEpB,QAZiB,SAACS,EAAOC,GAAU,OACaC,cAASF,GADtB,WACxBG,EADwB,KACRC,EADQ,KAS/B,OAPAC,gBAAU,WACN,IAAMC,EAAUC,YAAW,WAAOH,EAAkBJ,KAAUC,GAC9D,OAAO,WACHO,aAAaF,MAElB,CAACL,EAAOD,IAEJG","file":"js/3854.3a77f136b62b98d321ec.js","sourcesContent":["import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n"],"sourceRoot":""}