{"version":3,"sources":["webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/SystemsTable/SystemsTable.scss","webpack:///./src/PresentationalComponents/Export/_Export.scss","webpack:///./src/PresentationalComponents/SystemsTable/SystemsTable.scss?b38d","webpack:///./src/PresentationalComponents/Export/_Export.scss?3c1a","webpack:///./src/PresentationalComponents/Export/SystemsPdfBuild.js","webpack:///./src/PresentationalComponents/Export/SystemsPdf.js","webpack:///./src/PresentationalComponents/SystemsTable/SystemsTable.js"],"names":["urlBuilder","filters","selectedTags","workloads","url","URL","window","location","queryString","Object","keys","map","key","Array","isArray","join","params","URLSearchParams","get","SAP","set","length","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","search","from","reduce","acc","value","JSON","parse","split","encodeOptionsToURL","options","index","pruneFilters","localFilters","filterCategories","prunedFilters","arr","item","category","chips","selectedCategoryValue","values","find","String","name","text","label","string","title","toUpperCase","substring","urlParam","workloadQueryBuilder","SID","generateFilter","system_profile","isSelected","sap_system","sap_sids","undefined","arrayEnhancer","Debounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","fileName","exportTable","defaultParams","date","Date","toISOString","replace","downloadHelper","format","a","API","BASE_URL","payload","data","stringify","downloadFile","exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","styles","StyleSheet","create","bold","fontWeight","global_FontWeight_bold","link","color","global_link_Color","marginTop","global_spacer_md","nameColumn","width","header","fontSize","chart_global_Fill_Color_700","paddingLeft","c_table_m_compact_cell_PaddingLeft","paddingBottom","c_table_m_compact_cell_PaddingBottom","paddingTop","c_table_m_compact_cell_PaddingTop","tablePage","page","systems","intl","formatMessage","messages","style","recommendations","textAlign","critical","important","moderate","low","lastSeen","marginLeft","hitColumns","rows","system","last_seen","toUTCString","month","year","time","sysDate","slice","system_uuid","src","display_name","Fragment","withHeader","propTypes","PropTypes","object","number","any","leadPage","systemsTotal","tags","offset","limit","insightsHeader","sysTableCount","execReportHeaderSystems","filtersApplied","tagsApplied","decodeURIComponent","noTags","array","SystemsPdf","systemsCount","useIntl","loading","setLoading","dataFetch","Promise","SYSTEMS_FETCH_URL","all","firstPage","meta","count","otherPages","resultArray","chunkIndex","Math","floor","pageSystems","useMemo","allPagesHaveTitle","exportPdf","asyncFunction","buttonProps","variant","component","className","isDisabled","reportName","type","size","SystemsTable","sortIndex","sortDirection","systemsFetchStatus","fetchSystems","setFilters","permsExport","usePermissions","PERMS","hasAccess","inventory","useRef","InventoryTable","setInventory","store","useStore","results","searchText","setSearchText","debouncedSearchText","debounce","DEBOUNCE_DELAY","filterBuilding","setFilterBuilding","sortIndices","0","1","2","3","4","5","6","fetchSystemsFn","useCallback","removeFilterParam","param","filter","hits","filterConfigItems","filterValues","onChange","event","SFC","id","includes","shift","addFilterParam","items","activeFiltersConfig","sort","onDelete","itemsToRemove","isAll","newFilter","transforms","pfReactTable","numberRuleHits","insights","loadInventory","ReactRedux","react","React","reactRouterDom","pfReact","reactCore","inventoryConnector","mergeWithEntities","INVENTORY_ACTION_TYPES","getRegistry","register","systemReducer","copyFilters","paramsObject","Number","ref","isFullView","sortBy","direction","onSort","orderParam","hasCheckbox","total","isLoaded","perPage","onRefresh","per_page","filterConfig","exportConfig","onSelect","_e","fileType","downloadReport","extraItems","role","tooltipText","exportData","permsAction","Failed","message","systemTableFetchError","Loading","func","addNotification","routerParams","connect","AdvisorStore","filtersSystems","dispatch","AppActions"],"mappings":"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","file":"js/SystemsTable.f463b5030dbb685594c8.js","sourcesContent":["import { generateFilter } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\n// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags, workloads) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n\n    //Removes invalid 'undefined' url param value\n    params.get('reports_shown') === 'undefined' && params.delete('reports_shown');\n\n    workloads?.SAP ? params.set('sap_system', true) : params.delete('sap_system');\n    selectedTags?.length ? params.set('tags', selectedTags) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// create url from options\nexport const encodeOptionsToURL = (options) => {\n    return Object.entries(options).reduce((acc, [key, value], index) => {\n        return acc += index === 0 ? `${key}=${value}` : `&${key}=${value}`;\n    }, '');\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.reduce((arr, item) => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return [...arr, { category: capitalize(category.title), chips, urlParam: category.urlParam }];\n        } else if (item[0] === 'text') {\n            return [...arr, { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] }];\n        } else { return arr; }\n    }, []) : [];\n};\n\n// builds workload query filter\nexport const workloadQueryBuilder = (workloads, SID) => generateFilter({\n    system_profile: {\n        ...workloads?.SAP?.isSelected && { sap_system: true },\n        ...SID?.length > 0 && { sap_sids: SID }\n    }\n}, undefined, { arrayEnhancer: 'contains' });\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-table__sort-indicator{margin-left:var(--pf-global--spacer--xs)}.pf-c-table th,td{padding-right:0px !important}.pf-c-table tr>:last-child{padding-left:var(--pf-global--spacer--xs)}.pf-c-table .pf-c-table__sort{min-width:initial}table.ins-c-entity-table.pf-c-table .ins-composed-col *{font-size:var(--pf-global--FontSize--md)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".systemsPdfOverride{text-align:left !important;border-radius:0 !important}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./SystemsTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./SystemsTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./SystemsTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Export.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Export.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Export.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable react/prop-types */\n\nimport { Column, Section, Table } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { Link, StyleSheet, Text } from '@react-pdf/renderer';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport c_table_m_compact_cell_PaddingBottom from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingBottom';\nimport c_table_m_compact_cell_PaddingLeft from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingLeft';\nimport c_table_m_compact_cell_PaddingTop from '@patternfly/react-tokens/dist/js/c_table_m_compact_cell_PaddingTop';\nimport chart_global_Fill_Color_700 from '@patternfly/react-tokens/dist/js/chart_global_Fill_Color_700';\nimport global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_link_Color from '@patternfly/react-tokens/dist/js/global_link_Color';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport messages from '../../Messages';\n\nconst styles = StyleSheet.create({\n    bold: { fontWeight: global_FontWeight_bold.value },\n    link: { color: global_link_Color.value },\n    text: { marginTop: global_spacer_md.value },\n    nameColumn: { width: '220px' },\n    header: {\n        fontSize: 9,\n        color: chart_global_Fill_Color_700.value,\n        paddingLeft: c_table_m_compact_cell_PaddingLeft.value,\n        paddingBottom: c_table_m_compact_cell_PaddingBottom.value,\n        paddingTop: c_table_m_compact_cell_PaddingTop.value\n    }\n});\n\nexport const tablePage = ({ page, systems, intl }) => {\n    const header = [{ value: intl.formatMessage(messages.name), style: styles.nameColumn },\n        { value: intl.formatMessage(messages.recommendations), style: { width: '100px', textAlign: 'center' } },\n        { value: intl.formatMessage(messages.critical), style: { width: '70px', textAlign: 'center' } },\n        { value: intl.formatMessage(messages.important), style: { width: '70px', textAlign: 'center' } },\n        { value: intl.formatMessage(messages.moderate), style: { width: '60px', textAlign: 'center' } },\n        { value: intl.formatMessage(messages.low), style: { width: '90px', textAlign: 'center' } },\n        { value: intl.formatMessage(messages.lastSeen), style: { marginLeft: '20px' } }];\n    const hitColumns = ['hits', 'critical_hits', 'important_hits', 'moderate_hits', 'low_hits'];\n    const headerBuilder = ({ value, style }) => <Text style={{ ...style, ...styles.header, ...styles.bold }}>{value}</Text>;\n    const rowBuilder = ({ value, style }) => <Text style={style}>{value}</Text>;\n    const rows = [\n        ...systems.map(system => {\n            const [, date, month, year, time] = new Date(system.last_seen).toUTCString().split(' ');\n            const sysDate = `${date} ${month} ${year}, ${time.split(':').slice(0, 2).join(':')} UTC`;\n            return [\n                <Text key={system.system_uuid} style={styles.nameColumn}><Link style={styles.link}\n                    src={`https://cloud.redhat.com/insights/advisor/systems/${system.system_uuid}/`}>{system.display_name}</Link></Text>,\n                ...hitColumns.map(item => rowBuilder({ style: { width: '10px' }, value: system[item] })),\n                <Text key={system.last_seen} style={{ width: '100px' }}>{`${sysDate}`}</Text>\n            ];\n        })];\n\n    return <React.Fragment key={page}>\n        <Column>\n            <Table withHeader rows={[header.map(item => headerBuilder(item)), ...rows]} />\n        </Column>\n    </React.Fragment >;\n};\n\ntablePage.propTypes = {\n    systems: PropTypes.object,\n    page: PropTypes.number,\n    intl: PropTypes.any\n};\n\nexport const leadPage = ({ systemsTotal, systems, filters, tags, intl }) => {\n    delete filters.offset;\n    delete filters.limit;\n    return <React.Fragment key={`${intl.formatMessage(messages.insightsHeader)}: ${intl.formatMessage(messages.systems)}`}>\n        <Text key='sys-count' style={styles.text}>\n            {intl.formatMessage(messages.sysTableCount, {\n                systems: <Text key='sys-count-count' style={styles.bold}>\n                    {intl.formatMessage(messages.execReportHeaderSystems, { systems: systemsTotal })}\n                </Text>\n            })}\n        </Text>\n        <Text key='sys-filters' style={styles.text}>\n            {intl.formatMessage(messages.filtersApplied)}\n        </Text>\n        <Text key='sys-filters-values' style={styles.bold}>\n            {Object.entries(filters).map(value => <Text key={value}>{`${value[0]}: ${value[1]}     `}</Text>)}\n        </Text>\n        <Text key='sys-tags' style={styles.text}>\n            {intl.formatMessage(messages.tagsApplied)}\n        </Text>\n        <Text key='sys-tags-values' style={styles.bold}>{tags ? decodeURIComponent(tags) : intl.formatMessage(messages.noTags)}</Text>\n        <Section key='systems' title='Systems'>\n            {tablePage({ systems, intl })}\n        </Section>\n    </React.Fragment >;\n};\n\nleadPage.propTypes = {\n    systems: PropTypes.object,\n    systemsTotal: PropTypes.number,\n    filters: PropTypes.object,\n    tags: PropTypes.array,\n    intl: PropTypes.any\n};\n","import './_Export.scss';\n\nimport React, { useMemo, useState } from 'react';\nimport { leadPage, tablePage } from './SystemsPdfBuild';\n\nimport API from '../../Utilities/Api';\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport PropTypes from 'prop-types';\nimport { SYSTEMS_FETCH_URL } from '../../AppConstants';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst SystemsPdf = ({ filters, selectedTags, systemsCount }) => {\n    const intl = useIntl();\n    const [loading, setLoading] = useState(false);\n\n    const dataFetch = async () => {\n        setLoading(true);\n        const options = selectedTags.length && ({ tags: selectedTags });\n        const [systems] = await Promise.all([(await API.get(SYSTEMS_FETCH_URL, {}, { ...filters, ...options, limit: systemsCount })).data]);\n        const firstPage = leadPage({ systemsTotal: systems.meta.count, systems: systems.data.slice(0, 18), filters, tags: selectedTags, intl });\n\n        const otherPages = systems.data.slice(18, systems.data.length).reduce((resultArray, item, index) => {\n            const chunkIndex = Math.floor(index / 31);\n            !resultArray[chunkIndex] && (resultArray[chunkIndex] = []);\n            resultArray[chunkIndex].push(item);\n\n            return resultArray;\n        }, []);\n\n        setLoading(false);\n\n        return [firstPage, ...otherPages.map((pageSystems, index) => tablePage({ page: index, systems: pageSystems, intl }))];\n    };\n\n    return useMemo(() => {\n        return <DownloadButton\n            allPagesHaveTitle={false}\n            label={loading ? intl.formatMessage(messages.loading) : intl.formatMessage(messages.exportPdf)}\n            asyncFunction={dataFetch}\n            buttonProps={{\n                variant: '', component: 'button', className: 'pf-c-dropdown__menu-item systemsPdfOverride', ...(loading ? { isDisabled: true } : null)\n            }}\n            reportName={`${intl.formatMessage(messages.insightsHeader)}:`}\n            type={intl.formatMessage(messages.systems)}\n            fileName={`Advisor_systems--${(new Date()).toUTCString().replace(/ /g, '-')}.pdf`}\n            size={[841.89, 595.28]}\n        />;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loading]);\n};\n\nSystemsPdf.propTypes = {\n    filters: PropTypes.object,\n    selectedTags: PropTypes.string,\n    systemsCount: PropTypes.number\n};\n\nexport default SystemsPdf;\n","import './SystemsTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as ReactRedux from 'react-redux';\nimport * as pfReactTable from '@patternfly/react-table';\nimport * as reactRouterDom from 'react-router-dom';\n\nimport { DEBOUNCE_DELAY, PERMS, SYSTEM_FILTER_CATEGORIES as SFC } from '../../AppConstants';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { connect, useStore } from 'react-redux';\nimport { filterFetchBuilder, paramParser, pruneFilters, urlBuilder, workloadQueryBuilder } from '../Common/Tables';\n\nimport Failed from '../Loading/Failed';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport SystemsPdf from '../Export/SystemsPdf';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport messages from '../../Messages';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { systemReducer } from '../../AppReducer';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/files/RBACHook';\n\nconst SystemsTable = ({ systemsFetchStatus, fetchSystems, systems, filters, setFilters, selectedTags, workloads, SID }) => {\n    const intl = useIntl();\n    const permsExport = usePermissions('advisor', PERMS.export).hasAccess;\n    const inventory = useRef(null);\n    const [InventoryTable, setInventory] = useState();\n    const store = useStore();\n    const results = systems.meta ? systems.meta.count : 0;\n    const [searchText, setSearchText] = useState(filters.display_name || '');\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const sortIndices = {\n        0: 'display_name',\n        1: 'hits',\n        2: 'critical_hits',\n        3: 'important_hits',\n        4: 'moderate_hits',\n        5: 'low_hits',\n        6: 'last_seen'\n    };\n\n    const onSort = ({ index, direction }) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const fetchSystemsFn = useCallback(() => {\n        let options = selectedTags.length && ({ tags: selectedTags });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        fetchSystems({ ...filterFetchBuilder(filters), ...options });\n    }, [fetchSystems, filters, selectedTags, workloads, SID]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        param === 'hits' && filter.hits === undefined && (filter.hits = ['yes']);\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        // remove 'yes' from the hits filter if the user chooses any other filters (its always the first item)\n        param === 'hits' && values.length > 1 && values.includes('yes') && values.shift();\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: SFC.hits.title,\n        type: SFC.hits.type,\n        id: SFC.hits.urlParam,\n        value: `checkbox-${SFC.hits.urlParam}`,\n        filterValues: {\n            key: `${SFC.hits.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(SFC.hits.urlParam, values),\n            value: filters.hits,\n            items: SFC.hits.values\n        }\n    }];\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        localFilters.hits && localFilters.hits.includes('yes') && delete localFilters.hits;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, SFC);\n    };\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({ sort: filters.sort, limit: filters.limit, offset: filters.offset, hits: ['yes'] });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const handleRefresh = (options) => {\n        if (systemsFetchStatus === 'fulfilled') {\n            const { offset, limit } = filters;\n            const newOffset = (options.page * options.per_page) - options.per_page;\n            if (newOffset !== offset || limit !== options.per_page) {\n                setFilters({\n                    ...filters,\n                    limit: options.per_page,\n                    offset: (options.page * options.per_page) - options.per_page\n                });\n            }\n        }\n    };\n\n    const calculateSort = () => {\n        const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n        const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n        return {\n            index: sortIndex,\n            key: sortIndex !== 6 ? sortIndices[sortIndex] : 'updated',\n            direction: sortDirection\n        };\n    };\n\n    useEffect(() => {\n        (async () => {\n            const rows = [{\n                title: intl.formatMessage(messages.name), transforms: [pfReactTable.sortable, pfReactTable.cellWidth(80)], key: 'display_name'\n            },\n            { title: intl.formatMessage(messages.numberRuleHits), transforms: [pfReactTable.sortable, pfReactTable.wrappable], key: 'hits' },\n            { title: intl.formatMessage(messages.critical), transforms: [pfReactTable.sortable, pfReactTable.wrappable], key: 'critical_hits' },\n            { title: intl.formatMessage(messages.important), transforms: [pfReactTable.sortable, pfReactTable.wrappable], key: 'important_hits' },\n            { title: intl.formatMessage(messages.moderate), transforms: [pfReactTable.sortable, pfReactTable.wrappable], key: 'moderate_hits' },\n            { title: intl.formatMessage(messages.low), transforms: [pfReactTable.sortable, pfReactTable.wrappable], key: 'low_hits' },\n            { title: intl.formatMessage(messages.lastSeen), transforms: [pfReactTable.sortable, pfReactTable.wrappable], key: 'updated' }];\n            const { inventoryConnector, mergeWithEntities, INVENTORY_ACTION_TYPES\n            } = await insights.loadInventory({\n                ReactRedux,\n                react: React,\n                reactRouterDom,\n                pfReactTable,\n                pfReact: reactCore\n            });\n            getRegistry().register({\n                ...mergeWithEntities(\n                    systemReducer(\n                        [...rows],\n                        INVENTORY_ACTION_TYPES\n                    )\n                )\n            });\n\n            const { InventoryTable } = inventoryConnector(store);\n            setInventory(() => InventoryTable);\n        })();\n    }, [intl, store]);\n\n    useEffect(() => {\n        filters.display_name === undefined ? setSearchText('') : setSearchText(filters.display_name);\n    }, [filters.display_name]);\n\n    useEffect(() => {\n        if (!filterBuilding && systemsFetchStatus !== 'pending') {\n            const copyFilters = { ...filters };\n            delete copyFilters.display_name;\n            setFilters({\n                ...copyFilters, ...(searchText.length ? { display_name: searchText } : {}), offset: 0\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    useEffect(() => {\n        if (window.location.search) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            paramsObject.sort !== undefined && (paramsObject.sort = paramsObject.sort[0]);\n            paramsObject.display_name !== undefined && (paramsObject.display_name = paramsObject.display_name[0]);\n            paramsObject.hits === undefined && (paramsObject.hits = ['all']);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            setFilters({ ...filters, ...paramsObject });\n        } else if (filters.limit === undefined || filters.offset === undefined || filters.hits === undefined) {\n            setFilters({ ...filters, offset: 0, limit: 10, hits: ['all'] });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        urlBuilder(filters, selectedTags, workloads);\n    }, [filters, selectedTags, workloads]);\n\n    useEffect(() => {\n        !filterBuilding && systemsFetchStatus !== 'pending' && selectedTags !== null && fetchSystemsFn();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchSystemsFn, filterBuilding, filters, selectedTags]);\n\n    return InventoryTable ?\n        systemsFetchStatus !== 'failed' ?\n            <InventoryTable\n                ref={inventory}\n                items={((systemsFetchStatus !== 'pending' && systems && systems.data) || []).map((system) => ({\n                    ...system,\n                    id: system.system_uuid\n                }))}\n                isFullView\n                sortBy={calculateSort()}\n                onSort={onSort}\n                hasCheckbox={false}\n                page={filters.offset / filters.limit + 1}\n                total={results}\n                isLoaded={systemsFetchStatus !== 'pending'}\n                perPage={Number(filters.limit)}\n                onRefresh={handleRefresh}\n                filterConfig={{ items: filterConfigItems }}\n                activeFiltersConfig={activeFiltersConfig}\n                exportConfig={{\n                    onSelect: (_e, fileType) => downloadReport('systems', fileType, urlBuilder(filters, selectedTags)),\n                    extraItems: [<li key='download-pd' role=\"menuitem\">\n                        <SystemsPdf filters={{ ...filterFetchBuilder(filters) }} selectedTags={selectedTags}\n                            systemsCount={systems && systems.meta && systems.meta.count} />\n                    </li>],\n                    isDisabled: !permsExport,\n                    tooltipText: permsExport ? intl.formatMessage(messages.exportData) : intl.formatMessage(messages.permsAction)\n                }}\n            />\n            : systemsFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.systemTableFetchError)} />)\n        : <Loading />;\n};\n\nSystemsTable.propTypes = {\n    fetchSystems: PropTypes.func,\n    systemsFetchStatus: PropTypes.string,\n    systems: PropTypes.object,\n    addNotification: PropTypes.func,\n    filters: PropTypes.object,\n    setFilters: PropTypes.func,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object,\n    SID: PropTypes.object\n};\n\nconst mapStateToProps = ({ AdvisorStore }) => ({\n    systems: AdvisorStore.systems,\n    systemsFetchStatus: AdvisorStore.systemsFetchStatus,\n    filters: AdvisorStore.filtersSystems,\n    selectedTags: AdvisorStore.selectedTags,\n    workloads: AdvisorStore.workloads,\n    SID: AdvisorStore.SID\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchSystems: (url) => dispatch(AppActions.fetchSystems(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFiltersSystems(filters))\n});\n\nexport default routerParams(connect(mapStateToProps, mapDispatchToProps)(SystemsTable));\n"],"sourceRoot":""}