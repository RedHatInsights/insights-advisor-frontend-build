{"version":3,"sources":["webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-insights/index.css","webpack:///./src/PresentationalComponents/Inventory/InventoryDetails.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-insights/index.css?fa7b"],"names":["titleCase","str","charAt","toUpperCase","toLowerCase","substr","Breadcrumbs","current","fetchRule","match","ruleFetchStatus","rule","intl","useState","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","url","split","push","title","navigate","formatMessage","messages","rules","systems","undefined","params","id","inventoryId","description","useEffect","rule_id","Fragment","length","map","oneLink","key","to","isActive","loading","propTypes","PropTypes","string","func","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","AppActions","module","exports","i","InventoryDetails","entity","InventoryDetail","setInventoryDetail","AppInfo","setAppInfo","fetchInventoryDetails","a","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReactTable","inventoryConnector","mergeWithDetail","INVENTORY_ACTION_TYPES","InventoryDetailHead","getRegistry","register","entitiesDetailsReducer","className","display_name","hideBack","gutter","span","contextTypes","store","history","addAlert","entityDetails","props","content","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose"],"mappings":"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","file":"js/InventoryDetails.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport * as AppActions from '../../AppActions';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst titleCase = (str = '') => str.charAt(0).toUpperCase() + str.toLowerCase().substr(1);\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add rules base\n        crumbs.push({ title: titleCase(splitUrl[1]), navigate: `/${splitUrl[1]}` });\n        // if applicable, add tab\n        if (splitUrl[1] === 'rules') {\n            splitUrl[1] + splitUrl[2] !== 'rulessystems' ?\n                crumbs.push({ title: intl.formatMessage(messages.rules), navigate: '/rules' })\n                : crumbs.push({ title: intl.formatMessage(messages.systems), navigate: '/rules/systems' });\n        }\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: titleCase(rule.description),\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[2] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id }) // eslint-disable-line camelcase\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{titleCase(oneLink.title)}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{titleCase(current)}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","exports = module.exports = require(\"../../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}.ins-empty-rule-cards div{text-align:center}.ins-c-rules-card .pf-c-card__header .pf-l-split__item:first-of-type{white-space:nowrap;margin-right:5px;margin-right:0.3125rem}.ins-c-rules-card .ins-l-icon-group__with-major{display:inline}.ins-c-rules-card .space-between{display:flex;justify-content:space-between}.ins-c-rules-card .pf-c-card__header div{font-weight:600}.ins-c-rules-card+.ins-c-rules-card{margin-top:var(--pf-global--spacer--xl)}.ins-c-rules-card a[disabled]{cursor:not-allowed;color:var(--pf-global--disabled-color--200)}.ins-c-rules-card a[disabled]:hover{text-decoration:none}.ins-c-inventory-advisor__card .ins-m-card__flat{box-shadow:none;border:1px solid #dcdcdc;border-radius:5px}.ins-c-inventory-advisor__card .pf-c-card__body svg{margin-right:5px;margin-right:0.3125rem}.ins-c-inventory-advisor__card pre{display:block;padding:10px;padding:0.59375rem;margin-top:5px;margin-top:0.3125rem;margin-bottom:10px;margin-bottom:0.625rem;color:#333;word-break:break-all;word-wrap:break-word;background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px}.ins-c-inventory-advisor__card pre code{white-space:pre-wrap}.ins-c-inventory-advisor__card ol{margin-top:10px;margin-top:0.625rem;margin-left:15px;margin-left:0.9375rem}.ins-c-inventory-advisor__card p+pre,.ins-c-inventory-advisor__card ul+pre{margin-bottom:20px;margin-bottom:1.25rem}.ins-c-inventory-advisor__card .pf-c-list{margin:5px 0px;margin:0.3125rem 0rem}.ins-c-inventory-advisor__card table{width:100%;margin-top:15px;margin-top:0.9375rem}.ins-c-inventory-advisor__card table tr{border-bottom:1px solid #ededed}.ins-c-inventory-advisor__card table th,.ins-c-inventory-advisor__card table td{padding:16px;padding:1rem}.ins-c-inventory-advisor__card table td{background:white !important}.ins-c-inventory-advisor__card table th{text-align:left !important}.batterySectionOverrides{margin-top:16px}.smallFontSizeOverride{font-size:var(--pf-global--FontSize--sm)}.successColorOverride{color:var(--pf-global--success-color--200)}.remediationButtonOverride{margin-top:-8px}.pf-c-check__label #battery_svg{height:1.25rem}.chartSpikeIconColor{color:var(--pf-global--primary-color--100)}.pf-c-clipboard-copy__group-copy{background-color:var(--pf-global--BackgroundColor--100)}.pf-l-stack{color:var(--pf-c-empty-state__body--Color)}.ins-c-insights__check{color:var(--pf-global--success-color--200)}.ins-c-background__default{color:var(--pf-global--BackgroundColor--100)}:root{--ins-color--orange: #ec7a08}button:focus{outline:none}section.ins-l-content{padding:var(--pf-global--spacer--lg)}section.ins-l-button-group{margin:24px 0px;margin:1.5rem 0rem}section.ins-l-button-group>*{display:inline}section.ins-l-button-group *+*{margin-left:5px;margin-left:0.3125rem}section.ins-l-icon-group *+*{margin-left:10px}section.ins-l-icon-group__with-major *+*{margin-left:7.5px}section.ins-l-icon-group__with-major .ins-battery:last-of-type{padding-left:15px;border-left:2px solid #eaeaea}section.ins-l-icon-group__with-major .ins-battery:last-of-type span.label{font-weight:500;margin:0 10px}\\n\", \"\"]);\n\n","import '@redhat-cloud-services/frontend-components-inventory-insights/index.css';\n\nimport * as pfReactTable from '@patternfly/react-table';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as reactRouterDom from 'react-router-dom';\n\nimport { Main, PageHeader } from '@redhat-cloud-services/frontend-components';\nimport React, { useEffect, useState } from 'react';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { entitiesDetailsReducer } from '../../AppReducer';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst InventoryDetails = ({ entity, match }) => {\n    const [InventoryDetail, setInventoryDetail] = useState();\n    const [AppInfo, setAppInfo] = useState();\n\n    const fetchInventoryDetails = async () => {\n        const { inventoryConnector, mergeWithDetail, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReactTable\n        });\n        const { InventoryDetailHead, AppInfo } = inventoryConnector();\n\n        getRegistry().register({\n            ...mergeWithDetail(entitiesDetailsReducer(INVENTORY_ACTION_TYPES))\n        });\n        setInventoryDetail(() => InventoryDetailHead);\n        setAppInfo(() => AppInfo);\n    };\n\n    useEffect(() => { fetchInventoryDetails(); }, []);\n\n    return <React.Fragment>\n        <PageHeader className=\"pf-m-light ins-inventory-detail\">\n            {entity && <Breadcrumbs\n                current={entity.display_name || entity.id}\n                match={match}\n            />}\n            {InventoryDetail && <InventoryDetail hideBack />}\n        </PageHeader>\n        <Main>\n            <reactCore.Grid gutter=\"md\">\n                <reactCore.GridItem span={12}>\n                    {AppInfo && <AppInfo />}\n                </reactCore.GridItem>\n            </reactCore.Grid>\n        </Main>\n    </React.Fragment>;\n};\n\nInventoryDetails.contextTypes = {\n    store: PropTypes.object\n};\n\nInventoryDetails.propTypes = {\n    history: PropTypes.object,\n    entity: PropTypes.object,\n    addAlert: PropTypes.func,\n    match: PropTypes.any\n};\n\nconst mapStateToProps = ({ entityDetails, props }) => ({\n    entity: entityDetails && entityDetails.entity,\n    ...props\n});\n\nexport default routerParams(connect(mapStateToProps, null)(InventoryDetails));\n","\nvar content = require(\"!!../../css-loader/dist/cjs.js!../../sass-loader/dist/cjs.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../css-loader/dist/cjs.js!../../sass-loader/dist/cjs.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../css-loader/dist/cjs.js!../../sass-loader/dist/cjs.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}