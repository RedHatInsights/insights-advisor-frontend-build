{"version":3,"sources":["webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./node_modules/lodash/_arrayIncludes.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/SmartComponents/Recs/Details.scss","webpack:///./src/PresentationalComponents/Inventory/_Inventory.scss","webpack:///./src/SmartComponents/Recs/Details.scss?1540","webpack:///./src/PresentationalComponents/Inventory/_Inventory.scss?8952","webpack:///./src/PresentationalComponents/Inventory/Inventory.js","webpack:///./src/cveToRuleid.js","webpack:///./src/SmartComponents/Recs/Details.js"],"names":["Loading","exports","___CSS_LOADER_API_IMPORT___","push","module","i","MessageState","className","children","icon","iconClass","iconStyle","text","title","variant","style","headingLevel","size","marginBottom","propTypes","PropTypes","any","string","defaultProps","CubesIcon","EmptyStateVariant","full","urlBuilder","filters","selectedTags","workloads","url","URL","window","location","queryString","Object","keys","map","key","Array","isArray","join","params","URLSearchParams","get","SAP","set","length","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","search","from","reduce","acc","value","JSON","parse","split","encodeOptionsToURL","options","index","pruneFilters","localFilters","filterCategories","prunedFilters","arr","item","category","chips","selectedCategoryValue","values","find","String","name","label","toUpperCase","substring","urlParam","workloadQueryBuilder","SID","generateFilter","system_profile","isSelected","sap_system","sap_sids","undefined","arrayEnhancer","Failed","message","DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","rule","afterFn","setAck","addNotification","setSystem","setRule","useState","justification","setJustificaton","singleSystem","setSingleSystem","bulkHostActions","a","data","systems","API","post","BASE_URL","rule_id","response","host_ids","hosts_acked_count","count","dismissable","formatMessage","messages","error","description","disableRule","rule_status","type","system_uuid","id","timeout","ruleSuccessfullyDisabled","isOpen","onClose","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","disableRuleForSystems","disableRuleSingleSystem","justificationNote","aria-describedby","onKeyDown","e","preventDefault","bool","object","func","array","system","injectIntl","connect","AdvisorStore","dispatch","baseIndexOf","comparator","Breadcrumbs","current","fetchRule","match","ruleFetchStatus","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","insightsHeader","navigate","inventoryId","useEffect","Fragment","oneLink","to","isActive","loading","routerParams","state","ownProps","AppActions","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","tags","incidentTooltip","position","TooltipPosition","right","color","incident","ruleIsDisabledTooltip","disabled","redhatDisabled","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","cells","display_name","none","date","Date","updated_at","isInline","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","setTimeout","console","ruleHelpful","Button","BarDividedList","list","element","RuleDetails","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","page","pageSize","Inventory","sortIndex","tableProps","onSelectRows","afterDisableFn","onSortFn","inventory","useRef","InventoryTable","setInventoryTable","selected","setSelected","disableRuleModalOpen","setDisableRuleModalOpen","bulkSelect","setBulkSelect","store","useStore","sortIndices","1","2","bulkSelectfn","filter","entity","calculateSelectedItems","insights","loadInventory","ReactRedux","react","React","reactRouterDom","pfReactTable","pfReact","reactCore","inventoryConnector","mergeWithEntities","INVENTORY_ACTION_TYPES","getRegistry","register","systemReducer","transforms","lastSeen","ref","sortBy","Number","sort","direction","onSort","onRefresh","per_page","onRefreshData","total","perPage","dedicatedAction","isDisabled","playbook_count","dataProvider","issues","onRemediationCreated","result","remediation","getNotification","remediate","actionsConfig","selectNone","selectPage","selectAll","checked","onSelect","arrayOf","shape","entities","payload","cveToRuleid","cves","OverviewDetails","fetchRuleAck","fetchTopics","fetchSystem","systemFetchStatus","ruleAck","actionsDropdownOpen","setActionsDropdownOpen","setHost","viewSystemsModalOpen","setViewSystemsModalOpen","setFilters","isRuleUpdated","setIsRuleUpdated","fetchRulefn","newSort","encodeURIComponent","enableRule","ruleSuccessfullyEnabled","rulesTableHideReportsErrorDisabled","isCVE","mapping","UI_BASE","includes","tagRef","workloadRef","stringify","toggleModal","PageHeader","Main","resolution","resolution_set","system_type","SYSTEM_TYPES","rhel","ocp","resolution_risk","ruleResolutionRisk","rulesDetailsPubishdate","DateFormat","publish_date","Label","Flex","FlexItem","align","default","Dropdown","toggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","dropdownItems","DropdownItem","Title","ruleIsDisabledForSystems","ruleIsDisabled","ruleIsDisabledForSystemsBody","viewSystems","ruleIsDisabledJustification","enableRuleForSystems","affectedSystems","canSelectAll","actionResolver","event","rowIndex","BellSlashIcon","ruleIsDisabledBody","rulesTableFetchRulesError"],"mappings":"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","file":"js/Details.9b9966acd02cb5abb073.js","sourcesContent":["import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { List } from 'react-content-loader';\nimport React from 'react';\nconst Loading = () => <>\n    <Card>\n        <CardBody>\n            <List />\n        </CardBody>\n    </Card></>;\n\nexport default Loading;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__split{display:inline-flex;justify-content:space-around}.ins-c-rule-details__split .pf-l-split__item{position:relative}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-center-text{text-align:left !important}.ins-c-rule-details__split{display:block}.ins-c-rule-details__split .pf-l-split__item{margin:var(--pf-global--spacer--md)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import { generateFilter } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\n// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags, workloads) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n\n    //Removes invalid 'undefined' url param value\n    params.get('reports_shown') === 'undefined' && params.delete('reports_shown');\n\n    workloads?.SAP ? params.set('sap_system', true) : params.delete('sap_system');\n    selectedTags?.length ? params.set('tags', selectedTags) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// create url from options\nexport const encodeOptionsToURL = (options) => {\n    return Object.entries(options).reduce((acc, [key, value], index) => {\n        return acc += index === 0 ? `${key}=${value}` : `&${key}=${value}`;\n    }, '');\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.reduce((arr, item) => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return [...arr, { category: capitalize(category.title), chips, urlParam: category.urlParam }];\n        } else if (item[0] === 'text') {\n            return [...arr, { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] }];\n        } else { return arr; }\n    }, []) : [];\n};\n\n// builds workload query filter\nexport const workloadQueryBuilder = (workloads, SID) => generateFilter({\n    system_profile: {\n        ...workloads?.SAP?.isSelected && { sap_system: true },\n        ...SID?.length > 0 && { sap_sids: SID }\n    }\n}, undefined, { arrayEnhancer: 'contains' });\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","import React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.rule_status === 'enabled' && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            try {\n                await setAck(options);\n                addNotification({\n                    variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyDisabled)\n                });\n                setJustificaton('');\n                afterFn && afterFn();\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                    onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), disableRule())}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport * as AppActions from '../../AppActions';\n\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Breadcrumb } from '@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb';\nimport { BreadcrumbItem } from '@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add base\n        crumbs.push({ title: `${intl.formatMessage(messages.insightsHeader)} ${splitUrl[1]}`, navigate: `/${splitUrl[1]}` });\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: rule.description,\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[1] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id })\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{oneLink.title}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'disabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'rhdisabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.redhatDisabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split className='ins-c-rule-details__split' hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}.pageHeaderOverride{padding-bottom:0px}.cardOverride{margin-bottom:var(--pf-global--spacer--md)}.titleOverride{margin-bottom:var(--pf-global--spacer--lg)}.pf-c-card__body{padding-bottom:var(--pf-global--spacer--md)}.categoryLabel{margin-left:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-rec-details__actions_dropdown{top:-55px;top:-3.4375rem}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-background__default{color:var(--pf-global--BackgroundColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Inventory.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Inventory.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Inventory.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_Inventory.scss';\n\nimport * as ReactRedux from 'react-redux';\nimport * as pfReactTable from '@patternfly/react-table';\nimport * as reactRouterDom from 'react-router-dom';\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport DisableRule from '../../PresentationalComponents/Modals/DisableRule';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { systemReducer } from '../../AppReducer';\nimport { useStore } from 'react-redux';\n\nlet page = 1;\nlet pageSize = 50;\nlet rule_id = '';\nconst Inventory = ({ tableProps, onSelectRows, rows, intl, rule, addNotification, items, afterDisableFn, onSortFn, filters }) => {\n    const inventory = useRef(null);\n    const [InventoryTable, setInventoryTable] = useState();\n    const [selected, setSelected] = useState([]);\n    const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n    const [bulkSelect, setBulkSelect] = useState();\n\n    const store = useStore();\n\n    const sortIndices = {\n        1: 'display_name',\n        2: 'updated'\n    };\n\n    const onSort = ({ index, direction }) => onSortFn(`${direction === 'asc' ? '' : '-'}${sortIndices[index]}`);\n\n    const calculateSort = () => {\n        const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n        return {\n            index: sortIndex,\n            key: sortIndex !== 2 ? sortIndices[sortIndex] : 'updated',\n            direction: filters.sort[0] === '-' ? 'desc' : 'asc'\n        };\n    };\n\n    const onRefresh = (options) => {\n        if (rule_id !== rule.rule_id) {\n            page = 1;\n            pageSize = 50;\n        }\n\n        if (inventory && inventory.current) {\n            page = options.page;\n            pageSize = options.per_page;\n            rule_id = rule.rule_id;\n            inventory.current.onRefreshData(options);\n        }\n    };\n\n    const remediationDataProvider = () => ({\n        issues: [{\n            id: `advisor:${rule.rule_id}`,\n            description: rule.description\n        }],\n        systems: selected\n    });\n\n    const onRemediationCreated = result => {\n        onSelectRows(-1, false);\n        try {\n            result.remediation && addNotification(result.getNotification());\n        } catch (error) {\n            addNotification(\n                { variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` }\n            );\n        }\n    };\n\n    const handleModalToggle = (disableRuleModalOpen) => {\n        setDisableRuleModalOpen(disableRuleModalOpen);\n    };\n\n    const bulkSelectfn = () => {\n        setBulkSelect(true);\n        setSelected(items);\n        onSelectRows(0, true);\n    };\n\n    useEffect(() => {\n        const calculateSelectedItems = (rows) => bulkSelect ?\n            setBulkSelect(false) : setSelected(rows.filter(entity => entity.selected === true).map(entity => entity.id));;\n        rows && calculateSelectedItems(rows);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rows]);\n\n    useEffect(() => {\n        (async () => {\n            const { inventoryConnector, mergeWithEntities, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n                ReactRedux, react: React, reactRouterDom, pfReactTable, pfReact: reactCore\n            });\n\n            getRegistry().register({\n                ...mergeWithEntities(\n                    systemReducer(\n                        [\n                            { title: intl.formatMessage(messages.name), transforms: [pfReactTable.sortable], key: 'display_name' },\n                            { title: intl.formatMessage(messages.lastSeen), transforms: [pfReactTable.sortable], key: 'updated' }\n                        ],\n                        INVENTORY_ACTION_TYPES\n                    )\n                )\n            });\n\n            const { InventoryTable } = inventoryConnector(store);\n            setInventoryTable(() => InventoryTable);\n        })();\n    }, [intl, store]);\n\n    return <React.Fragment>\n        {disableRuleModalOpen && <DisableRule\n            handleModalToggle={handleModalToggle}\n            isModalOpen={disableRuleModalOpen}\n            rule={rule}\n            afterFn={afterDisableFn}\n            hosts={selected} />\n        }\n        {InventoryTable ? <InventoryTable\n            ref={inventory}\n            items={items}\n            sortBy={calculateSort()}\n            onSort={onSort}\n            onRefresh={onRefresh}\n            page={page}\n            total={items.length}\n            perPage={pageSize}\n            tableProps={tableProps}\n            dedicatedAction={<RemediationButton\n                key='remediation-button'\n                isDisabled={selected.length === 0 || rule.playbook_count === 0}\n                dataProvider={remediationDataProvider}\n                onRemediationCreated={(result) => onRemediationCreated(result)}>\n                <AnsibeTowerIcon size='sm' className='ins-c-background__default' />\n                &nbsp;{intl.formatMessage(messages.remediate)}\n            </RemediationButton>}\n            actionsConfig={{\n                actions: ['', {\n                    label: intl.formatMessage(messages.disableRuleForSystems),\n                    props: { isDisabled: selected.length === 0 },\n                    onClick: () => handleModalToggle(true)\n                }]\n            }}\n            bulkSelect={{\n                count: selected.length,\n                items: [{\n                    title: intl.formatMessage(messages.selectNone),\n                    onClick: () => {\n                        onSelectRows(-1, false);\n                    }\n                },\n                {\n                    ...items && items.length > pageSize ? {\n                        title: intl.formatMessage(messages.selectPage, { items: pageSize }),\n                        onClick: () => {\n                            onSelectRows(0, true);\n                        }\n                    } : {}\n                },\n                {\n                    ...items && items.length > 0 ? {\n                        title: intl.formatMessage(messages.selectAll, { items: items.length || 0 }),\n                        onClick: () => {\n                            bulkSelectfn();\n                        }\n                    } : {}\n                }],\n                checked: selected.length === items.length ? 1 : selected.length === pageSize ? null : 0,\n                onSelect: () => { selected.length > 0 ? onSelectRows(-1, false) : bulkSelectfn(); }\n            }}\n        /> : <Loading />}\n    </React.Fragment>;\n};\n\nInventory.propTypes = {\n    rows: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        selected: PropTypes.bool\n    })),\n    onSelectRows: PropTypes.func,\n    items: PropTypes.array,\n    tableProps: PropTypes.any,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    addNotification: PropTypes.func,\n    afterDisableFn: PropTypes.func,\n    onSortFn: PropTypes.func,\n    filters: PropTypes.object\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    addNotification: data => dispatch(addNotification(data)),\n    onSelectRows: (id, selected) => dispatch({ type: 'SELECT_ENTITY', payload: { id, selected } })\n});\n\nexport default injectIntl(routerParams(connect(({ entities, props }) => ({\n    rows: entities && entities.rows,\n    ...props\n}), mapDispatchToProps)(Inventory)));\n","export const cveToRuleid = [\n    {\n        rule_id: 'CVE_2015_3456|VENOM_CVE_2015_3456',\n        name: 'CVE-2015-3456: \"VENOM\" QEMU privilege escalation',\n        description: 'CVE-2015-3456: \"VENOM\" QEMU privilege escalation',\n        cves: [\n            'CVE-2015-3456'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_5600|OPENSSH_CVE_2015_5600',\n        name: 'CVE-2015-5600: OpenSSH vulnerable to password guessing attack',\n        description: 'CVE-2015-5600: OpenSSH vulnerable to password guessing attack',\n        cves: [\n            'CVE-2015-5600'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_7181_2_3_nss_nspr|NSS_NSPR_CVE_2015_7181_2_3',\n        name: 'CVE-2015-7181, CVE-2015-7182, CVE-2015-7183: NSS/NSPR privilege escalation',\n        description: 'CVE-2015-7181, CVE-2015-7182, CVE-2015-7183: NSS/NSPR privilege escalation',\n        cves: [\n            'CVE-2015-7181',\n            'CVE-2015-7182',\n            'CVE-2015-7183'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_7501_commons_collections|COMMONS_COLLECTIONS_CVE_2015_7501_IN_USE',\n        name: 'CVE-2015-7501: Java application server code execution',\n        description: 'CVE-2015-7501: Java application server code execution',\n        cves: [\n            'CVE-2015-7501'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_7547_glibc|GLIBC_CVE_2015_7547',\n        name: 'CVE-2015-7547: libresolv code execution',\n        description: 'CVE-2015-7547: libresolv code execution',\n        cves: [\n            'CVE-2015-7547'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0728_kernel|KERNEL_CVE-2016-0728',\n        name: 'CVE-2016-0728: kernel privilege escalation in key management subsystem',\n        description: 'CVE-2016-0728: kernel privilege escalation in key management subsystem',\n        cves: [\n            'CVE-2016-0728'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN_INT_LISTENING',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption with listening processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN_LISTENING',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption with externally available processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN_USED',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption with running services',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN_LISTEN',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption with listening processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN_URGENT',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption with externally available processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN_USED',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption with running services',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_2315_24_git|GIT_CVE_2016_2315_24',\n        name: 'CVE-2016-2315, CVE-2016-2324: Git code execution via crafted packfile',\n        description: 'CVE-2016-2315, CVE-2016-2324: Git code execution via crafted packfile',\n        cves: [\n            'CVE-2016-2315',\n            'CVE-2016-2324'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_2315_24_git|GIT_DAEMON_CVE_2016_2315_24',\n        name: 'CVE-2016-2315, CVE-2016-2324: Git code execution via crafted packfile',\n        description: 'CVE-2016-2315, CVE-2016-2324: Git daemon remote code execution via crafted packfile',\n        cves: [\n            'CVE-2016-2315',\n            'CVE-2016-2324'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_2776_bind|BIND_CVE_2016_2776',\n        name: 'CVE-2016-2776: BIND denial of service via crafted DNS request',\n        description: 'CVE-2016-2776: BIND denial of service via crafted DNS request',\n        cves: [\n            'CVE-2016-2776'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_3714_imagemagick|IMAGEMAGICK_CVE_2016_3714',\n        name: 'CVE-2016-3714: ImageMagick code execution',\n        description: 'CVE-2016-3714: ImageMagick code execution',\n        cves: [\n            'CVE-2016-3714'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_5195_kernel|KERNEL_CVE_2016_5195_2',\n        name: 'CVE-2016-5195: kernel privilege escalation via permission bypass',\n        description: 'CVE-2016-5195: kernel privilege escalation via permission bypass',\n        cves: [\n            'CVE-2016-5195'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_5696_kernel|KERNEL_CVE_2016_5696_URGENT',\n        name: 'CVE-2016-5696: kernel man-in-the-middle via payload injection',\n        description: 'CVE-2016-5696: kernel man-in-the-middle via payload injection',\n        cves: [\n            'CVE-2016-5696'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_5696_kernel|KERNEL_CVE_2016_5696_WARN_2',\n        name: 'CVE-2016-5696: kernel man-in-the-middle via payload injection',\n        description: 'CVE-2016-5696: kernel man-in-the-middle via payload injection with incomplete mitigation',\n        cves: [\n            'CVE-2016-5696'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_9962_docker|CVE_2015_9962_DOCKER_LESS_SEVERE_2',\n        name: 'CVE-2016-9962: Docker privilege escalation via ptrace',\n        description: 'CVE-2016-9962: Docker privilege escalation via ptrace',\n        cves: [\n            'CVE-2016-9962'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_9962_docker|CVE_2015_9962_DOCKER_MORE_SEVERE_2',\n        name: 'CVE-2016-9962: Docker privilege escalation via ptrace',\n        description: 'CVE-2016-9962: Docker efficient privilege escalation via ptrace with outdated package',\n        cves: [\n            'CVE-2016-9962'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000250_bluez|BLUEZ_CVE_2017_1000250',\n        name: 'CVE-2017-1000250: bluez information disclosure',\n        description: 'CVE-2017-1000250: bluez information disclosure',\n        cves: [\n            'CVE-2017-1000250'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_LOADED_DOS',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel denial of service with loaded modules',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_LOADED_RCE',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel code execution with loaded modules',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_POSSIBLE_DOS',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel denial of service',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_POSSIBLE_RCE',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000253_loadelf|KERNEL_CVE_2017_1000253_MITIGATION_INCOMPLETE',\n        name: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries',\n        description: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries with incomplete mitigation',\n        cves: [\n            'CVE-2017-1000253'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000253_loadelf|KERNEL_CVE_2017_1000253_VULNERABLE',\n        name: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries',\n        description: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries',\n        cves: [\n            'CVE-2017-1000253'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000366_glibc|CVE_2017_1000364_KERNEL_CVE_2017_1000366_GLIBC_EXPLOITABLE',\n        name: 'CVE-2017-1000364, CVE-2017-1000366: kernel, glibc privilege escalation',\n        description: 'CVE-2017-1000364, CVE-2017-1000366: kernel, glibc privilege escalation',\n        cves: [\n            'CVE-2017-1000364',\n            'CVE-2017-1000366'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000368_sudo|CVE_2017_1000368_SUDO_2',\n        name: 'CVE-2017-1000368: sudo privilege escalation due to incomplete bugfix',\n        description: 'CVE-2017-1000368: sudo privilege escalation due to incomplete bugfix',\n        cves: [\n            'CVE-2017-1000368'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000405_kernel|KERNEL_CVE_2017_1000405_VULNERABLE',\n        name: 'CVE-2017-1000405: kernel memory corruption',\n        description: 'CVE-2017-1000405: kernel memory corruption',\n        cves: [\n            'CVE-2017-1000405'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_12616_tomcat|TOMCAT_CVE_2017_12616_2',\n        name: 'CVE-2017-12616: Tomcat information disclosure',\n        description: 'CVE-2017-12616: Tomcat information disclosure',\n        cves: [\n            'CVE-2017-12616'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_12616_tomcat|TOMCAT_CVE_2017_12616_USED_2',\n        name: 'CVE-2017-12616: Tomcat information disclosure',\n        description: 'CVE-2017-12616: Tomcat information disclosure with running process',\n        cves: [\n            'CVE-2017-12616'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_13077_wpa_supplicant|CVE_2017_13077_ERROR',\n        name: 'CVE-2017-13077: wpa_supplicant man-in-the-middle',\n        description: 'CVE-2017-13077: wpa_supplicant man-in-the-middle with active wifi',\n        cves: [\n            'CVE-2017-13077'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_13077_wpa_supplicant|CVE_2017_13077_WARN',\n        name: 'CVE-2017-13077: wpa_supplicant man-in-the-middle',\n        description: 'CVE-2017-13077: wpa_supplicant man-in-the-middle',\n        cves: [\n            'CVE-2017-13077'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_14491_dnsmasq|CVE_2017_14491_ERROR',\n        name: 'CVE-2017-14491: dnsmasq code execution',\n        description: 'CVE-2017-14491: dnsmasq code execution with listening processes',\n        cves: [\n            'CVE-2017-14491'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_14491_dnsmasq|CVE_2017_14491_WARN',\n        name: 'CVE-2017-14491: dnsmasq code execution',\n        description: 'CVE-2017-14491: dnsmasq code execution',\n        cves: [\n            'CVE-2017-14491'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_2636_kernel|KERNEL_CVE_2017_2636',\n        name: 'CVE-2017-2636: kernel privilege escalation',\n        description: 'CVE-2017-2636: kernel privilege escalation',\n        cves: [\n            'CVE-2017-2636'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5461_nss|CVE_2017_5461_NSS_2',\n        name: 'CVE-2017-5461: NSS code execution',\n        description: 'CVE-2017-5461: NSS code execution',\n        cves: [\n            'CVE-2017-5461'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_DRACUTKERNEL',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel in dracut and kernel',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_ONLYDRACUT',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel in dracut',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_ONLYVIRT',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_VIRTKERNEL',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization and kernel side-channel',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5753_4_cpu_kernel|KERNEL_CVE_2017_5753_4_CPU_ERROR_3',\n        name: 'CVE-2017-5753, CVE-2017-5754: \"Spectre/Meltdown\" CPU side-channel',\n        description: 'CVE-2017-5753, CVE-2017-5754: \"Spectre/Meltdown\" CPU side-channel',\n        cves: [\n            'CVE-2017-5753',\n            'CVE-2017-5754'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        name: 'CVE-2017-6074: kernel privilege escalation via DCCP module',\n        description: 'CVE-2017-6074: kernel privilege escalation via DCCP module',\n        cves: [\n            'CVE-2017-6074'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_7184_kernel|KERNEL_CVE_2017_7184_EXPLOITABLE_2',\n        name: 'CVE-2017-7184: kernel privilege escalation via CAP_NET_ADMIN capability',\n        description: 'CVE-2017-7184: kernel privilege escalation via CAP_NET_ADMIN capability',\n        cves: [\n            'CVE-2017-7184'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_7494_samba|SAMBA_CVE_2017_7494_2',\n        name: 'CVE-2017-7494: Samba code execution via writeable share',\n        description: 'CVE-2017-7494: Samba code execution via writeable share',\n        cves: [\n            'CVE-2017-7494'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_8779_rpc|CVE_2017_8779_BUG',\n        name: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        description: 'CVE-2017-8779: \"rpcbomb\" rpcbind crash with certain versions',\n        cves: [\n            'CVE-2017-8779'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_8779_rpc|CVE_2017_8779_VULNERABLE',\n        name: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        description: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        cves: [\n            'CVE-2017-8779'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_8779_rpc|CVE_2017_8779_WARN',\n        name: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        description: 'CVE-2017-8779: \"rpcbomb\" rpcbind memory leak',\n        cves: [\n            'CVE-2017-8779'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1000115_memcached|CVE_2018_1000115',\n        name: 'CVE-2018-1000115: memcached spoofed traffic amplification',\n        description: 'CVE-2018-1000115: memcached spoofed traffic amplification',\n        cves: [\n            'CVE-2018-1000115'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES_RUNNING',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation with running service',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES_WONTFIX',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation (no fix available for this version)',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES_WONTFIX_RUNNING',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation with running service (no fix available for this version)',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1102_ose_sti_builder|OSE_STI_BUILDER_CVE_2018_1102',\n        name: 'CVE-2018-1102: OpenShift remote code execution via S2I build',\n        description: 'CVE-2018-1102: OpenShift remote code execution via S2I build',\n        cves: [\n            'CVE-2018-1102'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1111_dhcp|ERROR_CVE_2018_1111_DHCP_2',\n        name: 'CVE-2018-1111: NetworkManager code execution',\n        description: 'CVE-2018-1111: NetworkManager code execution with DHCP enabled',\n        cves: [\n            'CVE-2018-1111'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1111_dhcp|WARN_CVE_2018_1111_DHCP_2',\n        name: 'CVE-2018-1111: NetworkManager code execution',\n        description: 'CVE-2018-1111: NetworkManager code execution',\n        cves: [\n            'CVE-2018-1111'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1112_glusterfs|GLUSTERFS_CVE_2018_1112',\n        name: 'CVE-2018-1112: glusterfs unrestricted access',\n        description: 'CVE-2018-1112: glusterfs unrestricted access',\n        cves: [\n            'CVE-2018-1112'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_BAD_CMDLINE',\n        name: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        description: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel mitigation disabled',\n        cves: [\n            'CVE-2018-12126',\n            'CVE-2018-12127',\n            'CVE-2018-12130',\n            'CVE-2019-11091'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_NEED_UPDATE',\n        name: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        description: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        cves: [\n            'CVE-2018-12126',\n            'CVE-2018-12127',\n            'CVE-2018-12130',\n            'CVE-2019-11091'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_VULNERABLE_2',\n        name: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        description: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel reported by kernel',\n        cves: [\n            'CVE-2018-12126',\n            'CVE-2018-12127',\n            'CVE-2018-12130',\n            'CVE-2019-11091'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12207_cpu_kernel|CVE_2018_12207_CPU_KERNEL_CMDLINE',\n        name: 'CVE-2018-12207: CPU systemwide denial of service',\n        description: 'CVE-2018-12207: CPU systemwide denial of service mitigation disabled',\n        cves: [\n            'CVE-2018-12207'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12207_cpu_kernel|CVE_2018_12207_CPU_KERNEL_FOR_SURE',\n        name: 'CVE-2018-12207: CPU systemwide denial of service',\n        description: 'CVE-2018-12207: CPU systemwide denial of service',\n        cves: [\n            'CVE-2018-12207'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12207_cpu_kernel|CVE_2018_12207_CPU_KERNEL_FOR_SURE_CRITICAL',\n        name: 'CVE-2018-12207: CPU systemwide denial of service',\n        description: 'CVE-2018-12207: CPU systemwide denial of service with running hypervisor',\n        cves: [\n            'CVE-2018-12207'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_14634_kernel|CVE_2018_14634_2',\n        name: 'CVE-2018-14634: kernel privilege escalation via SUID-root binary integer overflow',\n        description: 'CVE-2018-14634: kernel privilege escalation via SUID-root binary integer overflow',\n        cves: [\n            'CVE-2018-14634'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_19788_polkit|CVE_2018_19788_POLKIT_UID_BAD',\n        name: 'CVE-2018-19788: PolicyKit authentication bypass',\n        description: 'CVE-2018-19788: PolicyKit authentication bypass with affected UID',\n        cves: [\n            'CVE-2018-19788'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3620_cpu_kernel|CVE_2018_3620_CPU_KERNEL_BAD_CMDLINE',\n        name: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        description: 'CVE-2018-3620: \"L1TF\" CPU side-channel mitigation disabled',\n        cves: [\n            'CVE-2018-3620'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3620_cpu_kernel|CVE_2018_3620_CPU_KERNEL_NEED_UPDATE',\n        name: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        description: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        cves: [\n            'CVE-2018-3620'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3620_cpu_kernel|CVE_2018_3620_CPU_KERNEL_VULNERABLE_4',\n        name: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        description: 'CVE-2018-3620: \"L1TF\" CPU side-channel reported by kernel',\n        cves: [\n            'CVE-2018-3620'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3639_cpu_kernel|CVE_2018_3639_CPU_BAD_CMDLINE_2',\n        name: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        description: 'CVE-2018-3639: \"SSBD\" CPU side-channel mitigation disabled by command line',\n        cves: [\n            'CVE-2018-3639'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3639_cpu_kernel|CVE_2018_3639_CPU_BAD_KERNEL_2',\n        name: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        description: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        cves: [\n            'CVE-2018-3639'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3639_cpu_kernel|CVE_2018_3639_CPU_BAD_MICROCODE_2',\n        name: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        description: 'CVE-2018-3639: \"SSBD\" CPU side-channel with outdated microcode',\n        cves: [\n            'CVE-2018-3639'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_8897_kernel_popss|KERNEL_CVE_2018_8897_VULNERABLE_2',\n        name: 'CVE-2018-1087, CVE-2018-8897: \"POPSS\" kernel privilege escalation',\n        description: 'CVE-2018-1087, CVE-2018-8897: \"POPSS\" kernel privilege escalation',\n        cves: [\n            'CVE-2018-1087',\n            'CVE-2018-8897'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_0155_gpu_kernel|CVE_2019_0155_GPU_KERNEL',\n        name: 'CVE-2019-0154, CVE-2019-0155: i915 GPU privilege escalation',\n        description: 'CVE-2019-0154, CVE-2019-0155: i915 GPU privilege escalation',\n        cves: [\n            'CVE-2019-0154',\n            'CVE-2019-0155'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_BADCMD',\n        name: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        description: 'CVE-2019-11135: \"TAA\" kernel side-channel mitigation disabled',\n        cves: [\n            'CVE-2019-11135'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL',\n        name: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        description: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        cves: [\n            'CVE-2019-11135'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_UCODE',\n        name: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        description: 'CVE-2019-11135: \"TAA\" kernel side-channel mitigation incomplete',\n        cves: [\n            'CVE-2019-11135'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_1125_kernel|CVE_2019_1125_KERNEL_2',\n        name: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel',\n        description: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel',\n        cves: [\n            'CVE-2019-1125'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_1125_kernel|CVE_2019_1125_KERNEL_BAD_CMDLINE_2',\n        name: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel',\n        description: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel mitigation disabled',\n        cves: [\n            'CVE-2019-1125'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11477_kernel|CVE_2019_11477_KERNEL',\n        name: 'CVE-2019-11477, CVE-2019-11478, CVE-2019-11479: \"Sack Panic\" kernel denial of service',\n        description: 'CVE-2019-11477, CVE-2019-11478, CVE-2019-11479: \"Sack Panic\" kernel denial of service',\n        cves: [\n            'CVE-2019-11477',\n            'CVE-2019-11478',\n            'CVE-2019-11479'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_14835_kernel|CVE_2019_14835_KERNEL_VULN_BAD',\n        name: 'CVE-2019-14835: kernel privilege escalation during guest live migration',\n        description: 'CVE-2019-14835: kernel privilege escalation during guest live migration with virtualization',\n        cves: [\n            'CVE-2019-14835'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_14835_kernel|CVE_2019_14835_KERNEL_VULN_NORMAL',\n        name: 'CVE-2019-14835: kernel privilege escalation during guest live migration',\n        description: 'CVE-2019-14835: kernel privilege escalation during guest live migration',\n        cves: [\n            'CVE-2019-14835'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_5736_runc|CVE_2019_5736_RUNC',\n        name: 'CVE-2019-5736: runc privilege escalation',\n        description: 'CVE-2019-5736: runc privilege escalation',\n        cves: [\n            'CVE-2019-5736'\n        ]\n    },\n    {\n        rule_id: 'CVEs_Top10_2015_flash_plugin|FLASH_CVES_TOP_10_2015',\n        name: 'Top 10 exploited vulnerabilities in 2015',\n        description: 'Top 10 exploited vulnerabilities in 2015',\n        cves: [\n            'Top 10 exploited vulnerabilities in 2015'\n        ]\n    },\n    {\n        rule_id: 'CVEs_Top10_2016_flash_plugin|FLASH_CVES_TOP_10_2016',\n        name: 'Top 10 exploited vulnerabilities in 2016',\n        description: 'Top 10 exploited vulnerabilities in 2016',\n        cves: [\n            'Top 10 exploited vulnerabilities in 2016'\n        ]\n    },\n    {\n        rule_id: 'CVEs_cgi_httpoxy|HTTPD_CVE_2016_5387_3',\n        name: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle',\n        description: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle',\n        cves: [\n            'CVE-2016-5387'\n        ]\n    },\n    {\n        rule_id: 'CVEs_cgi_httpoxy|HTTPD_CVE_2016_5387_URGENT_3',\n        name: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle',\n        description: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle with listening processes',\n        cves: [\n            'CVE-2016-5387'\n        ]\n    },\n    {\n        rule_id: 'CVEs_samba_badlock|SAMBA_CVE_2016_2118_CLIENT',\n        name: 'CVE-2016-2118: \"Badlock\" Samba man-in-the-middle',\n        description: 'CVE-2016-2118: \"Badlock\" Samba client man-in-the-middle',\n        cves: [\n            'CVE-2016-2118'\n        ]\n    },\n    {\n        rule_id: 'CVEs_samba_badlock|SAMBA_CVE_2016_2118_SERVER',\n        name: 'CVE-2016-2118: \"Badlock\" Samba man-in-the-middle',\n        description: 'CVE-2016-2118: \"Badlock\" Samba server man-in-the-middle',\n        cves: [\n            'CVE-2016-2118'\n        ]\n    },\n    {\n        rule_id: 'bash_injection|VULNERABLE_BASH_DETECTED',\n        name: 'CVE-2014-6271, CVE-2014-7169: \"Shellshock\" Bash privilege escalation',\n        description: 'CVE-2014-6271, CVE-2014-7169: \"Shellshock\" Bash privilege escalation',\n        cves: [\n            'CVE-2014-6271',\n            'CVE-2014-7169'\n        ]\n    },\n    {\n        rule_id: 'hardening_httpd_ssl_pci_dss_poodle|HTTPD_POODLE_4',\n        name: 'Decreased security: httpd using deprecated TLS protocol',\n        description: 'CVE-2014-3566: \"POODLE\" SSLv3 man-in-the-middle',\n        cves: [\n            'CVE-2014-3566'\n        ]\n    },\n    {\n        rule_id: 'heartbleed|HAS_HEARTBLEED',\n        name: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        description: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        cves: [\n            'CVE-2014-0160'\n        ]\n    },\n    {\n        rule_id: 'heartbleed|HEARTBLEED_ACCESSIBLE',\n        name: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        description: 'CVE-2014-0160: \"Heartbleed\" OpenSSL with listening processes information disclosure',\n        cves: [\n            'CVE-2014-0160'\n        ]\n    },\n    {\n        rule_id: 'heartbleed|USING_HEARTBLEED_SO',\n        name: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        description: 'CVE-2014-0160: \"Heartbleed\" OpenSSL with active processes information disclosure',\n        cves: [\n            'CVE-2014-0160'\n        ]\n    },\n    {\n        rule_id: 'vsftpd_poodle|VSFTPD_POODLE',\n        name: 'CVE-2014-3566: \"POODLE\" vsftpd man-in-the-middle',\n        description: 'CVE-2014-3566: \"POODLE\" vsftpd man-in-the-middle',\n        cves: [\n            'CVE-2014-3566'\n        ]\n    }\n];\n","import './Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport { BASE_URL, SYSTEM_TYPES, UI_BASE } from '../../AppConstants';\nimport { Card, CardBody, CardFooter, CardHeader } from '@patternfly/react-core/dist/js/components/Card';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { encodeOptionsToURL, workloadQueryBuilder } from '../../PresentationalComponents/Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../../PresentationalComponents/Modals/DisableRule';\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Flex } from '@patternfly/react-core/dist/js/layouts/Flex/Flex';\nimport { FlexItem } from '@patternfly/react-core/dist/js/layouts/Flex/FlexItem';\nimport Inventory from '../../PresentationalComponents/Inventory/Inventory';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../../PresentationalComponents/RuleDetails/RuleDetails';\nimport RuleLabels from '../../PresentationalComponents/RuleLabels/RuleLabels';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { cveToRuleid } from '../../cveToRuleid.js';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst OverviewDetails = ({ match, fetchRuleAck, fetchTopics, fetchSystem, fetchRule, ruleFetchStatus, rule, systemFetchStatus, system, intl,\n    topics, ruleAck, hostAcks, fetchHostAcks, setSystem, setRule, selectedTags, addNotification, workloads, SID }) => {\n    const [actionsDropdownOpen, setActionsDropdownOpen] = useState(false);\n    const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n    const [host, setHost] = useState(undefined);\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [filters, setFilters] = useState({ sort: '-updated' });\n    const [isRuleUpdated, setIsRuleUpdated] = useState(false);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const fetchRulefn = (newSort, rule = true, system = true) => {\n        let options = selectedTags !== null && selectedTags.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)) });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        system && fetchSystem(\n            match.params.id,\n            options.tags ? {} : { ...options, ...filters, ...newSort },\n            options.tags && encodeOptionsToURL({ ...options, ...filters, ...newSort })\n        );\n        rule && fetchRule(\n            options.tags ? { rule_id: match.params.id } : { rule_id: match.params.id, ...options },\n            options.tags && encodeOptionsToURL(options)\n        );\n    };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type === SYSTEM_TYPES.rhel || SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const handleModalToggle = (disableRuleModalOpen, host = undefined) => {\n        setDisableRuleModalOpen(disableRuleModalOpen);\n        setHost(host);\n    };\n\n    const enableRule = async (rule) => {\n        try {\n            await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n            addNotification({\n                variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n            });\n            fetchRulefn();\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.rulesTableHideReportsErrorDisabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const afterDisableFn = () => {\n        setHost(undefined);\n        fetchRulefn();\n    };\n\n    const actionResolver = () => ([{\n        title: 'Disable recommendation for system',\n        onClick: (event, rowIndex, item) => (handleModalToggle(true, item))\n    }]);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hostAcks.data.map(item => item.system_uuid) };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/unack_hosts/`, {}, data);\n            addNotification({\n                variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n            });\n            if (selectedTags.length > 0) {\n                fetchRulefn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: 0 });\n            }\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const onSortFn = (sort) => {\n        setFilters({ sort });\n        sort === 'updated' && (sort = 'last_seen');\n        sort === '-updated' && (sort = '-last_seen');\n        fetchRulefn({ sort }, false);\n    };\n\n    useEffect(() => {\n        rule.rule_id && fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchHostAcks, rule.hosts_acked_count]);\n\n    useEffect(() => {\n        const isCVE = cveToRuleid && cveToRuleid.find(mapping => mapping.rule_id === match.params.id);\n\n        if (isCVE) {\n            window.location.href = `${UI_BASE}/vulnerability/cves/${isCVE.cves[0].includes('CVE-') ?\n                `${isCVE.cves[0]}?security_rule=${match.params.id}`\n                : ''}`;\n        } else {\n            fetchTopics();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const tagRef = useRef();\n    const workloadRef = useRef();\n    useEffect(() => {\n        const fetchAction = () => {fetchRulefn(); setIsRuleUpdated(true);};\n\n        if (isRuleUpdated && ((selectedTags !== null && JSON.stringify(tagRef.current) !== JSON.stringify(selectedTags)) ||\n        (JSON.stringify(workloadRef.current) !== JSON.stringify(workloads)))) {\n            fetchAction();\n        }\n\n        workloadRef.current = workloads;\n        tagRef.current = selectedTags;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchRulefn, selectedTags, workloads, SID]);\n\n    useEffect(() => {\n        if (rule.rule_status !== 'enabled' && rule.rule_id && isRuleUpdated) {\n            fetchRuleAck({ rule_id: rule.rule_id });\n        } else if (!isRuleUpdated) {\n            fetchRulefn();\n            setIsRuleUpdated(true);\n        }\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchRuleAck, rule.rule_status, rule.rule_id]);\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={fetchRulefn}\n            rule={rule}\n        />}\n        {disableRuleModalOpen && <DisableRule\n            handleModalToggle={handleModalToggle}\n            isModalOpen={disableRuleModalOpen}\n            rule={rule}\n            afterFn={afterDisableFn}\n            host={host} />\n        }\n        {ruleFetchStatus === 'fulfilled' &&\n            <React.Fragment>\n                <PageHeader className='pageHeaderOverride'>\n                    <Breadcrumbs\n                        current={rule.description || ''}\n                        match={match} />\n                </PageHeader>\n                <Main className='pf-m-light pf-u-pt-sm'>\n                    <RuleDetails resolutionRisk={ruleResolutionRisk(rule)} isDetailsPage rule={rule} topics={topics} header={\n                        <React.Fragment>\n                            <PageHeaderTitle title={<React.Fragment><RuleLabels rule={rule} />{rule.description}</React.Fragment>} />\n                            <p>{intl.formatMessage(\n                                messages.rulesDetailsPubishdate, { date: <DateFormat date={new Date(rule.publish_date)} type=\"onlyDate\" /> }\n                            )}\n                            <Label className=\"categoryLabel\" color=\"blue\">{rule.category.name}</Label>\n                            </p>\n                        </React.Fragment>}>\n                        <Flex>\n                            <FlexItem align={{ default: 'alignRight' }}>\n                                <Dropdown\n                                    className='ins-c-rec-details__actions_dropdown'\n                                    onSelect={() => setActionsDropdownOpen(!actionsDropdownOpen)}\n                                    position='right'\n                                    toggle={<DropdownToggle\n                                        onToggle={(actionsDropdownOpen) => setActionsDropdownOpen(actionsDropdownOpen)}\n                                        toggleIndicator={CaretDownIcon}>Actions\n                                    </DropdownToggle>}\n                                    isOpen={actionsDropdownOpen}\n                                    dropdownItems={rule && rule.rule_status === 'enabled' ?\n                                        [<DropdownItem key='link'\n                                            onClick={() => { handleModalToggle(true); }}>\n                                            {intl.formatMessage(messages.disableRule)}</DropdownItem>]\n                                        : [<DropdownItem key='link'\n                                            onClick={() => { enableRule(rule); }}>\n                                            {intl.formatMessage(messages.enableRule)}</DropdownItem>]} />\n                            </FlexItem>\n                        </Flex>\n                    </RuleDetails>\n                </Main>\n            </React.Fragment>}\n        {ruleFetchStatus === 'pending' && (<Loading />)}\n        <Main>\n            <React.Fragment>\n                {ruleFetchStatus === 'fulfilled' &&\n                    <React.Fragment>\n                        {(rule.hosts_acked_count > 0 || rule.rule_status !== 'enabled') && <Card className='cardOverride'>\n                            <CardHeader><Title headingLevel=\"h4\" size=\"xl\">\n                                <BellSlashIcon size='sm' />&nbsp;{intl.formatMessage(rule.hosts_acked_count > 0 && rule.rule_status === 'enabled' ?\n                                    messages.ruleIsDisabledForSystems : messages.ruleIsDisabled)}\n                            </Title></CardHeader>\n                            <CardBody>\n                                {rule.hosts_acked_count > 0 && rule.rule_status === 'enabled' ?\n                                    <React.Fragment>\n                                        {intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: rule.hosts_acked_count })}\n                                        &nbsp;\n                                        <Button isInline variant='link' onClick={() => setViewSystemsModalOpen(true)}>\n                                            {intl.formatMessage(messages.viewSystems)}\n                                        </Button>\n                                    </React.Fragment>\n                                    : <React.Fragment>\n                                        {intl.formatMessage(messages.ruleIsDisabledJustification)}\n                                        <i>{ruleAck.justification || intl.formatMessage(messages.none)}</i>\n                                        {ruleAck.updated_at && <span>&nbsp;<DateFormat date={new Date(ruleAck.updated_at)} type=\"onlyDate\" /></span>}\n                                    </React.Fragment>}\n                            </CardBody>\n                            <CardFooter>\n                                {rule.hosts_acked_count > 0 && rule.rule_status === 'enabled' ?\n                                    <Button isInline variant='link' onClick={() => bulkHostActions()}>\n                                        {intl.formatMessage(messages.enableRuleForSystems)}\n                                    </Button>\n                                    : <Button isInline variant='link' onClick={() => enableRule(rule)}>\n                                        {intl.formatMessage(messages.enableRule)}\n                                    </Button>}\n                            </CardFooter>\n                        </Card>}\n                        {rule.rule_status === 'enabled' && <React.Fragment>\n                            <Title className='titleOverride' headingLevel='h3' size='2xl'>\n                                {intl.formatMessage(messages.affectedSystems)}\n                            </Title>\n                            {systemFetchStatus === 'fulfilled' &&\n                                <Inventory\n                                    tableProps={{ canSelectAll: false, actionResolver }}\n                                    items={system.host_ids} rule={rule} afterDisableFn={afterDisableFn} filters={filters}\n                                    onSortFn={onSortFn} />}\n                            {systemFetchStatus === 'pending' && (<Loading />)}\n                        </React.Fragment>}\n                        {systemFetchStatus === 'fulfilled' && rule.rule_status !== 'enabled' && <MessageState icon={BellSlashIcon}\n                            title={intl.formatMessage(messages.ruleIsDisabled)}\n                            text={intl.formatMessage(messages.ruleIsDisabledBody)} />}\n                    </React.Fragment>}\n                {ruleFetchStatus === 'pending' && (<Loading />)}\n                {ruleFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n};\n\nOverviewDetails.propTypes = {\n    match: PropTypes.any,\n    fetchRule: PropTypes.func,\n    ruleFetchStatus: PropTypes.string,\n    rule: PropTypes.object,\n    fetchSystem: PropTypes.func,\n    systemFetchStatus: PropTypes.string,\n    system: PropTypes.object,\n    addNotification: PropTypes.func,\n    intl: PropTypes.any,\n    fetchTopics: PropTypes.func,\n    topics: PropTypes.array,\n    ruleAck: PropTypes.object,\n    hostAcks: PropTypes.object,\n    fetchRuleAck: PropTypes.func,\n    fetchHostAcks: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object,\n    SID: PropTypes.object\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    rule: AdvisorStore.rule,\n    ruleFetchStatus: AdvisorStore.ruleFetchStatus,\n    system: AdvisorStore.system,\n    systemFetchStatus: AdvisorStore.systemFetchStatus,\n    topics: AdvisorStore.topics,\n    ruleAck: AdvisorStore.ruleAck,\n    hostAcks: AdvisorStore.hostAcks,\n    selectedTags: AdvisorStore.selectedTags,\n    workloads: AdvisorStore.workloads,\n    SID: AdvisorStore.SID,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (options, search) => dispatch(AppActions.fetchRule(options, search)),\n    fetchSystem: (rule_id, options, search) => dispatch(AppActions.fetchSystem(rule_id, options, search)),\n    addNotification: data => dispatch(addNotification(data)),\n    fetchTopics: () => dispatch(AppActions.fetchTopics()),\n    fetchRuleAck: data => dispatch(AppActions.fetchRuleAck(data)),\n    fetchHostAcks: data => dispatch(AppActions.fetchHostAcks(data)),\n    setRule: data => dispatch(AppActions.setRule(data)),\n    setSystem: data => dispatch(AppActions.setSystem(data))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OverviewDetails)));\n"],"sourceRoot":""}