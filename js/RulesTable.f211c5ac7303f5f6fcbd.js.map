{"version":3,"sources":["webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/MessageState/MessageState.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js"],"names":["Debounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","exports","___CSS_LOADER_API_IMPORT___","push","module","i","MessageState","className","children","icon","iconClass","iconStyle","text","title","variant","style","headingLevel","size","marginBottom","propTypes","PropTypes","any","string","defaultProps","CubesIcon","EmptyStateVariant","full","Failed","message","urlBuilder","filters","selectedTags","workloads","url","URL","window","location","queryString","Object","keys","map","key","Array","isArray","join","params","URLSearchParams","get","sap_system","set","length","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","search","from","reduce","acc","JSON","parse","split","encodeOptionsToURL","options","index","pruneFilters","localFilters","filterCategories","prunedFilters","item","category","chips","selectedCategoryValue","values","find","String","name","label","toUpperCase","substring","urlParam","DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","rule","afterFn","setAck","addNotification","setSystem","setRule","justification","setJustificaton","undefined","singleSystem","setSingleSystem","bulkHostActions","a","data","systems","API","post","BASE_URL","rule_id","response","host_ids","hosts_acked_count","count","dismissable","formatMessage","messages","error","description","disableRule","rule_status","type","system_uuid","id","timeout","ruleSuccessfullyDisabled","isOpen","onClose","onKeyPress","e","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","disableRuleForSystems","disableRuleSingleSystem","justificationNote","aria-describedby","bool","object","func","array","system","injectIntl","connect","AdvisorStore","dispatch","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","Fragment","tags","incidentTooltip","position","TooltipPosition","right","color","incident","ruleIsDisabledTooltip","disabled","redhatDisabled","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","cells","display_name","none","date","Date","updated_at","isInline","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","ownProps","fileName","exportTable","defaultParams","toISOString","replace","downloadHelper","format","payload","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","console","ruleHelpful","Button","BarDividedList","list","element","RuleDetails","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","to","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","RulesTable","rules","rulesFetchStatus","setFilters","fetchRules","transforms","sortable","cellWidth","added","ansible","fitContent","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","resolution","resolution_set","system_type","rhel","ocp","resolution_risk","fetchRulesFn","useCallback","encodeURIComponent","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","param","impacting","hideReports","rowId","ruleSuccessfullyEnabled","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","paramsObject","sort","has_playbook","Number","reboot","sortIndex","sortDirection","direction","CheckCircleIcon","rulesTableNoRuleHitsTitle","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","removeFilterParam","addFilterParam","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","event","placeholder","FC","items","res_risk","activeFiltersConfig","onDelete","itemsToRemove","isAll","newFilter","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","exportData","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","rulesTableFetchRulesError","widgetId","PaginationVariant","routerParams","state","AppActions"],"mappings":"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","file":"js/RulesTable.f211c5ac7303f5f6fcbd.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__split{display:inline-flex;justify-content:space-around}.ins-c-rule-details__split .pf-l-split__item{position:relative}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-center-text{text-align:left !important}.ins-c-rule-details__split{display:block}.ins-c-rule-details__split .pf-l-split__item{margin:var(--pf-global--spacer--md)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\n\nimport  CubesIcon  from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) => (\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>\n);\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags, workloads) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n\n    //Removes invalid 'undefined' url param value\n    params.get('reports_shown') === 'undefined' && params.delete('reports_shown');\n\n    workloads?.sap_system ? params.set('sap_system', true) : params.delete('sap_system');\n    selectedTags !== null && selectedTags.length ? params.set('tags', selectedTags.join()) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// create url from options\nexport const encodeOptionsToURL = (options) => {\n    return Object.entries(options).reduce((acc, [key, value], index) => {\n        return acc += index === 0 ? `${key}=${value}` : `&${key}=${value}`;\n    }, '');\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.map(item => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return { category: capitalize(category.title), chips, urlParam: category.urlParam };\n        } else {\n            return { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n        }\n    })\n        : [];\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.rule_status === 'enabled' && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            try {\n                await setAck(options);\n                addNotification({\n                    variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyDisabled)\n                });\n                setJustificaton('');\n                afterFn && afterFn();\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        onKeyPress={(e) => e.key === 'Enter' && disableRule()}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'disabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'rhdisabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.redhatDisabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split className='ins-c-rule-details__split' hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { encodeOptionsToURL, filterFetchBuilder, paramParser, pruneFilters, urlBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags, workloads }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags, workloads);\n        let options = selectedTags.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)).join('&tags=') });\n        workloads && (options = { ...options, ...workloads });\n        fetchRules(\n            options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n            options.tags && encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n        );\n    }, [fetchRules, filters, selectedTags, workloads]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const rule_status = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, rule_status, offset: 0, ...(rule_status !== 'enabled' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.rule_status === 'enabled') {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                try {\n                    await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                    addNotification({\n                        variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n                    });\n                    fetchRulesFn();\n                } catch (error) {\n                    addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n                }\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.rule_status === 'enabled' ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.rule_status === 'enabled' ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            delete paramsObject.sap_system;\n\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.rule_status = paramsObject.rule_status === undefined || paramsObject.rule_status[0] === 'undefined' ? undefined\n                : paramsObject.rule_status;\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.rule_status === 'enabled' ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.rule_status === 'enabled' && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('undefined')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.rule_status === 'enabled' ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.rule_status.title,\n        type: FC.rule_status.type,\n        id: FC.rule_status.urlParam,\n        value: `radio-${FC.rule_status.urlParam}`,\n        filterValues: {\n            key: `${FC.rule_status.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.rule_status === undefined ? 'undefined' : `${filters.rule_status}`,\n            items: FC.rule_status.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, rule_status: 'enabled', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting,\n                tooltipText: intl.formatMessage(messages.exportData)\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    selectedTags: state.AdvisorStore.selectedTags,\n    workloads: state.AdvisorStore.workloads,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (options, search) => dispatch(AppActions.fetchRules(options, search)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n"],"sourceRoot":""}