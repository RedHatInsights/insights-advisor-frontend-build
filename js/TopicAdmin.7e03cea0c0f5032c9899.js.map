{"version":3,"sources":["webpack://advisor-frontend/./src/PresentationalComponents/Modals/_AddEditTopic.scss","webpack://advisor-frontend/./src/PresentationalComponents/TopicsAdminTable/_TopicsAdminTable.scss","webpack://advisor-frontend/./src/PresentationalComponents/Modals/AddEditTopic.js","webpack://advisor-frontend/./src/PresentationalComponents/TopicsAdminTable/TopicsAdminTable.js","webpack://advisor-frontend/./src/PresentationalComponents/Modals/_AddEditTopic.scss?8839","webpack://advisor-frontend/./src/PresentationalComponents/TopicsAdminTable/_TopicsAdminTable.scss?8d57"],"names":["___CSS_LOADER_EXPORT___","push","module","id","AddEditTopic","handleModalToggle","intl","isModalOpen","topic","addNotification","fetchTopicsAdmin","useState","name","setName","description","setDescription","tag","setTag","enabled","setEnabled","featured","setFeatured","slug","undefined","setSlug","editTopic","type","data","API","BASE_URL","variant","dismissable","title","formatMessage","messages","Object","entries","response","map","key","value","toUpperCase","setNameAndSlug","replace","toLowerCase","footer","Split","className","hasGutter","SplitItem","Button","onClick","ouiaId","isFilled","isDisabled","Modal","isOpen","onClose","Form","FormGroup","label","fieldId","TextInput","isRequired","onChange","helperText","TextArea","desc","isInline","Radio","isChecked","Checkbox","aria-label","propTypes","PropTypes","injectIntl","connect","dispatch","TopicsAdminTable","topicsFetchStatus","topics","transforms","sortable","cols","rows","setRows","sortBy","setSortBy","addEditTopicOpen","setAddEditTopicOpen","selectedTopic","setSelectedTopic","topicsArray","setTopicsArray","onSort","useCallback","_event","index","direction","attr","0","1","2","3","4","Immutable","asMutable","sort","a","b","hideTopics","useEffect","length","cells","MessageState","icon","text","props","colSpan","flatMap","rule","PageHeader","Title","headingLevel","size","Main","PrimaryToolbar","_","Table","TableHeader","TableBody","Loading","Failed","message","TableToolbar","history","routerParams","state","ownProps","AdvisorStore","AppActions","update","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose"],"mappings":"sLAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,4SAA6S,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,sEAAsE,MAAQ,GAAG,SAAW,+IAA+I,eAAiB,CAAC,qQAAqQ,WAAa,MAEh4B,W,6FCJIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,uKAAwK,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,oFAAoF,MAAQ,GAAG,SAAW,4DAA4D,eAAiB,CAAC,2JAA2J,WAAa,MAE5kB,W,0WCeMC,EAAe,SAAC,GAAuF,IAArFC,EAAqF,EAArFA,kBAAmBC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,iBAAuB,GAEjFC,cAASH,EAAMI,MAAQ,IAF0D,eAElGA,EAFkG,KAE5FC,EAF4F,QAGnEF,cAASH,EAAMM,aAAe,IAHqC,eAGlGA,EAHkG,KAGrFC,EAHqF,QAInFJ,cAASH,EAAMQ,KAAO,IAJ6D,eAIlGA,EAJkG,KAI7FC,EAJ6F,QAK3EN,cAASH,EAAMU,UAAW,GALiD,eAKlGA,EALkG,KAKzFC,EALyF,QAMzER,cAASH,EAAMY,WAAY,GAN8C,eAMlGA,EANkG,KAMxFC,EANwF,QAOjFV,cAASH,EAAMc,WAAQC,GAP0D,eAOlGD,EAPkG,KAO5FE,EAP4F,KASnGC,EAAS,mCAAG,0FAASC,EAAT,EAASA,KAAT,SAEJC,EAAO,CAAEf,OAAMU,OAAMN,MAAKF,cAAaI,UAASE,YACzC,WAATM,EAHM,gCAIAE,WAAA,UAAcC,WAAd,kBAAgCP,IAJhC,kCAKCd,EAAMc,KALP,kCAMAM,QAAA,UAAWC,WAAX,kBAA6BP,EAA7B,KAAsCK,GANtC,iDAQAC,SAAA,UAAYC,WAAZ,WAA+B,GAAIF,GARnC,0DAWVlB,EAAgB,CACZqB,QAAS,SACTC,aAAa,EACbC,MAAO1B,EAAK2B,cAAcC,WAC1BpB,YAAaqB,OAAOC,QAAQ,KAAMC,SAASV,MAAMW,KAAI,+BAAEC,EAAF,KAAOC,EAAP,qBAAqBD,EAAIE,cAAzB,YAA0CD,EAA1C,UAf/C,yBAkBVnC,GAAkB,GAClBK,IAnBU,6EAAH,sDAuBTgC,EAAiB,SAAC9B,GAChBJ,EAAMc,KACNT,EAAQD,IAERC,EAAQD,GACRY,EAAQZ,EAAK+B,QAAQ,MAAO,IAAIC,iBAIlCC,EACF,kBAACC,QAAD,CAAOC,UAAU,iBAAiBC,WAAS,GACvC,kBAACF,EAAAG,UAAD,KACI,kBAACC,SAAD,CAAQX,IAAI,UAAUT,QAAQ,UAAUqB,QAAU,kBAAM1B,EAAU,CAAEC,KAAM,cACtE0B,OAAO,WACN9C,EAAK2B,cAAcC,YAG5B,kBAACY,EAAAG,UAAD,KACI,kBAACC,SAAD,CAAQX,IAAI,SAAST,QAAQ,YAAYqB,QAAU,kBAAM9C,GAAkB,IACvE+C,OAAO,UACN9C,EAAK2B,cAAcC,cAG5B,kBAACY,EAAAG,UAAD,CAAWI,UAAQ,IACnB,kBAACP,EAAAG,UAAD,KACI,kBAACC,SAAD,CACIX,IAAI,SACJa,OAAO,SACPtB,QAAQ,SACRwB,YAAa9C,EAAMc,KACnB6B,QAAU,kBAAM1B,EAAU,CAAEC,KAAM,aAEjCpB,EAAK2B,cAAcC,oBAMpC,OAAO,kBAACqB,EAAA,GAAD,CACHvB,MAAO1B,EAAK2B,cAAcC,qBAC1BsB,OAAQjD,EACRkD,QAAU,kBAAMpD,GAAkB,IAClCwC,OAAQA,EACRE,UAAU,wBAEV,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,MAAOtD,EAAK2B,cAAcC,UAC1B2B,QAAQ,kBACRd,UAAU,uBAEV,kBAACe,EAAA,GAAD,CACItB,MAAO5B,EACPmD,YAAU,EACVrC,KAAK,OACLvB,GAAG,kBACHS,KAAK,kBACLoD,SAAW,SAACpD,GAAD,OAAU8B,EAAe9B,OAG5C,kBAAC+C,EAAA,EAAD,CACIC,MAAOtD,EAAK2B,cAAcC,6BAC1B2B,QAAQ,yBACRI,WAAY3D,EAAK2B,cACbC,uCAEJa,UAAU,sBAEV,kBAACmB,EAAA,GAAD,CACI1B,MAAO1B,EACPiD,YAAU,EACVnD,KAAK,yBACLT,GAAG,yBACH6D,SAAW,SAACG,GAAD,OAAUpD,EAAeoD,OAG5C,kBAACR,EAAA,EAAD,CAAWS,UAAQ,EAACP,QAAQ,qBACxB,kBAACF,EAAA,EAAD,CACIC,MAAOtD,EAAK2B,cAAcC,SAC1B2B,QAAQ,iBACRI,WAAY3D,EAAK2B,cACbC,+BAEJa,UAAU,uBAEV,kBAACe,EAAA,GAAD,CACItB,MAAOxB,EAAI2B,QAAQ,MAAO,IAAIC,cAC9BmB,YAAU,EACVrC,KAAK,OACLvB,GAAG,iBACHS,KAAK,iBACLoD,SAAW,SAAChD,GAAD,OAASC,EAAOD,EAAI2B,QAAQ,MAAO,IAAIC,mBAG1D,kBAACe,EAAA,EAAD,CACIC,MAAOtD,EAAK2B,cAAcC,eAC1B2B,QAAQ,oBACRI,WAAW,GACXlB,UAAU,uBAEV,kBAACe,EAAA,GAAD,CACItB,MAAQlB,GAAQV,EAAK+B,QAAQ,MAAO,IAAIC,cACxCU,WAAa9C,EAAMc,KACnBI,KAAK,OACLvB,GAAG,oBACHS,KAAK,oBACLoD,SAAW,SAACpD,GAAD,OAAU8B,EAAe9B,QAIhD,kBAAC+C,EAAA,EAAD,CACIC,MAAOtD,EAAK2B,cAAcC,YAC1B2B,QAAQ,sBAER,kBAACQ,EAAA,EAAD,CACIC,WAAapD,EACbf,GAAG,WACHyD,MAAOtD,EAAK2B,cAAcC,0BAC1B8B,SAAW,kBAAM7C,GAAYD,IAC7B6B,UAAU,mBAEd,kBAACsB,EAAA,EAAD,CACIC,UAAYpD,EACZf,GAAG,UACHyD,MAAOtD,EAAK2B,cAAcC,yBAC1B8B,SAAW,kBAAM7C,GAAYD,IAC7B6B,UAAU,oBAGlB,kBAACY,EAAA,EAAD,CACIC,MAAOtD,EAAK2B,cAAcC,cAC1B2B,QAAQ,uBAER,kBAACU,EAAA,EAAD,CACID,UAAYlD,EACZwC,MAAOtD,EAAK2B,cAAcC,4BAC1B/B,GAAG,oBACHS,KAAK,oBACL4D,aAAW,kBACXR,SAAW,kBAAM3C,GAAaD,IAC9B2B,UAAU,0BAQ9B3C,EAAaqE,UAAY,CACrBpE,kBAAmBqE,SACnBnE,YAAamE,SACblE,MAAOkE,WACPpE,KAAMoE,QACNjE,gBAAiBiE,SACjBhE,iBAAkBgE,UAQtB,SAAeC,SAAWC,aAAQ,MALP,SAAAC,GAAQ,MAAK,CACpCpE,gBAAiB,SAAAkB,GAAI,OAAIkD,GAASpE,qBAAgBkB,KAClDjB,iBAAkB,kBAAMmE,GAASnE,eAGXkE,CAAkCxE,I,oYC3L5D,IAAM0E,EAAmB,SAAC,GAA0D,IAAxDC,EAAwD,EAAxDA,kBAAmBrE,EAAqC,EAArCA,iBAAkBsE,EAAmB,EAAnBA,OAAQ1E,EAAW,EAAXA,KAAW,GAEhEK,cAAS,CACrB,CAAEqB,MAAO1B,EAAK2B,cAAcC,WAAiB+C,WAAY,CAACC,aAC1D,CAAElD,MAAO1B,EAAK2B,cAAcC,SAAe+C,WAAY,CAACC,aACxD,CAAElD,MAAO1B,EAAK2B,cAAcC,eAAqB+C,WAAY,CAACC,aAC9D,CAAElD,MAAO1B,EAAK2B,cAAcC,YAAkB+C,WAAY,CAACC,aAC3D,CAAElD,MAAO1B,EAAK2B,cAAcC,cAAoB+C,WAAY,CAACC,aAC7D,GAAI,KANDC,GAFyE,kBAUxDxE,cAAS,IAV+C,eAUzEyE,EAVyE,KAUnEC,EAVmE,QAWpD1E,cAAS,IAX2C,eAWzE2E,EAXyE,KAWjEC,EAXiE,QAYhC5E,eAAS,GAZuB,eAYzE6E,EAZyE,KAYvDC,EAZuD,QAatC9E,cAAS,IAb6B,eAazE+E,EAbyE,KAa1DC,EAb0D,QAc1ChF,cAAS,IAdiC,eAczEiF,EAdyE,KAc5DC,EAd4D,KAgB1EC,GAASC,kBAAY,SAACC,EAAQC,EAAOC,GACvC,IAOMC,EAPY,CACdC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,UACHC,EAAG,YAEgBP,GACvBV,EAAU,CAAEU,QAAOC,cACnBL,EACIY,SACIb,EAAYc,YAAYC,MAAK,SAACC,EAAGC,GAC7B,MAAkB,QAAdX,EACa,YAATC,GAA+B,aAATA,EACfS,EAAET,GAAQU,EAAEV,IAAS,EAAI,EACpBS,EAAET,GAAQU,EAAEV,GAAQ,GAAK,EAE5B,YAATA,GAA+B,aAATA,EACfS,EAAET,GAAQU,EAAEV,GAAQ,GAAK,EACpBS,EAAET,GAAQU,EAAEV,IAAS,EAAI,SAK1D,CAACZ,EAAWM,EAAgBD,IAEzBkB,EAAa,SAACtG,GACXA,GAGDmF,EAAiBnF,GACjBiF,GAAoB,IAHpBA,GAAoB,IAmE5B,OA5DAsB,gBAAU,WACNlB,EAAeb,KAChB,CAACA,KAEJ+B,gBAAU,WACNrG,MACD,CAACA,KAEJqG,gBAAU,WACN,GAA2B,IAAvBnB,EAAYoB,OACZ3B,EAAQ,CAAC,CACL4B,MAAO,CAAC,CACJjF,MACI,kBAACkF,EAAA,EAAD,CAAcC,KAAK,OAAOnF,MAAO,GAC7BoF,KAAM,KAEdC,MAAO,CAAEC,QAAS,YAGvB,CACH,IAAMlC,EAAOQ,EAAY2B,SAAQ,SAAC/E,EAAOD,GAAR,MAAiB,CAAC,CAC/CiB,QAAQ,EACRgE,KAAMhF,EACNyE,MAAO,CAAC,CACJjF,MAAO,0BAAMO,IAAKA,GAAX,IAAkBC,EAAM5B,OAChC,CACCoB,MAAO,0BAAMO,IAAKA,GAAX,IAAkBC,EAAMxB,MAChC,CACCgB,MAAO,0BAAMO,IAAKA,GAAX,IAAkBC,EAAMlB,OAChC,CACCU,MAAO,8BACFQ,EAAMtB,QAAU,8BACb,kBAAC,UAAD,CACI6B,UAAU,YAFD,IAGTzC,EAAK2B,cAAcC,cACjB,8BACN,kBAAC,KAAD,CACIa,UAAU,QAFR,IAGFzC,EAAK2B,cAAcC,iBAGhC,CACCF,MAAO,8BACFQ,EAAMpB,SAAW,8BACd,kBAAC,KAAD,MADc,IACDd,EAAK2B,cAAcC,eAC1B,iCAGf,GAAI,CACHF,MAAO,kBAACkB,SAAD,CACHE,OAAO,OACPtB,QAAQ,OACRqB,QAAU,kBAAM2D,EAAWtE,KAC9B,kBAAC,KAAD,MAJM,IAIUlC,EAAK2B,cAAcC,4BAG5CmD,EAAQD,EAAKsB,gBAElB,CAACd,EAAatF,IAEV,kBAAC,aAAD,KACFkF,GAAoB,kBAAC,EAAD,CACjBjF,YAAaiF,EACbnF,kBAAmBoF,EACnBjF,MAAOkF,IAEX,kBAAC+B,EAAA,EAAD,KACI,kBAACC,EAAA,GAAD,CAAOC,aAAa,KAAKC,KAAK,MAAM7E,UAAU,wBACzCzC,EAAK2B,cAAcC,uBAG5B,kBAAC2F,EAAA,EAAD,KACI,kBAAC,aAAD,KACI,kBAACC,EAAA,EAAD,CAAgB/E,UAAU,4BACtB,kBAACG,SAAD,CACIpB,QAAQ,UACRsB,OAAO,cACPD,QAAU,SAAC4E,GAAD,OAAOjB,EAAWiB,KAE3BzH,EAAK2B,cAAcC,wBAGJ,cAAtB6C,GACE,kBAAC,EAAAiD,MAAD,CACI5E,OAAO,aACPoB,aAAY,qBACZc,OAAQA,EACRQ,OAAQA,EACRmB,MAAO9B,EACPC,KAAMA,GAEN,kBAAC,EAAA6C,YAAD,MACA,kBAAC,EAAAC,UAAD,OAGgB,YAAtBnD,GAAoC,kBAACoD,EAAA,EAAD,MACd,WAAtBpD,GAAmC,kBAACqD,EAAA,EAAD,CAAQC,QAAS/H,EAAK2B,cAAcC,6BACzE,kBAACoG,EAAA,EAAD,UAOhBxD,EAAiBL,UAAY,CACzB/D,iBAAkBgE,SAClBK,kBAAmBL,WACnBM,OAAQN,UACRjE,gBAAiBiE,SACjB6D,QAAS7D,WACTpE,KAAMoE,SAcV,SAAeC,SAAW6D,QAAa5D,cAXf,SAAC6D,EAAOC,GAAR,O,qWAAA,EACpB1D,OAAQyD,EAAME,aAAa3D,OAC3BD,kBAAmB0D,EAAME,aAAa5D,mBACnC2D,MAGoB,SAAA7D,GAAQ,MAAK,CACpCnE,iBAAkB,kBAAMmE,EAAS+D,SACjCnI,gBAAiB,SAAAkB,GAAI,OAAIkD,GAASpE,qBAAgBkB,QAGfiD,CAGrCE,M,gECxME+D,EAAS,IAAI,UALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,kBAAkB3I,EAAO4I,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,iBAEhB9I,EAAO4I,IAAIG,OACT,OACA,eAnCkB,SAAuBrC,EAAGC,EAAGqC,GACnD,IAAKtC,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIsC,EAEJ,IAAKA,KAAKvC,EACR,GAKIA,EAAEuC,KAAOtC,EAAEsC,GACb,OAAO,EAIX,IAAKA,KAAKtC,EACR,IAKKD,EAAEuC,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcJ,EAAW,mBAMxBA,EAAY,iBAEZH,EAAO,YAPL3I,EAAO4I,IAAIC,gBAYzB7I,EAAO4I,IAAIO,SAAQ,WACjBR,OAIW,kB,+DC3DXA,EAAS,IAAI,UALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,kBAAkB3I,EAAO4I,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,iBAEhB9I,EAAO4I,IAAIG,OACT,MACA,cAnCkB,SAAuBrC,EAAGC,EAAGqC,GACnD,IAAKtC,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIsC,EAEJ,IAAKA,KAAKvC,EACR,GAKIA,EAAEuC,KAAOtC,EAAEsC,GACb,OAAO,EAIX,IAAKA,KAAKtC,EACR,IAKKD,EAAEuC,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcJ,EAAW,mBAMxBA,EAAY,iBAEZH,EAAO,YAPL3I,EAAO4I,IAAIC,gBAYzB7I,EAAO4I,IAAIO,SAAQ,WACjBR,OAIW","file":"js/TopicAdmin.7e03cea0c0f5032c9899.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advisor .text-area-override{max-width:30em;min-height:8em;max-height:12em}.advisor .text-input-override{width:22em;display:inline}.advisor .radio-override{padding-left:5px}.advisor .checkbox-override{padding-left:5px}.advisor .split-override{width:100%}.advisor .modal-width-override{width:60%}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/PresentationalComponents/Modals/_AddEditTopic.scss\"],\"names\":[],\"mappings\":\"AAAA,6BACoB,cAAc,CAAC,cAAc,CAAC,eAAe,CADjE,8BACuF,UAAU,CAAC,cAAc,CADhH,yBACiI,gBAAgB,CADjJ,4BACqK,gBAAgB,CADrL,yBACsM,UAAU,CADhN,+BACuO,SAAS\",\"sourcesContent\":[\".advisor{\\n.text-area-override{max-width:30em;min-height:8em;max-height:12em}.text-input-override{width:22em;display:inline}.radio-override{padding-left:5px}.checkbox-override{padding-left:5px}.split-override{width:100%}.modal-width-override{width:60%}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advisor .toolbar-padding-override{padding-left:0px}.advisor .success{color:var(--pf-global--success-color--100)}.advisor .ban{color:var(--pf-global--Color--200)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/PresentationalComponents/TopicsAdminTable/_TopicsAdminTable.scss\"],\"names\":[],\"mappings\":\"AAAA,mCAC0B,gBAAgB,CAD1C,kBACoD,0CAA0C,CAD9F,cACoG,kCAAkC\",\"sourcesContent\":[\".advisor{\\n.toolbar-padding-override{padding-left:0px}.success{color:var(--pf-global--success-color--100)}.ban{color:var(--pf-global--Color--200)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import './_AddEditTopic.scss';\n\nimport React, { useState } from 'react';\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { Radio } from '@patternfly/react-core/dist/js/components/Radio/Radio';\nimport { TextArea } from '@patternfly/react-core/dist/js/components/TextArea/TextArea';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { fetchTopicsAdmin } from '../../AppActions';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst AddEditTopic = ({ handleModalToggle, intl, isModalOpen, topic, addNotification, fetchTopicsAdmin }) => {\n\n    const [name, setName] = useState(topic.name || '');\n    const [description, setDescription] = useState(topic.description || '');\n    const [tag, setTag] = useState(topic.tag || '');\n    const [enabled, setEnabled] = useState(topic.enabled || false);\n    const [featured, setFeatured] = useState(topic.featured || false);\n    const [slug, setSlug] = useState(topic.slug || undefined);\n\n    const editTopic = async ({ type }) => {\n        try {\n            const data = { name, slug, tag, description, enabled, featured };\n            if (type === 'DELETE') {\n                await API.delete(`${BASE_URL}/topic/${slug}`);\n            } else if (topic.slug) {\n                await API.put(`${BASE_URL}/topic/${slug}/`, data);\n            } else {\n                await API.post(`${BASE_URL}/topic/`, {}, data);\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: Object.entries(error.response.data).map(([key, value]) => `${key.toUpperCase()}:${value} `)\n            });\n        } finally {\n            handleModalToggle(false);\n            fetchTopicsAdmin();\n        }\n    };\n\n    const setNameAndSlug = (name) => {\n        if (topic.slug) {\n            setName(name);\n        } else {\n            setName(name);\n            setSlug(name.replace(/\\s/g, '').toLowerCase());\n        }\n    };\n\n    const footer = (\n        <Split className='split-override' hasGutter>\n            <SplitItem>\n                <Button key='confirm' variant='primary' onClick={ () => editTopic({ type: 'POST/PUT' }) }\n                    ouiaId=\"confirm\">\n                    {intl.formatMessage(messages.save)}\n                </Button>\n            </SplitItem>\n            <SplitItem>\n                <Button key='cancel' variant='secondary' onClick={ () => handleModalToggle(false) }\n                    ouiaId=\"cancel\">\n                    {intl.formatMessage(messages.cancel)}\n                </Button>\n            </SplitItem>\n            <SplitItem isFilled/>\n            <SplitItem>\n                <Button\n                    key='delete'\n                    ouiaId=\"delete\"\n                    variant='danger'\n                    isDisabled={ topic.slug ? false : true }\n                    onClick={ () => editTopic({ type: 'DELETE' }) }\n                >\n                    {intl.formatMessage(messages.deleteTopic)}\n                </Button>\n            </SplitItem>\n        </Split>\n    );\n\n    return <Modal\n        title={intl.formatMessage(messages.topicAdminTitle)}\n        isOpen={isModalOpen}\n        onClose={ () => handleModalToggle(false) }\n        footer={footer}\n        className='modal-width-override'\n    >\n        <Form>\n            <FormGroup\n                label={intl.formatMessage(messages.name)}\n                fieldId='topic-form-name'\n                className='text-input-override'\n            >\n                <TextInput\n                    value={name}\n                    isRequired\n                    type='text'\n                    id='topic-form-name'\n                    name='topic-form-name'\n                    onChange={ (name) => setNameAndSlug(name) }\n                />\n            </FormGroup>\n            <FormGroup\n                label={intl.formatMessage(messages.topicAddEditDescription)}\n                fieldId='topic-form-description'\n                helperText={intl.formatMessage(\n                    messages.topicAddEditDescriptionHelperText\n                )}\n                className='text-area-override'\n            >\n                <TextArea\n                    value={description}\n                    isRequired\n                    name='topic-form-description'\n                    id='topic-form-description'\n                    onChange={ (desc) => setDescription(desc) }\n                />\n            </FormGroup>\n            <FormGroup isInline fieldId='topic-form-labels'>\n                <FormGroup\n                    label={intl.formatMessage(messages.tag)}\n                    fieldId='topic-form-tag'\n                    helperText={intl.formatMessage(\n                        messages.topicAddEditTagHelperText\n                    )}\n                    className='text-input-override'\n                >\n                    <TextInput\n                        value={tag.replace(/\\s/g, '').toLowerCase()}\n                        isRequired\n                        type='text'\n                        id='topic-form-tag'\n                        name='topic-form-tag'\n                        onChange={ (tag) => setTag(tag.replace(/\\s/g, '').toLowerCase()) }\n                    />\n                </FormGroup>\n                <FormGroup\n                    label={intl.formatMessage(messages.topicSlug)}\n                    fieldId='topic-form-name-2'\n                    helperText=''\n                    className='text-input-override'\n                >\n                    <TextInput\n                        value={ slug || name.replace(/\\s/g, '').toLowerCase()}\n                        isDisabled={ topic.slug }\n                        type='text'\n                        id='topic-form-name-2'\n                        name='topic-form-name-2'\n                        onChange={ (name) => setNameAndSlug(name) }\n                    />\n                </FormGroup>\n            </FormGroup>\n            <FormGroup\n                label={intl.formatMessage(messages.status)}\n                fieldId='topic-form-enabled'\n            >\n                <Radio\n                    isChecked={ !enabled }\n                    id='disabled'\n                    label={intl.formatMessage(messages.topicAddEditDisabled)}\n                    onChange={ () => setEnabled(!enabled) }\n                    className='radio-override'\n                />\n                <Radio\n                    isChecked={ enabled }\n                    id='enabled'\n                    label={intl.formatMessage(messages.topicAddEditEnabled)}\n                    onChange={ () => setEnabled(!enabled) }\n                    className='radio-override'\n                />\n            </FormGroup>\n            <FormGroup\n                label={intl.formatMessage(messages.featured)}\n                fieldId='topic-form-featured'\n            >\n                <Checkbox\n                    isChecked={ featured }\n                    label={intl.formatMessage(messages.topicAddEditFeatureBox)}\n                    id='checkbox-featured'\n                    name='checkbox-featured'\n                    aria-label='update-featured'\n                    onChange={ () => setFeatured(!featured) }\n                    className='checkbox-override'\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n\n};\n\nAddEditTopic.propTypes = {\n    handleModalToggle: PropTypes.func,\n    isModalOpen: PropTypes.bool,\n    topic: PropTypes.object,\n    intl: PropTypes.any,\n    addNotification: PropTypes.func,\n    fetchTopicsAdmin: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    fetchTopicsAdmin: () => dispatch(fetchTopicsAdmin())\n});\n\nexport default injectIntl(connect(null, mapDispatchToProps)(AddEditTopic));\n","import './_TopicsAdminTable.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, sortable } from '@patternfly/react-table';\n\nimport AddEditTopic from '../Modals/AddEditTopic';\nimport BanIcon from '@patternfly/react-icons/dist/js/icons/ban-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport EditAltIcon from '@patternfly/react-icons/dist/js/icons/edit-alt-icon';\nimport Failed from '../Loading/Failed';\nimport Immutable from 'seamless-immutable';\nimport Loading from '../Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport StarIcon  from '@patternfly/react-icons/dist/js/icons/star-icon';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\n\nconst TopicsAdminTable = ({ topicsFetchStatus, fetchTopicsAdmin, topics, intl }) => {\n\n    const [cols] =  useState([\n        { title: intl.formatMessage(messages.title), transforms: [sortable] },\n        { title: intl.formatMessage(messages.tag), transforms: [sortable] },\n        { title: intl.formatMessage(messages.topicSlug), transforms: [sortable] },\n        { title: intl.formatMessage(messages.status), transforms: [sortable] },\n        { title: intl.formatMessage(messages.featured), transforms: [sortable] },\n        '', ''\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [addEditTopicOpen, setAddEditTopicOpen] = useState(false);\n    const [selectedTopic, setSelectedTopic] = useState({});\n    const [topicsArray, setTopicsArray] = useState([]);\n\n    const onSort = useCallback((_event, index, direction) => {\n        const attrIndex = {\n            0: 'name',\n            1: 'tag',\n            2: 'slug',\n            3: 'enabled',\n            4: 'featured'\n        };\n        const attr = attrIndex[index];\n        setSortBy({ index, direction });\n        setTopicsArray(\n            Immutable.from(\n                topicsArray.asMutable().sort((a, b) => {\n                    if (direction === 'asc') {\n                        if (attr === 'enabled' || attr === 'featured') {\n                            return a[attr] > b[attr] ? -1 : 1;\n                        } else { return a[attr] > b[attr] ? 1 : -1; }\n                    } else {\n                        if (attr === 'enabled' || attr === 'featured') {\n                            return a[attr] > b[attr] ? 1 : -1;\n                        } else { return a[attr] > b[attr] ? -1 : 1; }\n                    }\n                })\n            )\n        );\n    }, [setSortBy, setTopicsArray, topicsArray]);\n\n    const hideTopics = (topic) => {\n        if (!topic) {\n            setAddEditTopicOpen(true);\n        } else {\n            setSelectedTopic(topic);\n            setAddEditTopicOpen(true);\n        }\n    };\n\n    useEffect(() => {\n        setTopicsArray(topics);\n    }, [topics]);\n\n    useEffect(() => {\n        fetchTopicsAdmin();\n    }, [fetchTopicsAdmin]);\n\n    useEffect(() => {\n        if (topicsArray.length === 0) {\n            setRows([{\n                cells: [{\n                    title: (\n                        <MessageState icon='none' title={''}\n                            text={''}>\n                        </MessageState>),\n                    props: { colSpan: 7 }\n                }]\n            }]);\n        } else {\n            const rows = topicsArray.flatMap((value, key) => ([{\n                isOpen: false,\n                rule: value,\n                cells: [{\n                    title: <span key={key}> {value.name}</span>\n                }, {\n                    title: <span key={key}> {value.tag}</span>\n                }, {\n                    title: <span key={key}> {value.slug}</span>\n                }, {\n                    title: <span>\n                        {value.enabled ? <span>\n                            <CheckCircleIcon\n                                className='success'\n                            /> {intl.formatMessage(messages.enabled)}\n                        </span> : <span>\n                            <BanIcon\n                                className='ban'\n                            /> {intl.formatMessage(messages.disabled)}\n                        </span>}\n                    </span>\n                }, {\n                    title: <span>\n                        {value.featured ? <span>\n                            <StarIcon/> {intl.formatMessage(messages.featured)}\n                        </span> : <span></span>\n                        }\n                    </span>\n                }, '', {\n                    title: <Button\n                        ouiaId=\"hide\"\n                        variant='link'\n                        onClick={ () => hideTopics(value) }\n                    ><EditAltIcon/> {intl.formatMessage(messages.topicAdminEdit)}</Button>\n                }]\n            }]));\n            setRows(rows.asMutable());\n        }\n    }, [topicsArray, intl]);\n\n    return <React.Fragment>\n        {addEditTopicOpen && <AddEditTopic\n            isModalOpen={addEditTopicOpen}\n            handleModalToggle={setAddEditTopicOpen}\n            topic={selectedTopic}\n        />}\n        <PageHeader>\n            <Title headingLevel=\"h3\" size=\"2xl\" className='titlePaddingOverride'>\n                {intl.formatMessage(messages.topicAdminTitle)}\n            </Title>\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                <PrimaryToolbar className='toolbar-padding-override'>\n                    <Button\n                        variant='primary'\n                        ouiaId=\"adminCreate\"\n                        onClick={ (_) => hideTopics(_) }\n                    >\n                        {intl.formatMessage(messages.topicAdminCreate)}\n                    </Button>\n                </PrimaryToolbar>\n                { topicsFetchStatus === 'fulfilled' &&\n                    <Table\n                        ouiaId=\"adminTable\"\n                        aria-label={'topics-admin-table'}\n                        sortBy={sortBy}\n                        onSort={onSort}\n                        cells={cols}\n                        rows={rows}\n                    >\n                        <TableHeader/>\n                        <TableBody/>\n                    </Table>\n                }\n                { topicsFetchStatus === 'pending' && (<Loading />)}\n                { topicsFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.systemTableFetchError)} />)}\n                <TableToolbar/>\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n\n};\n\nTopicsAdminTable.propTypes = {\n    fetchTopicsAdmin: PropTypes.func,\n    topicsFetchStatus: PropTypes.string,\n    topics: PropTypes.array,\n    addNotification: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    topics: state.AdvisorStore.topics,\n    topicsFetchStatus: state.AdvisorStore.topicsFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopicsAdmin: () => dispatch(AppActions.fetchTopicsAdmin()),\n    addNotification: data => dispatch(addNotification(data))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TopicsAdminTable)));\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_AddEditTopic.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_AddEditTopic.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_TopicsAdminTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./_TopicsAdminTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}