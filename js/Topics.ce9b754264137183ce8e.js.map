{"version":3,"sources":["webpack://advisor-frontend/./src/SmartComponents/Topics/Topics.js"],"names":["List","lazy","Details","Admin","reducer","state","type","payload","setLoaded","loaded","isInternal","ProtectedRoute","Component","component","props","useReducer","dispatch","useEffect","insights","chrome","auth","getUser","then","data","identity","user","is_internal","Route","render","Redirect","to","suspenseHelper","Suspense","fallback","propTypes","PropTypes","Switch","exact","path","push"],"mappings":"s0BAMA,IAAMA,GAAOC,WAAK,kBAAM,gFAClBC,GAAUD,WAAK,kBAAM,qJACrBE,GAAQF,WAAK,kBAAM,gFAEnBG,EAAU,SAACC,EAAD,OAAUC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,QAAhB,MAA+B,CAAEC,UAAW,EAAF,KAAOH,GAAP,IAAcI,QAAQ,EAAMC,WAAYH,KAAYD,IAExGK,EAAiB,SAAC,GAAuC,IAA1BC,EAA0B,EAArCC,UAAyBC,GAAY,2BACjCC,gBAAWX,EAAS,CAAEM,YAAY,EAAOD,QAAQ,IADhB,eACpDJ,EADoD,KAC7CW,EAD6C,KAK3D,OAFAC,gBAAU,WAAQC,SAASC,OAAOC,KAAKC,UAAUC,MAAK,SAACC,GAAD,OAAUP,EAAS,CAAEV,KAAM,YAAaC,QAASgB,EAAKC,SAASC,KAAKC,mBAAoB,IAEvI,kBAAC,EAAAC,OAAD,UAAWb,EAAX,CAAkBc,OAAQ,SAAAd,GAAK,OAAIT,EAAMI,SAAWJ,EAAMK,WAAa,kBAACE,EAAcE,GAAY,kBAAC,EAAAe,SAAD,CAAUC,GAAG,kBAGpHC,EAAiB,SAAAlB,GAAS,OAAI,kBAAC,EAAAmB,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAcpB,IAUtEF,EAAeuB,UAAY,CAAErB,UAAWsB,SAExC,QAVe,kBAAM,kBAAC,EAAAC,OAAD,KACjB,kBAAC,EAAAT,MAAD,CAAOU,OAAK,EAACC,KAAK,UAAUzB,UAAW,kBAAMkB,EAAe,kBAAC/B,EAAD,UAC5D,kBAAC,EAAA2B,MAAD,CAAOU,OAAK,EAACC,KAAK,cAAczB,UAAW,kBAAMkB,EAAe,kBAAC7B,EAAD,UAChE,kBAACS,EAAD,CAAgB0B,OAAK,EAACC,KAAK,uBAAuBzB,UAAW,kBAAMkB,EAAe,kBAAC5B,EAAD,UAElF,kBAAC,EAAA0B,SAAD,CAAUS,KAAK,IAAIR,GAAG,UAAUS,MAAI","file":"js/Topics.ce9b754264137183ce8e.js","sourcesContent":["import React, { Suspense, lazy, useEffect, useReducer } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport PropTypes from 'prop-types';\n\nconst List = lazy(() => import(/* webpackChunkName: \"TopicsList\" */ './List'));\nconst Details = lazy(() => import(/* webpackChunkName: \"TopicDetails\" */ './Details'));\nconst Admin = lazy(() => import(/* webpackChunkName: \"TopicAdmin\" */ '../../PresentationalComponents/TopicsAdminTable/TopicsAdminTable'));\n\nconst reducer = (state, { type, payload }) => ({ setLoaded: { ...state, loaded: true, isInternal: payload } }[type]);\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n    const [state, dispatch] = useReducer(reducer, { isInternal: false, loaded: false });\n\n    useEffect(() => { insights.chrome.auth.getUser().then((data) => dispatch({ type: 'setLoaded', payload: data.identity.user.is_internal })); }, []);\n\n    return <Route {...props} render={props => state.loaded && (state.isInternal ? <Component {...props} /> : <Redirect to='/topics' />)} />;\n};\n\nconst suspenseHelper = component => <Suspense fallback={<Loading />}>{component}</Suspense>;\n\nconst Topics = () => <Switch>\n    <Route exact path='/topics' component={() => suspenseHelper(<List />)} />\n    <Route exact path='/topics/:id' component={() => suspenseHelper(<Details />)} />\n    <ProtectedRoute exact path='/topics/admin/manage' component={() => suspenseHelper(<Admin />)} />\n\n    <Redirect path='*' to='/topics' push />\n</Switch>;\n\nProtectedRoute.propTypes = { component: PropTypes.any };\n\nexport default Topics;\n"],"sourceRoot":""}