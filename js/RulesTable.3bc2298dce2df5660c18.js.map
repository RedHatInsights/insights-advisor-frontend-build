{"version":3,"sources":["webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/Utilities/Debounce.js","webpack:///./src/PresentationalComponents/Common/DownloadHelper.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","urlBuilder","filters","selectedTags","workloads","url","URL","window","location","queryString","Object","keys","map","key","Array","isArray","join","params","URLSearchParams","get","SAP","set","length","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","search","from","reduce","acc","value","JSON","parse","split","encodeOptionsToURL","options","index","pruneFilters","localFilters","filterCategories","prunedFilters","arr","item","category","chips","selectedCategoryValue","values","find","String","name","text","label","string","title","toUpperCase","substring","urlParam","workloadQueryBuilder","SID","generateFilter","system_profile","isSelected","sap_system","sap_sids","Failed","message","className","size","propTypes","DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","rule","afterFn","setAck","addNotification","setSystem","setRule","useState","justification","setJustificaton","undefined","singleSystem","setSingleSystem","bulkHostActions","a","data","systems","API","post","BASE_URL","rule_id","response","host_ids","hosts_acked_count","count","variant","dismissable","formatMessage","messages","error","description","disableRule","rule_status","type","system_uuid","id","timeout","ruleSuccessfullyDisabled","isOpen","onClose","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","disableRuleForSystems","disableRuleSingleSystem","justificationNote","aria-describedby","onKeyDown","e","preventDefault","PropTypes","bool","object","func","any","array","defaultProps","system","injectIntl","connect","AdvisorStore","dispatch","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","Fragment","tags","incidentTooltip","position","TooltipPosition","right","color","incident","ruleIsDisabledTooltip","disabled","redhatDisabled","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","useEffect","cells","display_name","none","date","Date","updated_at","isInline","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","ownProps","Debounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","fileName","exportTable","defaultParams","toISOString","replace","downloadHelper","format","payload","stringify","downloadFile","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","console","ruleHelpful","Button","BarDividedList","list","element","RuleDetails","children","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","to","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","RulesTable","rules","rulesFetchStatus","setFilters","fetchRules","transforms","sortable","cellWidth","added","ansible","fitContent","dataLabel","cols","sortBy","setSortBy","filterBuilding","setFilterBuilding","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","DEBOUNCE_DELAY","results","meta","sortIndices","1","2","3","4","5","6","ruleResolutionRisk","resolution","resolution_set","system_type","rhel","ocp","resolution_risk","fetchRulesFn","useCallback","encodeURIComponent","onSetPage","pageNumber","newOffset","offset","toggleRulesDisabled","impacting","hideReports","rowId","ruleSuccessfullyEnabled","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","noRuleHitsBodyMessage","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsDisabledRulesBody","rulesTableNoRuleHitsRedHatDisabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","paramsObject","sort","has_playbook","Number","reboot","sortIndex","sortDirection","direction","icon","CheckCircleIcon","iconClass","rulesTableNoRuleHitsTitle","style","paddingTop","rulesTableNoRuleHitsAddDisabledButton","flatMap","publish_date","bottom","toLocaleString","nA","playbook_count","no","parent","fullWidth","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","viewSystems","filter","removeFilterParam","param","addFilterParam","rulesTableActionShow","rulesTableActionHide","filterConfigItems","toLowerCase","filterValues","event","placeholder","FC","items","res_risk","activeFiltersConfig","onDelete","itemsToRemove","isAll","newFilter","toggleModal","pagination","itemCount","page","perPage","onPerPageSelect","exportConfig","exportCsv","exportJson","_e","fileType","downloadReport","exportData","actionsConfig","filterConfig","actionResolver","rowData","rowIndex","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","rulesTableFetchRulesError","widgetId","PaginationVariant","routerParams","AppActions"],"mappings":"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","file":"js/RulesTable.3bc2298dce2df5660c18.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__split{display:inline-flex;justify-content:space-around}.ins-c-rule-details__split .pf-l-split__item{position:relative}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-center-text{text-align:left !important}.ins-c-rule-details__split{display:block}.ins-c-rule-details__split .pf-l-split__item{margin:var(--pf-global--spacer--md)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { generateFilter } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\n// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags, workloads) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n\n    //Removes invalid 'undefined' url param value\n    params.get('reports_shown') === 'undefined' && params.delete('reports_shown');\n\n    workloads?.SAP ? params.set('sap_system', true) : params.delete('sap_system');\n    selectedTags?.length ? params.set('tags', selectedTags) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// create url from options\nexport const encodeOptionsToURL = (options) => {\n    return Object.entries(options).reduce((acc, [key, value], index) => {\n        return acc += index === 0 ? `${key}=${value}` : `&${key}=${value}`;\n    }, '');\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.reduce((arr, item) => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return [...arr, { category: capitalize(category.title), chips, urlParam: category.urlParam }];\n        } else if (item[0] === 'text') {\n            return [...arr, { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] }];\n        } else { return arr; }\n    }, []) : [];\n};\n\n// builds workload query filter\nexport const workloadQueryBuilder = (workloads, SID) => generateFilter({\n    system_profile: {\n        ...workloads?.SAP?.isSelected && { sap_system: true },\n        ...SID?.length > 0 && { sap_sids: SID }\n    }\n});\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ansibleCheck{color:var(--pf-global--success-color--100)}@media screen and (min-width: 884px){.ins-c-conditional-filter .ins-c-conditional-filter__group .pf-c-dropdown__toggle-text{min-width:150px !important}}.ins-c-center-text{text-align:center}.pf-c-table tr>:last-child{--pf-c-table--cell--PaddingRight: 0px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.rule_status === 'enabled' && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            try {\n                await setAck(options);\n                addNotification({\n                    variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyDisabled)\n                });\n                setJustificaton('');\n                afterFn && afterFn();\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                    onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), disableRule())}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'disabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'rhdisabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.redhatDisabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import { useEffect, useState } from 'react';\n\nconst Debounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => {setDebouncedValue(value);}, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [delay, value]);\n\n    return debouncedValue;\n};\n\nexport default Debounce;\n","import API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nconst fileName = (exportTable) => {\n    const defaultParams = {\n        date: new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc'\n    };\n\n    return `Insights-Advisor_${exportTable}--${defaultParams.date}`;\n};\n\nconst downloadHelper = async (exportTable, format, params) => {\n    try {\n        const payload = await API.get(`${BASE_URL}/export/${exportTable}.${format === 'json' ? 'json' : 'csv'}${params}`);\n        let data = format === 'json' ? JSON.stringify(payload.data) : payload.data;\n        downloadFile(data, fileName(exportTable), format);\n    } catch (error) {\n        throw `${error}`;\n    }\n};\n\nexport default downloadHelper;\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split className='ins-c-rule-details__split' hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { DEBOUNCE_DELAY, FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/js/components/Pagination/Pagination';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Table, TableBody, TableHeader, cellWidth, fitContent, sortable } from '@patternfly/react-table';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { encodeOptionsToURL, filterFetchBuilder, paramParser, pruneFilters, urlBuilder, workloadQueryBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport { BASE_URL } from '../../AppConstants';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../Modals/DisableRule';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport downloadReport from '../Common/DownloadHelper';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, intl, selectedTags, workloads, SID }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.name), transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.riskofchange), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable, cellWidth(15)] },\n        {\n            title: <React.Fragment><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</React.Fragment>,\n            transforms: [sortable, cellWidth(15), fitContent],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [searchText, setSearchText] = useState(filters.text || '');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, DEBOUNCE_DELAY);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'resolution_risk', 5: 'impacted_count', 6: 'playbook_count' };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type ===\n            AppConstants.SYSTEM_TYPES.rhel ||\n            AppConstants.SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const fetchRulesFn = useCallback(() => {\n        urlBuilder(filters, selectedTags, workloads);\n        let options = selectedTags?.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)) });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        fetchRules(\n            options.tags ? {} : { ...filterFetchBuilder(filters), ...options },\n            options.tags && encodeOptionsToURL({ ...filterFetchBuilder(filters), ...options })\n        );\n    }, [fetchRules, filters, selectedTags, workloads, SID]);\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam, offset: 0 });\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * filters.limit - filters.limit;\n        setFilters({ ...filters, offset: newOffset });\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting, offset: 0 });\n    };\n\n    const toggleRulesDisabled = (rule_status) => {\n        setFilters({ ...filters, rule_status, offset: 0, ...(rule_status !== 'enabled' && { impacting: false }) });\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.rule_status === 'enabled') {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                try {\n                    await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                    addNotification({\n                        variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n                    });\n                    fetchRulesFn();\n                } catch (error) {\n                    addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n                }\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.rule_status === 'enabled' ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.rule_status === 'enabled' ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        delete localFilters.offset;\n        delete localFilters.limit;\n\n        return pruneFilters(localFilters, FC);\n    };\n\n    const noRuleHitsBodyMessage = (rule_status) => {\n        switch (rule_status) {\n            case 'enabled': return messages.rulesTableNoRuleHitsEnabledRulesBody;\n            case 'disabled': return messages.rulesTableNoRuleHitsDisabledRulesBody;\n            case 'rhdisabled': return messages.rulesTableNoRuleHitsRedHatDisabledRulesBody;\n            default: return messages.rulesTableNoRuleHitsAnyRulesBody;\n        }\n    };\n\n    useEffect(() => { !filterBuilding && selectedTags !== null && fetchRulesFn(); }, [fetchRulesFn, filterBuilding, filters, selectedTags]);\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (window.location.search && filterBuilding) {\n            const paramsObject = paramParser();\n            delete paramsObject.tags;\n            delete paramsObject.sap_system;\n\n            paramsObject.text === undefined ? setSearchText('') : setSearchText(paramsObject.text);\n            paramsObject.sort = paramsObject.sort === undefined ? '-total_risk' : paramsObject.sort[0];\n            paramsObject.has_playbook !== undefined && !Array.isArray(paramsObject.has_playbook) &&\n                (paramsObject.has_playbook = [`${paramsObject.has_playbook}`]);\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n            paramsObject.offset === undefined ? paramsObject.offset = 0 : paramsObject.offset = Number(paramsObject.offset[0]);\n            paramsObject.limit === undefined ? paramsObject.limit = 10 : paramsObject.limit = Number(paramsObject.limit[0]);\n            paramsObject.reboot !== undefined && !Array.isArray(paramsObject.reboot) && (paramsObject.reboot = [`${paramsObject.reboot}`]);\n\n            setFilters({ ...filters, ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckCircleIcon} iconClass='ansibleCheck'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)}\n                                text={intl.formatMessage(noRuleHitsBodyMessage(filters.rule_status))}>\n                                {filters.rule_status === 'enabled' && <Button variant='link' style={{ paddingTop: 24 }}\n                                    onClick={() => toggleRulesDisabled('all')}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 6 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/recommendations/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <DateFormat key={key} date={value.publish_date} variant='relative' />\n                    }, {\n                        title: <div key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[value.total_risk] || intl.formatMessage(messages.undefined),\n                                strong: str => strong(str)\n                            })}>\n                                <InsightsLabel value={value.total_risk} />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}>\n                            <InsightsLabel\n                                text={AppConstants.RISK_OF_CHANGE_LABEL[ruleResolutionRisk(value)]}\n                                value={ruleResolutionRisk(value)} hideIcon />\n                            <div></div>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.rule_status === 'enabled' ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className='ins-c-center-text ' key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack hasGutter>\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} resolutionRisk={ruleResolutionRisk(value)} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rules]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding && rulesFetchStatus !== 'pending') {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text, offset: 0 });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters, offset: 0 };\n        param === 'text' && setSearchText('');\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, offset: 0, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(filters.impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!filters.impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText,\n            placeholder: intl.formatMessage(messages.search)\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.has_playbook.title,\n        type: FC.has_playbook.type,\n        id: FC.has_playbook.urlParam,\n        value: `checkbox-${FC.has_playbook.urlParam}`,\n        filterValues: {\n            key: `${FC.has_playbook.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.has_playbook.urlParam, values),\n            value: filters.has_playbook,\n            items: FC.has_playbook.values\n        }\n    }, {\n        label: FC.reboot.title,\n        type: FC.reboot.type,\n        id: FC.reboot.urlParam,\n        value: `checkbox-${FC.reboot.urlParam}`,\n        filterValues: {\n            key: `${FC.reboot.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.reboot.urlParam, values),\n            value: filters.reboot,\n            items: FC.reboot.values\n        }\n    }, {\n        label: FC.rule_status.title,\n        type: FC.rule_status.type,\n        id: FC.rule_status.urlParam,\n        value: `radio-${FC.rule_status.urlParam}`,\n        filterValues: {\n            key: `${FC.rule_status.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: `${filters.rule_status}`,\n            items: FC.rule_status.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setSearchText('');\n                setFilters({\n                    ...(filters.topic && { topic: filters.topic }),\n                    impacting: true, rule_status: 'enabled', limit: filters.limit, offset: filters.offset\n                });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: filters.offset / filters.limit + 1,\n                perPage: Number(filters.limit),\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setFilters({ ...filters, limit: perPage, offset: 0 }); },\n                isCompact: true\n            }}\n            exportConfig={{\n                label: intl.formatMessage(messages.exportCsv),\n                // eslint-disable-next-line no-dupe-keys\n                label: intl.formatMessage(messages.exportJson),\n                onSelect: (_e, fileType) => downloadReport('hits', fileType, urlBuilder(filters, selectedTags)),\n                isDisabled: !filters.impacting,\n                tooltipText: intl.formatMessage(messages.exportData)\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <Pagination\n            itemCount={results}\n            page={(filters.offset / filters.limit + 1)}\n            perPage={Number(filters.limit)}\n            onSetPage={(event, page) => { onSetPage(page); }}\n            onPerPageSelect={(event, perPage) => { setFilters({ ...filters, limit: perPage, offset: 0 }); }}\n            widgetId={`pagination-options-menu-bottom`}\n            variant={PaginationVariant.bottom}\n        />\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object,\n    SID: PropTypes.Object\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    rules: AdvisorStore.rules,\n    rulesFetchStatus: AdvisorStore.rulesFetchStatus,\n    filters: AdvisorStore.filters,\n    selectedTags: AdvisorStore.selectedTags,\n    workloads: AdvisorStore.workloads,\n    SID: AdvisorStore.SID,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (options, search) => dispatch(AppActions.fetchRules(options, search)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n"],"sourceRoot":""}