{"version":3,"sources":["webpack:///./src/PresentationalComponents/Loading/Loading.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss","webpack:///./src/Utilities/_BarDividedList.scss","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss","webpack:///./src/PresentationalComponents/Common/Tables.js","webpack:///./src/PresentationalComponents/Loading/Failed.js","webpack:///./src/PresentationalComponents/Modals/DisableRule.js","webpack:///./node_modules/lodash/_arrayIncludes.js","webpack:///./node_modules/lodash/_arrayIncludesWith.js","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/RuleDetails/_RuleDetails.scss?ed93","webpack:///./src/PresentationalComponents/RuleRating/_RuleRating.scss?866f","webpack:///./src/Utilities/_BarDividedList.scss?7c1d","webpack:///./src/PresentationalComponents/RuleLabels/RuleLabels.js","webpack:///./src/PresentationalComponents/RuleLabels/_RuleLabels.scss?9fb3","webpack:///./src/PresentationalComponents/Modals/ViewHostAcks.js","webpack:///./src/PresentationalComponents/RuleRating/RuleRating.js","webpack:///./src/Utilities/BarDividedList.js","webpack:///./src/PresentationalComponents/RuleDetails/RuleDetails.js","webpack:///./src/SmartComponents/Recs/Details.scss","webpack:///./src/PresentationalComponents/Inventory/_Inventory.scss","webpack:///./src/SmartComponents/Recs/Details.scss?1540","webpack:///./src/PresentationalComponents/Inventory/_Inventory.scss?8952","webpack:///./src/PresentationalComponents/Inventory/Inventory.js","webpack:///./src/cveToRuleid.js","webpack:///./src/SmartComponents/Recs/Details.js"],"names":["Loading","exports","___CSS_LOADER_API_IMPORT___","push","module","i","urlBuilder","filters","selectedTags","workloads","url","URL","window","location","queryString","Object","keys","map","key","Array","isArray","join","params","URLSearchParams","get","SAP","set","length","history","replaceState","origin","pathname","toString","filterFetchBuilder","assign","entries","filterName","filterValue","paramParser","searchParams","search","from","reduce","acc","value","JSON","parse","split","encodeOptionsToURL","options","index","pruneFilters","localFilters","filterCategories","prunedFilters","arr","item","category","chips","selectedCategoryValue","values","find","String","name","text","label","string","title","toUpperCase","substring","urlParam","workloadQueryBuilder","SID","generateFilter","system_profile","isSelected","sap_system","sap_sids","undefined","arrayEnhancer","Failed","message","className","size","propTypes","DisableRule","handleModalToggle","intl","isModalOpen","host","hosts","rule","afterFn","setAck","addNotification","setSystem","setRule","useState","justification","setJustificaton","singleSystem","setSingleSystem","bulkHostActions","a","data","systems","API","post","BASE_URL","rule_id","response","host_ids","hosts_acked_count","count","variant","dismissable","formatMessage","messages","error","description","disableRule","rule_status","type","system_uuid","id","timeout","ruleSuccessfullyDisabled","isOpen","onClose","actions","onClick","save","cancel","disableRuleBody","fieldId","isChecked","onChange","disableRuleForSystems","disableRuleSingleSystem","justificationNote","aria-describedby","onKeyDown","e","preventDefault","PropTypes","bool","object","func","any","array","defaultProps","system","injectIntl","connect","AdvisorStore","dispatch","baseIndexOf","comparator","Breadcrumbs","current","fetchRule","match","ruleFetchStatus","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","insightsHeader","navigate","inventoryId","useEffect","Fragment","oneLink","to","isActive","loading","routerParams","state","ownProps","AppActions","content","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","RuleLabels","tags","incidentTooltip","position","TooltipPosition","right","color","incident","ruleIsDisabledTooltip","disabled","redhatDisabled","ViewHostAcks","fetchHostAcks","hostAcksFetchStatus","hostAcks","columns","systemName","dateDisabled","rows","setRows","unclean","setUnclean","deleteAck","limit","cells","display_name","none","date","Date","updated_at","isInline","enable","asMutable","width","hostAckModalTitle","aria-label","props","colSpan","RuleRating","rating","setRating","submitted","setSubmitted","feedbackThankyou","thankYou","setThankYou","updateRuleRating","newRating","calculatedRating","AppConstants","setTimeout","console","ruleHelpful","Button","BarDividedList","list","element","RuleDetails","children","resolutionRisk","topics","header","isDetailsPage","topicLinks","topic","tag","slug","ruleDescription","isGeneric","Boolean","source","escapeHtml","Split","hasGutter","Stack","generic","summary","node_id","rel","target","href","knowledgebaseArticle","Card","isCompact","CardBody","topicRelatedToRule","barDividedList","impacted_systems_count","viewAffectedSystems","gutter","totalRisk","InsightsLabel","total_risk","TextContent","Text","component","TextVariants","p","rulesDetailsTotalriskBody","risk","strong","str","SeverityLine","likelihoodLevel","level","likelihood","tooltipMessage","likelihoodDescription","impactLevel","impact","impactDescription","riskofchange","hideIcon","reboot_required","systemReboot","status","is","isNot","number","page","pageSize","Inventory","sortIndex","tableProps","onSelectRows","afterDisableFn","onSortFn","inventory","useRef","InventoryTable","setInventoryTable","selected","setSelected","disableRuleModalOpen","setDisableRuleModalOpen","bulkSelect","setBulkSelect","store","useStore","sortIndices","1","2","bulkSelectfn","filter","entity","calculateSelectedItems","insights","loadInventory","ReactRedux","react","React","reactRouterDom","pfReactTable","pfReact","reactCore","inventoryConnector","mergeWithEntities","INVENTORY_ACTION_TYPES","getRegistry","register","systemReducer","transforms","lastSeen","ref","sortBy","Number","sort","direction","onSort","onRefresh","per_page","onRefreshData","total","perPage","dedicatedAction","isDisabled","playbook_count","dataProvider","issues","onRemediationCreated","result","remediation","getNotification","remediate","actionsConfig","selectNone","selectPage","selectAll","checked","onSelect","arrayOf","shape","entities","payload","cveToRuleid","cves","OverviewDetails","fetchRuleAck","fetchTopics","fetchSystem","systemFetchStatus","ruleAck","useIntl","permsDisableRec","usePermissions","PERMS","disableRec","hasAccess","actionsDropdownOpen","setActionsDropdownOpen","setHost","viewSystemsModalOpen","setViewSystemsModalOpen","setFilters","isRuleUpdated","setIsRuleUpdated","fetchRulefn","newSort","encodeURIComponent","enableRule","ruleSuccessfullyEnabled","rulesTableHideReportsErrorDisabled","isCVE","mapping","UI_BASE","includes","tagRef","workloadRef","stringify","subnav","recommendations","defaultMessage","document","documentTitle","toggleModal","PageHeader","Main","resolution","resolution_set","system_type","SYSTEM_TYPES","rhel","ocp","resolution_risk","ruleResolutionRisk","rulesDetailsPubishdate","DateFormat","publish_date","Label","Flex","FlexItem","align","default","Tooltip","trigger","permsAction","Dropdown","toggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","dropdownItems","DropdownItem","Title","headingLevel","ruleIsDisabledForSystems","ruleIsDisabled","ruleIsDisabledForSystemsBody","viewSystems","ruleIsDisabledJustification","enableRuleForSystems","affectedSystems","canSelectAll","actionResolver","event","rowIndex","MessageState","icon","BellSlashIcon","ruleIsDisabledBody","rulesTableFetchRulesError"],"mappings":"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","file":"js/Details.cf3338ee9d2c08261a75.js","sourcesContent":["import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { List } from 'react-content-loader';\nimport React from 'react';\nconst Loading = () => <>\n    <Card>\n        <CardBody>\n            <List />\n        </CardBody>\n    </Card></>;\n\nexport default Loading;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"hr{border:0.01rem solid #ccc;margin:var(--pf-global--spacer--md) 0 var(--pf-global--spacer--md) 0}.ins-c-rule-details__split{display:inline-flex;justify-content:space-around}.ins-c-rule-details__split .pf-l-split__item{position:relative}.ins-c-rule-details__stack{width:600px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem{display:flex;justify-content:space-between;width:100%}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override{width:452px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title{width:150px}.ins-c-rule-details__stack .ins-c-rule-details__stackitem .description-stack-override .severity-line .ins-l-title span{font-size:var(--pf-global-FontSize--md)}.system-reboot-message{display:inline-flex}.system-reboot-message .system-reboot-message__content{position:relative}.system-reboot-message .reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--red-100)}.system-reboot-message .no-reboot-required-icon{margin-top:5px;margin-right:var(--pf-global--spacer--sm);color:var(--pf-global--palette--black-400)}.topicsCard{background-color:var(--pf-global--BackgroundColor--150);box-shadow:none;word-break:break-word}.alignCenterOverride{align-items:center;width:100%}.genericOverride p{margin-top:0;margin-bottom:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-center-text{text-align:left !important}.ins-c-rule-details__split{display:block}.ins-c-rule-details__split .pf-l-split__item{margin:var(--pf-global--spacer--md)}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".like{color:var(--pf-global--success-color--100)}.dislike{color:var(--pf-global--primary-color--100)}.ratingSpanOverride{font-size:var(--pf-global--FontSize--sm) !important}.ratingSpanOverride button{padding:8px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".verticalDivider{color:var(--pf-global--BorderColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".incidentLabel{background-color:#faeae8 !important}.pf-c-label{margin-right:var(--pf-global--spacer--xs)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { generateFilter } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\n// Builds returns url params from table filters, pushes to url if history object is passed\nexport const urlBuilder = (filters, selectedTags, workloads) => {\n    const url = new URL(window.location);\n    const queryString = `${Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&')}`;\n    const params = new URLSearchParams(queryString);\n\n    //Removes invalid 'undefined' url param value\n    params.get('reports_shown') === 'undefined' && params.delete('reports_shown');\n\n    workloads?.SAP ? params.set('sap_system', true) : params.delete('sap_system');\n    selectedTags?.length ? params.set('tags', selectedTags) : params.delete('tags');\n    window.history.replaceState(null, null, `${url.origin}${url.pathname}?${params.toString()}`);\n    return `?${queryString}`;\n};\n\n// transforms array of strings -> comma seperated strings, required by advisor api\nexport const filterFetchBuilder = (filters) => Object.assign({},\n    ...Object.entries(filters).map(([filterName, filterValue]) => Array.isArray(filterValue) ?\n        ((filterValue[0] === 'true') || (filterValue[0] === 'false')) && filterValue.length > 1 ? null\n            : { [filterName]: filterValue.join() }\n        : { [filterName]: filterValue })\n);\n\n// parses url params for use in table/filter chips\nexport const paramParser = () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    return Array.from(searchParams).reduce((acc, [key, value]) => ({\n        ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n    }), {});\n};\n\n// create url from options\nexport const encodeOptionsToURL = (options) => {\n    return Object.entries(options).reduce((acc, [key, value], index) => {\n        return acc += index === 0 ? `${key}=${value}` : `&${key}=${value}`;\n    }, '');\n};\n\n// capitalizes text string\nexport const capitalize = (string) => string[0].toUpperCase() + string.substring(1);\n\nexport const pruneFilters = (localFilters, filterCategories) => {\n    const prunedFilters = Object.entries(localFilters);\n    return prunedFilters.length > 0 ? prunedFilters.reduce((arr, item) => {\n        if (filterCategories[item[0]]) {\n            const category = filterCategories[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                return selectedCategoryValue ? { name: selectedCategoryValue.text || selectedCategoryValue.label, value } : { name: value, value };\n            })\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return [...arr, { category: capitalize(category.title), chips, urlParam: category.urlParam }];\n        } else if (item[0] === 'text') {\n            return [...arr, { category: 'Name', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] }];\n        } else { return arr; }\n    }, []) : [];\n};\n\n// builds workload query filter\nexport const workloadQueryBuilder = (workloads, SID) => generateFilter({\n    system_profile: {\n        ...workloads?.SAP?.isSelected && { sap_system: true },\n        ...SID?.length > 0 && { sap_sids: SID }\n    }\n}, undefined, { arrayEnhancer: 'contains' });\n","import { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardHeader } from '@patternfly/react-core/dist/js/components/Card/CardHeader';\nimport  FrownOpenIcon  from '@patternfly/react-icons/dist/js/icons/frown-open-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst Failed = ({ message }) => <>\n    <Card className=\"ins-empty-rule-cards\">\n        <CardHeader>\n            <FrownOpenIcon size='lg'/>\n        </CardHeader>\n        <CardBody>\n            { message }\n        </CardBody>\n    </Card></>;\n\nexport default Failed;\n\nFailed.propTypes = {\n    message: propTypes.string\n};\n\n","import React, { useState } from 'react';\nimport { setAck, setRule, setSystem } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst DisableRule = ({ handleModalToggle, intl, isModalOpen, host, hosts, rule, afterFn, setAck, addNotification, setSystem, setRule,\n    selectedTags }) => {\n    const [justification, setJustificaton] = useState('');\n    const [singleSystem, setSingleSystem] = useState(host !== undefined || hosts.length > 0);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hosts, justification };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/ack_hosts/`,\n                {}, data);\n            if (selectedTags.length > 0) {\n                afterFn && afterFn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: response.data.count + rule.hosts_acked_count });\n            }\n\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const disableRule = async () => {\n        if (rule.rule_status === 'enabled' && !hosts.length) {\n            const options = singleSystem\n                ? { type: 'HOST', options: { rule: rule.rule_id, system_uuid: host.id, justification } }\n                : { type: 'RULE', options: { rule_id: rule.rule_id, ...(justification && { justification }) } };\n            try {\n                await setAck(options);\n                addNotification({\n                    variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyDisabled)\n                });\n                setJustificaton('');\n                afterFn && afterFn();\n            } catch (error) {\n                addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n            }\n        } else {\n            bulkHostActions();\n        }\n\n        handleModalToggle(false);\n    };\n\n    return <Modal\n        variant='small'\n        title={intl.formatMessage(messages.disableRule)}\n        isOpen={isModalOpen}\n        onClose={() => { handleModalToggle(false); setJustificaton(''); }}\n        actions={[\n            <Button key=\"confirm\" variant=\"primary\" onClick={() => disableRule()}>\n                {intl.formatMessage(messages.save)}\n            </Button>,\n            <Button key=\"cancel\" variant=\"link\" onClick={() => { handleModalToggle(false); setJustificaton(''); }}>\n                {intl.formatMessage(messages.cancel)}\n            </Button>\n        ]}\n    >\n        {intl.formatMessage(messages.disableRuleBody)}\n        <Form>\n            <FormGroup fieldId='blank-form' />\n            {(host !== undefined || hosts.length > 0) && <FormGroup fieldId='disable-rule-one-system'>\n                <Checkbox\n                    isChecked={singleSystem}\n                    onChange={() => { setSingleSystem(!singleSystem); }}\n                    label={hosts.length ? intl.formatMessage(messages.disableRuleForSystems) : intl.formatMessage(messages.disableRuleSingleSystem)}\n                    id=\"disable-rule-one-system\"\n                    name=\"disable-rule-one-system\" />\n            </FormGroup>}\n            <FormGroup\n                label={intl.formatMessage(messages.justificationNote)}\n                fieldId=\"disable-rule-justification\">\n                <TextInput\n                    type=\"text\"\n                    id=\"disable-rule-justification\"\n                    aria-describedby=\"disable-rule-justification\"\n                    value={justification}\n                    onChange={(text) => setJustificaton(text)}\n                    onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), disableRule())}\n                />\n            </FormGroup>\n        </Form>\n    </Modal>;\n};\n\nDisableRule.propTypes = {\n    isModalOpen: PropTypes.bool,\n    host: PropTypes.object,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    afterFn: PropTypes.func,\n    setAck: PropTypes.func,\n    hosts: PropTypes.array,\n    addNotification: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array\n};\n\nDisableRule.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    system: undefined,\n    rule: {},\n    afterFn: () => undefined,\n    host: undefined,\n    hosts: []\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addNotification: data => dispatch(addNotification(data)),\n    setAck: data => dispatch(setAck(data)),\n    setRule: data => dispatch(setRule(data)),\n    setSystem: data => dispatch(setSystem(data))\n});\n\nexport default injectIntl(connect(({ AdvisorStore }) => ({\n    selectedTags: AdvisorStore.selectedTags\n}), mapDispatchToProps)(DisableRule));\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport * as AppActions from '../../AppActions';\n\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Breadcrumb } from '@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb';\nimport { BreadcrumbItem } from '@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add base\n        crumbs.push({ title: `${intl.formatMessage(messages.insightsHeader)} ${splitUrl[1]}`, navigate: `/${splitUrl[1]}` });\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: rule.description,\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[1] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id })\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{oneLink.title}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleRating.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_BarDividedList.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_RuleLabels.scss';\n\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\n\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleLabels = ({ intl, rule }) => <React.Fragment >\n    {rule.tags.search('incident') !== -1 && <Tooltip content={intl.formatMessage(messages.incidentTooltip)} position={TooltipPosition.right}>\n        <Label color='red' className='incidentLabel'>{intl.formatMessage(messages.incident)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'disabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.disabled)}</Label>\n    </Tooltip>}\n    {rule.rule_status === 'rhdisabled' && <Tooltip content={intl.formatMessage(messages.ruleIsDisabledTooltip)} position={TooltipPosition.right}>\n        <Label color='gray'>{intl.formatMessage(messages.redhatDisabled)}</Label>\n    </Tooltip>}\n</React.Fragment>;\n\nRuleLabels.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleLabels);\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RuleLabels.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { fetchHostAcks, setAck } from '../../AppActions';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { List } from 'react-content-loader';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport OutlinedBellIcon  from '@patternfly/react-icons/dist/js/icons/outlined-bell-icon';\nimport PropTypes from 'prop-types';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst ViewHostAcks = ({ fetchHostAcks, hostAcksFetchStatus, handleModalToggle, intl, isModalOpen, hostAcks, rule, afterFn }) => {\n    const columns = [\n        intl.formatMessage(messages.systemName),\n        intl.formatMessage(messages.justificationNote),\n        intl.formatMessage(messages.dateDisabled),\n        ''\n    ];\n    const [rows, setRows] = useState([]);\n    const [unclean, setUnclean] = useState(false);\n\n    const deleteAck = async (host) => {\n        try {\n            await API.delete(`${BASE_URL}/hostack/${host.id}/`);\n            fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n            setUnclean(true);\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.error),\n                description: `${error}`\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (hostAcks.data) {\n            const rows = hostAcks.data.map(item => ({\n                cells: [\n                    item.display_name || item.system_uuid,\n                    item.justification || intl.formatMessage(messages.none),\n                    { title: <DateFormat date={new Date(item.updated_at)} type=\"onlyDate\" /> },\n                    {\n                        title: <Button key={item.system_uuid} isInline variant='link' onClick={() => deleteAck(item)}>\n                            <OutlinedBellIcon size='sm' /> &nbsp; {intl.formatMessage(messages.enable)}\n                        </Button >\n                    }\n                ]\n            })).asMutable();\n\n            if (!rows.length) { afterFn(); handleModalToggle(false); }\n\n            setRows(rows);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hostAcks]);\n\n    useEffect(() => {\n        fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n    }, [fetchHostAcks, rule.hosts_acked_count, rule.rule_id]);\n\n    return <Modal\n        width={'50%'}\n        title={intl.formatMessage(messages.hostAckModalTitle)}\n        isOpen={isModalOpen}\n        onClose={() => { unclean && afterFn(); handleModalToggle(false); }}\n    >\n        {hostAcksFetchStatus === 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={rows} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n        {hostAcksFetchStatus !== 'fulfilled' && <Table aria-label=\"host-ack-table\" rows={[{\n            cells: [{ props: { colSpan: 3 }, title: (<List />) }]\n        }]} cells={columns}>\n            <TableHeader />\n            <TableBody />\n        </Table>}\n    </Modal>;\n};\n\nViewHostAcks.propTypes = {\n    isModalOpen: PropTypes.bool,\n    handleModalToggle: PropTypes.func,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    fetchHostAcks: PropTypes.func,\n    hostAcks: PropTypes.object,\n    hostAcksFetchStatus: PropTypes.string,\n    addNotification: PropTypes.func,\n    afterFn: PropTypes.func\n\n};\n\nViewHostAcks.defaultProps = {\n    isModalOpen: false,\n    handleModalToggle: () => undefined,\n    rule: {},\n    afterFn: () => undefined\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    hostAcks: AdvisorStore.hostAcks,\n    hostAcksFetchStatus: AdvisorStore.hostAcksFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setAck: data => dispatch(setAck(data)),\n    fetchHostAcks: data => dispatch(fetchHostAcks(data)),\n    addNotification: data => dispatch(addNotification(data))\n\n});\n\nexport default injectIntl(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewHostAcks));\n","import './_RuleRating.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport React, { useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport OutlinedThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-down-icon';\nimport OutlinedThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/outlined-thumbs-up-icon';\nimport PropTypes from 'prop-types';\nimport ThumbsDownIcon from '@patternfly/react-icons/dist/js/icons/thumbs-down-icon';\nimport ThumbsUpIcon from '@patternfly/react-icons/dist/js/icons/thumbs-up-icon';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\n\nconst RuleRating = ({ intl, rule }) => {\n    const [rating, setRating] = useState(rule.rating);\n    const [submitted, setSubmitted] = useState(false);\n    const [thankYou, setThankYou] = useState(intl.formatMessage(messages.feedbackThankyou));\n    const updateRuleRating = async (newRating) => {\n        const calculatedRating = rating === newRating ? 0 : newRating;\n        try {\n            await API.post(`${AppConstants.BASE_URL}/rating/`, {}, { rule: rule.rule_id, rating: calculatedRating });\n            setRating(calculatedRating);\n            setSubmitted(true);\n            setTimeout(() => setThankYou(''), 3000);\n        } catch (error) {\n            console.error(error); // eslint-disable-line no-console\n        }\n    };\n\n    return <span className='ratingSpanOverride'>\n        {intl.formatMessage(messages.ruleHelpful)}\n        <Button variant=\"plain\" aria-label=\"thumbs-up\" onClick={() => updateRuleRating(1)}>\n            {rating === 1 ? <ThumbsUpIcon className='like' size='sm' /> :\n                <OutlinedThumbsUpIcon size='sm' />}\n        </Button>\n        <Button variant=\"plain\" aria-label=\"thumbs-down\" onClick={() => updateRuleRating(-1)}>\n            {rating === -1 ? <ThumbsDownIcon className='dislike' size='sm' /> :\n                <OutlinedThumbsDownIcon size='sm' />}\n        </Button>\n        {submitted && thankYou}\n    </span>;\n};\n\nRuleRating.propTypes = {\n    intl: PropTypes.any,\n    rule: PropTypes.object\n};\n\nexport default injectIntl(RuleRating);\n","import React from 'react';\nimport './_BarDividedList.scss';\n\nconst BarDividedList = (list) => list.map((element, index) => <React.Fragment key={index}>\n    {element}{index + 1 !== list.length && <strong className='verticalDivider'>&nbsp;&#124;&nbsp;</strong>}\n</React.Fragment>\n);\n\nexport default BarDividedList;\n","/* eslint max-len: 0 */\nimport './_RuleDetails.scss';\n\nimport * as AppConstants from '../../AppConstants';\n\nimport { Split, SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/index';\nimport { Stack, StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/index';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { compact, intersection } from 'lodash';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { InsightsLabel } from '@redhat-cloud-services/frontend-components/components/esm/InsightsLabel';\nimport { Link } from 'react-router-dom';\nimport PowerOffIcon from '@patternfly/react-icons/dist/js/icons/power-off-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport RuleRating from '../RuleRating/RuleRating';\nimport { SeverityLine } from '@redhat-cloud-services/frontend-components-charts/dist/esm/SeverityLine';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport barDividedList from '../../Utilities/BarDividedList';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { strong } from '../../Utilities/intlHelper';\n\nconst RuleDetails = ({ children, rule, resolutionRisk, intl, topics, header, isDetailsPage }) => {\n    const topicLinks = () => topics && compact(topics.map((topic) =>\n        intersection(topic.tag.split(' '), rule.tags.split(' ')).length &&\n        <React.Fragment key={topic.slug}>\n            <Link to={`/topics/${topic.slug}`}>\n                {`${topic.name}`}\n            </Link>\n        </React.Fragment>\n    ));\n\n    const ruleDescription = (data, isGeneric) => typeof data === 'string' && Boolean(data) && <span className={isGeneric && 'genericOverride'}>\n        <ReactMarkdown source={data} escapeHtml={false} />\n    </span>;\n\n    return <Split className='ins-c-rule-details__split' hasGutter>\n        <SplitItem>\n            <Stack hasGutter>\n                {header && <StackItem>\n                    {header}\n                </StackItem>}\n                <StackItem>{isDetailsPage ? ruleDescription(rule.generic, true) : ruleDescription(rule.summary)}</StackItem>\n                {rule.node_id && (\n                    <StackItem>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://access.redhat.com/node/${rule.node_id}`}>\n                            {intl.formatMessage(messages.knowledgebaseArticle)}&nbsp;<ExternalLinkAltIcon size='sm' />\n                        </a>\n                    </StackItem>\n                )}\n                {topics && rule.tags && topicLinks().length > 0 &&\n                    <StackItem>\n                        <Card className=\"topicsCard\" isCompact>\n                            <CardBody>\n                                <strong>{intl.formatMessage(messages.topicRelatedToRule)}</strong>\n                                <br />\n                                {barDividedList(topicLinks())}\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                }\n                {isDetailsPage && <RuleRating rule={rule} />}\n                {!isDetailsPage && rule.impacted_systems_count > 0 &&\n                    <StackItem>\n                        <Link key={`${rule.rule_id}-link`} to={`/recommendations/${rule.rule_id}`}>\n                            {intl.formatMessage(messages.viewAffectedSystems, { systems: rule.impacted_systems_count })}\n                        </Link>\n                    </StackItem>\n                }\n            </Stack>\n        </SplitItem>\n        <SplitItem>\n            <Stack gutter='sm'>\n                {children && (\n                    <StackItem>\n                        {children}\n                    </StackItem>\n                )}\n                <StackItem>\n                    <Stack className='ins-c-rule-details__stack'>\n                        <StackItem><strong>{intl.formatMessage(messages.totalRisk)}</strong></StackItem>\n                        <StackItem className='pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm'>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span><InsightsLabel value={rule.total_risk}/></span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>{intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                                risk: AppConstants.TOTAL_RISK_LABEL_LOWER[rule.total_risk] || intl.formatMessage(messages.undefined),\n                                                strong: str => strong(str)\n                                            })}</Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <Stack>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.likelihoodLevel, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL[rule.likelihood]\n                                                })}\n                                                value={rule.likelihood}\n                                                tooltipMessage={intl.formatMessage(messages.likelihoodDescription, {\n                                                    level: AppConstants.LIKELIHOOD_LABEL_LOWER[rule.likelihood]\n                                                })}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <SeverityLine\n                                                className='severity-line'\n                                                title={intl.formatMessage(messages.impactLevel, {\n                                                    level: AppConstants.IMPACT_LABEL[rule.impact.impact]\n                                                })}\n                                                value={rule.impact.impact}\n                                                tooltipMessage={intl.formatMessage(messages.impactDescription, {\n                                                    level: AppConstants.IMPACT_LABEL_LOWER[rule.impact.impact]\n                                                })}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                        <hr></hr>\n                        <StackItem><strong>{intl.formatMessage(messages.riskofchange)}</strong></StackItem>\n                        <StackItem className={`pf-u-display-inline-flex alignCenterOverride pf-u-pb-sm pf-u-pt-sm`}>\n                            <span className='ins-c-rule-details__stackitem'>\n                                <span>\n                                    <InsightsLabel text={AppConstants.RISK_OF_CHANGE_LABEL[resolutionRisk]} value={resolutionRisk} hideIcon/>\n                                </span>\n                                <Stack hasGutter className='description-stack-override'>\n                                    <StackItem>\n                                        <TextContent>\n                                            <Text component={TextVariants.p}>\n                                                {resolutionRisk ?\n                                                    AppConstants.RISK_OF_CHANGE_DESC[resolutionRisk] :\n                                                    intl.formatMessage(messages.undefined)}\n                                            </Text>\n                                        </TextContent>\n                                    </StackItem>\n                                    <StackItem>\n                                        <span className='system-reboot-message'>\n                                            <PowerOffIcon className={rule.reboot_required ? 'reboot-required-icon' : 'no-reboot-required-icon'}/>\n                                            <TextContent className='system-reboot-message__content'>\n                                                <Text component={TextVariants.p}>\n                                                    {intl.formatMessage(messages.systemReboot, {\n                                                        strong: str => strong(str), status: rule.reboot_required ?\n                                                            intl.formatMessage(messages.is) :\n                                                            intl.formatMessage(messages.isNot)\n                                                    })}\n                                                </Text>\n                                            </TextContent>\n                                        </span>\n                                    </StackItem>\n                                </Stack>\n                            </span>\n                        </StackItem>\n                    </Stack>\n                </StackItem>\n            </Stack>\n        </SplitItem>\n    </Split>;\n};\n\nRuleDetails.propTypes = {\n    children: PropTypes.any,\n    rule: PropTypes.object,\n    resolutionRisk: PropTypes.number,\n    intl: PropTypes.any,\n    topics: PropTypes.array,\n    header: PropTypes.any,\n    isDetailsPage: PropTypes.bool\n};\n\nexport default injectIntl(RuleDetails);\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}.pageHeaderOverride{padding-bottom:0px}.cardOverride{margin-bottom:var(--pf-global--spacer--md)}.titleOverride{margin-bottom:var(--pf-global--spacer--lg)}.pf-c-card__body{padding-bottom:var(--pf-global--spacer--md)}.categoryLabel{margin-left:var(--pf-global--spacer--md)}@media only screen and (max-width: 768px){.ins-c-rec-details__actions_dropdown{top:-55px;top:-3.4375rem}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-background__default{color:var(--pf-global--BackgroundColor--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Inventory.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Inventory.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Inventory.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './_Inventory.scss';\n\nimport * as ReactRedux from 'react-redux';\nimport * as pfReactTable from '@patternfly/react-table';\nimport * as reactRouterDom from 'react-router-dom';\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport AnsibeTowerIcon from '@patternfly/react-icons/dist/js/icons/ansibeTower-icon';\nimport DisableRule from '../../PresentationalComponents/Modals/DisableRule';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport { reactCore } from '@redhat-cloud-services/frontend-components-utilities/files/inventoryDependencies';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { systemReducer } from '../../AppReducer';\nimport { useStore } from 'react-redux';\n\nlet page = 1;\nlet pageSize = 50;\nlet rule_id = '';\nconst Inventory = ({ tableProps, onSelectRows, rows, intl, rule, addNotification, items, afterDisableFn, onSortFn, filters }) => {\n    const inventory = useRef(null);\n    const [InventoryTable, setInventoryTable] = useState();\n    const [selected, setSelected] = useState([]);\n    const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n    const [bulkSelect, setBulkSelect] = useState();\n\n    const store = useStore();\n\n    const sortIndices = {\n        1: 'display_name',\n        2: 'updated'\n    };\n\n    const onSort = ({ index, direction }) => onSortFn(`${direction === 'asc' ? '' : '-'}${sortIndices[index]}`);\n\n    const calculateSort = () => {\n        const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n        return {\n            index: sortIndex,\n            key: sortIndex !== 2 ? sortIndices[sortIndex] : 'updated',\n            direction: filters.sort[0] === '-' ? 'desc' : 'asc'\n        };\n    };\n\n    const onRefresh = (options) => {\n        if (rule_id !== rule.rule_id) {\n            page = 1;\n            pageSize = 50;\n        }\n\n        if (inventory && inventory.current) {\n            page = options.page;\n            pageSize = options.per_page;\n            rule_id = rule.rule_id;\n            inventory.current.onRefreshData(options);\n        }\n    };\n\n    const remediationDataProvider = () => ({\n        issues: [{\n            id: `advisor:${rule.rule_id}`,\n            description: rule.description\n        }],\n        systems: selected\n    });\n\n    const onRemediationCreated = result => {\n        onSelectRows(-1, false);\n        try {\n            result.remediation && addNotification(result.getNotification());\n        } catch (error) {\n            addNotification(\n                { variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` }\n            );\n        }\n    };\n\n    const handleModalToggle = (disableRuleModalOpen) => {\n        setDisableRuleModalOpen(disableRuleModalOpen);\n    };\n\n    const bulkSelectfn = () => {\n        setBulkSelect(true);\n        setSelected(items);\n        onSelectRows(0, true);\n    };\n\n    useEffect(() => {\n        const calculateSelectedItems = (rows) => bulkSelect ?\n            setBulkSelect(false) : setSelected(rows.filter(entity => entity.selected === true).map(entity => entity.id));;\n        rows && calculateSelectedItems(rows);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rows]);\n\n    useEffect(() => {\n        (async () => {\n            const { inventoryConnector, mergeWithEntities, INVENTORY_ACTION_TYPES } = await insights.loadInventory({\n                ReactRedux, react: React, reactRouterDom, pfReactTable, pfReact: reactCore\n            });\n\n            getRegistry().register({\n                ...mergeWithEntities(\n                    systemReducer(\n                        [\n                            { title: intl.formatMessage(messages.name), transforms: [pfReactTable.sortable], key: 'display_name' },\n                            { title: intl.formatMessage(messages.lastSeen), transforms: [pfReactTable.sortable], key: 'updated' }\n                        ],\n                        INVENTORY_ACTION_TYPES\n                    )\n                )\n            });\n\n            const { InventoryTable } = inventoryConnector(store);\n            setInventoryTable(() => InventoryTable);\n        })();\n    }, [intl, store]);\n\n    return <React.Fragment>\n        {disableRuleModalOpen && <DisableRule\n            handleModalToggle={handleModalToggle}\n            isModalOpen={disableRuleModalOpen}\n            rule={rule}\n            afterFn={afterDisableFn}\n            hosts={selected} />\n        }\n        {InventoryTable ? <InventoryTable\n            ref={inventory}\n            items={items}\n            sortBy={calculateSort()}\n            onSort={onSort}\n            onRefresh={onRefresh}\n            page={page}\n            total={items.length}\n            perPage={pageSize}\n            tableProps={tableProps}\n            dedicatedAction={<RemediationButton\n                key='remediation-button'\n                isDisabled={selected.length === 0 || rule.playbook_count === 0}\n                dataProvider={remediationDataProvider}\n                onRemediationCreated={(result) => onRemediationCreated(result)}>\n                <AnsibeTowerIcon size='sm' className='ins-c-background__default' />\n                &nbsp;{intl.formatMessage(messages.remediate)}\n            </RemediationButton>}\n            actionsConfig={{\n                actions: ['', {\n                    label: intl.formatMessage(messages.disableRuleForSystems),\n                    props: { isDisabled: selected.length === 0 },\n                    onClick: () => handleModalToggle(true)\n                }]\n            }}\n            bulkSelect={{\n                count: selected.length,\n                items: [{\n                    title: intl.formatMessage(messages.selectNone),\n                    onClick: () => {\n                        onSelectRows(-1, false);\n                    }\n                },\n                {\n                    ...items && items.length > pageSize ? {\n                        title: intl.formatMessage(messages.selectPage, { items: pageSize }),\n                        onClick: () => {\n                            onSelectRows(0, true);\n                        }\n                    } : {}\n                },\n                {\n                    ...items && items.length > 0 ? {\n                        title: intl.formatMessage(messages.selectAll, { items: items.length || 0 }),\n                        onClick: () => {\n                            bulkSelectfn();\n                        }\n                    } : {}\n                }],\n                checked: selected.length === items.length ? 1 : selected.length === pageSize ? null : 0,\n                onSelect: () => { selected.length > 0 ? onSelectRows(-1, false) : bulkSelectfn(); }\n            }}\n        /> : <Loading />}\n    </React.Fragment>;\n};\n\nInventory.propTypes = {\n    rows: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        selected: PropTypes.bool\n    })),\n    onSelectRows: PropTypes.func,\n    items: PropTypes.array,\n    tableProps: PropTypes.any,\n    intl: PropTypes.any,\n    rule: PropTypes.object,\n    addNotification: PropTypes.func,\n    afterDisableFn: PropTypes.func,\n    onSortFn: PropTypes.func,\n    filters: PropTypes.object\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    addNotification: data => dispatch(addNotification(data)),\n    onSelectRows: (id, selected) => dispatch({ type: 'SELECT_ENTITY', payload: { id, selected } })\n});\n\nexport default injectIntl(routerParams(connect(({ entities, props }) => ({\n    rows: entities && entities.rows,\n    ...props\n}), mapDispatchToProps)(Inventory)));\n","export const cveToRuleid = [\n    {\n        rule_id: 'CVE_2015_3456|VENOM_CVE_2015_3456',\n        name: 'CVE-2015-3456: \"VENOM\" QEMU privilege escalation',\n        description: 'CVE-2015-3456: \"VENOM\" QEMU privilege escalation',\n        cves: [\n            'CVE-2015-3456'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_5600|OPENSSH_CVE_2015_5600',\n        name: 'CVE-2015-5600: OpenSSH vulnerable to password guessing attack',\n        description: 'CVE-2015-5600: OpenSSH vulnerable to password guessing attack',\n        cves: [\n            'CVE-2015-5600'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_7181_2_3_nss_nspr|NSS_NSPR_CVE_2015_7181_2_3',\n        name: 'CVE-2015-7181, CVE-2015-7182, CVE-2015-7183: NSS/NSPR privilege escalation',\n        description: 'CVE-2015-7181, CVE-2015-7182, CVE-2015-7183: NSS/NSPR privilege escalation',\n        cves: [\n            'CVE-2015-7181',\n            'CVE-2015-7182',\n            'CVE-2015-7183'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_7501_commons_collections|COMMONS_COLLECTIONS_CVE_2015_7501_IN_USE',\n        name: 'CVE-2015-7501: Java application server code execution',\n        description: 'CVE-2015-7501: Java application server code execution',\n        cves: [\n            'CVE-2015-7501'\n        ]\n    },\n    {\n        rule_id: 'CVE_2015_7547_glibc|GLIBC_CVE_2015_7547',\n        name: 'CVE-2015-7547: libresolv code execution',\n        description: 'CVE-2015-7547: libresolv code execution',\n        cves: [\n            'CVE-2015-7547'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0728_kernel|KERNEL_CVE-2016-0728',\n        name: 'CVE-2016-0728: kernel privilege escalation in key management subsystem',\n        description: 'CVE-2016-0728: kernel privilege escalation in key management subsystem',\n        cves: [\n            'CVE-2016-0728'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN_INT_LISTENING',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption with listening processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN_LISTENING',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption with externally available processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_DROWN_USED',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption with running services',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN_LISTEN',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption with listening processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN_URGENT',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption with externally available processes',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_0800_openssl_drown|OPENSSL_CVE_2016_0800_SPECIAL_DROWN_USED',\n        name: 'CVE-2016-0800: \"DROWN\" OpenSSL session decryption',\n        description: 'CVE-2016-0800: \"Special DROWN\" OpenSSL very efficient session decryption with running services',\n        cves: [\n            'CVE-2016-0800'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_2315_24_git|GIT_CVE_2016_2315_24',\n        name: 'CVE-2016-2315, CVE-2016-2324: Git code execution via crafted packfile',\n        description: 'CVE-2016-2315, CVE-2016-2324: Git code execution via crafted packfile',\n        cves: [\n            'CVE-2016-2315',\n            'CVE-2016-2324'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_2315_24_git|GIT_DAEMON_CVE_2016_2315_24',\n        name: 'CVE-2016-2315, CVE-2016-2324: Git code execution via crafted packfile',\n        description: 'CVE-2016-2315, CVE-2016-2324: Git daemon remote code execution via crafted packfile',\n        cves: [\n            'CVE-2016-2315',\n            'CVE-2016-2324'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_2776_bind|BIND_CVE_2016_2776',\n        name: 'CVE-2016-2776: BIND denial of service via crafted DNS request',\n        description: 'CVE-2016-2776: BIND denial of service via crafted DNS request',\n        cves: [\n            'CVE-2016-2776'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_3714_imagemagick|IMAGEMAGICK_CVE_2016_3714',\n        name: 'CVE-2016-3714: ImageMagick code execution',\n        description: 'CVE-2016-3714: ImageMagick code execution',\n        cves: [\n            'CVE-2016-3714'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_5195_kernel|KERNEL_CVE_2016_5195_2',\n        name: 'CVE-2016-5195: kernel privilege escalation via permission bypass',\n        description: 'CVE-2016-5195: kernel privilege escalation via permission bypass',\n        cves: [\n            'CVE-2016-5195'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_5696_kernel|KERNEL_CVE_2016_5696_URGENT',\n        name: 'CVE-2016-5696: kernel man-in-the-middle via payload injection',\n        description: 'CVE-2016-5696: kernel man-in-the-middle via payload injection',\n        cves: [\n            'CVE-2016-5696'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_5696_kernel|KERNEL_CVE_2016_5696_WARN_2',\n        name: 'CVE-2016-5696: kernel man-in-the-middle via payload injection',\n        description: 'CVE-2016-5696: kernel man-in-the-middle via payload injection with incomplete mitigation',\n        cves: [\n            'CVE-2016-5696'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_9962_docker|CVE_2015_9962_DOCKER_LESS_SEVERE_2',\n        name: 'CVE-2016-9962: Docker privilege escalation via ptrace',\n        description: 'CVE-2016-9962: Docker privilege escalation via ptrace',\n        cves: [\n            'CVE-2016-9962'\n        ]\n    },\n    {\n        rule_id: 'CVE_2016_9962_docker|CVE_2015_9962_DOCKER_MORE_SEVERE_2',\n        name: 'CVE-2016-9962: Docker privilege escalation via ptrace',\n        description: 'CVE-2016-9962: Docker efficient privilege escalation via ptrace with outdated package',\n        cves: [\n            'CVE-2016-9962'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000250_bluez|BLUEZ_CVE_2017_1000250',\n        name: 'CVE-2017-1000250: bluez information disclosure',\n        description: 'CVE-2017-1000250: bluez information disclosure',\n        cves: [\n            'CVE-2017-1000250'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_LOADED_DOS',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel denial of service with loaded modules',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_LOADED_RCE',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel code execution with loaded modules',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_POSSIBLE_DOS',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel denial of service',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000251_kernel_blueborne|KERNEL_CVE_2017_1000251_POSSIBLE_RCE',\n        name: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        description: 'CVE-2017-1000251: \"Blueborne\" kernel code execution',\n        cves: [\n            'CVE-2017-1000251'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000253_loadelf|KERNEL_CVE_2017_1000253_MITIGATION_INCOMPLETE',\n        name: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries',\n        description: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries with incomplete mitigation',\n        cves: [\n            'CVE-2017-1000253'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000253_loadelf|KERNEL_CVE_2017_1000253_VULNERABLE',\n        name: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries',\n        description: 'CVE-2017-1000253: kernel privilege escalation via SUID PIE binaries',\n        cves: [\n            'CVE-2017-1000253'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000366_glibc|CVE_2017_1000364_KERNEL_CVE_2017_1000366_GLIBC_EXPLOITABLE',\n        name: 'CVE-2017-1000364, CVE-2017-1000366: kernel, glibc privilege escalation',\n        description: 'CVE-2017-1000364, CVE-2017-1000366: kernel, glibc privilege escalation',\n        cves: [\n            'CVE-2017-1000364',\n            'CVE-2017-1000366'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000368_sudo|CVE_2017_1000368_SUDO_2',\n        name: 'CVE-2017-1000368: sudo privilege escalation due to incomplete bugfix',\n        description: 'CVE-2017-1000368: sudo privilege escalation due to incomplete bugfix',\n        cves: [\n            'CVE-2017-1000368'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_1000405_kernel|KERNEL_CVE_2017_1000405_VULNERABLE',\n        name: 'CVE-2017-1000405: kernel memory corruption',\n        description: 'CVE-2017-1000405: kernel memory corruption',\n        cves: [\n            'CVE-2017-1000405'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_12616_tomcat|TOMCAT_CVE_2017_12616_2',\n        name: 'CVE-2017-12616: Tomcat information disclosure',\n        description: 'CVE-2017-12616: Tomcat information disclosure',\n        cves: [\n            'CVE-2017-12616'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_12616_tomcat|TOMCAT_CVE_2017_12616_USED_2',\n        name: 'CVE-2017-12616: Tomcat information disclosure',\n        description: 'CVE-2017-12616: Tomcat information disclosure with running process',\n        cves: [\n            'CVE-2017-12616'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_13077_wpa_supplicant|CVE_2017_13077_ERROR',\n        name: 'CVE-2017-13077: wpa_supplicant man-in-the-middle',\n        description: 'CVE-2017-13077: wpa_supplicant man-in-the-middle with active wifi',\n        cves: [\n            'CVE-2017-13077'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_13077_wpa_supplicant|CVE_2017_13077_WARN',\n        name: 'CVE-2017-13077: wpa_supplicant man-in-the-middle',\n        description: 'CVE-2017-13077: wpa_supplicant man-in-the-middle',\n        cves: [\n            'CVE-2017-13077'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_14491_dnsmasq|CVE_2017_14491_ERROR',\n        name: 'CVE-2017-14491: dnsmasq code execution',\n        description: 'CVE-2017-14491: dnsmasq code execution with listening processes',\n        cves: [\n            'CVE-2017-14491'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_14491_dnsmasq|CVE_2017_14491_WARN',\n        name: 'CVE-2017-14491: dnsmasq code execution',\n        description: 'CVE-2017-14491: dnsmasq code execution',\n        cves: [\n            'CVE-2017-14491'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_2636_kernel|KERNEL_CVE_2017_2636',\n        name: 'CVE-2017-2636: kernel privilege escalation',\n        description: 'CVE-2017-2636: kernel privilege escalation',\n        cves: [\n            'CVE-2017-2636'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5461_nss|CVE_2017_5461_NSS_2',\n        name: 'CVE-2017-5461: NSS code execution',\n        description: 'CVE-2017-5461: NSS code execution',\n        cves: [\n            'CVE-2017-5461'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_DRACUTKERNEL',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel in dracut and kernel',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_ONLYDRACUT',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel in dracut',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_ONLYVIRT',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_VIRTKERNEL',\n        name: 'CVE-2017-5715: \"Spectre\" Virtualization side-channel',\n        description: 'CVE-2017-5715: \"Spectre\" Virtualization and kernel side-channel',\n        cves: [\n            'CVE-2017-5715'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_5753_4_cpu_kernel|KERNEL_CVE_2017_5753_4_CPU_ERROR_3',\n        name: 'CVE-2017-5753, CVE-2017-5754: \"Spectre/Meltdown\" CPU side-channel',\n        description: 'CVE-2017-5753, CVE-2017-5754: \"Spectre/Meltdown\" CPU side-channel',\n        cves: [\n            'CVE-2017-5753',\n            'CVE-2017-5754'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_6074_kernel|KERNEL_CVE_2017_6074',\n        name: 'CVE-2017-6074: kernel privilege escalation via DCCP module',\n        description: 'CVE-2017-6074: kernel privilege escalation via DCCP module',\n        cves: [\n            'CVE-2017-6074'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_7184_kernel|KERNEL_CVE_2017_7184_EXPLOITABLE_2',\n        name: 'CVE-2017-7184: kernel privilege escalation via CAP_NET_ADMIN capability',\n        description: 'CVE-2017-7184: kernel privilege escalation via CAP_NET_ADMIN capability',\n        cves: [\n            'CVE-2017-7184'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_7494_samba|SAMBA_CVE_2017_7494_2',\n        name: 'CVE-2017-7494: Samba code execution via writeable share',\n        description: 'CVE-2017-7494: Samba code execution via writeable share',\n        cves: [\n            'CVE-2017-7494'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_8779_rpc|CVE_2017_8779_BUG',\n        name: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        description: 'CVE-2017-8779: \"rpcbomb\" rpcbind crash with certain versions',\n        cves: [\n            'CVE-2017-8779'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_8779_rpc|CVE_2017_8779_VULNERABLE',\n        name: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        description: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        cves: [\n            'CVE-2017-8779'\n        ]\n    },\n    {\n        rule_id: 'CVE_2017_8779_rpc|CVE_2017_8779_WARN',\n        name: 'CVE-2017-8779: \"rpcbomb\" rpcbind denial of service',\n        description: 'CVE-2017-8779: \"rpcbomb\" rpcbind memory leak',\n        cves: [\n            'CVE-2017-8779'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1000115_memcached|CVE_2018_1000115',\n        name: 'CVE-2018-1000115: memcached spoofed traffic amplification',\n        description: 'CVE-2018-1000115: memcached spoofed traffic amplification',\n        cves: [\n            'CVE-2018-1000115'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES_RUNNING',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation with running service',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES_WONTFIX',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation (no fix available for this version)',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1002105_kubernetes|CVE_2018_1002105_KUBERNETES_WONTFIX_RUNNING',\n        name: 'CVE-2018-1002105: kubernetes privilege escalation',\n        description: 'CVE-2018-1002105: kubernetes privilege escalation with running service (no fix available for this version)',\n        cves: [\n            'CVE-2018-1002105'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1102_ose_sti_builder|OSE_STI_BUILDER_CVE_2018_1102',\n        name: 'CVE-2018-1102: OpenShift remote code execution via S2I build',\n        description: 'CVE-2018-1102: OpenShift remote code execution via S2I build',\n        cves: [\n            'CVE-2018-1102'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1111_dhcp|ERROR_CVE_2018_1111_DHCP_2',\n        name: 'CVE-2018-1111: NetworkManager code execution',\n        description: 'CVE-2018-1111: NetworkManager code execution with DHCP enabled',\n        cves: [\n            'CVE-2018-1111'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1111_dhcp|WARN_CVE_2018_1111_DHCP_2',\n        name: 'CVE-2018-1111: NetworkManager code execution',\n        description: 'CVE-2018-1111: NetworkManager code execution',\n        cves: [\n            'CVE-2018-1111'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_1112_glusterfs|GLUSTERFS_CVE_2018_1112',\n        name: 'CVE-2018-1112: glusterfs unrestricted access',\n        description: 'CVE-2018-1112: glusterfs unrestricted access',\n        cves: [\n            'CVE-2018-1112'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_BAD_CMDLINE',\n        name: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        description: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel mitigation disabled',\n        cves: [\n            'CVE-2018-12126',\n            'CVE-2018-12127',\n            'CVE-2018-12130',\n            'CVE-2019-11091'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_NEED_UPDATE',\n        name: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        description: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        cves: [\n            'CVE-2018-12126',\n            'CVE-2018-12127',\n            'CVE-2018-12130',\n            'CVE-2019-11091'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_VULNERABLE_2',\n        name: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel',\n        description: 'CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \"MDS\" CPU side-channel reported by kernel',\n        cves: [\n            'CVE-2018-12126',\n            'CVE-2018-12127',\n            'CVE-2018-12130',\n            'CVE-2019-11091'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12207_cpu_kernel|CVE_2018_12207_CPU_KERNEL_CMDLINE',\n        name: 'CVE-2018-12207: CPU systemwide denial of service',\n        description: 'CVE-2018-12207: CPU systemwide denial of service mitigation disabled',\n        cves: [\n            'CVE-2018-12207'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12207_cpu_kernel|CVE_2018_12207_CPU_KERNEL_FOR_SURE',\n        name: 'CVE-2018-12207: CPU systemwide denial of service',\n        description: 'CVE-2018-12207: CPU systemwide denial of service',\n        cves: [\n            'CVE-2018-12207'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_12207_cpu_kernel|CVE_2018_12207_CPU_KERNEL_FOR_SURE_CRITICAL',\n        name: 'CVE-2018-12207: CPU systemwide denial of service',\n        description: 'CVE-2018-12207: CPU systemwide denial of service with running hypervisor',\n        cves: [\n            'CVE-2018-12207'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_14634_kernel|CVE_2018_14634_2',\n        name: 'CVE-2018-14634: kernel privilege escalation via SUID-root binary integer overflow',\n        description: 'CVE-2018-14634: kernel privilege escalation via SUID-root binary integer overflow',\n        cves: [\n            'CVE-2018-14634'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_19788_polkit|CVE_2018_19788_POLKIT_UID_BAD',\n        name: 'CVE-2018-19788: PolicyKit authentication bypass',\n        description: 'CVE-2018-19788: PolicyKit authentication bypass with affected UID',\n        cves: [\n            'CVE-2018-19788'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3620_cpu_kernel|CVE_2018_3620_CPU_KERNEL_BAD_CMDLINE',\n        name: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        description: 'CVE-2018-3620: \"L1TF\" CPU side-channel mitigation disabled',\n        cves: [\n            'CVE-2018-3620'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3620_cpu_kernel|CVE_2018_3620_CPU_KERNEL_NEED_UPDATE',\n        name: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        description: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        cves: [\n            'CVE-2018-3620'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3620_cpu_kernel|CVE_2018_3620_CPU_KERNEL_VULNERABLE_4',\n        name: 'CVE-2018-3620: \"L1TF\" CPU side-channel',\n        description: 'CVE-2018-3620: \"L1TF\" CPU side-channel reported by kernel',\n        cves: [\n            'CVE-2018-3620'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3639_cpu_kernel|CVE_2018_3639_CPU_BAD_CMDLINE_2',\n        name: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        description: 'CVE-2018-3639: \"SSBD\" CPU side-channel mitigation disabled by command line',\n        cves: [\n            'CVE-2018-3639'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3639_cpu_kernel|CVE_2018_3639_CPU_BAD_KERNEL_2',\n        name: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        description: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        cves: [\n            'CVE-2018-3639'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_3639_cpu_kernel|CVE_2018_3639_CPU_BAD_MICROCODE_2',\n        name: 'CVE-2018-3639: \"SSBD\" CPU side-channel',\n        description: 'CVE-2018-3639: \"SSBD\" CPU side-channel with outdated microcode',\n        cves: [\n            'CVE-2018-3639'\n        ]\n    },\n    {\n        rule_id: 'CVE_2018_8897_kernel_popss|KERNEL_CVE_2018_8897_VULNERABLE_2',\n        name: 'CVE-2018-1087, CVE-2018-8897: \"POPSS\" kernel privilege escalation',\n        description: 'CVE-2018-1087, CVE-2018-8897: \"POPSS\" kernel privilege escalation',\n        cves: [\n            'CVE-2018-1087',\n            'CVE-2018-8897'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_0155_gpu_kernel|CVE_2019_0155_GPU_KERNEL',\n        name: 'CVE-2019-0154, CVE-2019-0155: i915 GPU privilege escalation',\n        description: 'CVE-2019-0154, CVE-2019-0155: i915 GPU privilege escalation',\n        cves: [\n            'CVE-2019-0154',\n            'CVE-2019-0155'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_BADCMD',\n        name: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        description: 'CVE-2019-11135: \"TAA\" kernel side-channel mitigation disabled',\n        cves: [\n            'CVE-2019-11135'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL',\n        name: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        description: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        cves: [\n            'CVE-2019-11135'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_UCODE',\n        name: 'CVE-2019-11135: \"TAA\" kernel side-channel',\n        description: 'CVE-2019-11135: \"TAA\" kernel side-channel mitigation incomplete',\n        cves: [\n            'CVE-2019-11135'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_1125_kernel|CVE_2019_1125_KERNEL_2',\n        name: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel',\n        description: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel',\n        cves: [\n            'CVE-2019-1125'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_1125_kernel|CVE_2019_1125_KERNEL_BAD_CMDLINE_2',\n        name: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel',\n        description: 'CVE-2019-1125: \"SWAPGS\" CPU side-channel mitigation disabled',\n        cves: [\n            'CVE-2019-1125'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_11477_kernel|CVE_2019_11477_KERNEL',\n        name: 'CVE-2019-11477, CVE-2019-11478, CVE-2019-11479: \"Sack Panic\" kernel denial of service',\n        description: 'CVE-2019-11477, CVE-2019-11478, CVE-2019-11479: \"Sack Panic\" kernel denial of service',\n        cves: [\n            'CVE-2019-11477',\n            'CVE-2019-11478',\n            'CVE-2019-11479'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_14835_kernel|CVE_2019_14835_KERNEL_VULN_BAD',\n        name: 'CVE-2019-14835: kernel privilege escalation during guest live migration',\n        description: 'CVE-2019-14835: kernel privilege escalation during guest live migration with virtualization',\n        cves: [\n            'CVE-2019-14835'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_14835_kernel|CVE_2019_14835_KERNEL_VULN_NORMAL',\n        name: 'CVE-2019-14835: kernel privilege escalation during guest live migration',\n        description: 'CVE-2019-14835: kernel privilege escalation during guest live migration',\n        cves: [\n            'CVE-2019-14835'\n        ]\n    },\n    {\n        rule_id: 'CVE_2019_5736_runc|CVE_2019_5736_RUNC',\n        name: 'CVE-2019-5736: runc privilege escalation',\n        description: 'CVE-2019-5736: runc privilege escalation',\n        cves: [\n            'CVE-2019-5736'\n        ]\n    },\n    {\n        rule_id: 'CVEs_Top10_2015_flash_plugin|FLASH_CVES_TOP_10_2015',\n        name: 'Top 10 exploited vulnerabilities in 2015',\n        description: 'Top 10 exploited vulnerabilities in 2015',\n        cves: [\n            'Top 10 exploited vulnerabilities in 2015'\n        ]\n    },\n    {\n        rule_id: 'CVEs_Top10_2016_flash_plugin|FLASH_CVES_TOP_10_2016',\n        name: 'Top 10 exploited vulnerabilities in 2016',\n        description: 'Top 10 exploited vulnerabilities in 2016',\n        cves: [\n            'Top 10 exploited vulnerabilities in 2016'\n        ]\n    },\n    {\n        rule_id: 'CVEs_cgi_httpoxy|HTTPD_CVE_2016_5387_3',\n        name: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle',\n        description: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle',\n        cves: [\n            'CVE-2016-5387'\n        ]\n    },\n    {\n        rule_id: 'CVEs_cgi_httpoxy|HTTPD_CVE_2016_5387_URGENT_3',\n        name: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle',\n        description: 'CVE-2016-5387: \"HTTPoxy\" httpd man-in-the-middle with listening processes',\n        cves: [\n            'CVE-2016-5387'\n        ]\n    },\n    {\n        rule_id: 'CVEs_samba_badlock|SAMBA_CVE_2016_2118_CLIENT',\n        name: 'CVE-2016-2118: \"Badlock\" Samba man-in-the-middle',\n        description: 'CVE-2016-2118: \"Badlock\" Samba client man-in-the-middle',\n        cves: [\n            'CVE-2016-2118'\n        ]\n    },\n    {\n        rule_id: 'CVEs_samba_badlock|SAMBA_CVE_2016_2118_SERVER',\n        name: 'CVE-2016-2118: \"Badlock\" Samba man-in-the-middle',\n        description: 'CVE-2016-2118: \"Badlock\" Samba server man-in-the-middle',\n        cves: [\n            'CVE-2016-2118'\n        ]\n    },\n    {\n        rule_id: 'bash_injection|VULNERABLE_BASH_DETECTED',\n        name: 'CVE-2014-6271, CVE-2014-7169: \"Shellshock\" Bash privilege escalation',\n        description: 'CVE-2014-6271, CVE-2014-7169: \"Shellshock\" Bash privilege escalation',\n        cves: [\n            'CVE-2014-6271',\n            'CVE-2014-7169'\n        ]\n    },\n    {\n        rule_id: 'hardening_httpd_ssl_pci_dss_poodle|HTTPD_POODLE_4',\n        name: 'Decreased security: httpd using deprecated TLS protocol',\n        description: 'CVE-2014-3566: \"POODLE\" SSLv3 man-in-the-middle',\n        cves: [\n            'CVE-2014-3566'\n        ]\n    },\n    {\n        rule_id: 'heartbleed|HAS_HEARTBLEED',\n        name: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        description: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        cves: [\n            'CVE-2014-0160'\n        ]\n    },\n    {\n        rule_id: 'heartbleed|HEARTBLEED_ACCESSIBLE',\n        name: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        description: 'CVE-2014-0160: \"Heartbleed\" OpenSSL with listening processes information disclosure',\n        cves: [\n            'CVE-2014-0160'\n        ]\n    },\n    {\n        rule_id: 'heartbleed|USING_HEARTBLEED_SO',\n        name: 'CVE-2014-0160: \"Heartbleed\" OpenSSL information disclosure',\n        description: 'CVE-2014-0160: \"Heartbleed\" OpenSSL with active processes information disclosure',\n        cves: [\n            'CVE-2014-0160'\n        ]\n    },\n    {\n        rule_id: 'vsftpd_poodle|VSFTPD_POODLE',\n        name: 'CVE-2014-3566: \"POODLE\" vsftpd man-in-the-middle',\n        description: 'CVE-2014-3566: \"POODLE\" vsftpd man-in-the-middle',\n        cves: [\n            'CVE-2014-3566'\n        ]\n    }\n];\n","import './Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport { BASE_URL, PERMS, SYSTEM_TYPES, UI_BASE } from '../../AppConstants';\nimport { Card, CardBody, CardFooter, CardHeader } from '@patternfly/react-core/dist/js/components/Card';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { encodeOptionsToURL, workloadQueryBuilder } from '../../PresentationalComponents/Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport BellSlashIcon from '@patternfly/react-icons/dist/js/icons/bell-slash-icon';\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport DisableRule from '../../PresentationalComponents/Modals/DisableRule';\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Flex } from '@patternfly/react-core/dist/js/layouts/Flex/Flex';\nimport { FlexItem } from '@patternfly/react-core/dist/js/layouts/Flex/FlexItem';\nimport Inventory from '../../PresentationalComponents/Inventory/Inventory';\nimport { Label } from '@patternfly/react-core/dist/js/components/Label/Label';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../../PresentationalComponents/RuleDetails/RuleDetails';\nimport RuleLabels from '../../PresentationalComponents/RuleLabels/RuleLabels';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport { cveToRuleid } from '../../cveToRuleid.js';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { useIntl } from 'react-intl';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/files/RBACHook';\n\nconst OverviewDetails = ({ match, fetchRuleAck, fetchTopics, fetchSystem, fetchRule, ruleFetchStatus, rule, systemFetchStatus, system,\n    topics, ruleAck, hostAcks, fetchHostAcks, setSystem, setRule, selectedTags, addNotification, workloads, SID }) => {\n    const intl = useIntl();\n    const permsDisableRec = usePermissions('advisor', PERMS.disableRec).hasAccess;\n    const [actionsDropdownOpen, setActionsDropdownOpen] = useState(false);\n    const [disableRuleModalOpen, setDisableRuleModalOpen] = useState(false);\n    const [host, setHost] = useState(undefined);\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [filters, setFilters] = useState({ sort: '-updated' });\n    const [isRuleUpdated, setIsRuleUpdated] = useState(false);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const fetchRulefn = (newSort, rule = true, system = true) => {\n        let options = selectedTags !== null && selectedTags.length && ({ tags: selectedTags.map(tag => encodeURIComponent(tag)) });\n        workloads && (options = { ...options, ...workloadQueryBuilder(workloads, SID) });\n        system && fetchSystem(\n            match.params.id,\n            options.tags ? {} : { ...options, ...filters, ...newSort },\n            options.tags && encodeOptionsToURL({ ...options, ...filters, ...newSort })\n        );\n        rule && fetchRule(\n            options.tags ? { rule_id: match.params.id } : { rule_id: match.params.id, ...options },\n            options.tags && encodeOptionsToURL(options)\n        );\n    };\n\n    const ruleResolutionRisk = (rule) => {\n        const resolution = rule.resolution_set.find(resolution => resolution.system_type === SYSTEM_TYPES.rhel || SYSTEM_TYPES.ocp);\n        return resolution ? resolution.resolution_risk.risk : undefined;\n    };\n\n    const handleModalToggle = (disableRuleModalOpen, host = undefined) => {\n        setDisableRuleModalOpen(disableRuleModalOpen);\n        setHost(host);\n    };\n\n    const enableRule = async (rule) => {\n        try {\n            await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n            addNotification({\n                variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n            });\n            fetchRulefn();\n        } catch (error) {\n            handleModalToggle(false);\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: intl.formatMessage(messages.rulesTableHideReportsErrorDisabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const afterDisableFn = () => {\n        setHost(undefined);\n        fetchRulefn();\n    };\n\n    const actionResolver = () => ([{\n        title: 'Disable recommendation for system',\n        onClick: (event, rowIndex, item) => (handleModalToggle(true, item))\n    }]);\n\n    const bulkHostActions = async () => {\n        const data = { systems: hostAcks.data.map(item => item.system_uuid) };\n        try {\n            const response = await API.post(`${BASE_URL}/rule/${rule.rule_id}/unack_hosts/`, {}, data);\n            addNotification({\n                variant: 'success', timeout: true, dismissable: true, title: intl.formatMessage(messages.ruleSuccessfullyEnabled)\n            });\n            if (selectedTags.length > 0) {\n                fetchRulefn();\n            } else {\n                setSystem({ host_ids: response.data.host_ids });\n                setRule({ ...rule, hosts_acked_count: 0 });\n            }\n        } catch (error) {\n            addNotification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${error}` });\n        }\n    };\n\n    const onSortFn = (sort) => {\n        setFilters({ sort });\n        sort === 'updated' && (sort = 'last_seen');\n        sort === '-updated' && (sort = '-last_seen');\n        fetchRulefn({ sort }, false);\n    };\n\n    useEffect(() => {\n        rule.rule_id && fetchHostAcks({ rule_id: rule.rule_id, limit: rule.hosts_acked_count });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchHostAcks, rule.hosts_acked_count]);\n\n    useEffect(() => {\n        const isCVE = cveToRuleid && cveToRuleid.find(mapping => mapping.rule_id === match.params.id);\n\n        if (isCVE) {\n            window.location.href = `${UI_BASE}/vulnerability/cves/${isCVE.cves[0].includes('CVE-') ?\n                `${isCVE.cves[0]}?security_rule=${match.params.id}`\n                : ''}`;\n        } else {\n            fetchTopics();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const tagRef = useRef();\n    const workloadRef = useRef();\n    useEffect(() => {\n        const fetchAction = () => { fetchRulefn(); setIsRuleUpdated(true); };\n\n        if (isRuleUpdated && ((selectedTags !== null && JSON.stringify(tagRef.current) !== JSON.stringify(selectedTags)) ||\n            (JSON.stringify(workloadRef.current) !== JSON.stringify(workloads)))) {\n            fetchAction();\n        }\n\n        workloadRef.current = workloads;\n        tagRef.current = selectedTags;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchRulefn, selectedTags, workloads, SID]);\n\n    useEffect(() => {\n        if (rule.rule_status !== 'enabled' && rule.rule_id && isRuleUpdated) {\n            fetchRuleAck({ rule_id: rule.rule_id });\n        } else if (!isRuleUpdated) {\n            fetchRulefn();\n            setIsRuleUpdated(true);\n        }\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchRuleAck, rule.rule_status, rule.rule_id]);\n\n    useEffect(() => {\n        if (rule && rule.description) {\n            const subnav = `${rule.description} - ${messages.recommendations.defaultMessage}`;\n            document.title = intl.formatMessage(messages.documentTitle, { subnav });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rule]);\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={fetchRulefn}\n            rule={rule}\n        />}\n        {disableRuleModalOpen && <DisableRule\n            handleModalToggle={handleModalToggle}\n            isModalOpen={disableRuleModalOpen}\n            rule={rule}\n            afterFn={afterDisableFn}\n            host={host} />\n        }\n        {ruleFetchStatus === 'fulfilled' &&\n            <React.Fragment>\n                <PageHeader className='pageHeaderOverride'>\n                    <Breadcrumbs\n                        current={rule.description || ''}\n                        match={match} />\n                </PageHeader>\n                <Main className='pf-m-light pf-u-pt-sm'>\n                    <RuleDetails resolutionRisk={ruleResolutionRisk(rule)} isDetailsPage rule={rule} topics={topics} header={\n                        <React.Fragment>\n                            <PageHeaderTitle title={<React.Fragment><RuleLabels rule={rule} />{rule.description}</React.Fragment>} />\n                            <p>{intl.formatMessage(\n                                messages.rulesDetailsPubishdate, { date: <DateFormat date={new Date(rule.publish_date)} type=\"onlyDate\" /> }\n                            )}\n                            <Label className=\"categoryLabel\" color=\"blue\">{rule.category.name}</Label>\n                            </p>\n                        </React.Fragment>}>\n                        <Flex>\n                            <FlexItem align={{ default: 'alignRight' }}>\n                                <Tooltip trigger={!permsDisableRec ? 'mouseenter' : ''} content={intl.formatMessage(messages.permsAction)}>\n                                    <Dropdown\n                                        className='ins-c-rec-details__actions_dropdown'\n                                        onSelect={() => setActionsDropdownOpen(!actionsDropdownOpen)}\n                                        position='right'\n                                        toggle={<DropdownToggle\n                                            isDisabled={!permsDisableRec}\n                                            onToggle={(actionsDropdownOpen) => setActionsDropdownOpen(actionsDropdownOpen)}\n                                            toggleIndicator={CaretDownIcon}>Actions\n                                        </DropdownToggle>}\n                                        isOpen={actionsDropdownOpen}\n                                        dropdownItems={rule && rule.rule_status === 'enabled' ?\n                                            [<DropdownItem key='link'\n                                                onClick={() => { handleModalToggle(true); }}>\n                                                {intl.formatMessage(messages.disableRule)}</DropdownItem>]\n                                            : [<DropdownItem key='link'\n                                                onClick={() => { enableRule(rule); }}>\n                                                {intl.formatMessage(messages.enableRule)}</DropdownItem>]} />\n                                </Tooltip>\n                            </FlexItem>\n                        </Flex>\n                    </RuleDetails>\n                </Main>\n            </React.Fragment>\n        }\n        {ruleFetchStatus === 'pending' && (<Loading />)}\n        <Main>\n            <React.Fragment>\n                {ruleFetchStatus === 'fulfilled' &&\n                    <React.Fragment>\n                        {(rule.hosts_acked_count > 0 || rule.rule_status !== 'enabled') && <Card className='cardOverride'>\n                            <CardHeader><Title headingLevel=\"h4\" size=\"xl\">\n                                <BellSlashIcon size='sm' />&nbsp;{intl.formatMessage(rule.hosts_acked_count > 0 && rule.rule_status === 'enabled' ?\n                                    messages.ruleIsDisabledForSystems : messages.ruleIsDisabled)}\n                            </Title></CardHeader>\n                            <CardBody>\n                                {rule.hosts_acked_count > 0 && rule.rule_status === 'enabled' ?\n                                    <React.Fragment>\n                                        {intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: rule.hosts_acked_count })}\n                                        &nbsp;\n                                        <Button isInline variant='link' onClick={() => setViewSystemsModalOpen(true)}>\n                                            {intl.formatMessage(messages.viewSystems)}\n                                        </Button>\n                                    </React.Fragment>\n                                    : <React.Fragment>\n                                        {intl.formatMessage(messages.ruleIsDisabledJustification)}\n                                        <i>{ruleAck.justification || intl.formatMessage(messages.none)}</i>\n                                        {ruleAck.updated_at && <span>&nbsp;<DateFormat date={new Date(ruleAck.updated_at)} type=\"onlyDate\" /></span>}\n                                    </React.Fragment>}\n                            </CardBody>\n                            <CardFooter>\n                                {rule.hosts_acked_count > 0 && rule.rule_status === 'enabled' ?\n                                    <Button isInline variant='link' onClick={() => bulkHostActions()}>\n                                        {intl.formatMessage(messages.enableRuleForSystems)}\n                                    </Button>\n                                    : <Button isInline variant='link' onClick={() => enableRule(rule)}>\n                                        {intl.formatMessage(messages.enableRule)}\n                                    </Button>}\n                            </CardFooter>\n                        </Card>}\n                        {rule.rule_status === 'enabled' && <React.Fragment>\n                            <Title className='titleOverride' headingLevel='h3' size='2xl'>\n                                {intl.formatMessage(messages.affectedSystems)}\n                            </Title>\n                            {systemFetchStatus === 'fulfilled' &&\n                                <Inventory\n                                    tableProps={{ canSelectAll: false, actionResolver }}\n                                    items={system.host_ids} rule={rule} afterDisableFn={afterDisableFn} filters={filters}\n                                    onSortFn={onSortFn} />}\n                            {systemFetchStatus === 'pending' && (<Loading />)}\n                        </React.Fragment>}\n                        {systemFetchStatus === 'fulfilled' && rule.rule_status !== 'enabled' && <MessageState icon={BellSlashIcon}\n                            title={intl.formatMessage(messages.ruleIsDisabled)}\n                            text={intl.formatMessage(messages.ruleIsDisabledBody)} />}\n                    </React.Fragment>}\n                {ruleFetchStatus === 'pending' && (<Loading />)}\n                {ruleFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n            </React.Fragment>\n        </Main>\n    </React.Fragment >;\n};\n\nOverviewDetails.propTypes = {\n    match: PropTypes.any,\n    fetchRule: PropTypes.func,\n    ruleFetchStatus: PropTypes.string,\n    rule: PropTypes.object,\n    fetchSystem: PropTypes.func,\n    systemFetchStatus: PropTypes.string,\n    system: PropTypes.object,\n    addNotification: PropTypes.func,\n    fetchTopics: PropTypes.func,\n    topics: PropTypes.array,\n    ruleAck: PropTypes.object,\n    hostAcks: PropTypes.object,\n    fetchRuleAck: PropTypes.func,\n    fetchHostAcks: PropTypes.func,\n    setRule: PropTypes.func,\n    setSystem: PropTypes.func,\n    selectedTags: PropTypes.array,\n    workloads: PropTypes.object,\n    SID: PropTypes.object\n};\n\nconst mapStateToProps = ({ AdvisorStore, ownProps }) => ({\n    rule: AdvisorStore.rule,\n    ruleFetchStatus: AdvisorStore.ruleFetchStatus,\n    system: AdvisorStore.system,\n    systemFetchStatus: AdvisorStore.systemFetchStatus,\n    topics: AdvisorStore.topics,\n    ruleAck: AdvisorStore.ruleAck,\n    hostAcks: AdvisorStore.hostAcks,\n    selectedTags: AdvisorStore.selectedTags,\n    workloads: AdvisorStore.workloads,\n    SID: AdvisorStore.SID,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (options, search) => dispatch(AppActions.fetchRule(options, search)),\n    fetchSystem: (rule_id, options, search) => dispatch(AppActions.fetchSystem(rule_id, options, search)),\n    addNotification: data => dispatch(addNotification(data)),\n    fetchTopics: () => dispatch(AppActions.fetchTopics()),\n    fetchRuleAck: data => dispatch(AppActions.fetchRuleAck(data)),\n    fetchHostAcks: data => dispatch(AppActions.fetchHostAcks(data)),\n    setRule: data => dispatch(AppActions.setRule(data)),\n    setSystem: data => dispatch(AppActions.setSystem(data))\n});\n\nexport default routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OverviewDetails));\n"],"sourceRoot":""}