{"version":3,"sources":["webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss?2939","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/SmartComponents/Topics/_Details.scss","webpack:///./src/SmartComponents/Topics/Details.js","webpack:///./src/SmartComponents/Topics/_Details.scss?e817"],"names":["module","exports","push","i","Breadcrumbs","breadcrumbs","current","fetchRule","match","ruleFetchStatus","rule","intl","useState","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","addTabedCrumb","param","rootTitle","toLowerCase","title","navigate","undefined","url","split","params","id","inventoryId","description","useEffect","rule_id","Fragment","length","map","oneLink","key","to","isActive","formatMessage","messages","loading","propTypes","PropTypes","arrayOf","Object","string","func","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","AppActions","content","options","transform","update","locals","hot","accept","newContent","a","b","idx","Error","dispose","RulesTable","rules","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","transforms","sortable","added","cellWidth","totalRisk","systems","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","sort","setSort","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","debouncedSearchText","debounce","results","meta","count","filterFetchBuilder","assign","entries","filter","Array","isArray","join","onSort","_event","index","direction","orderParam","1","2","3","4","5","onSetPage","pageNumber","hideReports","rowId","reports_shown","API","post","BASE_URL","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","rulesTableHideReportsErrorBody","ruleName","fetchAction","location","search","searchParams","URLSearchParams","paramsObject","from","reduce","acc","value","JSON","parse","keys","replace","data","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","isOpen","isRead","disabled","moment","publish_date","fromNow","className","verticalAlign","label","labelHidden","severity","total_risk","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","asMutable","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","urlParam","res_risk","impact","likelihood","category","activeFiltersConfig","localFilters","topic","prunedFilters","item","chips","name","find","String","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","Number","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","message","rulesTableFetchRulesError","widgetId","PaginationVariant","bottom","Details","fetchTopic","topicFetchStatus","topic_id","featured","component","TextVariants","p","expandText","readmore","collapseText","readless","inline","headingLevel","TimesCircleIcon","topicDetailslNodetailsTitle","topicDetailslNodetailsBody"],"mappings":"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","file":"js/TopicDetails.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"nav.pf-c-breadcrumb ol{padding-left:0;margin-left:0;margin-top:0}nav.pf-c-breadcrumb li{text-transform:capitalize;margin-top:0}\\n\", \"\"]);\n\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport * as AppActions from '../../AppActions';\nimport './_breadcrumbs.scss';\nimport messages from '../../Messages';\n\nconst Breadcrumbs = ({ breadcrumbs, current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        let crumbs = [];\n        const addTabedCrumb = (param) => {\n            const rootTitle = param.toLowerCase();\n            if (rootTitle === 'rules' || rootTitle === 'systems') {\n                crumbs.push({ title: 'Rules', navigate: '/rules' });\n            }\n        };\n\n        // add rules base breadcrumb\n        if (breadcrumbs[0] !== undefined) {\n            addTabedCrumb(breadcrumbs[0].title);\n            crumbs.push(breadcrumbs[0]);\n        } else {\n            const title = match.url.split('/')[1];\n            addTabedCrumb(title);\n            crumbs.push({ title, navigate: `/${title}` });\n        }\n\n        // add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            const title = rule.description;\n            crumbs.push({\n                title,\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [breadcrumbs, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const title = match.url.split('/')[1];\n        if (match.params.inventoryId !== undefined && title !== 'systems') {\n            fetchRule({ rule_id: match.params.id }); // eslint-disable-line camelcase\n        } else {\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{oneLink.title}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    breadcrumbs: PropTypes.arrayOf(Object),\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    breadcrumbs: state.AdvisorStore.breadcrumbs,\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...state,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Battery, Main, TableToolbar, PrimaryToolbar } from '@redhat-cloud-services/frontend-components';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport PropTypes from 'prop-types';\nimport { AnsibeTowerIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Badge, Button, Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { cellWidth, sortable, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { injectIntl } from 'react-intl';\n\nimport * as AppActions from '../../AppActions';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport MessageState from '../MessageState/MessageState';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport messages from '../../Messages';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport debounce from '../../Utilities/Debounce';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [sort, setSort] = useState('-publish_date');\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n\n    // transforms array of strings -> comma seperated strings, required by advisor api\n    const filterFetchBuilder = (filters) => (Object.assign({},\n        ...Object.entries(filters).map((filter) => (Array.isArray(filter[1]) ? { [filter[0]]: filter[1].join() }\n            : { [filter[0]]: filter[1] })))\n    );\n\n    const onSort = useCallback((_event, index, direction) => {\n        const attrIndex = {\n            1: 'description',\n            2: 'publish_date',\n            3: 'total_risk',\n            4: 'impacted_count',\n            5: 'playbook_count'\n        };\n        const orderParam = `${direction === 'asc' ? '' : '-'}${attrIndex[index]}`;\n        setSortBy({ index, direction });\n        setSort(orderParam);\n        setOffset(0);\n    }, [setSort, setSortBy, setOffset]);\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        let reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown });\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n        try {\n            if (rule.reports_shown) {\n                await API.post(`${BASE_URL}/ack/`, { rule_id: rule.rule_id });\n\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n            }\n\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset: 0,\n                limit,\n                impacting,\n                sort\n            });\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: intl.formatMessage(messages.rulesTableHideReportsErrorBody, { ruleName: rule.description })\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.text;\n        delete localFilters.impacting;\n        delete localFilters.reports_shown;\n        delete localFilters.topic;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            const category = FC[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value =>\n                ({ name: category.values.find(values => values.value === String(value)).label, value }))\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return { category: category.title, chips, urlParam: category.urlParam };\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const searchParams = new URLSearchParams(history.location.search);\n            const paramsObject = Array.from(searchParams).reduce((acc, [key, value]) => ({\n                ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n            }), {});\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&');\n        setQueryString(`?${queryString}`);\n        history.replace({\n            search: `?${queryString}`\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit,\n                sort\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset, sort]);\n\n    useEffect(() => {\n        if (!rows.length) {\n            onSort(null, 2, 'desc');\n        }\n    }, [onSort, rows.length]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    setFilters({ ...filters, reports_shown: undefined });\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title: value.reports_shown ?\n                            <Link key={key} to={`/rules/${value.rule_id}`}>\n                                {value.description}\n                            </Link>\n                            : <span key={key}> <Badge isRead>{intl.formatMessage(messages.disabled)}</Badge> {value.description}</span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key} style={{ verticalAlign: 'top' }}>\n                            <Battery\n                                label={intl.formatMessage(messages.totalRisk)}\n                                labelHidden\n                                severity={value.total_risk}\n                            />\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{ title: <Main className='pf-m-light'> <RuleDetails rule={value} /></Main> }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]:\n                            filters[item.urlParam].filter(value => Number(value) !== Number(item.chips[0].value))\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}\\n\", \"\"]);\n\n","/* eslint-disable camelcase */\nimport React, { useEffect } from 'react';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { Main, PageHeader, Truncate } from '@redhat-cloud-services/frontend-components';\nimport {\n    TextContent,\n    Text,\n    TextVariants,\n    Label,\n    Title\n} from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { StarIcon, TimesCircleIcon } from '@patternfly/react-icons';\nimport { injectIntl } from 'react-intl';\n\nimport * as AppActions from '../../AppActions';\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport messages from '../../Messages';\n\nimport './_Details.scss';\n\nconst Details = ({ match, fetchTopic, setFilters, topic, topicFetchStatus, intl, filters }) => {\n    useEffect(() => {\n        if (typeof filters.topic === 'undefined') {\n            setFilters({ impacting: true, reports_shown: 'true', topic: match.params.id });\n        }\n    });\n\n    useEffect(() => {\n        fetchTopic({ topic_id: match.params.id });\n        return () => {\n            setFilters({ impacting: true, reports_shown: 'true' });\n        };\n    }, [fetchTopic, match.params.id, setFilters]);\n\n    return <>\n        <PageHeader>\n            <Breadcrumbs\n                current={topic.name}\n                match={match}\n            />\n            {topicFetchStatus === 'fulfilled' &&\n                <>\n                    <Title size=\"2xl\" className='titleOverride'>\n                        {topic.name}{topic.featured && <Label className='labelOverride'><StarIcon />\n                            {intl.formatMessage(messages.featured)}\n                        </Label>}\n                    </Title>\n                    <TextContent className='textOverride'>\n                        <Text component={TextVariants.p}>\n                            <Truncate\n                                text={topic.description}\n                                length={600}\n                                expandText={intl.formatMessage(messages.readmore)}\n                                collapseText={intl.formatMessage(messages.readless)}\n                                inline\n                            />\n                        </Text>\n                    </TextContent>\n                </>\n            }\n            {topicFetchStatus === '' || topicFetchStatus === 'pending' && <Loading />}\n        </PageHeader>\n        <Main>\n            <>\n                {topicFetchStatus === '' || topicFetchStatus === 'pending' || topicFetchStatus === 'fulfilled' && <>\n                    <Title headingLevel=\"h3\" size=\"2xl\" className='titlePaddingOverride'> Rules</Title>\n                    {filters.topic && <RulesTable />}\n                </>}\n                {topicFetchStatus === 'failed' || topicFetchStatus === 'rejected' &&\n                    <MessageState icon={TimesCircleIcon} title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n                        text={intl.formatMessage(messages.topicDetailslNodetailsBody)} />}\n            </>\n        </Main>\n    </>;\n};\n\nDetails.propTypes = {\n    match: PropTypes.any,\n    fetchTopic: PropTypes.func,\n    topic: PropTypes.object,\n    topicFetchStatus: PropTypes.string,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    filters: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    topic: state.AdvisorStore.topic,\n    topicFetchStatus: state.AdvisorStore.topicFetchStatus,\n    filters: state.AdvisorStore.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopic: (url) => dispatch(AppActions.fetchTopic(url)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Details)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}