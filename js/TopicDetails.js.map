{"version":3,"sources":["webpack:///./src/SmartComponents/Topics/_Details.scss?e817","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss?2939","webpack:///./src/SmartComponents/Topics/_Details.scss","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/SmartComponents/Topics/Details.js"],"names":["content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","push","Breadcrumbs","current","fetchRule","match","ruleFetchStatus","rule","intl","useState","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","url","split","title","navigate","formatMessage","messages","rules","systems","params","id","inventoryId","description","useEffect","rule_id","Fragment","length","map","oneLink","to","isActive","loading","propTypes","PropTypes","string","func","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","AppActions","RulesTable","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","transforms","sortable","added","cellWidth","totalRisk","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","filterFetchBuilder","Object","assign","entries","filter","Array","isArray","join","fetchRulesFn","onSetPage","pageNumber","hideReports","rowId","reports_shown","API","BASE_URL","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","location","search","searchParams","URLSearchParams","paramsObject","from","reduce","acc","value","JSON","parse","sort","keys","replace","sortIndex","Number","find","item","sortDirection","index","direction","data","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","isOpen","isRead","disabled","moment","publish_date","fromNow","className","verticalAlign","label","labelHidden","severity","total_risk","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForSystemsBody","isInline","viewSystems","asMutable","removeFilterParam","param","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","urlParam","res_risk","impact","likelihood","category","activeFiltersConfig","localFilters","topic","prunedFilters","chips","name","String","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","bottom","Details","fetchTopic","topicFetchStatus","topic_id","featured","component","TextVariants","p","expandText","readmore","collapseText","readless","inline","headingLevel","TimesCircleIcon","topicDetailslNodetailsTitle","topicDetailslNodetailsBody"],"mappings":"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","file":"js/TopicDetails.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"nav.pf-c-breadcrumb li{text-transform:capitalize}\\n\", \"\"]);\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport * as AppActions from '../../AppActions';\nimport './_breadcrumbs.scss';\nimport messages from '../../Messages';\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add rules base\n        crumbs.push({ title: splitUrl[1], navigate: `/${splitUrl[1]}` });\n        // if applicable, add tab\n        if (splitUrl[1] === 'rules') {\n            splitUrl[1] + splitUrl[2] !== 'rulessystems' ?\n                crumbs.push({ title: intl.formatMessage(messages.rules), navigate: '/rules' })\n                : crumbs.push({ title: intl.formatMessage(messages.systems), navigate: '/rules/systems' });\n        }\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: rule.description,\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[2] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id }) // eslint-disable-line camelcase\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{oneLink.title}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}\\n\", \"\"]);\n\n","import * as AppActions from '../../AppActions';\n\nimport { AnsibeTowerIcon, BellSlashIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport { Badge, Button, Pagination, PaginationVariant, Stack, StackItem } from '@patternfly/react-core';\nimport { Battery, Main, PrimaryToolbar, TableToolbar } from '@redhat-cloud-services/frontend-components';\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    // transforms array of strings -> comma seperated strings, required by advisor api\n    const filterFetchBuilder = (filters) => (Object.assign({},\n        ...Object.entries(filters).map((filter) => (Array.isArray(filter[1]) ? { [filter[0]]: filter[1].join() }\n            : { [filter[0]]: filter[1] })))\n    );\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        let reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown });\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.text;\n        delete localFilters.impacting;\n        delete localFilters.reports_shown;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            const category = FC[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value =>\n                ({ name: category.values.find(values => values.value === String(value)).label, value }))\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return { category: category.title, chips, urlParam: category.urlParam };\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const searchParams = new URLSearchParams(history.location.search);\n            const paramsObject = Array.from(searchParams).reduce((acc, [key, value]) => ({\n                ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n            }), {});\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&');\n        setQueryString(`?${queryString}`);\n        history.replace({\n            search: `?${queryString}`\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    setFilters({ ...filters, reports_shown: undefined });\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                {!value.reports_shown && <Badge isRead>\n                                    <BellSlashIcon size='md' />&nbsp;\n                                    {intl.formatMessage(messages.disabled)}</Badge>}\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key} style={{ verticalAlign: 'top' }}>\n                            <Battery\n                                label={intl.formatMessage(messages.totalRisk)}\n                                labelHidden\n                                severity={value.total_risk}\n                            />\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]:\n                            filters[item.urlParam].filter(value => Number(value) !== Number(item.chips[0].value))\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","/* eslint-disable camelcase */\nimport './_Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport { Label, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { Main, PageHeader, Truncate } from '@redhat-cloud-services/frontend-components';\nimport React, { useEffect } from 'react';\nimport { StarIcon, TimesCircleIcon } from '@patternfly/react-icons';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Details = ({ match, fetchTopic, setFilters, topic, topicFetchStatus, intl, filters }) => {\n    useEffect(() => {\n        if (typeof filters.topic === 'undefined') {\n            setFilters({ impacting: true, reports_shown: 'true', topic: match.params.id, sort: `-publish_date` });\n        }\n    });\n\n    useEffect(() => {\n        fetchTopic({ topic_id: match.params.id });\n        return () => {\n            setFilters({ impacting: true, reports_shown: 'true', sort: '-publish_date' });\n        };\n    }, [fetchTopic, match.params.id, setFilters]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Breadcrumbs\n                current={topic.name}\n                match={match}\n            />\n            {topicFetchStatus === 'fulfilled' &&\n                <React.Fragment>\n                    <Title size=\"2xl\" className='titleOverride'>\n                        {topic.name}{topic.featured && <Label className='labelOverride'><StarIcon />\n                            {intl.formatMessage(messages.featured)}\n                        </Label>}\n                    </Title>\n                    <TextContent className='textOverride'>\n                        <Text component={TextVariants.p}>\n                            <Truncate\n                                text={topic.description}\n                                length={600}\n                                expandText={intl.formatMessage(messages.readmore)}\n                                collapseText={intl.formatMessage(messages.readless)}\n                                inline\n                            />\n                        </Text>\n                    </TextContent>\n                </React.Fragment>\n            }\n            {topicFetchStatus === '' || topicFetchStatus === 'pending' && <Loading />}\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                {topicFetchStatus === '' || topicFetchStatus === 'pending' || topicFetchStatus === 'fulfilled' && <React.Fragment>\n                    <Title headingLevel=\"h3\" size=\"2xl\" className='titlePaddingOverride'> Rules</Title>\n                    {filters.topic && <RulesTable />}\n                </React.Fragment>}\n                {topicFetchStatus === 'failed' || topicFetchStatus === 'rejected' &&\n                    <MessageState icon={TimesCircleIcon} title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n                        text={intl.formatMessage(messages.topicDetailslNodetailsBody)} />}\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n};\n\nDetails.propTypes = {\n    match: PropTypes.any,\n    fetchTopic: PropTypes.func,\n    topic: PropTypes.object,\n    topicFetchStatus: PropTypes.string,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    filters: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    topic: state.AdvisorStore.topic,\n    topicFetchStatus: state.AdvisorStore.topicFetchStatus,\n    filters: state.AdvisorStore.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopic: (url) => dispatch(AppActions.fetchTopic(url)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Details)));\n"],"sourceRoot":""}