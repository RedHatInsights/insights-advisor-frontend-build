{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/SmartComponents/Topics/_Details.scss","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/SmartComponents/Topics/Details.js","webpack:///./src/SmartComponents/Topics/_Details.scss?e817"],"names":["module","exports","push","i","titleCase","str","charAt","toUpperCase","toLowerCase","substr","Breadcrumbs","current","fetchRule","match","ruleFetchStatus","rule","intl","useState","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","url","split","title","navigate","formatMessage","messages","rules","systems","undefined","params","id","inventoryId","description","useEffect","rule_id","Fragment","length","map","oneLink","key","to","isActive","loading","propTypes","PropTypes","string","func","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","AppActions","RulesTable","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","transforms","sortable","added","cellWidth","totalRisk","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","filterFetchBuilder","Object","assign","entries","filter","Array","isArray","join","fetchRulesFn","onSetPage","pageNumber","toggleRulesDisabled","param","reports_shown","hideReports","rowId","a","API","BASE_URL","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","location","search","searchParams","URLSearchParams","paramsObject","from","reduce","acc","value","JSON","parse","sort","keys","replace","sortIndex","Number","find","item","sortDirection","index","direction","data","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","isOpen","isRead","disabled","moment","publish_date","fromNow","className","position","TooltipPosition","bottom","content","rulesDetailsTotalriskBody","likelihood","AppConstants","impact","strong","label","total_risk","severity","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","isInline","viewSystems","asMutable","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","urlParam","res_risk","category","activeFiltersConfig","localFilters","topic","prunedFilters","chips","selectedCategoryValue","String","name","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","isDisabled","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","arr2","iter","Symbol","iterator","prototype","toString","call","TypeError","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","Details","fetchTopic","topicFetchStatus","topic_id","featured","component","TextVariants","p","expandText","readmore","collapseText","readless","inline","headingLevel","TimesCircleIcon","topicDetailslNodetailsTitle","topicDetailslNodetailsBody"],"mappings":"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","file":"js/TopicDetails.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}\\n\", \"\"]);\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport * as AppActions from '../../AppActions';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst titleCase = str => str.charAt(0).toUpperCase() + str.toLowerCase().substr(1);\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add rules base\n        crumbs.push({ title: titleCase(splitUrl[1]), navigate: `/${splitUrl[1]}` });\n        // if applicable, add tab\n        if (splitUrl[1] === 'rules') {\n            splitUrl[1] + splitUrl[2] !== 'rulessystems' ?\n                crumbs.push({ title: intl.formatMessage(messages.rules), navigate: '/rules' })\n                : crumbs.push({ title: intl.formatMessage(messages.systems), navigate: '/rules/systems' });\n        }\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: titleCase(rule.description),\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[2] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id }) // eslint-disable-line camelcase\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{titleCase(oneLink.title)}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{titleCase(current)}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}\\n\", \"\"]);\n\n","import './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { AnsibeTowerIcon, BellSlashIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport { Badge, Button, Pagination, PaginationVariant, Stack, StackItem, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Battery, Main, PrimaryToolbar, TableToolbar } from '@redhat-cloud-services/frontend-components';\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    // transforms array of strings -> comma seperated strings, required by advisor api\n    const filterFetchBuilder = (filters) => (Object.assign({},\n        ...Object.entries(filters).map((filter) => (Array.isArray(filter[1]) ? { [filter[0]]: filter[1].join() }\n            : { [filter[0]]: filter[1] })))\n    );\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, ...(reports_shown !== 'true' && { impacting: false }) });\n        reports_shown !== 'true' && setImpacting(false);\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            if (FC[item[0]]) {\n                const category = FC[item[0]];\n                const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                    const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                    return { name: selectedCategoryValue.text || selectedCategoryValue.label, value };\n                })\n                    : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n                return { category: category.title, chips, urlParam: category.urlParam };\n            } else {\n                return { category: 'Description', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n            }\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const searchParams = new URLSearchParams(history.location.search);\n            const paramsObject = Array.from(searchParams).reduce((acc, [key, value]) => ({\n                ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n            }), {});\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&');\n        setQueryString(`?${queryString}`);\n        history.replace({\n            search: `?${queryString}`\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    toggleRulesDisabled('undefined');\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                {!value.reports_shown && <Badge isRead>\n                                    <BellSlashIcon size='md' />&nbsp;\n                                    {intl.formatMessage(messages.disabled)}</Badge>}\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ ...(filters.topic && { topic: filters.topic }), impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`,\n                isDisabled: !impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable camelcase */\nimport './_Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport { Label, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { Main, PageHeader, Truncate } from '@redhat-cloud-services/frontend-components';\nimport React, { useEffect } from 'react';\nimport { StarIcon, TimesCircleIcon } from '@patternfly/react-icons';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Details = ({ match, fetchTopic, setFilters, topic, topicFetchStatus, intl, filters }) => {\n    useEffect(() => {\n        if (typeof filters.topic === 'undefined') {\n            setFilters({ impacting: true, reports_shown: 'true', topic: match.params.id, sort: `-publish_date` });\n        }\n    });\n\n    useEffect(() => {\n        fetchTopic({ topic_id: match.params.id });\n        return () => {\n            setFilters({ impacting: true, reports_shown: 'true', sort: '-publish_date' });\n        };\n    }, [fetchTopic, match.params.id, setFilters]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Breadcrumbs\n                current={topic.name}\n                match={match}\n            />\n            {topicFetchStatus === 'fulfilled' &&\n                <React.Fragment>\n                    <Title size=\"2xl\" className='titleOverride'>\n                        {topic.name}{topic.featured && <Label className='labelOverride'><StarIcon />\n                            {intl.formatMessage(messages.featured)}\n                        </Label>}\n                    </Title>\n                    <TextContent className='textOverride'>\n                        <Text component={TextVariants.p}>\n                            <Truncate\n                                text={topic.description}\n                                length={600}\n                                expandText={intl.formatMessage(messages.readmore)}\n                                collapseText={intl.formatMessage(messages.readless)}\n                                inline\n                            />\n                        </Text>\n                    </TextContent>\n                </React.Fragment>\n            }\n            {topicFetchStatus === '' || topicFetchStatus === 'pending' && <Loading />}\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                {topicFetchStatus === '' || topicFetchStatus === 'pending' || topicFetchStatus === 'fulfilled' && <React.Fragment>\n                    <Title headingLevel=\"h3\" size=\"2xl\" className='titlePaddingOverride'> Rules</Title>\n                    {filters.topic && <RulesTable />}\n                </React.Fragment>}\n                {topicFetchStatus === 'failed' || topicFetchStatus === 'rejected' &&\n                    <MessageState icon={TimesCircleIcon} title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n                        text={intl.formatMessage(messages.topicDetailslNodetailsBody)} />}\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n};\n\nDetails.propTypes = {\n    match: PropTypes.any,\n    fetchTopic: PropTypes.func,\n    topic: PropTypes.object,\n    topicFetchStatus: PropTypes.string,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    filters: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    topic: state.AdvisorStore.topic,\n    topicFetchStatus: state.AdvisorStore.topicFetchStatus,\n    filters: state.AdvisorStore.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopic: (url) => dispatch(AppActions.fetchTopic(url)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Details)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}