{"version":3,"sources":["webpack:///./src/SmartComponents/Topics/Details.js","webpack:///./src/SmartComponents/Topics/_Details.scss?e817","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/PresentationalComponents/Breadcrumbs/_breadcrumbs.scss?2939","webpack:///./src/SmartComponents/Topics/_Details.scss","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js"],"names":["Details","match","fetchTopic","setFilters","topic","topicFetchStatus","intl","filters","useEffect","impacting","reports_shown","params","id","sort","topic_id","Fragment","current","name","size","className","featured","formatMessage","messages","component","TextVariants","p","text","description","length","expandText","readmore","collapseText","readless","inline","headingLevel","icon","TimesCircleIcon","title","topicDetailslNodetailsTitle","topicDetailslNodetailsBody","propTypes","PropTypes","any","func","object","string","injectIntl","routerParams","connect","state","AdvisorStore","dispatch","url","AppActions","content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","push","Breadcrumbs","fetchRule","ruleFetchStatus","rule","useState","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","split","navigate","rules","systems","inventoryId","rule_id","map","oneLink","to","isActive","loading","ownProps","RulesTable","rulesFetchStatus","fetchRules","addNotification","history","transforms","sortable","added","cellWidth","totalRisk","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","filterFetchBuilder","Object","assign","entries","filter","Array","isArray","join","fetchRulesFn","onSetPage","pageNumber","hideReports","rowId","API","BASE_URL","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","location","search","searchParams","URLSearchParams","paramsObject","from","reduce","acc","value","JSON","parse","keys","replace","sortIndex","Number","find","item","sortDirection","index","direction","data","cells","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","isOpen","isRead","disabled","moment","publish_date","fromNow","verticalAlign","label","labelHidden","severity","total_risk","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForSystemsBody","isInline","viewSystems","asMutable","removeFilterParam","param","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","urlParam","res_risk","impact","likelihood","category","activeFiltersConfig","localFilters","prunedFilters","chips","String","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","bottom"],"mappings":"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","file":"js/TopicDetails.js","sourcesContent":["/* eslint-disable camelcase */\nimport './_Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport { Label, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { Main, PageHeader, Truncate } from '@redhat-cloud-services/frontend-components';\nimport React, { useEffect } from 'react';\nimport { StarIcon, TimesCircleIcon } from '@patternfly/react-icons';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Details = ({ match, fetchTopic, setFilters, topic, topicFetchStatus, intl, filters }) => {\n    useEffect(() => {\n        if (typeof filters.topic === 'undefined') {\n            setFilters({ impacting: true, reports_shown: 'true', topic: match.params.id, sort: `-publish_date` });\n        }\n    });\n\n    useEffect(() => {\n        fetchTopic({ topic_id: match.params.id });\n        return () => {\n            setFilters({ impacting: true, reports_shown: 'true', sort: '-publish_date' });\n        };\n    }, [fetchTopic, match.params.id, setFilters]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Breadcrumbs\n                current={topic.name}\n                match={match}\n            />\n            {topicFetchStatus === 'fulfilled' &&\n                <React.Fragment>\n                    <Title size=\"2xl\" className='titleOverride'>\n                        {topic.name}{topic.featured && <Label className='labelOverride'><StarIcon />\n                            {intl.formatMessage(messages.featured)}\n                        </Label>}\n                    </Title>\n                    <TextContent className='textOverride'>\n                        <Text component={TextVariants.p}>\n                            <Truncate\n                                text={topic.description}\n                                length={600}\n                                expandText={intl.formatMessage(messages.readmore)}\n                                collapseText={intl.formatMessage(messages.readless)}\n                                inline\n                            />\n                        </Text>\n                    </TextContent>\n                </React.Fragment>\n            }\n            {topicFetchStatus === '' || topicFetchStatus === 'pending' && <Loading />}\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                {topicFetchStatus === '' || topicFetchStatus === 'pending' || topicFetchStatus === 'fulfilled' && <React.Fragment>\n                    <Title headingLevel=\"h3\" size=\"2xl\" className='titlePaddingOverride'> Rules</Title>\n                    {filters.topic && <RulesTable />}\n                </React.Fragment>}\n                {topicFetchStatus === 'failed' || topicFetchStatus === 'rejected' &&\n                    <MessageState icon={TimesCircleIcon} title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n                        text={intl.formatMessage(messages.topicDetailslNodetailsBody)} />}\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n};\n\nDetails.propTypes = {\n    match: PropTypes.any,\n    fetchTopic: PropTypes.func,\n    topic: PropTypes.object,\n    topicFetchStatus: PropTypes.string,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    filters: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    topic: state.AdvisorStore.topic,\n    topicFetchStatus: state.AdvisorStore.topicFetchStatus,\n    filters: state.AdvisorStore.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopic: (url) => dispatch(AppActions.fetchTopic(url)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Details)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"nav.pf-c-breadcrumb li{text-transform:capitalize}\\n\", \"\"]);\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport * as AppActions from '../../AppActions';\nimport './_breadcrumbs.scss';\nimport messages from '../../Messages';\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add rules base\n        crumbs.push({ title: splitUrl[1], navigate: `/${splitUrl[1]}` });\n        // if applicable, add tab\n        if (splitUrl[1] === 'rules') {\n            splitUrl[1] + splitUrl[2] !== 'rulessystems' ?\n                crumbs.push({ title: intl.formatMessage(messages.rules), navigate: '/rules' })\n                : crumbs.push({ title: intl.formatMessage(messages.systems), navigate: '/rules/systems' });\n        }\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: rule.description,\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[2] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id }) // eslint-disable-line camelcase\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{oneLink.title}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{current}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_breadcrumbs.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}\\n\", \"\"]);\n\n","import * as AppActions from '../../AppActions';\n\nimport { AnsibeTowerIcon, BellSlashIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport { Badge, Button, Pagination, PaginationVariant, Stack, StackItem } from '@patternfly/react-core';\nimport { Battery, Main, PrimaryToolbar, TableToolbar } from '@redhat-cloud-services/frontend-components';\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    // transforms array of strings -> comma seperated strings, required by advisor api\n    const filterFetchBuilder = (filters) => (Object.assign({},\n        ...Object.entries(filters).map((filter) => (Array.isArray(filter[1]) ? { [filter[0]]: filter[1].join() }\n            : { [filter[0]]: filter[1] })))\n    );\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        let reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown });\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.text;\n        delete localFilters.impacting;\n        delete localFilters.reports_shown;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            const category = FC[item[0]];\n            const chips = Array.isArray(item[1]) ? item[1].map(value =>\n                ({ name: category.values.find(values => values.value === String(value)).label, value }))\n                : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n            return { category: category.title, chips, urlParam: category.urlParam };\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const searchParams = new URLSearchParams(history.location.search);\n            const paramsObject = Array.from(searchParams).reduce((acc, [key, value]) => ({\n                ...acc, [key]: (value === 'true' || value === 'false') ? JSON.parse(value) : value.split(',')\n            }), {});\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = Object.keys(filters).map(key => `${key}=${Array.isArray(filters[key]) ? filters[key].join() : filters[key]}`).join('&');\n        setQueryString(`?${queryString}`);\n        history.replace({\n            search: `?${queryString}`\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    setFilters({ ...filters, reports_shown: undefined });\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                {!value.reports_shown && <Badge isRead>\n                                    <BellSlashIcon size='md' />&nbsp;\n                                    {intl.formatMessage(messages.disabled)}</Badge>}\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key} style={{ verticalAlign: 'top' }}>\n                            <Battery\n                                label={intl.formatMessage(messages.totalRisk)}\n                                labelHidden\n                                severity={value.total_risk}\n                            />\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]:\n                            filters[item.urlParam].filter(value => Number(value) !== Number(item.chips[0].value))\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n"],"sourceRoot":""}