{"version":3,"sources":["webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss","webpack:///./src/PresentationalComponents/Breadcrumbs/Breadcrumbs.js","webpack:///./src/SmartComponents/Topics/_Details.scss","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/RulesTable/_RulesTable.scss?9877","webpack:///./src/SmartComponents/Topics/Details.js","webpack:///./src/SmartComponents/Topics/_Details.scss?e817"],"names":["module","exports","push","i","titleCase","str","charAt","toUpperCase","toLowerCase","substr","Breadcrumbs","current","fetchRule","match","ruleFetchStatus","rule","intl","useState","items","setItems","ruleDescriptionLoaded","setRuleDescription","buildBreadcrumbs","useCallback","crumbs","splitUrl","url","split","title","navigate","formatMessage","messages","rules","systems","undefined","params","id","inventoryId","description","useEffect","rule_id","Fragment","length","map","oneLink","key","to","isActive","loading","propTypes","PropTypes","string","func","object","any","injectIntl","routerParams","connect","state","ownProps","AdvisorStore","dispatch","AppActions","RulesTable","filters","rulesFetchStatus","setFilters","fetchRules","addNotification","history","transforms","sortable","added","cellWidth","totalRisk","size","ansible","dataLabel","cols","rows","setRows","sortBy","setSortBy","impacting","setImpacting","limit","setLimit","offset","setOffset","filterBuilding","setFilterBuilding","queryString","setQueryString","searchText","setSearchText","disableRuleOpen","setDisableRuleOpen","selectedRule","setSelectedRule","viewSystemsModalOpen","setViewSystemsModalOpen","viewSystemsModalRule","setViewSystemsModalRule","debouncedSearchText","debounce","results","meta","count","sortIndices","1","2","3","4","5","fetchRulesFn","filterFetchBuilder","onSetPage","pageNumber","toggleRulesDisabled","param","reports_shown","hideReports","rowId","a","API","BASE_URL","variant","dismissable","rulesTableHideReportsErrorDisabled","rulesTableHideReportsErrorEnabled","fetchAction","location","search","paramsObject","paramParser","sort","incident","Array","isArray","urlBuilder","replace","sortIndex","Number","Object","entries","find","item","sortDirection","index","direction","data","cells","icon","CheckIcon","iconClass","rulesTableNoRuleHitsTitle","text","rulesTableNoRuleHitsEnabledRulesBody","rulesTableNoRuleHitsAnyRulesBody","style","paddingTop","onClick","rulesTableNoRuleHitsAddDisabledButton","props","colSpan","flatMap","value","isOpen","moment","publish_date","fromNow","className","position","TooltipPosition","bottom","content","rulesDetailsTotalriskBody","likelihood","AppConstants","impact","strong","label","total_risk","severity","impacted_systems_count","toLocaleString","nA","playbook_count","no","parent","fullWidth","gutter","hosts_acked_count","ruleIsDisabledForAllSystems","ruleIsDisabledForSystemsBody","isInline","viewSystems","asMutable","filter","removeFilterParam","addFilterParam","values","actions","rulesTableActionShow","rulesTableActionHide","toggleRulesWithHits","filterConfigItems","filterValues","onChange","event","FC","type","urlParam","res_risk","category","activeFiltersConfig","localFilters","topic","prunedFilters","chips","selectedCategoryValue","String","name","buildFilterChips","onDelete","itemsToRemove","isAll","newFilter","handleModalToggle","toggleModal","isModalOpen","afterFn","pagination","itemCount","page","perPage","onPerPageSelect","isCompact","exportConfig","onSelect","exportType","window","isDisabled","actionsConfig","filterConfig","aria-label","actionResolver","rowData","rowIndex","disableRule","enableRule","onCollapse","collapseRows","onSort","_event","orderParam","message","rulesTableFetchRulesError","widgetId","PaginationVariant","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","Details","fetchTopic","topicFetchStatus","topic_id","featured","component","TextVariants","p","expandText","readmore","collapseText","readless","inline","headingLevel","TimesCircleIcon","topicDetailslNodetailsTitle","topicDetailslNodetailsBody"],"mappings":"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","file":"js/TopicDetails.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-check__label #battery_svg{height:1.25rem}\\n\", \"\"]);\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport * as AppActions from '../../AppActions';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst titleCase = (str = '') => str.charAt(0).toUpperCase() + str.toLowerCase().substr(1);\n\nconst Breadcrumbs = ({ current, fetchRule, match, ruleFetchStatus, rule, intl }) => {\n    const [items, setItems] = useState([]);\n    const [ruleDescriptionLoaded, setRuleDescription] = useState(false);\n    const buildBreadcrumbs = useCallback(() => {\n        const crumbs = [];\n        const splitUrl = match.url.split('/');\n\n        // add rules base\n        crumbs.push({ title: titleCase(splitUrl[1]), navigate: `/${splitUrl[1]}` });\n        // if applicable, add tab\n        if (splitUrl[1] === 'rules') {\n            splitUrl[1] + splitUrl[2] !== 'rulessystems' ?\n                crumbs.push({ title: intl.formatMessage(messages.rules), navigate: '/rules' })\n                : crumbs.push({ title: intl.formatMessage(messages.systems), navigate: '/rules/systems' });\n        }\n\n        // if applicable, add :id breadcrumb\n        if (match.params.id !== undefined && match.params.inventoryId !== undefined) {\n            crumbs.push({\n                title: titleCase(rule.description),\n                navigate: `/${match.url.split('/')[1]}/${match.params.id}`\n            });\n        }\n\n        setItems(crumbs);\n    }, [intl, match.params.id, match.params.inventoryId, match.url, rule.description]);\n\n    useEffect(() => {\n        const splitUrl = match.url.split('/');\n        match.params.inventoryId !== undefined && splitUrl[2] !== 'systems' ?\n            fetchRule({ rule_id: match.params.id }) // eslint-disable-line camelcase\n            : buildBreadcrumbs();\n    }, [buildBreadcrumbs, fetchRule, match.params.id, match.params.inventoryId, match.url]);\n\n    useEffect(() => {\n        if (ruleFetchStatus === 'fulfilled' && !ruleDescriptionLoaded) {\n            setRuleDescription(true);\n            buildBreadcrumbs();\n        }\n    }, [buildBreadcrumbs, ruleFetchStatus, ruleDescriptionLoaded]);\n\n    return (\n        <React.Fragment>\n            {(ruleFetchStatus === 'fulfilled' || items.length > 0) && (\n                <Breadcrumb>\n                    {items.map((oneLink, key) => (\n                        <BreadcrumbItem key={key}>\n                            <Link to={oneLink.navigate}>{titleCase(oneLink.title)}</Link>\n                        </BreadcrumbItem>\n                    ))}\n                    <BreadcrumbItem isActive>{titleCase(current)}</BreadcrumbItem>\n                </Breadcrumb>\n            )}\n            {ruleFetchStatus === 'pending' && intl.formatMessage(messages.loading)}\n        </React.Fragment>\n    );\n};\n\nBreadcrumbs.propTypes = {\n    current: PropTypes.string,\n    fetchRule: PropTypes.func,\n    match: PropTypes.object,\n    rule: PropTypes.object,\n    ruleFetchStatus: PropTypes.string,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rule: state.AdvisorStore.rule,\n    ruleFetchStatus: state.AdvisorStore.ruleFetchStatus,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRule: (url) => dispatch(AppActions.fetchRule(url))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Breadcrumbs)));\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}.pf-c-label.labelOverride{vertical-align:middle;margin-left:20px}.textOverride{margin-top:var(--pf-global--spacer--md)}\\n\", \"\"]);\n\n","/* eslint camelcase: 0 */\nimport './_RulesTable.scss';\n\nimport * as AppActions from '../../AppActions';\nimport * as AppConstants from '../../AppConstants';\n\nimport { AnsibeTowerIcon, BellSlashIcon, CheckCircleIcon, CheckIcon } from '@patternfly/react-icons';\nimport { Battery, Main, PrimaryToolbar, TableToolbar } from '@redhat-cloud-services/frontend-components';\nimport { Button, Pagination, PaginationVariant, Stack, StackItem, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Table, TableBody, TableHeader, cellWidth, sortable } from '@patternfly/react-table';\nimport { filterFetchBuilder, paramParser, urlBuilder } from '../Common/Tables';\n\nimport API from '../../Utilities/Api';\nimport { BASE_URL } from '../../AppConstants';\nimport DisableRule from '../Modals/DisableRule';\nimport { FILTER_CATEGORIES as FC } from '../../AppConstants';\nimport Failed from '../../PresentationalComponents/Loading/Failed';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RuleDetails from '../RuleDetails/RuleDetails';\nimport RuleLabels from '../RuleLabels/RuleLabels';\nimport ViewHostAcks from '../../PresentationalComponents/Modals/ViewHostAcks';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connect } from 'react-redux';\nimport debounce from '../../Utilities/Debounce';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport moment from 'moment';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst RulesTable = ({ rules, filters, rulesFetchStatus, setFilters, fetchRules, addNotification, history, intl }) => {\n    const [cols] = useState([\n        { title: intl.formatMessage(messages.description), transforms: [sortable] },\n        { title: intl.formatMessage(messages.added), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.totalRisk), transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.systems), transforms: [sortable] },\n        {\n            title: <><AnsibeTowerIcon size='md' /> {intl.formatMessage(messages.ansible)}</>,\n            transforms: [sortable],\n            dataLabel: intl.formatMessage(messages.ansible)\n        }\n    ]);\n    const [rows, setRows] = useState([]);\n    const [sortBy, setSortBy] = useState({});\n    const [impacting, setImpacting] = useState(filters.impacting);\n    const [limit, setLimit] = useState(10);\n    const [offset, setOffset] = useState(0);\n    const [filterBuilding, setFilterBuilding] = useState(true);\n    const [queryString, setQueryString] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [disableRuleOpen, setDisableRuleOpen] = useState(false);\n    const [selectedRule, setSelectedRule] = useState({});\n    const [viewSystemsModalOpen, setViewSystemsModalOpen] = useState(false);\n    const [viewSystemsModalRule, setViewSystemsModalRule] = useState({});\n    const debouncedSearchText = debounce(searchText, 800);\n    const results = rules.meta ? rules.meta.count : 0;\n    const sortIndices = { 1: 'description', 2: 'publish_date', 3: 'total_risk', 4: 'impacted_count', 5: 'playbook_count' };\n\n    const fetchRulesFn = () => {\n        fetchRules({\n            ...filterFetchBuilder(filters),\n            offset: 0,\n            limit,\n            impacting\n        });\n    };\n\n    const onSort = (_event, index, direction) => {\n        const orderParam = `${direction === 'asc' ? '' : '-'}${sortIndices[index]}`;\n        setSortBy({ index, direction });\n        setFilters({ ...filters, sort: orderParam });\n        setOffset(0);\n    };\n\n    const onSetPage = (pageNumber) => {\n        const newOffset = pageNumber * limit - limit;\n        setOffset(newOffset);\n    };\n\n    const toggleRulesWithHits = (impacting) => {\n        setFilters({ ...filters, impacting });\n        setImpacting(impacting);\n        setOffset(0);\n    };\n\n    const toggleRulesDisabled = (param) => {\n        const reports_shown = param === 'undefined' ? undefined : param;\n        setFilters({ ...filters, reports_shown, ...(reports_shown !== 'true' && { impacting: false }) });\n        reports_shown !== 'true' && setImpacting(false);\n        setOffset(0);\n    };\n\n    const handleOnCollapse = (event, rowId, isOpen) => {\n        const collapseRows = [...rows];\n        collapseRows[rowId] = { ...collapseRows[rowId], isOpen };\n        setRows(collapseRows);\n    };\n\n    const hideReports = async (rowId) => {\n        const rule = rows[rowId].rule;\n\n        try {\n            if (rule.reports_shown) {\n                setSelectedRule(rule);\n                setDisableRuleOpen(true);\n            } else {\n                await API.delete(`${BASE_URL}/ack/${rule.rule_id}/`);\n                fetchRulesFn();\n            }\n        } catch (error) {\n            addNotification({\n                variant: 'danger',\n                dismissable: true,\n                title: rule.reports_shown ? intl.formatMessage(messages.rulesTableHideReportsErrorDisabled)\n                    : intl.formatMessage(messages.rulesTableHideReportsErrorEnabled),\n                description: `${error}`\n            });\n        }\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const rule = rows[rowIndex].rule ? rows[rowIndex].rule : null;\n        if (rowIndex % 2 !== 0 || !rule) {\n            return null;\n        }\n\n        return rule && rule.reports_shown ?\n            [{\n                title: intl.formatMessage(messages.disableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }]\n            : [{\n                title: intl.formatMessage(messages.enableRule),\n                onClick: (event, rowId) => hideReports(rowId)\n            }];\n    };\n\n    const fetchAction = useCallback(() => {\n        setOffset(0);\n    }, []);\n\n    const buildFilterChips = () => {\n        const localFilters = { ...filters };\n        delete localFilters.impacting;\n        delete localFilters.topic;\n        delete localFilters.sort;\n        const prunedFilters = Object.entries(localFilters);\n\n        return prunedFilters.length > 0 ? prunedFilters.map(item => {\n            if (FC[item[0]]) {\n                const category = FC[item[0]];\n                const chips = Array.isArray(item[1]) ? item[1].map(value => {\n                    const selectedCategoryValue = category.values.find(values => values.value === String(value));\n                    return { name: selectedCategoryValue.text || selectedCategoryValue.label, value };\n                })\n                    : [{ name: category.values.find(values => values.value === String(item[1])).label, value: item[1] }];\n                return { category: category.title, chips, urlParam: category.urlParam };\n            } else {\n                return { category: 'Description', chips: [{ name: item[1], value: item[1] }], urlParam: item[0] };\n            }\n        })\n            : [];\n    };\n\n    // Builds table filters from url params\n    useEffect(() => {\n        if (history.location.search) {\n            const paramsObject = paramParser(history);\n\n            paramsObject.reports_shown = paramsObject.reports_shown === undefined || paramsObject.reports_shown[0] === 'undefined' ? undefined\n                : paramsObject.reports_shown;\n            paramsObject.sort = paramsObject.sort === undefined ? '-publish_date'\n                : paramsObject.sort[0];\n            paramsObject.incident !== undefined && !Array.isArray(paramsObject.incident) && (paramsObject.incident = [`${paramsObject.incident}`]);\n\n            setImpacting(paramsObject.impacting);\n            setFilters({ ...paramsObject });\n        }\n\n        setFilterBuilding(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Builds and pushes url params from table filters\n    useEffect(() => {\n        const queryString = urlBuilder(filters);\n        setQueryString(queryString);\n        history.replace({\n            search: queryString\n        });\n    }, [filters, history]);\n\n    useEffect(() => {\n        if (!filterBuilding) {\n            fetchRules({\n                ...filterFetchBuilder(filters),\n                offset,\n                limit\n            });\n        }\n    }, [fetchRules, filterBuilding, filters, limit, offset]);\n\n    useEffect(() => {\n        if (filters.sort !== undefined) {\n            const sortIndex = Number(Object.entries(sortIndices).find(item => item[1] === filters.sort || `-${item[1]}` === filters.sort)[0]);\n            const sortDirection = filters.sort[0] === '-' ? 'desc' : 'asc';\n            setSortBy({ index: sortIndex, direction: sortDirection });\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters, filters.sort]);\n\n    useEffect(() => {\n        if (rules.data) {\n            if (rules.data.length === 0) {\n                setRows([{\n                    cells: [{\n                        title: (\n                            <MessageState icon={CheckIcon} iconClass='ansibleCheck' size='sm'\n                                title={intl.formatMessage(messages.rulesTableNoRuleHitsTitle)} text={filters.reports_shown ?\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsEnabledRulesBody) :\n                                    intl.formatMessage(messages.rulesTableNoRuleHitsAnyRulesBody)}>\n                                {filters.reports_shown && <Button variant=\"link\" style={{ paddingTop: 24 }} onClick={() => {\n                                    toggleRulesDisabled('undefined');\n                                    fetchAction();\n                                }}>\n                                    {intl.formatMessage(messages.rulesTableNoRuleHitsAddDisabledButton)}\n                                </Button>}\n                            </MessageState>),\n                        props: { colSpan: 5 }\n                    }]\n                }]\n                );\n            } else {\n                const rows = rules.data.flatMap((value, key) => ([{\n                    isOpen: false,\n                    rule: value,\n                    cells: [{\n                        title:\n                            <span key={key}>\n                                <RuleLabels rule={value} />\n                                <Link key={key} to={`/rules/${value.rule_id}`}> {value.description} </Link>\n                            </span>\n                    }, {\n                        title: <div key={key}>\n                            {moment(value.publish_date).fromNow()}\n                        </div>\n                    }, {\n                        title: <div className=\"pf-m-center\" key={key}>\n                            <Tooltip key={key} position={TooltipPosition.bottom} content={intl.formatMessage(messages.rulesDetailsTotalriskBody, {\n                                likelihood: AppConstants.LIKELIHOOD_LABEL[value.likelihood] || intl.formatMessage(messages.undefined),\n                                impact: AppConstants.IMPACT_LABEL[value.impact.impact] || intl.formatMessage(messages.undefined),\n                                strong(str) { return <strong>{str}</strong>; }\n                            })}>\n                                <Battery\n                                    label={AppConstants.TOTAL_RISK_LABEL[value.total_risk] || intl.formatMessage(messages.undefined)}\n                                    severity={value.total_risk}\n                                />\n                            </Tooltip>\n                        </div>\n                    }, {\n                        title: <div key={key}> {value.reports_shown ?\n                            `${value.impacted_systems_count.toLocaleString()}`\n                            : intl.formatMessage(messages.nA)}</div>\n                    }, {\n                        title: <div className=\"pf-m-center \" key={key}>\n                            {value.playbook_count ? <CheckCircleIcon className='ansibleCheck' /> : intl.formatMessage(messages.no)}\n                        </div>\n                    }]\n                }, {\n                    parent: key * 2,\n                    fullWidth: true,\n                    cells: [{\n                        title: <Main className='pf-m-light'>\n                            <Stack gutter=\"md\">\n                                {value.hosts_acked_count ? <StackItem>\n                                    <BellSlashIcon size='sm' />\n                                    &nbsp;{value.hosts_acked_count && !value.impacted_systems_count ?\n                                        intl.formatMessage(messages.ruleIsDisabledForAllSystems) :\n                                        intl.formatMessage(messages.ruleIsDisabledForSystemsBody, { systems: value.hosts_acked_count })}\n                                    &nbsp; <Button isInline variant='link'\n                                        onClick={() => { setViewSystemsModalRule(value); setViewSystemsModalOpen(true); }}>\n                                        {intl.formatMessage(messages.viewSystems)}\n                                    </Button>\n                                </StackItem>\n                                    : <React.Fragment></React.Fragment>}\n                                <RuleDetails rule={value} />\n                            </Stack>\n                        </Main>\n                    }]\n                }\n                ]));\n                setRows(rows.asMutable());\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fetchAction, filters, rules, setFilters]);\n\n    useEffect(() => {\n        filters.text === undefined ? setSearchText('') : setSearchText(filters.text);\n    }, [filters.text]);\n\n    // Debounced function, sets text filter after specified time (800ms)\n    useEffect(() => {\n        if (!filterBuilding) {\n            const filter = { ...filters };\n            const text = searchText.length ? { text: searchText } : {};\n            delete filter.text;\n            setFilters({ ...filter, ...text });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debouncedSearchText]);\n\n    const removeFilterParam = (param) => {\n        const filter = { ...filters };\n        delete filter[param];\n        setFilters(filter);\n    };\n\n    const addFilterParam = (param, values) => {\n        values.length > 0 ? setFilters({ ...filters, ...{ [param]: values } }) : removeFilterParam(param);\n    };\n\n    const actions = [\n        '', {\n            label: intl.formatMessage(impacting ? messages.rulesTableActionShow : messages.rulesTableActionHide),\n            onClick: () => toggleRulesWithHits(!impacting)\n        }\n    ];\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.description),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (event, value) => setSearchText(value),\n            value: searchText\n        }\n    }, {\n        label: FC.total_risk.title,\n        type: FC.total_risk.type,\n        id: FC.total_risk.urlParam,\n        value: `checkbox-${FC.total_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.total_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.total_risk.urlParam, values),\n            value: filters.total_risk,\n            items: FC.total_risk.values\n        }\n    }, {\n        label: FC.res_risk.title,\n        type: FC.res_risk.type,\n        id: FC.res_risk.urlParam,\n        value: `checkbox-${FC.res_risk.urlParam}`,\n        filterValues: {\n            key: `${FC.res_risk.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.res_risk.urlParam, values),\n            value: filters.res_risk,\n            items: FC.res_risk.values\n        }\n    }, {\n        label: FC.impact.title,\n        type: FC.impact.type,\n        id: FC.impact.urlParam,\n        value: `checkbox-${FC.impact.urlParam}`,\n        filterValues: {\n            key: `${FC.impact.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.impact.urlParam, values),\n            value: filters.impact,\n            items: FC.impact.values\n        }\n    }, {\n        label: FC.likelihood.title,\n        type: FC.likelihood.type,\n        id: FC.likelihood.urlParam,\n        value: `checkbox-${FC.likelihood.urlParam}`,\n        filterValues: {\n            key: `${FC.likelihood.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.likelihood.urlParam, values),\n            value: filters.likelihood,\n            items: FC.likelihood.values\n        }\n    }, {\n        label: FC.category.title,\n        type: FC.category.type,\n        id: FC.category.urlParam,\n        value: `checkbox-${FC.category.urlParam}`,\n        filterValues: {\n            key: `${FC.category.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.category.urlParam, values),\n            value: filters.category,\n            items: FC.category.values\n        }\n    }, {\n        label: FC.incident.title,\n        type: FC.incident.type,\n        id: FC.incident.urlParam,\n        value: `checkbox-${FC.incident.urlParam}`,\n        filterValues: {\n            key: `${FC.incident.urlParam}-filter`,\n            onChange: (event, values) => addFilterParam(FC.incident.urlParam, values),\n            value: filters.incident,\n            items: FC.incident.values\n        }\n    }, {\n        label: FC.reports_shown.title,\n        type: FC.reports_shown.type,\n        id: FC.reports_shown.urlParam,\n        value: `radio-${FC.reports_shown.urlParam}`,\n        filterValues: {\n            key: `${FC.reports_shown.urlParam}-filter`,\n            onChange: (event, value) => toggleRulesDisabled(value),\n            value: filters.reports_shown === undefined ? 'undefined' : `${filters.reports_shown}`,\n            items: FC.reports_shown.values\n        }\n    }];\n\n    const activeFiltersConfig = {\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                setFilters({ ...(filters.topic && { topic: filters.topic }), impacting: true, reports_shown: 'true' });\n            } else {\n                itemsToRemove.map(item => {\n                    const newFilter = {\n                        [item.urlParam]: Array.isArray(filters[item.urlParam]) ?\n                            filters[item.urlParam].filter(value => String(value) !== String(item.chips[0].value))\n                            : ''\n                    };\n                    newFilter[item.urlParam].length > 0 ? setFilters({ ...filters, ...newFilter }) : removeFilterParam(item.urlParam);\n                });\n            }\n        }\n    };\n\n    const afterViewSystemsFn = () => {\n        fetchRulesFn();\n    };\n\n    return <React.Fragment>\n        {viewSystemsModalOpen && <ViewHostAcks\n            handleModalToggle={(toggleModal) => setViewSystemsModalOpen(toggleModal)}\n            isModalOpen={viewSystemsModalOpen}\n            afterFn={afterViewSystemsFn}\n            rule={viewSystemsModalRule}\n        />}\n        {disableRuleOpen && <DisableRule\n            handleModalToggle={setDisableRuleOpen}\n            isModalOpen={disableRuleOpen}\n            rule={selectedRule}\n            afterFn={fetchRulesFn}\n        />}\n        <PrimaryToolbar\n            pagination={{\n                itemCount: results,\n                page: offset / limit + 1,\n                perPage: limit,\n                onSetPage(event, page) { onSetPage(page); },\n                onPerPageSelect(event, perPage) { setLimit(perPage); },\n                isCompact: false\n            }}\n            exportConfig={{\n                onSelect: (event, exportType) => window.location = `${BASE_URL}/export/hits.${exportType === 'json' ? 'json' : 'csv'}/${queryString}`,\n                isDisabled: !impacting\n            }}\n            actionsConfig={{ actions }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        {rulesFetchStatus === 'fulfilled' &&\n            <Table aria-label={'rule-table'}\n                actionResolver={actionResolver} onCollapse={handleOnCollapse} sortBy={sortBy}\n                onSort={onSort} cells={cols} rows={rows}>\n                <TableHeader />\n                <TableBody />\n            </Table>}\n        {rulesFetchStatus === 'pending' && (<Loading />)}\n        {rulesFetchStatus === 'failed' && (<Failed message={intl.formatMessage(messages.rulesTableFetchRulesError)} />)}\n        <TableToolbar>\n            <Pagination\n                itemCount={results}\n                perPage={limit}\n                page={(offset / limit + 1)}\n                onSetPage={(event, page) => { onSetPage(page); }}\n                widgetId={`pagination-options-menu-bottom`}\n                variant={PaginationVariant.bottom}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nRulesTable.propTypes = {\n    fetchRules: PropTypes.func,\n    rulesFetchStatus: PropTypes.string,\n    rules: PropTypes.object,\n    filters: PropTypes.object,\n    addNotification: PropTypes.func,\n    setFilters: PropTypes.func,\n    history: PropTypes.object,\n    intl: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    rules: state.AdvisorStore.rules,\n    rulesFetchStatus: state.AdvisorStore.rulesFetchStatus,\n    filters: state.AdvisorStore.filters,\n    ...ownProps\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchRules: (url) => dispatch(AppActions.fetchRules(url)),\n    addNotification: data => dispatch(addNotification(data)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RulesTable)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_RulesTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/* eslint-disable camelcase */\nimport './_Details.scss';\n\nimport * as AppActions from '../../AppActions';\n\nimport { Label, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { Main, PageHeader, Truncate } from '@redhat-cloud-services/frontend-components';\nimport React, { useEffect } from 'react';\nimport { StarIcon, TimesCircleIcon } from '@patternfly/react-icons';\n\nimport Breadcrumbs from '../../PresentationalComponents/Breadcrumbs/Breadcrumbs';\nimport Loading from '../../PresentationalComponents/Loading/Loading';\nimport MessageState from '../../PresentationalComponents/MessageState/MessageState';\nimport PropTypes from 'prop-types';\nimport RulesTable from '../../PresentationalComponents/RulesTable/RulesTable';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\n\nconst Details = ({ match, fetchTopic, setFilters, topic, topicFetchStatus, intl, filters }) => {\n    useEffect(() => {\n        if (typeof filters.topic === 'undefined') {\n            setFilters({ impacting: true, reports_shown: 'true', topic: match.params.id, sort: `-publish_date` });\n        }\n    });\n\n    useEffect(() => {\n        fetchTopic({ topic_id: match.params.id });\n        return () => {\n            setFilters({ impacting: true, reports_shown: 'true', sort: '-publish_date' });\n        };\n    }, [fetchTopic, match.params.id, setFilters]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Breadcrumbs\n                current={topic.name}\n                match={match}\n            />\n            {topicFetchStatus === 'fulfilled' &&\n                <React.Fragment>\n                    <Title size=\"2xl\" className='titleOverride'>\n                        {topic.name}{topic.featured && <Label className='labelOverride'><StarIcon />\n                            {intl.formatMessage(messages.featured)}\n                        </Label>}\n                    </Title>\n                    <TextContent className='textOverride'>\n                        <Text component={TextVariants.p}>\n                            <Truncate\n                                text={topic.description}\n                                length={600}\n                                expandText={intl.formatMessage(messages.readmore)}\n                                collapseText={intl.formatMessage(messages.readless)}\n                                inline\n                            />\n                        </Text>\n                    </TextContent>\n                </React.Fragment>\n            }\n            {topicFetchStatus === '' || topicFetchStatus === 'pending' && <Loading />}\n        </PageHeader>\n        <Main>\n            <React.Fragment>\n                {topicFetchStatus === '' || topicFetchStatus === 'pending' || topicFetchStatus === 'fulfilled' && <React.Fragment>\n                    <Title headingLevel=\"h3\" size=\"2xl\" className='titlePaddingOverride'> Rules</Title>\n                    {filters.topic && <RulesTable />}\n                </React.Fragment>}\n                {topicFetchStatus === 'failed' || topicFetchStatus === 'rejected' &&\n                    <MessageState icon={TimesCircleIcon} title={intl.formatMessage(messages.topicDetailslNodetailsTitle)}\n                        text={intl.formatMessage(messages.topicDetailslNodetailsBody)} />}\n            </React.Fragment>\n        </Main>\n    </React.Fragment>;\n};\n\nDetails.propTypes = {\n    match: PropTypes.any,\n    fetchTopic: PropTypes.func,\n    topic: PropTypes.object,\n    topicFetchStatus: PropTypes.string,\n    setFilters: PropTypes.func,\n    intl: PropTypes.any,\n    filters: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    topic: state.AdvisorStore.topic,\n    topicFetchStatus: state.AdvisorStore.topicFetchStatus,\n    filters: state.AdvisorStore.filters\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchTopic: (url) => dispatch(AppActions.fetchTopic(url)),\n    setFilters: (filters) => dispatch(AppActions.setFilters(filters))\n});\n\nexport default injectIntl(routerParams(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Details)));\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_Details.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}